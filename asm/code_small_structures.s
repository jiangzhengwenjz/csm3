	.include "asm/macros.inc"
	.include "constants/constants.inc"

	.syntax unified

	thumb_func_start sub_080639BC
sub_080639BC: @ 0x080639BC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080639CC @ =gUnk_03006AE4
	movs r1, #0x58
	muls r1, r0, r1
	ldr r0, [r2]
	adds r0, r0, r1
	bx lr
	.align 2, 0
_080639CC: .4byte gUnk_03006AE4

	thumb_func_start sub_080639D0
sub_080639D0: @ 0x080639D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080639E4 @ =gUnk_03006AE4
	movs r1, #0x58
	muls r1, r0, r1
	ldr r0, [r2]
	adds r0, r0, r1
	adds r0, #0x32
	bx lr
	.align 2, 0
_080639E4: .4byte gUnk_03006AE4

	thumb_func_start sub_080639E8
sub_080639E8: @ 0x080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080639FC @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x12]
	bx lr
	.align 2, 0
_080639FC: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A00
sub_08063A00: @ 0x08063A00
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A14 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x13]
	bx lr
	.align 2, 0
_08063A14: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A18
sub_08063A18: @ 0x08063A18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A2C @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x14]
	bx lr
	.align 2, 0
_08063A2C: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A30
sub_08063A30: @ 0x08063A30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A44 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x15]
	bx lr
	.align 2, 0
_08063A44: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A48
sub_08063A48: @ 0x08063A48
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A5C @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x16]
	bx lr
	.align 2, 0
_08063A5C: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A60
sub_08063A60: @ 0x08063A60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A74 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x18]
	bx lr
	.align 2, 0
_08063A74: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A78
sub_08063A78: @ 0x08063A78
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063A8C @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x19]
	bx lr
	.align 2, 0
_08063A8C: .4byte gUnk_03006AE4

	thumb_func_start sub_08063A90
sub_08063A90: @ 0x08063A90
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063AA8 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x31
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bx lr
	.align 2, 0
_08063AA8: .4byte gUnk_03006AE4

	thumb_func_start sub_08063AAC
sub_08063AAC: @ 0x08063AAC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063AC0 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x1a]
	bx lr
	.align 2, 0
_08063AC0: .4byte gUnk_03006AE4

	thumb_func_start sub_08063AC4
sub_08063AC4: @ 0x08063AC4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063AD8 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x1c]
	bx lr
	.align 2, 0
_08063AD8: .4byte gUnk_03006AE4

	thumb_func_start sub_08063ADC
sub_08063ADC: @ 0x08063ADC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063AF0 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x1e]
	bx lr
	.align 2, 0
_08063AF0: .4byte gUnk_03006AE4

	thumb_func_start sub_08063AF4
sub_08063AF4: @ 0x08063AF4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B08 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	movs r1, #0x20
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0
_08063B08: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B0C
sub_08063B0C: @ 0x08063B0C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B20 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x22]
	bx lr
	.align 2, 0
_08063B20: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B24
sub_08063B24: @ 0x08063B24
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B38 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x24]
	bx lr
	.align 2, 0
_08063B38: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B3C
sub_08063B3C: @ 0x08063B3C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B50 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x26]
	bx lr
	.align 2, 0
_08063B50: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B54
sub_08063B54: @ 0x08063B54
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B68 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	movs r1, #0x28
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0
_08063B68: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B6C
sub_08063B6C: @ 0x08063B6C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B80 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrh r0, [r0, #0x2a]
	bx lr
	.align 2, 0
_08063B80: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B84
sub_08063B84: @ 0x08063B84
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063B98 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #0x17]
	bx lr
	.align 2, 0
_08063B98: .4byte gUnk_03006AE4

	thumb_func_start sub_08063B9C
sub_08063B9C: @ 0x08063B9C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063BB0 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x30
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063BB0: .4byte gUnk_03006AE4

	thumb_func_start sub_08063BB4
sub_08063BB4: @ 0x08063BB4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063BC8 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x2f
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063BC8: .4byte gUnk_03006AE4

	thumb_func_start sub_08063BCC
sub_08063BCC: @ 0x08063BCC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063BE0 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x2c
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063BE0: .4byte gUnk_03006AE4

	thumb_func_start sub_08063BE4
sub_08063BE4: @ 0x08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063BF8 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x2d
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063BF8: .4byte gUnk_03006AE4

	thumb_func_start sub_08063BFC
sub_08063BFC: @ 0x08063BFC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063C10 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r0, r1, r0
	adds r0, r0, r2
	adds r0, #0x2e
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063C10: .4byte gUnk_03006AE4

	thumb_func_start sub_08063C14
sub_08063C14: @ 0x08063C14
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	movs r1, #0xf
	bl sub_08001D3C
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r1, _08063C48 @ =gUnk_03006AE4
	ldr r2, [r1]
	movs r1, #0x58
	muls r1, r4, r1
	adds r1, r1, r2
	ldrb r1, [r1, #0x14]
	bl sub_08001D78
	adds r1, r5, #0
	bl RLUnCompWram
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08063C48: .4byte gUnk_03006AE4

	thumb_func_start sub_08063C4C
sub_08063C4C: @ 0x08063C4C
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	movs r1, #0x10
	bl sub_08001D3C
	adds r1, r4, #0
	bl sub_08001D78
	adds r1, r5, #0
	bl RLUnCompWram
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_08063C70
sub_08063C70: @ 0x08063C70
	lsls r0, r0, #0x18
	ldr r1, _08063C80 @ =gUnk_03006AF0
	lsrs r0, r0, #0x12
	ldr r1, [r1]
	adds r1, r1, r0
	adds r0, r1, #0
	bx lr
	.align 2, 0
_08063C80: .4byte gUnk_03006AF0

	thumb_func_start sub_08063C84
sub_08063C84: @ 0x08063C84
	lsls r0, r0, #0x18
	ldr r1, _08063C94 @ =gUnk_03006AF0
	lsrs r0, r0, #0x12
	ldr r1, [r1]
	adds r1, r1, r0
	adds r1, #0x18
	adds r0, r1, #0
	bx lr
	.align 2, 0
_08063C94: .4byte gUnk_03006AF0

	thumb_func_start sub_08063C98
sub_08063C98: @ 0x08063C98
	lsls r0, r0, #0x18
	ldr r1, _08063CA8 @ =gUnk_03006AF0
	ldr r1, [r1]
	lsrs r0, r0, #0x12
	adds r0, r0, r1
	ldrb r0, [r0, #0x12]
	bx lr
	.align 2, 0
_08063CA8: .4byte gUnk_03006AF0

	thumb_func_start sub_08063CAC
sub_08063CAC: @ 0x08063CAC
	lsls r0, r0, #0x18
	ldr r1, _08063CBC @ =gUnk_03006AF0
	ldr r1, [r1]
	lsrs r0, r0, #0x12
	adds r0, r0, r1
	ldrb r0, [r0, #0x13]
	bx lr
	.align 2, 0
_08063CBC: .4byte gUnk_03006AF0

	thumb_func_start sub_08063CC0
sub_08063CC0: @ 0x08063CC0
	lsls r0, r0, #0x18
	ldr r1, _08063CD0 @ =gUnk_03006AF0
	ldr r1, [r1]
	lsrs r0, r0, #0x12
	adds r0, r0, r1
	ldrb r0, [r0, #0x14]
	bx lr
	.align 2, 0
_08063CD0: .4byte gUnk_03006AF0

	thumb_func_start sub_08063CD4
sub_08063CD4: @ 0x08063CD4
	lsls r0, r0, #0x18
	ldr r1, _08063CE4 @ =gUnk_03006AF0
	ldr r1, [r1]
	lsrs r0, r0, #0x12
	adds r0, r0, r1
	ldrb r0, [r0, #0x15]
	bx lr
	.align 2, 0
_08063CE4: .4byte gUnk_03006AF0

	thumb_func_start sub_08063CE8
sub_08063CE8: @ 0x08063CE8
	lsls r0, r0, #0x18
	ldr r1, _08063CF8 @ =gUnk_03006AF0
	ldr r1, [r1]
	lsrs r0, r0, #0x12
	adds r0, r0, r1
	ldrh r0, [r0, #0x16]
	bx lr
	.align 2, 0
_08063CF8: .4byte gUnk_03006AF0

	thumb_func_start sub_08063CFC
sub_08063CFC: @ 0x08063CFC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08063D10 @ =gUnk_03006AEC
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, [r2]
	adds r0, r0, r1
	bx lr
	.align 2, 0
_08063D10: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D14
sub_08063D14: @ 0x08063D14
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08063D28 @ =gUnk_03006AEC
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, [r2]
	adds r0, r0, r1
	adds r0, #0x1c
	bx lr
	.align 2, 0
_08063D28: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D2C
sub_08063D2C: @ 0x08063D2C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063D40 @ =gUnk_03006AEC
	ldr r2, [r1]
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r1, #0x12]
	bx lr
	.align 2, 0
_08063D40: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D44
sub_08063D44: @ 0x08063D44
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063D58 @ =gUnk_03006AEC
	ldr r2, [r1]
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r1, #0x13]
	bx lr
	.align 2, 0
_08063D58: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D5C
sub_08063D5C: @ 0x08063D5C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063D70 @ =gUnk_03006AEC
	ldr r2, [r1]
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r1, #0x14]
	bx lr
	.align 2, 0
_08063D70: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D74
sub_08063D74: @ 0x08063D74
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08063D90 @ =gUnk_03006AEC
	ldr r3, [r2]
	lsls r2, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r3
	adds r2, #0x16
	adds r2, r2, r1
	ldrb r0, [r2]
	bx lr
	.align 2, 0
_08063D90: .4byte gUnk_03006AEC

	thumb_func_start sub_08063D94
sub_08063D94: @ 0x08063D94
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08063DB0 @ =gUnk_03006AEC
	ldr r3, [r2]
	lsls r2, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r3
	adds r2, #0x19
	adds r2, r2, r1
	ldrb r0, [r2]
	bx lr
	.align 2, 0
_08063DB0: .4byte gUnk_03006AEC

	thumb_func_start sub_08063DB4
sub_08063DB4: @ 0x08063DB4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08063DC8 @ =gUnk_03006AE8
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, [r2]
	adds r0, r0, r1
	bx lr
	.align 2, 0
_08063DC8: .4byte gUnk_03006AE8

	thumb_func_start sub_08063DCC
sub_08063DCC: @ 0x08063DCC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _08063DE0 @ =gUnk_03006AE8
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, [r2]
	adds r0, r0, r1
	adds r0, #0x1c
	bx lr
	.align 2, 0
_08063DE0: .4byte gUnk_03006AE8

	thumb_func_start sub_08063DE4
sub_08063DE4: @ 0x08063DE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063DF8 @ =gUnk_03006AE8
	ldr r2, [r1]
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r1, #0x12]
	bx lr
	.align 2, 0
_08063DF8: .4byte gUnk_03006AE8

	thumb_func_start sub_08063DFC
sub_08063DFC: @ 0x08063DFC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063E10 @ =gUnk_03006AE8
	ldr r2, [r1]
	lsls r1, r0, #4
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, r1, r2
	ldrb r0, [r1, #0x13]
	bx lr
	.align 2, 0
_08063E10: .4byte gUnk_03006AE8

	thumb_func_start sub_08063E14
sub_08063E14: @ 0x08063E14
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08063E30 @ =gUnk_03006AE8
	ldr r3, [r2]
	lsls r2, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r3
	adds r2, #0x16
	adds r2, r2, r1
	ldrb r0, [r2]
	bx lr
	.align 2, 0
_08063E30: .4byte gUnk_03006AE8

	thumb_func_start sub_08063E34
sub_08063E34: @ 0x08063E34
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _08063E50 @ =gUnk_03006AE8
	ldr r3, [r2]
	lsls r2, r0, #4
	adds r2, r2, r0
	lsls r2, r2, #2
	adds r2, r2, r3
	adds r2, #0x19
	adds r2, r2, r1
	ldrb r0, [r2]
	bx lr
	.align 2, 0
_08063E50: .4byte gUnk_03006AE8

	thumb_func_start sub_08063E54
sub_08063E54: @ 0x08063E54
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _08063E60 @ =gUnk_08BC9BA0
	adds r0, r0, r1
	ldrb r0, [r0]
	bx lr
	.align 2, 0
_08063E60: .4byte gUnk_08BC9BA0

	thumb_func_start sub_08063E64
sub_08063E64: @ 0x08063E64
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r6, _08063F6C @ =gUnk_03006AF4
	str r4, [r6]
	movs r5, #0x88
	lsls r5, r5, #2
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	lsrs r2, r5, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldr r0, [r6]
	adds r4, r4, r5
	str r4, [r0, #4]
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08063F6C: .4byte gUnk_03006AF4

	thumb_func_start sub_08063F70
sub_08063F70: @ 0x08063F70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08063F88 @ =gUnk_03006AF4
	ldr r7, [r0]
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _08063F8C
	cmp r0, #1
	beq _08063FE8
	b _08064000
	.align 2, 0
_08063F88: .4byte gUnk_03006AF4
_08063F8C:
	movs r0, #1
	bl sub_08068070
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #2
	bl sub_08068070
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #3
	bl sub_08068070
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #4
	bl sub_08068070
	adds r3, r0, #0
	ldr r1, _08063FE4 @ =gUnk_08BC9C68
	ldrh r0, [r7, #0xa]
	lsls r0, r0, #2
	adds r0, r0, r1
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldr r0, [r0]
	mov r8, r0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl _call_via_r8
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08063FFE
	.align 2, 0
_08063FE4: .4byte gUnk_08BC9C68
_08063FE8:
	ldr r1, _08064010 @ =gUnk_08BC9C7C
	ldrh r0, [r7, #0xa]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _08064000
_08063FFE:
	strh r0, [r7, #2]
_08064000:
	movs r1, #2
	ldrsh r0, [r7, r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08064010: .4byte gUnk_08BC9C7C

	thumb_func_start sub_08064014
sub_08064014: @ 0x08064014
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08064034 @ =gUnk_03006AF4
	mov r8, r0
	ldr r0, [r0]
	ldr r5, [r0, #4]
	movs r7, #1
	movs r1, #0
	ldrsh r4, [r5, r1]
	cmp r4, #0
	beq _08064038
	cmp r4, #1
	beq _0806404C
	b _08064072
	.align 2, 0
_08064034: .4byte gUnk_03006AF4
_08064038:
	ldr r0, _08064048 @ =gUnk_02034000
	bl sub_08093458
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08064072
	.align 2, 0
_08064048: .4byte gUnk_02034000
_0806404C:
	ldr r6, _08064080 @ =gUnk_02034000
	adds r0, r6, #0
	bl sub_08092684
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08064072
	adds r0, r6, #0
	bl sub_080926F0
	mov r3, r8
	ldr r2, [r3]
	movs r3, #0x86
	lsls r3, r3, #2
	adds r1, r2, r3
	str r0, [r1]
	movs r7, #0
	strh r7, [r5]
	strh r4, [r2, #0xc]
_08064072:
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08064080: .4byte gUnk_02034000

	thumb_func_start sub_08064084
sub_08064084: @ 0x08064084
	push {r4, r5, r6, r7, lr}
	ldr r7, _080640A0 @ =gUnk_03006AF4
	ldr r0, [r7]
	ldr r5, [r0, #4]
	movs r6, #1
	movs r0, #0
	ldrsh r4, [r5, r0]
	cmp r4, #1
	beq _080640B0
	cmp r4, #1
	bgt _080640A4
	cmp r4, #0
	beq _080640AA
	b _080640D4
	.align 2, 0
_080640A0: .4byte gUnk_03006AF4
_080640A4:
	cmp r4, #2
	beq _080640C2
	b _080640D4
_080640AA:
	bl sub_080640DC
	b _080640B4
_080640B0:
	bl sub_080641C0
_080640B4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080640D4
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080640D4
_080640C2:
	bl sub_08068144
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080640D4
	movs r6, #0
	strh r6, [r5]
	ldr r0, [r7]
	strh r4, [r0, #0xc]
_080640D4:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080640DC
sub_080640DC: @ 0x080640DC
	push {r4, r5, r6, lr}
	ldr r0, _080640F4 @ =gUnk_03006AF4
	ldr r5, [r0]
	ldr r4, [r5, #4]
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080640F8
	cmp r0, #1
	beq _08064180
	b _080641B6
	.align 2, 0
_080640F4: .4byte gUnk_03006AF4
_080640F8:
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0xa
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #2
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	bl sub_08004554
	movs r0, #0x40
	bl sub_08004840
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080641B4
_08064180:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080641B6
	movs r0, #0
	str r0, [r4, #4]
	strh r0, [r4, #2]
	movs r6, #0
	movs r1, #0x24
	ldrsh r0, [r4, r1]
	cmp r0, #1
	bne _080641B6
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	bl sub_08014544
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r5, r1
	str r6, [r0]
	movs r0, #0xaf
	lsls r0, r0, #2
_080641B4:
	strh r0, [r4, #2]
_080641B6:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080641C0
sub_080641C0: @ 0x080641C0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	ldr r0, _08064220 @ =gUnk_03006AF4
	ldr r4, [r0]
	ldr r6, [r4, #4]
	movs r7, #1
	ldr r0, _08064224 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08064206
	movs r0, #2
	ldrsh r2, [r6, r0]
	ldr r0, _08064228 @ =0x000002BB
	cmp r2, r0
	bgt _08064206
	movs r0, #0x24
	ldrsh r1, [r6, r0]
	cmp r1, #0
	bne _08064206
	cmp r2, #0x63
	bgt _08064200
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r4, r2
	str r1, [r0]
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	bl sub_08014544
_08064200:
	movs r0, #0xaf
	lsls r0, r0, #2
	strh r0, [r6, #2]
_08064206:
	movs r0, #2
	ldrsh r1, [r6, r0]
	ldr r0, _0806422C @ =0x000002BF
	cmp r1, r0
	bls _08064214
	bl _08065A1E
_08064214:
	lsls r0, r1, #2
	ldr r1, _08064230 @ =_08064234
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08064220: .4byte gUnk_03006AF4
_08064224: .4byte gKeyNewPress
_08064228: .4byte 0x000002BB
_0806422C: .4byte 0x000002BF
_08064230: .4byte _08064234
_08064234: @ jump table
	.4byte _08064D34 @ case 0
	.4byte _08065A1E @ case 1
	.4byte _08065A1E @ case 2
	.4byte _08065A1E @ case 3
	.4byte _08065A1E @ case 4
	.4byte _08065A1E @ case 5
	.4byte _08065A1E @ case 6
	.4byte _08065A1E @ case 7
	.4byte _08065A1E @ case 8
	.4byte _08065A1E @ case 9
	.4byte _08064D60 @ case 10
	.4byte _08065A1E @ case 11
	.4byte _08065A1E @ case 12
	.4byte _08065A1E @ case 13
	.4byte _08065A1E @ case 14
	.4byte _08065A1E @ case 15
	.4byte _08065A1E @ case 16
	.4byte _08065A1E @ case 17
	.4byte _08065A1E @ case 18
	.4byte _08065A1E @ case 19
	.4byte _08064D80 @ case 20
	.4byte _08065A1E @ case 21
	.4byte _08065A1E @ case 22
	.4byte _08065A1E @ case 23
	.4byte _08065A1E @ case 24
	.4byte _08065A1E @ case 25
	.4byte _08065A1E @ case 26
	.4byte _08065A1E @ case 27
	.4byte _08065A1E @ case 28
	.4byte _08065A1E @ case 29
	.4byte _08064D92 @ case 30
	.4byte _08065A1E @ case 31
	.4byte _08065A1E @ case 32
	.4byte _08065A1E @ case 33
	.4byte _08065A1E @ case 34
	.4byte _08065A1E @ case 35
	.4byte _08065A1E @ case 36
	.4byte _08065A1E @ case 37
	.4byte _08065A1E @ case 38
	.4byte _08065A1E @ case 39
	.4byte _08064DC4 @ case 40
	.4byte _08065A1E @ case 41
	.4byte _08065A1E @ case 42
	.4byte _08065A1E @ case 43
	.4byte _08065A1E @ case 44
	.4byte _08065A1E @ case 45
	.4byte _08065A1E @ case 46
	.4byte _08065A1E @ case 47
	.4byte _08065A1E @ case 48
	.4byte _08065A1E @ case 49
	.4byte _08064DE4 @ case 50
	.4byte _08065A1E @ case 51
	.4byte _08065A1E @ case 52
	.4byte _08065A1E @ case 53
	.4byte _08065A1E @ case 54
	.4byte _08065A1E @ case 55
	.4byte _08065A1E @ case 56
	.4byte _08065A1E @ case 57
	.4byte _08065A1E @ case 58
	.4byte _08065A1E @ case 59
	.4byte _08064DF6 @ case 60
	.4byte _08065A1E @ case 61
	.4byte _08065A1E @ case 62
	.4byte _08065A1E @ case 63
	.4byte _08065A1E @ case 64
	.4byte _08065A1E @ case 65
	.4byte _08065A1E @ case 66
	.4byte _08065A1E @ case 67
	.4byte _08065A1E @ case 68
	.4byte _08065A1E @ case 69
	.4byte _08064E16 @ case 70
	.4byte _08065A1E @ case 71
	.4byte _08065A1E @ case 72
	.4byte _08065A1E @ case 73
	.4byte _08065A1E @ case 74
	.4byte _08065A1E @ case 75
	.4byte _08065A1E @ case 76
	.4byte _08065A1E @ case 77
	.4byte _08065A1E @ case 78
	.4byte _08065A1E @ case 79
	.4byte _08064E36 @ case 80
	.4byte _08065A1E @ case 81
	.4byte _08065A1E @ case 82
	.4byte _08065A1E @ case 83
	.4byte _08065A1E @ case 84
	.4byte _08065A1E @ case 85
	.4byte _08065A1E @ case 86
	.4byte _08065A1E @ case 87
	.4byte _08065A1E @ case 88
	.4byte _08065A1E @ case 89
	.4byte _08064E48 @ case 90
	.4byte _08065A1E @ case 91
	.4byte _08065A1E @ case 92
	.4byte _08065A1E @ case 93
	.4byte _08065A1E @ case 94
	.4byte _08064E82 @ case 95
	.4byte _08065A1E @ case 96
	.4byte _08065A1E @ case 97
	.4byte _08065A1E @ case 98
	.4byte _08065A1E @ case 99
	.4byte _08064EA8 @ case 100
	.4byte _08065A1E @ case 101
	.4byte _08065A1E @ case 102
	.4byte _08065A1E @ case 103
	.4byte _08065A1E @ case 104
	.4byte _08065A1E @ case 105
	.4byte _08065A1E @ case 106
	.4byte _08065A1E @ case 107
	.4byte _08065A1E @ case 108
	.4byte _08065A1E @ case 109
	.4byte _08064EC8 @ case 110
	.4byte _08065A1E @ case 111
	.4byte _08065A1E @ case 112
	.4byte _08065A1E @ case 113
	.4byte _08065A1E @ case 114
	.4byte _08065A1E @ case 115
	.4byte _08065A1E @ case 116
	.4byte _08065A1E @ case 117
	.4byte _08065A1E @ case 118
	.4byte _08065A1E @ case 119
	.4byte _08064EDA @ case 120
	.4byte _08065A1E @ case 121
	.4byte _08065A1E @ case 122
	.4byte _08065A1E @ case 123
	.4byte _08065A1E @ case 124
	.4byte _08065A1E @ case 125
	.4byte _08065A1E @ case 126
	.4byte _08065A1E @ case 127
	.4byte _08065A1E @ case 128
	.4byte _08065A1E @ case 129
	.4byte _08064F16 @ case 130
	.4byte _08065A1E @ case 131
	.4byte _08065A1E @ case 132
	.4byte _08065A1E @ case 133
	.4byte _08065A1E @ case 134
	.4byte _08064F2C @ case 135
	.4byte _08065A1E @ case 136
	.4byte _08065A1E @ case 137
	.4byte _08064F44 @ case 138
	.4byte _08064F66 @ case 139
	.4byte _08064F84 @ case 140
	.4byte _08065A1E @ case 141
	.4byte _08065A1E @ case 142
	.4byte _08065A1E @ case 143
	.4byte _08065A1E @ case 144
	.4byte _08065A1E @ case 145
	.4byte _08065A1E @ case 146
	.4byte _08065A1E @ case 147
	.4byte _08065A1E @ case 148
	.4byte _08065A1E @ case 149
	.4byte _08064FDC @ case 150
	.4byte _08065A1E @ case 151
	.4byte _08065A1E @ case 152
	.4byte _08065A1E @ case 153
	.4byte _08065A1E @ case 154
	.4byte _08065A1E @ case 155
	.4byte _08065A1E @ case 156
	.4byte _08065A1E @ case 157
	.4byte _08065A1E @ case 158
	.4byte _08065A1E @ case 159
	.4byte _08065012 @ case 160
	.4byte _08065A1E @ case 161
	.4byte _08065A1E @ case 162
	.4byte _08065A1E @ case 163
	.4byte _08065A1E @ case 164
	.4byte _08065A1E @ case 165
	.4byte _08065A1E @ case 166
	.4byte _08065A1E @ case 167
	.4byte _08065A1E @ case 168
	.4byte _08065A1E @ case 169
	.4byte _08065044 @ case 170
	.4byte _08065A1E @ case 171
	.4byte _08065A1E @ case 172
	.4byte _08065A1E @ case 173
	.4byte _08065A1E @ case 174
	.4byte _08065A1E @ case 175
	.4byte _08065A1E @ case 176
	.4byte _08065A1E @ case 177
	.4byte _08065A1E @ case 178
	.4byte _08065A1E @ case 179
	.4byte _0806508C @ case 180
	.4byte _08065A1E @ case 181
	.4byte _08065A1E @ case 182
	.4byte _08065A1E @ case 183
	.4byte _08065A1E @ case 184
	.4byte _08065A1E @ case 185
	.4byte _08065A1E @ case 186
	.4byte _08065A1E @ case 187
	.4byte _08065A1E @ case 188
	.4byte _08065A1E @ case 189
	.4byte _080650C8 @ case 190
	.4byte _08065A1E @ case 191
	.4byte _08065A1E @ case 192
	.4byte _08065A1E @ case 193
	.4byte _08065A1E @ case 194
	.4byte _08065A1E @ case 195
	.4byte _08065A1E @ case 196
	.4byte _08065A1E @ case 197
	.4byte _08065A1E @ case 198
	.4byte _08065A1E @ case 199
	.4byte _0806511E @ case 200
	.4byte _08065A1E @ case 201
	.4byte _08065A1E @ case 202
	.4byte _08065A1E @ case 203
	.4byte _08065A1E @ case 204
	.4byte _08065A1E @ case 205
	.4byte _08065A1E @ case 206
	.4byte _08065A1E @ case 207
	.4byte _08065A1E @ case 208
	.4byte _08065A1E @ case 209
	.4byte _08065154 @ case 210
	.4byte _08065A1E @ case 211
	.4byte _08065A1E @ case 212
	.4byte _08065A1E @ case 213
	.4byte _08065A1E @ case 214
	.4byte _08065A1E @ case 215
	.4byte _08065A1E @ case 216
	.4byte _08065A1E @ case 217
	.4byte _08065A1E @ case 218
	.4byte _08065A1E @ case 219
	.4byte _08065186 @ case 220
	.4byte _08065A1E @ case 221
	.4byte _08065A1E @ case 222
	.4byte _08065A1E @ case 223
	.4byte _08065A1E @ case 224
	.4byte _08065A1E @ case 225
	.4byte _08065A1E @ case 226
	.4byte _08065A1E @ case 227
	.4byte _08065A1E @ case 228
	.4byte _08065A1E @ case 229
	.4byte _080651CC @ case 230
	.4byte _08065A1E @ case 231
	.4byte _08065A1E @ case 232
	.4byte _08065A1E @ case 233
	.4byte _08065A1E @ case 234
	.4byte _08065A1E @ case 235
	.4byte _08065A1E @ case 236
	.4byte _08065A1E @ case 237
	.4byte _08065A1E @ case 238
	.4byte _08065A1E @ case 239
	.4byte _08065208 @ case 240
	.4byte _08065A1E @ case 241
	.4byte _08065A1E @ case 242
	.4byte _08065A1E @ case 243
	.4byte _08065A1E @ case 244
	.4byte _08065A1E @ case 245
	.4byte _08065A1E @ case 246
	.4byte _08065A1E @ case 247
	.4byte _08065A1E @ case 248
	.4byte _08065A1E @ case 249
	.4byte _0806522C @ case 250
	.4byte _08065A1E @ case 251
	.4byte _08065A1E @ case 252
	.4byte _08065A1E @ case 253
	.4byte _08065A1E @ case 254
	.4byte _08065A1E @ case 255
	.4byte _08065A1E @ case 256
	.4byte _08065A1E @ case 257
	.4byte _08065A1E @ case 258
	.4byte _08065A1E @ case 259
	.4byte _08065250 @ case 260
	.4byte _08065A1E @ case 261
	.4byte _08065A1E @ case 262
	.4byte _08065A1E @ case 263
	.4byte _08065A1E @ case 264
	.4byte _08065A1E @ case 265
	.4byte _08065A1E @ case 266
	.4byte _08065A1E @ case 267
	.4byte _08065A1E @ case 268
	.4byte _08065A1E @ case 269
	.4byte _080652A0 @ case 270
	.4byte _08065A1E @ case 271
	.4byte _08065A1E @ case 272
	.4byte _08065A1E @ case 273
	.4byte _08065A1E @ case 274
	.4byte _08065A1E @ case 275
	.4byte _08065A1E @ case 276
	.4byte _08065A1E @ case 277
	.4byte _08065A1E @ case 278
	.4byte _08065A1E @ case 279
	.4byte _080652BC @ case 280
	.4byte _08065A1E @ case 281
	.4byte _08065A1E @ case 282
	.4byte _08065A1E @ case 283
	.4byte _08065A1E @ case 284
	.4byte _08065A1E @ case 285
	.4byte _08065A1E @ case 286
	.4byte _08065A1E @ case 287
	.4byte _08065A1E @ case 288
	.4byte _08065A1E @ case 289
	.4byte _080652D0 @ case 290
	.4byte _08065A1E @ case 291
	.4byte _08065A1E @ case 292
	.4byte _08065A1E @ case 293
	.4byte _08065A1E @ case 294
	.4byte _08065A1E @ case 295
	.4byte _08065A1E @ case 296
	.4byte _08065A1E @ case 297
	.4byte _08065A1E @ case 298
	.4byte _08065A1E @ case 299
	.4byte _080652F2 @ case 300
	.4byte _08065A1E @ case 301
	.4byte _08065A1E @ case 302
	.4byte _08065A1E @ case 303
	.4byte _08065A1E @ case 304
	.4byte _08065A1E @ case 305
	.4byte _08065A1E @ case 306
	.4byte _08065A1E @ case 307
	.4byte _08065A1E @ case 308
	.4byte _08065A1E @ case 309
	.4byte _08065300 @ case 310
	.4byte _08065A1E @ case 311
	.4byte _08065A1E @ case 312
	.4byte _08065A1E @ case 313
	.4byte _08065A1E @ case 314
	.4byte _08065A1E @ case 315
	.4byte _08065A1E @ case 316
	.4byte _08065A1E @ case 317
	.4byte _08065A1E @ case 318
	.4byte _08065A1E @ case 319
	.4byte _08065318 @ case 320
	.4byte _08065A1E @ case 321
	.4byte _08065A1E @ case 322
	.4byte _08065A1E @ case 323
	.4byte _08065A1E @ case 324
	.4byte _08065A1E @ case 325
	.4byte _08065A1E @ case 326
	.4byte _08065A1E @ case 327
	.4byte _08065A1E @ case 328
	.4byte _08065A1E @ case 329
	.4byte _0806532E @ case 330
	.4byte _08065A1E @ case 331
	.4byte _08065A1E @ case 332
	.4byte _08065A1E @ case 333
	.4byte _08065A1E @ case 334
	.4byte _08065A1E @ case 335
	.4byte _08065A1E @ case 336
	.4byte _08065A1E @ case 337
	.4byte _08065A1E @ case 338
	.4byte _08065A1E @ case 339
	.4byte _08065382 @ case 340
	.4byte _08065A1E @ case 341
	.4byte _08065A1E @ case 342
	.4byte _08065A1E @ case 343
	.4byte _08065A1E @ case 344
	.4byte _08065A1E @ case 345
	.4byte _08065A1E @ case 346
	.4byte _08065A1E @ case 347
	.4byte _08065A1E @ case 348
	.4byte _08065A1E @ case 349
	.4byte _0806539A @ case 350
	.4byte _08065A1E @ case 351
	.4byte _08065A1E @ case 352
	.4byte _08065A1E @ case 353
	.4byte _08065A1E @ case 354
	.4byte _08065A1E @ case 355
	.4byte _08065A1E @ case 356
	.4byte _08065A1E @ case 357
	.4byte _08065A1E @ case 358
	.4byte _08065A1E @ case 359
	.4byte _080653F0 @ case 360
	.4byte _08065A1E @ case 361
	.4byte _08065A1E @ case 362
	.4byte _08065A1E @ case 363
	.4byte _08065A1E @ case 364
	.4byte _08065A1E @ case 365
	.4byte _08065A1E @ case 366
	.4byte _08065A1E @ case 367
	.4byte _08065A1E @ case 368
	.4byte _08065A1E @ case 369
	.4byte _08065400 @ case 370
	.4byte _08065A1E @ case 371
	.4byte _08065A1E @ case 372
	.4byte _08065A1E @ case 373
	.4byte _08065A1E @ case 374
	.4byte _08065A1E @ case 375
	.4byte _08065A1E @ case 376
	.4byte _08065A1E @ case 377
	.4byte _08065A1E @ case 378
	.4byte _08065A1E @ case 379
	.4byte _0806540E @ case 380
	.4byte _08065A1E @ case 381
	.4byte _08065A1E @ case 382
	.4byte _08065A1E @ case 383
	.4byte _08065A1E @ case 384
	.4byte _08065A1E @ case 385
	.4byte _08065A1E @ case 386
	.4byte _08065A1E @ case 387
	.4byte _08065A1E @ case 388
	.4byte _08065A1E @ case 389
	.4byte _08065454 @ case 390
	.4byte _08065A1E @ case 391
	.4byte _08065A1E @ case 392
	.4byte _08065A1E @ case 393
	.4byte _08065A1E @ case 394
	.4byte _08065A1E @ case 395
	.4byte _08065A1E @ case 396
	.4byte _08065A1E @ case 397
	.4byte _08065A1E @ case 398
	.4byte _08065A1E @ case 399
	.4byte _0806546C @ case 400
	.4byte _08065A1E @ case 401
	.4byte _08065A1E @ case 402
	.4byte _08065A1E @ case 403
	.4byte _08065A1E @ case 404
	.4byte _08065A1E @ case 405
	.4byte _08065A1E @ case 406
	.4byte _08065A1E @ case 407
	.4byte _08065A1E @ case 408
	.4byte _08065A1E @ case 409
	.4byte _080654C2 @ case 410
	.4byte _08065A1E @ case 411
	.4byte _08065A1E @ case 412
	.4byte _08065A1E @ case 413
	.4byte _08065A1E @ case 414
	.4byte _08065A1E @ case 415
	.4byte _08065A1E @ case 416
	.4byte _08065A1E @ case 417
	.4byte _08065A1E @ case 418
	.4byte _08065A1E @ case 419
	.4byte _080654D2 @ case 420
	.4byte _08065A1E @ case 421
	.4byte _08065A1E @ case 422
	.4byte _08065A1E @ case 423
	.4byte _08065A1E @ case 424
	.4byte _08065A1E @ case 425
	.4byte _08065A1E @ case 426
	.4byte _08065A1E @ case 427
	.4byte _08065A1E @ case 428
	.4byte _08065A1E @ case 429
	.4byte _080654E0 @ case 430
	.4byte _08065A1E @ case 431
	.4byte _08065A1E @ case 432
	.4byte _08065A1E @ case 433
	.4byte _08065A1E @ case 434
	.4byte _08065A1E @ case 435
	.4byte _08065A1E @ case 436
	.4byte _08065A1E @ case 437
	.4byte _08065A1E @ case 438
	.4byte _08065A1E @ case 439
	.4byte _08065526 @ case 440
	.4byte _08065A1E @ case 441
	.4byte _08065A1E @ case 442
	.4byte _08065A1E @ case 443
	.4byte _08065A1E @ case 444
	.4byte _08065A1E @ case 445
	.4byte _08065A1E @ case 446
	.4byte _08065A1E @ case 447
	.4byte _08065A1E @ case 448
	.4byte _08065A1E @ case 449
	.4byte _0806553E @ case 450
	.4byte _08065A1E @ case 451
	.4byte _08065A1E @ case 452
	.4byte _08065A1E @ case 453
	.4byte _08065A1E @ case 454
	.4byte _08065A1E @ case 455
	.4byte _08065A1E @ case 456
	.4byte _08065A1E @ case 457
	.4byte _08065A1E @ case 458
	.4byte _08065A1E @ case 459
	.4byte _08065594 @ case 460
	.4byte _08065A1E @ case 461
	.4byte _08065A1E @ case 462
	.4byte _08065A1E @ case 463
	.4byte _08065A1E @ case 464
	.4byte _08065A1E @ case 465
	.4byte _08065A1E @ case 466
	.4byte _08065A1E @ case 467
	.4byte _08065A1E @ case 468
	.4byte _08065A1E @ case 469
	.4byte _080655A4 @ case 470
	.4byte _08065A1E @ case 471
	.4byte _08065A1E @ case 472
	.4byte _08065A1E @ case 473
	.4byte _08065A1E @ case 474
	.4byte _08065A1E @ case 475
	.4byte _08065A1E @ case 476
	.4byte _08065A1E @ case 477
	.4byte _08065A1E @ case 478
	.4byte _08065A1E @ case 479
	.4byte _080655B2 @ case 480
	.4byte _08065A1E @ case 481
	.4byte _08065A1E @ case 482
	.4byte _08065A1E @ case 483
	.4byte _08065A1E @ case 484
	.4byte _08065A1E @ case 485
	.4byte _08065A1E @ case 486
	.4byte _08065A1E @ case 487
	.4byte _08065A1E @ case 488
	.4byte _08065A1E @ case 489
	.4byte _080655F8 @ case 490
	.4byte _08065A1E @ case 491
	.4byte _08065A1E @ case 492
	.4byte _08065A1E @ case 493
	.4byte _08065A1E @ case 494
	.4byte _08065A1E @ case 495
	.4byte _08065A1E @ case 496
	.4byte _08065A1E @ case 497
	.4byte _08065A1E @ case 498
	.4byte _08065A1E @ case 499
	.4byte _08065610 @ case 500
	.4byte _08065A1E @ case 501
	.4byte _08065A1E @ case 502
	.4byte _08065A1E @ case 503
	.4byte _08065A1E @ case 504
	.4byte _08065A1E @ case 505
	.4byte _08065A1E @ case 506
	.4byte _08065A1E @ case 507
	.4byte _08065A1E @ case 508
	.4byte _08065A1E @ case 509
	.4byte _08065666 @ case 510
	.4byte _08065A1E @ case 511
	.4byte _08065A1E @ case 512
	.4byte _08065A1E @ case 513
	.4byte _08065A1E @ case 514
	.4byte _08065A1E @ case 515
	.4byte _08065A1E @ case 516
	.4byte _08065A1E @ case 517
	.4byte _08065A1E @ case 518
	.4byte _08065A1E @ case 519
	.4byte _08065674 @ case 520
	.4byte _08065A1E @ case 521
	.4byte _08065A1E @ case 522
	.4byte _08065A1E @ case 523
	.4byte _08065A1E @ case 524
	.4byte _08065A1E @ case 525
	.4byte _08065A1E @ case 526
	.4byte _08065A1E @ case 527
	.4byte _08065A1E @ case 528
	.4byte _08065A1E @ case 529
	.4byte _08065680 @ case 530
	.4byte _08065A1E @ case 531
	.4byte _08065A1E @ case 532
	.4byte _08065A1E @ case 533
	.4byte _08065A1E @ case 534
	.4byte _08065A1E @ case 535
	.4byte _08065A1E @ case 536
	.4byte _08065A1E @ case 537
	.4byte _08065A1E @ case 538
	.4byte _08065A1E @ case 539
	.4byte _080656C6 @ case 540
	.4byte _08065A1E @ case 541
	.4byte _08065A1E @ case 542
	.4byte _08065A1E @ case 543
	.4byte _08065A1E @ case 544
	.4byte _08065A1E @ case 545
	.4byte _08065A1E @ case 546
	.4byte _08065A1E @ case 547
	.4byte _08065A1E @ case 548
	.4byte _08065A1E @ case 549
	.4byte _080656DC @ case 550
	.4byte _08065A1E @ case 551
	.4byte _08065A1E @ case 552
	.4byte _08065A1E @ case 553
	.4byte _08065A1E @ case 554
	.4byte _08065A1E @ case 555
	.4byte _08065A1E @ case 556
	.4byte _08065A1E @ case 557
	.4byte _08065A1E @ case 558
	.4byte _08065A1E @ case 559
	.4byte _08065708 @ case 560
	.4byte _08065A1E @ case 561
	.4byte _08065A1E @ case 562
	.4byte _08065A1E @ case 563
	.4byte _08065A1E @ case 564
	.4byte _08065A1E @ case 565
	.4byte _08065A1E @ case 566
	.4byte _08065A1E @ case 567
	.4byte _08065A1E @ case 568
	.4byte _08065A1E @ case 569
	.4byte _08065748 @ case 570
	.4byte _08065A1E @ case 571
	.4byte _08065A1E @ case 572
	.4byte _08065A1E @ case 573
	.4byte _08065A1E @ case 574
	.4byte _08065A1E @ case 575
	.4byte _08065A1E @ case 576
	.4byte _08065A1E @ case 577
	.4byte _08065A1E @ case 578
	.4byte _08065A1E @ case 579
	.4byte _080657A4 @ case 580
	.4byte _08065A1E @ case 581
	.4byte _08065A1E @ case 582
	.4byte _08065A1E @ case 583
	.4byte _08065A1E @ case 584
	.4byte _080657E6 @ case 585
	.4byte _08065A1E @ case 586
	.4byte _08065A1E @ case 587
	.4byte _08065A1E @ case 588
	.4byte _08065A1E @ case 589
	.4byte _0806581E @ case 590
	.4byte _08065A1E @ case 591
	.4byte _08065A1E @ case 592
	.4byte _08065A1E @ case 593
	.4byte _08065A1E @ case 594
	.4byte _08065A1E @ case 595
	.4byte _08065A1E @ case 596
	.4byte _08065A1E @ case 597
	.4byte _08065A1E @ case 598
	.4byte _08065A1E @ case 599
	.4byte _0806582C @ case 600
	.4byte _08065A1E @ case 601
	.4byte _08065A1E @ case 602
	.4byte _08065A1E @ case 603
	.4byte _08065A1E @ case 604
	.4byte _08065A1E @ case 605
	.4byte _08065A1E @ case 606
	.4byte _08065A1E @ case 607
	.4byte _08065A1E @ case 608
	.4byte _08065A1E @ case 609
	.4byte _0806584A @ case 610
	.4byte _08065A1E @ case 611
	.4byte _08065A1E @ case 612
	.4byte _08065A1E @ case 613
	.4byte _08065A1E @ case 614
	.4byte _08065A1E @ case 615
	.4byte _08065A1E @ case 616
	.4byte _08065A1E @ case 617
	.4byte _08065A1E @ case 618
	.4byte _08065A1E @ case 619
	.4byte _08065860 @ case 620
	.4byte _08065A1E @ case 621
	.4byte _08065A1E @ case 622
	.4byte _08065A1E @ case 623
	.4byte _08065A1E @ case 624
	.4byte _08065A1E @ case 625
	.4byte _08065A1E @ case 626
	.4byte _08065A1E @ case 627
	.4byte _08065A1E @ case 628
	.4byte _08065A1E @ case 629
	.4byte _0806588A @ case 630
	.4byte _08065A1E @ case 631
	.4byte _08065A1E @ case 632
	.4byte _08065A1E @ case 633
	.4byte _08065A1E @ case 634
	.4byte _08065A1E @ case 635
	.4byte _08065A1E @ case 636
	.4byte _08065A1E @ case 637
	.4byte _08065A1E @ case 638
	.4byte _08065A1E @ case 639
	.4byte _080658A6 @ case 640
	.4byte _08065A1E @ case 641
	.4byte _08065A1E @ case 642
	.4byte _08065A1E @ case 643
	.4byte _08065A1E @ case 644
	.4byte _08065A1E @ case 645
	.4byte _08065A1E @ case 646
	.4byte _08065A1E @ case 647
	.4byte _08065A1E @ case 648
	.4byte _08065A1E @ case 649
	.4byte _08065A18 @ case 650
	.4byte _08065A1E @ case 651
	.4byte _08065A1E @ case 652
	.4byte _08065A1E @ case 653
	.4byte _08065A1E @ case 654
	.4byte _08065A1E @ case 655
	.4byte _08065A1E @ case 656
	.4byte _08065A1E @ case 657
	.4byte _08065A1E @ case 658
	.4byte _08065A1E @ case 659
	.4byte _08065A1E @ case 660
	.4byte _08065A1E @ case 661
	.4byte _08065A1E @ case 662
	.4byte _08065A1E @ case 663
	.4byte _08065A1E @ case 664
	.4byte _08065A1E @ case 665
	.4byte _08065A1E @ case 666
	.4byte _08065A1E @ case 667
	.4byte _08065A1E @ case 668
	.4byte _08065A1E @ case 669
	.4byte _08065A1E @ case 670
	.4byte _08065A1E @ case 671
	.4byte _08065A1E @ case 672
	.4byte _08065A1E @ case 673
	.4byte _08065A1E @ case 674
	.4byte _08065A1E @ case 675
	.4byte _08065A1E @ case 676
	.4byte _08065A1E @ case 677
	.4byte _08065A1E @ case 678
	.4byte _08065A1E @ case 679
	.4byte _08065A1E @ case 680
	.4byte _08065A1E @ case 681
	.4byte _08065A1E @ case 682
	.4byte _08065A1E @ case 683
	.4byte _08065A1E @ case 684
	.4byte _08065A1E @ case 685
	.4byte _08065A1E @ case 686
	.4byte _08065A1E @ case 687
	.4byte _08065A1E @ case 688
	.4byte _08065A1E @ case 689
	.4byte _08065A1E @ case 690
	.4byte _08065A1E @ case 691
	.4byte _08065A1E @ case 692
	.4byte _08065A1E @ case 693
	.4byte _08065A1E @ case 694
	.4byte _08065A1E @ case 695
	.4byte _08065A1E @ case 696
	.4byte _08065A1E @ case 697
	.4byte _08065A1E @ case 698
	.4byte _08065A1E @ case 699
	.4byte _080658E6 @ case 700
	.4byte _08065904 @ case 701
	.4byte _0806591C @ case 702
	.4byte _08065A0A @ case 703
_08064D34:
	movs r0, #1
	movs r1, #6
	bl sub_0806784C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	bl _080658DE
_08064D60:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08064D72
	bl _08065A1E
_08064D72:
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	bl _080658DE
_08064D80:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x3c
	beq _08064D8E
	bl _08065A1E
_08064D8E:
	bl _080658DE
_08064D92:
	movs r0, #0
	movs r1, #8
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	bl sub_08011104
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	bl _080658DE
_08064DC4:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08064DD6
	bl _08065A1E
_08064DD6:
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	bl _080658DE
_08064DE4:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x78
	beq _08064DF2
	bl _08065A1E
_08064DF2:
	bl _080658DE
_08064DF6:
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	bl _080658DE
_08064E16:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08064E28
	bl _08065A1E
_08064E28:
	movs r0, #0
	str r0, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
	movs r0, #1
	b _08065248
_08064E36:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0xa
	beq _08064E44
	bl _08065A1E
_08064E44:
	bl _080658DE
_08064E48:
	movs r0, #0
	movs r1, #0xc
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #2
	movs r1, #0xe
	bl sub_0806784C
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x6e
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl _08065812
_08064E82:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x1e
	beq _08064E90
	bl _08065A1E
_08064E90:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #1
	bl sub_08014544
	movs r2, #0x87
	lsls r2, r2, #2
	adds r1, r4, r2
	movs r0, #0
	str r0, [r1]
	bl _08065816
_08064EA8:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08064EBA
	bl _08065A1E
_08064EBA:
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	bl _080658DE
_08064EC8:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x78
	beq _08064ED6
	bl _08065A1E
_08064ED6:
	bl _080658DE
_08064EDA:
	movs r0, #1
	movs r1, #0xa
	bl sub_0806784C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x78
	movs r1, #0
	bl sub_08068570
	bl _080658DE
_08064F16:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _08064F26
	bl _08065A1E
_08064F26:
	str r0, [r6, #4]
	bl _08065816
_08064F2C:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x82
	beq _08064F3A
	bl _08065A1E
_08064F3A:
	ldrh r0, [r6, #2]
	adds r0, #3
	strh r0, [r6, #2]
	bl _08065A1E
_08064F44:
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x1e
	movs r1, #1
	bl sub_08068570
	bl _08065A02
_08064F66:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _08064F76
	bl _08065A1E
_08064F76:
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	str r4, [r6, #4]
	bl _08065A02
_08064F84:
	movs r0, #0
	movs r1, #0x25
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	bl _080658DE
_08064FDC:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08064FF0
	str r0, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_08064FF0:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_08065012:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x78
	bne _08065022
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_08065022:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_08065044:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x2d
	movs r1, #1
	bl sub_08068570
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	bl _080658DE
_0806508C:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _080650A6
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_080650A6:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_080650C8:
	movs r0, #0
	movs r1, #0x27
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x2d
	movs r1, #0
	bl sub_08068570
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_0806511E:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08065132
	str r0, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_08065132:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_08065154:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x78
	bne _08065164
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_08065164:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_08065186:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x2d
	movs r1, #1
	bl sub_08068570
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_080651CC:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _080651E6
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_080651E6:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xd2
	lsls r4, r4, #1
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	b _08065740
_08065208:
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08065228 @ =0x00007FFF
	movs r0, #1
	movs r3, #0xa
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	b _080658DE
	.align 2, 0
_08065228: .4byte 0x00007FFF
_0806522C:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806523C
	b _08065A1E
_0806523C:
	movs r0, #0
	str r0, [r6, #4]
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
	movs r0, #2
_08065248:
	movs r1, #0
	bl sub_0800471C
	b _08065A1E
_08065250:
	movs r0, #0
	movs r1, #0x12
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0x10
	bl sub_0806784C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _0806529C @ =0x00007FFF
	movs r0, #1
	movs r3, #0x5a
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080658DE
	.align 2, 0
_0806529C: .4byte 0x00007FFF
_080652A0:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080652B0
	b _08065A1E
_080652B0:
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	b _080658DE
_080652BC:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x14
	beq _080652C8
	b _08065A1E
_080652C8:
	ldrh r0, [r6, #2]
	adds r0, #0x14
	strh r0, [r6, #2]
	b _08065A1E
_080652D0:
	movs r0, #0x80
	lsls r0, r0, #2
	movs r1, #0xa0
	lsls r1, r1, #3
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x1e
	movs r1, #1
	bl sub_08068570
	b _080658DE
_080652F2:
	bl sub_0806855C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080652FE
	b _08065A1E
_080652FE:
	b _080658DE
_08065300:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x2d
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	b _080658DE
_08065318:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08065328
	b _08065A1E
_08065328:
	movs r0, #0
	str r0, [r6, #4]
	b _080658DE
_0806532E:
	movs r0, #0
	movs r1, #0x14
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	bl sub_080682A8
	movs r0, #2
	movs r1, #0x16
	bl sub_0806784C
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x5a
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080658DE
_08065382:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08065392
	b _08065720
_08065392:
	movs r0, #1
	bl sub_08011104
	b _08065716
_0806539A:
	movs r0, #0
	movs r1, #0x29
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r5, #0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_080653F0:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080653FE
	b _08065720
_080653FE:
	b _08065718
_08065400:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x5a
	beq _0806540C
	b _08065720
_0806540C:
	b _0806571A
_0806540E:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #1
	bl sub_08068570
	movs r5, #0
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_08065454:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _08065462
	b _08065720
_08065462:
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	b _0806571A
_0806546C:
	movs r0, #0
	movs r1, #0x2b
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r5, #0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_080654C2:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080654D0
	b _08065720
_080654D0:
	b _08065718
_080654D2:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x5a
	beq _080654DE
	b _08065720
_080654DE:
	b _0806571A
_080654E0:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #1
	bl sub_08068570
	movs r5, #0
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_08065526:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _08065534
	b _08065720
_08065534:
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	b _0806571A
_0806553E:
	movs r0, #0
	movs r1, #0x2d
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r5, #0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_08065594:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _080655A2
	b _08065720
_080655A2:
	b _08065718
_080655A4:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x5a
	beq _080655B0
	b _08065720
_080655B0:
	b _0806571A
_080655B2:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #1
	bl sub_08068570
	movs r5, #0
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_080655F8:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _08065606
	b _08065720
_08065606:
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	b _0806571A
_08065610:
	movs r0, #0
	movs r1, #0x2f
	bl sub_08067970
	adds r1, r4, #0
	adds r1, #0x98
	movs r5, #0
	movs r0, #1
	strb r0, [r1]
	movs r1, #0xa0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_08065666:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08065720
	b _08065718
_08065674:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0x5a
	bne _08065720
	b _0806571A
_08065680:
	movs r1, #0xe0
	lsls r1, r1, #3
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #1
	bl sub_08068570
	movs r5, #0
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	b _080658DE
_080656C6:
	bl sub_0806855C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _08065720
	adds r0, r4, #0
	adds r0, #0x98
	strb r2, [r0]
	str r2, [r6, #4]
	b _0806571A
_080656DC:
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08065704 @ =0x00007FFF
	movs r0, #1
	movs r3, #0xa
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r6, #2]
	adds r0, #0xa
	movs r5, #0
	strh r0, [r6, #2]
	b _08065722
	.align 2, 0
_08065704: .4byte 0x00007FFF
_08065708:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08065720
_08065716:
	movs r0, #0
_08065718:
	str r0, [r6, #4]
_0806571A:
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
_08065720:
	movs r5, #0
_08065722:
	str r5, [sp]
	movs r4, #0xf0
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0xa0
_08065740:
	movs r3, #0
	bl sub_08068330
	b _08065A1E
_08065748:
	movs r0, #2
	movs r1, #0x1c
	bl sub_0806784C
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x1e
	bl sub_0806784C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0x18
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080657A0 @ =0x00007FFF
	movs r0, #1
	movs r3, #0xc8
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080658DE
	.align 2, 0
_080657A0: .4byte 0x00007FFF
_080657A4:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080657B4
	b _08065A1E
_080657B4:
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0x10
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	b _08065816
_080657E6:
	bl sub_0806855C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080657F2
	b _08065A1E
_080657F2:
	movs r0, #2
	bl sub_08011104
	movs r0, #2
	movs r1, #0x80
	movs r2, #0
	movs r3, #0xb4
	bl sub_0801015C
	movs r0, #2
	movs r1, #0
	movs r2, #0x28
	bl sub_080112A8
	movs r0, #2
	movs r1, #5
_08065812:
	bl sub_08011174
_08065816:
	ldrh r0, [r6, #2]
	adds r0, #5
	strh r0, [r6, #2]
	b _08065A1E
_0806581E:
	ldr r0, [r6, #4]
	adds r0, #1
	str r0, [r6, #4]
	cmp r0, #0xf0
	beq _0806582A
	b _08065A1E
_0806582A:
	b _080658DE
_0806582C:
	movs r0, #1
	bl sub_08011104
	movs r1, #0xff
	lsls r1, r1, #8
	movs r0, #1
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	b _080658DE
_0806584A:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806585A
	b _08065A1E
_0806585A:
	movs r0, #0
	str r0, [r6, #4]
	b _080658DE
_08065860:
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r1, #0xff
	lsls r1, r1, #8
	movs r0, #1
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080658DE
_0806588A:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806589A
	b _08065A1E
_0806589A:
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #4]
	b _080658DE
_080658A6:
	movs r0, #0
	movs r1, #0x31
	bl sub_08067970
	adds r0, r4, #0
	adds r0, #0xa0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	movs r0, #1
	movs r1, #0x31
	bl sub_08067970
	adds r0, r4, #0
	adds r0, #0xc8
	movs r1, #1
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	adds r0, #0x98
	movs r1, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_080658DE:
	ldrh r0, [r6, #2]
	adds r0, #0xa
	strh r0, [r6, #2]
	b _08065A1E
_080658E6:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _08065A02
_08065904:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08065914
	b _08065A1E
_08065914:
	movs r0, #1
	bl sub_08011104
	b _08065A02
_0806591C:
	movs r0, #2
	movs r1, #0x1c
	bl sub_0806784C
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x1e
	bl sub_0806784C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806784C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0x10
	bl sub_08068518
	movs r0, #1
	movs r1, #0
	bl sub_08068570
	movs r0, #2
	bl sub_08011104
	movs r0, #2
	movs r1, #0x80
	movs r2, #0
	movs r3, #0xb4
	bl sub_0801015C
	movs r0, #2
	movs r1, #0
	movs r2, #0x28
	bl sub_080112A8
	movs r0, #2
	movs r1, #5
	bl sub_08011174
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	movs r1, #0x31
	bl sub_08067970
	adds r0, r4, #0
	adds r0, #0xa0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	movs r0, #1
	movs r1, #0x31
	bl sub_08067970
	adds r0, r4, #0
	adds r0, #0xc8
	movs r1, #1
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	adds r0, #0x98
	movs r1, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_08065A02:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08065A1E
_08065A0A:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08065A1E
_08065A18:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_08065A1E:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08065A28
sub_08065A28: @ 0x08065A28
	push {r4, r5, lr}
	ldr r0, _08065A44 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r4, [r0, #4]
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08065A54
	cmp r0, #1
	bgt _08065A48
	cmp r0, #0
	beq _08065A4E
	b _08065A74
	.align 2, 0
_08065A44: .4byte gUnk_03006AF4
_08065A48:
	cmp r0, #2
	beq _08065A66
	b _08065A74
_08065A4E:
	bl sub_0806819C
	b _08065A58
_08065A54:
	bl sub_08065A7C
_08065A58:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08065A74
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08065A74
_08065A66:
	bl sub_08065ECC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08065A74
	movs r5, #0
	strh r5, [r4]
_08065A74:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08065A7C
sub_08065A7C: @ 0x08065A7C
	push {r4, r5, r6, r7, lr}
	ldr r0, _08065A9C @ =gUnk_03006AF4
	ldr r6, [r0]
	ldr r5, [r6, #4]
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #4
	bls _08065A90
	b _08065DFC
_08065A90:
	lsls r0, r0, #2
	ldr r1, _08065AA0 @ =_08065AA4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08065A9C: .4byte gUnk_03006AF4
_08065AA0: .4byte _08065AA4
_08065AA4: @ jump table
	.4byte _08065AB8 @ case 0
	.4byte _08065B7C @ case 1
	.4byte _08065BA2 @ case 2
	.4byte _08065CD6 @ case 3
	.4byte _08065DD4 @ case 4
_08065AB8:
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r1, [r0]
	ldr r0, _08065AD8 @ =0x00001C1F
	cmp r1, r0
	ble _08065ADC
	movs r0, #0xe7
	lsls r0, r0, #1
	movs r1, #4
	bl sub_08012F0C
	movs r0, #4
	strh r0, [r5, #2]
	b _08065DFC
	.align 2, 0
_08065AD8: .4byte 0x00001C1F
_08065ADC:
	ldr r0, _08065B70 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _08065AEA
	b _08065DFC
_08065AEA:
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	adds r0, r6, #0
	adds r0, #0x98
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	ldr r1, _08065B74 @ =0x0000FFFF
	movs r0, #3
	movs r2, #0
	movs r3, #2
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	movs r0, #3
	movs r1, #1
	bl sub_08011144
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r4, #0xe8
	lsls r4, r4, #1
	adds r0, r4, #0
	movs r1, #0
	bl sub_08012F0C
	ldr r0, _08065B78 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08065B52
	b _08065D30
_08065B52:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08065B5C
	b _08065D30
_08065B5C:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _08065B66
	b _08065D30
_08065B66:
	adds r0, r4, #0
	movs r1, #1
	bl sub_08012F0C
	b _08065D30
	.align 2, 0
_08065B70: .4byte gKeyNewPress
_08065B74: .4byte 0x0000FFFF
_08065B78: .4byte gKeyHeld
_08065B7C:
	movs r1, #0x86
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, [r0]
	movs r0, #0xc0
	lsls r0, r0, #0x18
	ands r0, r1
	cmp r0, #0
	beq _08065B9E
	movs r0, #0xc0
	lsls r0, r0, #0x16
	ands r1, r0
	cmp r1, #0
	bne _08065B9C
	movs r0, #1
	b _08065B9E
_08065B9C:
	movs r0, #2
_08065B9E:
	strh r0, [r5, #4]
	b _08065D30
_08065BA2:
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08065BD4
	strh r0, [r5, #6]
	movs r0, #2
	movs r1, #0x31
	bl sub_08067970
	adds r0, r6, #0
	adds r0, #0xf0
	movs r1, #2
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	movs r0, #2
	movs r1, #0x40
	movs r2, #0x40
	bl sub_080683B4
	adds r1, r6, #0
	adds r1, #0x9a
	movs r0, #1
	strb r0, [r1]
	b _08065D30
_08065BD4:
	cmp r0, #1
	bne _08065C2A
	movs r4, #1
	strh r0, [r5, #6]
	movs r0, #2
	movs r1, #0x31
	bl sub_08067970
	adds r0, r6, #0
	adds r0, #0xf0
	movs r1, #2
	movs r2, #4
	movs r3, #0
	bl sub_08009F50
	movs r0, #2
	movs r1, #0x40
	movs r2, #0x30
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9a
	strb r4, [r0]
	movs r0, #3
	movs r1, #0x31
	bl sub_08067970
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r1, #3
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	movs r0, #3
	movs r1, #0x40
	movs r2, #0x50
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9b
	b _08065CD2
_08065C2A:
	cmp r0, #2
	beq _08065C30
	b _08065D30
_08065C30:
	movs r4, #1
	movs r0, #1
	strh r0, [r5, #6]
	movs r0, #2
	movs r1, #0x31
	bl sub_08067970
	adds r0, r6, #0
	adds r0, #0xf0
	movs r1, #2
	movs r2, #4
	movs r3, #0
	bl sub_08009F50
	movs r0, #2
	movs r1, #0x40
	movs r2, #0x10
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9a
	strb r4, [r0]
	movs r0, #3
	movs r1, #0x31
	bl sub_08067970
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #3
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	movs r0, #3
	movs r1, #0x40
	movs r2, #0x30
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9b
	strb r4, [r0]
	movs r0, #4
	movs r1, #0x31
	bl sub_08067970
	movs r2, #0xa0
	lsls r2, r2, #1
	adds r0, r6, r2
	movs r1, #4
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	movs r0, #4
	movs r1, #0x40
	movs r2, #0x50
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9c
	strb r4, [r0]
	movs r0, #5
	movs r1, #0x31
	bl sub_08067970
	movs r1, #0xb4
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r1, #5
	movs r2, #0xd
	movs r3, #0
	bl sub_08009F50
	movs r0, #5
	movs r1, #0x40
	movs r2, #0x70
	bl sub_080683B4
	adds r0, r6, #0
	adds r0, #0x9d
_08065CD2:
	strb r4, [r0]
	b _08065D30
_08065CD6:
	ldr r0, _08065D38 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08065CEA
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _08065D40
_08065CEA:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0xe7
	lsls r0, r0, #1
	movs r2, #6
	ldrsh r1, [r5, r2]
	bl sub_08012F0C
	movs r0, #6
	ldrsh r3, [r5, r0]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #3
	adds r0, #0xf0
	adds r0, r6, r0
	ldrb r1, [r5, #6]
	adds r1, #2
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r3, #1
	adds r2, r2, r3
	adds r2, #5
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r3, #1
	bl sub_08009F50
	movs r2, #6
	ldrsh r1, [r5, r2]
	cmp r1, #0
	bne _08065D30
	ldr r0, _08065D3C @ =gUnk_03003364
	str r1, [r0]
_08065D30:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08065DFC
	.align 2, 0
_08065D38: .4byte gKeyNewPress
_08065D3C: .4byte gUnk_03003364
_08065D40:
	ldr r0, _08065D6C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _08065D82
	ldrh r2, [r5, #6]
	subs r0, r2, #1
	strh r0, [r5, #6]
	ldrh r1, [r5, #4]
	cmp r1, #0
	beq _08065D60
	cmp r1, #1
	bne _08065D70
_08065D60:
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08065D7E
	strh r1, [r5, #6]
	b _08065D7E
	.align 2, 0
_08065D6C: .4byte gCurrentKeyPress
_08065D70:
	cmp r1, #2
	bne _08065D7E
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08065D7E
	movs r0, #3
	strh r0, [r5, #6]
_08065D7E:
	lsls r0, r2, #0x10
	b _08065DBC
_08065D82:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08065DFC
	ldrh r3, [r5, #6]
	adds r0, r3, #1
	strh r0, [r5, #6]
	ldrh r1, [r5, #4]
	cmp r1, #0
	bne _08065D9E
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _08065DBA
	b _08065DB8
_08065D9E:
	cmp r1, #1
	bne _08065DAC
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _08065DBA
	b _08065DB8
_08065DAC:
	cmp r1, #2
	bne _08065DBA
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _08065DBA
_08065DB8:
	strh r2, [r5, #6]
_08065DBA:
	lsls r0, r3, #0x10
_08065DBC:
	asrs r0, r0, #0x10
	movs r2, #6
	ldrsh r1, [r5, r2]
	cmp r0, r1
	beq _08065DFC
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	bl sub_08065E08
	b _08065DFC
_08065DD4:
	movs r0, #6
	ldrsh r1, [r5, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, #0xf0
	adds r0, r6, r0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08065DFC
	movs r7, #0
	ldr r0, _08065E04 @ =gUnk_03006AF4
	ldr r1, [r0]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r1, #0xc]
	strh r7, [r5, #2]
_08065DFC:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08065E04: .4byte gUnk_03006AF4

	thumb_func_start sub_08065E08
sub_08065E08: @ 0x08065E08
	push {r4, r5, lr}
	ldr r0, _08065E28 @ =gUnk_03006AF4
	ldr r4, [r0]
	ldr r5, [r4, #4]
	movs r1, #6
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _08065E2C
	adds r0, r4, #0
	adds r0, #0xf0
	movs r1, #2
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	b _08065E3A
	.align 2, 0
_08065E28: .4byte gUnk_03006AF4
_08065E2C:
	adds r0, r4, #0
	adds r0, #0xf0
	movs r1, #2
	movs r2, #4
	movs r3, #0
	bl sub_08009F50
_08065E3A:
	ldrh r0, [r5, #4]
	cmp r0, #0
	beq _08065E6A
	movs r1, #6
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _08065E5A
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #3
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	b _08065E6A
_08065E5A:
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #3
	movs r2, #7
	movs r3, #0
	bl sub_08009F50
_08065E6A:
	ldrh r0, [r5, #4]
	cmp r0, #1
	bls _08065EC4
	movs r1, #6
	ldrsh r0, [r5, r1]
	cmp r0, #2
	bne _08065E8A
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #4
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	b _08065E9A
_08065E8A:
	movs r1, #0xa0
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #4
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
_08065E9A:
	movs r1, #6
	ldrsh r0, [r5, r1]
	cmp r0, #3
	bne _08065EB4
	movs r1, #0xb4
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	b _08065EC4
_08065EB4:
	movs r1, #0xb4
	lsls r1, r1, #1
	adds r0, r4, r1
	movs r1, #5
	movs r2, #0xd
	movs r3, #0
	bl sub_08009F50
_08065EC4:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08065ECC
sub_08065ECC: @ 0x08065ECC
	push {r4, r5, lr}
	ldr r0, _08065EE8 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r4, [r0, #4]
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08065F14
	cmp r0, #1
	bgt _08065EEC
	cmp r0, #0
	beq _08065EF6
	b _08065F74
	.align 2, 0
_08065EE8: .4byte gUnk_03006AF4
_08065EEC:
	cmp r0, #2
	beq _08065F66
	cmp r0, #3
	beq _08065F6E
	b _08065F74
_08065EF6:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x2d
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _08065F66
_08065F14:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08065F74
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
_08065F66:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08065F74
_08065F6E:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_08065F74:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08065F7C
sub_08065F7C: @ 0x08065F7C
	push {r4, r5, r6, lr}
	ldr r5, _08065F98 @ =gUnk_03006AF4
	ldr r0, [r5]
	ldr r4, [r0, #4]
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08065FA8
	cmp r0, #1
	bgt _08065F9C
	cmp r0, #0
	beq _08065FA2
	b _08065FD0
	.align 2, 0
_08065F98: .4byte gUnk_03006AF4
_08065F9C:
	cmp r0, #2
	beq _08065FBA
	b _08065FD0
_08065FA2:
	bl sub_08065FEC
	b _08065FAC
_08065FA8:
	bl sub_0806616C
_08065FAC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08065FD0
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08065FD0
_08065FBA:
	bl sub_08067788
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08065FD0
	ldr r1, [r5]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r1, #0xc]
	movs r6, #0
	strh r6, [r4]
_08065FD0:
	movs r0, #1
	movs r1, #0
	bl sub_080048CC
	movs r0, #0x3f
	bl sub_08004A34
	movs r0, #0x10
	bl sub_08004A60
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08065FEC
sub_08065FEC: @ 0x08065FEC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x20
	ldr r0, _08066010 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r7, [r0, #4]
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _08066014
	cmp r0, #1
	bne _0806600C
	b _08066154
_0806600C:
	b _0806615C
	.align 2, 0
_08066010: .4byte gUnk_03006AF4
_08066014:
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xe
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0xf
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r0, #0x40
	bl sub_08004840
	movs r0, #3
	movs r1, #0xd
	bl sub_08001D3C
	adds r6, r0, #0
	movs r1, #0x69
	bl sub_08001D78
	ldr r4, _08066148 @ =gUnk_02022000
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r5, _0806614C @ =0x06010000
	ldr r2, [sp, #8]
	adds r1, r5, #0
	bl sub_08006BA4
	ldr r0, [sp, #0x18]
	add r1, sp, #4
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	movs r0, #0
	add r1, sp, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r0, r6, #0
	movs r1, #0x68
	bl sub_08001D78
	ldr r4, _08066150 @ =gUnk_02027000
	adds r1, r4, #0
	bl LZ77UnCompWram
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800A630
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_08068480
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _0806615C
	.align 2, 0
_08066148: .4byte gUnk_02022000
_0806614C: .4byte 0x06010000
_08066150: .4byte gUnk_02027000
_08066154:
	movs r0, #0
	str r0, [r7, #8]
	strh r0, [r7, #2]
	mov r8, r0
_0806615C:
	mov r0, r8
	add sp, #0x20
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806616C
sub_0806616C: @ 0x0806616C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _080661E8 @ =gUnk_03006AF4
	ldr r7, [r0]
	ldr r6, [r7, #4]
	movs r0, #1
	mov r8, r0
	ldr r0, _080661EC @ =0x00000181
	bl sub_08012F60
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080661A8
	ldr r0, _080661F0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080661A8
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	ble _080661A8
	cmp r0, #0xe5
	bgt _080661A8
	movs r0, #0xfa
	lsls r0, r0, #1
	strh r0, [r6, #2]
_080661A8:
	movs r2, #2
	ldrsh r4, [r6, r2]
	cmp r4, #0x6f
	bne _080661B4
	bl _08066DBC
_080661B4:
	cmp r4, #0x6f
	ble _080661BA
	b _080662C4
_080661BA:
	cmp r4, #0x29
	bne _080661C0
	b _080667AC
_080661C0:
	cmp r4, #0x29
	bgt _0806623C
	cmp r4, #0xa
	bne _080661CA
	b _0806649E
_080661CA:
	cmp r4, #0xa
	bgt _08066204
	cmp r4, #2
	bne _080661D4
	b _0806641A
_080661D4:
	cmp r4, #2
	bgt _080661F4
	cmp r4, #0
	bne _080661DE
	b _080663F4
_080661DE:
	cmp r4, #1
	bne _080661E4
	b _08066404
_080661E4:
	bl _08067772
	.align 2, 0
_080661E8: .4byte gUnk_03006AF4
_080661EC: .4byte 0x00000181
_080661F0: .4byte gKeyNewPress
_080661F4:
	cmp r4, #3
	bne _080661FA
	b _08066464
_080661FA:
	cmp r4, #4
	bne _08066200
	b _08066484
_08066200:
	bl _08067772
_08066204:
	cmp r4, #0x15
	bne _0806620A
	b _0806662C
_0806620A:
	cmp r4, #0x15
	bgt _0806621E
	cmp r4, #0xb
	bne _08066214
	b _080664F0
_08066214:
	cmp r4, #0x14
	bne _0806621A
	b _080665F8
_0806621A:
	bl _08067772
_0806621E:
	cmp r4, #0x1f
	bne _08066224
	b _080666B8
_08066224:
	cmp r4, #0x1f
	bgt _08066232
	cmp r4, #0x1e
	bne _0806622E
	b _08066646
_0806622E:
	bl _08067772
_08066232:
	cmp r4, #0x28
	bne _08066238
	b _08066736
_08066238:
	bl _08067772
_0806623C:
	cmp r4, #0x50
	bne _08066244
	bl _08066A9C
_08066244:
	cmp r4, #0x50
	bgt _08066280
	cmp r4, #0x3c
	bne _0806624E
	b _08066902
_0806624E:
	cmp r4, #0x3c
	bgt _08066262
	cmp r4, #0x32
	bne _08066258
	b _080667F0
_08066258:
	cmp r4, #0x33
	bne _0806625E
	b _08066880
_0806625E:
	bl _08067772
_08066262:
	cmp r4, #0x46
	bne _08066268
	b _08066A02
_08066268:
	cmp r4, #0x46
	bgt _08066276
	cmp r4, #0x3d
	bne _08066272
	b _080669BA
_08066272:
	bl _08067772
_08066276:
	cmp r4, #0x47
	bne _0806627C
	b _08066A58
_0806627C:
	bl _08067772
_08066280:
	cmp r4, #0x5b
	bne _08066288
	bl _08066B8E
_08066288:
	cmp r4, #0x5b
	bgt _080662A0
	cmp r4, #0x51
	bne _08066294
	bl _08066AE2
_08066294:
	cmp r4, #0x5a
	bne _0806629C
	bl _08066B26
_0806629C:
	bl _08067772
_080662A0:
	cmp r4, #0x65
	bne _080662A8
	bl _08066CAC
_080662A8:
	cmp r4, #0x65
	bgt _080662B8
	cmp r4, #0x64
	bne _080662B4
	bl _08066C3E
_080662B4:
	bl _08067772
_080662B8:
	cmp r4, #0x6e
	bne _080662C0
	bl _08066D5C
_080662C0:
	bl _08067772
_080662C4:
	cmp r4, #0xb4
	bne _080662CC
	bl _08067378
_080662CC:
	cmp r4, #0xb4
	bgt _08066354
	cmp r4, #0x8d
	bne _080662D8
	bl _08066FC8
_080662D8:
	cmp r4, #0x8d
	bgt _08066310
	cmp r4, #0x82
	bne _080662E4
	bl _08066E88
_080662E4:
	cmp r4, #0x82
	bgt _080662FC
	cmp r4, #0x78
	bne _080662F0
	bl _08066DFA
_080662F0:
	cmp r4, #0x79
	bne _080662F8
	bl _08066E30
_080662F8:
	bl _08067772
_080662FC:
	cmp r4, #0x83
	bne _08066304
	bl _08066EFA
_08066304:
	cmp r4, #0x8c
	bne _0806630C
	bl _08066F60
_0806630C:
	bl _08067772
_08066310:
	cmp r4, #0xa0
	bne _08066318
	bl _08067148
_08066318:
	cmp r4, #0xa0
	bgt _08066330
	cmp r4, #0x96
	bne _08066324
	bl _08067060
_08066324:
	cmp r4, #0x97
	bne _0806632C
	bl _080670B2
_0806632C:
	bl _08067772
_08066330:
	cmp r4, #0xaa
	bne _08066338
	bl _0806731C
_08066338:
	cmp r4, #0xaa
	bgt _08066348
	cmp r4, #0xa1
	bne _08066344
	bl _080671BA
_08066344:
	bl _08067772
_08066348:
	cmp r4, #0xab
	bne _08066350
	bl _08067354
_08066350:
	bl _08067772
_08066354:
	cmp r4, #0xd3
	bne _0806635C
	bl _080674F8
_0806635C:
	cmp r4, #0xd3
	bgt _080663A4
	cmp r4, #0xbf
	bne _08066368
	bl _0806743C
_08066368:
	cmp r4, #0xbf
	bgt _08066380
	cmp r4, #0xb5
	bne _08066374
	bl _080673B0
_08066374:
	cmp r4, #0xbe
	bne _0806637C
	bl _080673D4
_0806637C:
	bl _08067772
_08066380:
	cmp r4, #0xc9
	bne _08066388
	bl _08067498
_08066388:
	cmp r4, #0xc9
	bgt _08066398
	cmp r4, #0xc8
	bne _08066394
	bl _08067460
_08066394:
	bl _08067772
_08066398:
	cmp r4, #0xd2
	bne _080663A0
	bl _080674C8
_080663A0:
	bl _08067772
_080663A4:
	cmp r4, #0xe6
	bne _080663AC
	bl _08067708
_080663AC:
	cmp r4, #0xe6
	bgt _080663C4
	cmp r4, #0xdc
	bne _080663B8
	bl _08067578
_080663B8:
	cmp r4, #0xdd
	bne _080663C0
	bl _08067628
_080663C0:
	bl _08067772
_080663C4:
	movs r0, #0xfa
	lsls r0, r0, #1
	cmp r4, r0
	bne _080663D0
	bl _08067754
_080663D0:
	cmp r4, r0
	bgt _080663E0
	cmp r4, #0xe7
	bne _080663DC
	bl _0806773A
_080663DC:
	bl _08067772
_080663E0:
	ldr r0, _080663F0 @ =0x000003E7
	cmp r4, r0
	bne _080663EA
	bl _0806776C
_080663EA:
	bl _08067772
	.align 2, 0
_080663F0: .4byte 0x000003E7
_080663F4:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #2
	bl sub_08014544
	str r4, [r6, #0xc]
	bl _08067732
_08066404:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0xc8
	beq _08066412
	bl _08067772
_08066412:
	movs r0, #0
	str r0, [r6, #0xc]
	bl _08067732
_0806641A:
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0x1a
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_08068480
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	bl _08067732
_08066464:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08066476
	bl _08067772
_08066476:
	movs r0, #2
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #0xc]
	bl _08067732
_08066484:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x96
	beq _08066492
	bl _08067772
_08066492:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xa
	strh r0, [r6, #2]
	bl _08067772
_0806649E:
	movs r0, #0
	movs r1, #2
	bl sub_08067A68
	movs r0, #1
	movs r1, #4
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x80
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x20
	movs r3, #0xf0
	bl sub_08068480
	ldr r1, _080664EC @ =0x0000FFFF
	movs r0, #2
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	bl _08067732
	.align 2, 0
_080664EC: .4byte 0x0000FFFF
_080664F0:
	movs r5, #0xa0
	str r5, [sp]
	movs r4, #0xfa
	lsls r4, r4, #2
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x91
	bne _08066540
	movs r1, #0x8c
	lsls r1, r1, #6
	movs r0, #0x10
	bl sub_080684FC
	movs r0, #0x10
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_08068518
	movs r0, #0x41
	movs r1, #0
	bl sub_08068570
	b _08066562
_08066540:
	cmp r0, #0xd2
	bne _08066562
	movs r1, #0x8c
	lsls r1, r1, #6
	movs r0, #0
	bl sub_080684FC
	movs r0, #0
	bl sub_08004894
	movs r0, #0x10
	bl sub_080048B0
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
_08066562:
	ldr r1, [r6, #0xc]
	movs r0, #0x9e
	lsls r0, r0, #1
	cmp r1, r0
	bne _0806657C
	movs r0, #0
	movs r1, #0
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	b _0806658A
_0806657C:
	movs r0, #0x80
	lsls r0, r0, #2
	cmp r1, r0
	bne _0806658C
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
_0806658A:
	strb r0, [r1]
_0806658C:
	ldr r1, [r6, #0xc]
	movs r0, #0x9a
	lsls r0, r0, #2
	cmp r1, r0
	bne _080665A6
	movs r0, #0
	movs r1, #1
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	b _080665B4
_080665A6:
	movs r0, #0xcb
	lsls r0, r0, #2
	cmp r1, r0
	bne _080665B6
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
_080665B4:
	strb r0, [r1]
_080665B6:
	ldr r1, [r6, #0xc]
	ldr r0, _080665EC @ =0x00000393
	cmp r1, r0
	bne _080665D4
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080665F0 @ =0x00007FFF
	movs r0, #2
	movs r3, #0x50
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
_080665D4:
	ldr r1, [r6, #0xc]
	ldr r0, _080665F4 @ =0x00000401
	cmp r1, r0
	beq _080665E0
	bl _08067772
_080665E0:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x14
	strh r0, [r6, #2]
	bl _08067772
	.align 2, 0
_080665EC: .4byte 0x00000393
_080665F0: .4byte 0x00007FFF
_080665F4: .4byte 0x00000401
_080665F8:
	movs r0, #0
	movs r1, #0x1a
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_08068480
	movs r0, #2
	bl sub_08011104
	bl _08067732
_0806662C:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0xc6
	beq _0806663A
	bl _08067772
_0806663A:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x1e
	strh r0, [r6, #2]
	bl _08067772
_08066646:
	movs r0, #0
	movs r1, #8
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0x5a
	bl sub_080682A8
	ldrb r0, [r6, #4]
	cmp r0, #0
	bne _08066668
	movs r0, #1
	movs r1, #0x1c
	bl sub_08067A68
	b _08066670
_08066668:
	movs r0, #1
	movs r1, #0x1e
	bl sub_08067A68
_08066670:
	movs r0, #1
	movs r1, #0xb0
	movs r2, #0
	bl sub_080682A8
	ldr r0, _080666B4 @ =0xFFFF8000
	str r0, [r7, #0x3c]
	movs r0, #0
	str r0, [r7, #0x4c]
	movs r1, #2
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x1e
	movs r1, #0
	bl sub_08068570
	bl _08067732
	.align 2, 0
_080666B4: .4byte 0xFFFF8000
_080666B8:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xe5
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x5a
	movs r3, #0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0x1e
	bgt _0806670C
	ldr r1, [r7, #0x3c]
	ldr r2, [r7, #0x4c]
	movs r0, #1
	bl sub_080682DC
	ldr r1, [r7, #0x3c]
	ldr r0, _08066704 @ =0x00000D99
	muls r0, r1, r0
	cmp r0, #0
	bge _080666F0
	ldr r1, _08066708 @ =0x00000FFF
	adds r0, r0, r1
_080666F0:
	asrs r0, r0, #0xc
	str r0, [r7, #0x3c]
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _080666FE
	ldr r2, _08066708 @ =0x00000FFF
	adds r0, r0, r2
_080666FE:
	asrs r0, r0, #0xc
	str r0, [r6, #0x2c]
	b _08066720
	.align 2, 0
_08066704: .4byte 0x00000D99
_08066708: .4byte 0x00000FFF
_0806670C:
	ldr r1, [r6, #0x2c]
	movs r0, #0
	str r0, [sp]
	movs r0, #0xaf
	str r0, [sp, #4]
	movs r0, #1
	movs r2, #0
	movs r3, #0x58
	bl sub_08068330
_08066720:
	ldr r0, [r6, #0xc]
	cmp r0, #0xcd
	beq _0806672A
	bl _08067772
_0806672A:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x28
	strh r0, [r6, #2]
	bl _08067772
_08066736:
	ldrb r0, [r6, #4]
	cmp r0, #0
	bne _08066746
	movs r0, #1
	movs r1, #0x20
	bl sub_08067A68
	b _0806674E
_08066746:
	movs r0, #1
	movs r1, #0x22
	bl sub_08067A68
_0806674E:
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	ldrb r0, [r6, #4]
	cmp r0, #0
	bne _08066768
	movs r0, #0
	movs r1, #0xa
	bl sub_08068234
	b _08066770
_08066768:
	movs r0, #0
	movs r1, #0xb
	bl sub_08068234
_08066770:
	bl sub_08016A5C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08066782
	movs r0, #0
	movs r1, #0x19
	bl sub_08068234
_08066782:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xe5
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x5a
	movs r3, #0
	bl sub_08068330
	bl _08067732
_080667AC:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xe5
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x5a
	movs r3, #0
	bl sub_08068330
	movs r0, #0x18
	str r0, [sp]
	movs r0, #0xc8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080683F0
	ldr r0, [r6, #0xc]
	cmp r0, #0xc8
	beq _080667E4
	bl _08067772
_080667E4:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x32
	strh r0, [r6, #2]
	bl _08067772
_080667F0:
	movs r0, #0
	movs r1, #0xa
	bl sub_08067A68
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0
	movs r1, #0
	bl sub_080682A8
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _08066814
	movs r0, #1
	movs r1, #0x24
	bl sub_08067A68
	b _0806683C
_08066814:
	cmp r0, #1
	bne _08066822
	movs r0, #1
	movs r1, #0x26
	bl sub_08067A68
	b _0806683C
_08066822:
	cmp r0, #2
	bne _08066830
	movs r0, #1
	movs r1, #0x28
	bl sub_08067A68
	b _0806683C
_08066830:
	cmp r0, #3
	bne _0806683C
	movs r0, #1
	movs r1, #0x2a
	bl sub_08067A68
_0806683C:
	movs r0, #1
	movs r1, #0x60
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x80
	lsls r0, r0, #8
	str r0, [r7, #0x3c]
	movs r0, #0
	str r0, [r7, #0x4c]
	movs r1, #3
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x1e
	movs r1, #0
	bl sub_08068570
	bl _08067732
_08066880:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xec
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0x1e
	bgt _080668D8
	ldr r1, [r7, #0x3c]
	ldr r2, [r7, #0x4c]
	movs r0, #1
	bl sub_080682DC
	ldr r1, [r7, #0x3c]
	ldr r0, _080668D0 @ =0x00000D99
	muls r0, r1, r0
	cmp r0, #0
	bge _080668BA
	ldr r1, _080668D4 @ =0x00000FFF
	adds r0, r0, r1
_080668BA:
	asrs r0, r0, #0xc
	str r0, [r7, #0x3c]
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _080668C8
	ldr r2, _080668D4 @ =0x00000FFF
	adds r0, r0, r2
_080668C8:
	asrs r0, r0, #0xc
	str r0, [r6, #0x2c]
	b _080668EC
	.align 2, 0
_080668D0: .4byte 0x00000D99
_080668D4: .4byte 0x00000FFF
_080668D8:
	ldr r1, [r6, #0x2c]
	movs r0, #0
	str r0, [sp]
	movs r0, #0xad
	str r0, [sp, #4]
	movs r0, #1
	movs r2, #0
	movs r3, #0xb8
	bl sub_08068330
_080668EC:
	ldr r0, [r6, #0xc]
	cmp r0, #0xcb
	beq _080668F6
	bl _08067772
_080668F6:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x3c
	strh r0, [r6, #2]
	bl _08067772
_08066902:
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _08066912
	movs r0, #1
	movs r1, #0x2c
	bl sub_08067A68
	b _0806693A
_08066912:
	cmp r0, #1
	bne _08066920
	movs r0, #1
	movs r1, #0x2e
	bl sub_08067A68
	b _0806693A
_08066920:
	cmp r0, #2
	bne _0806692E
	movs r0, #1
	movs r1, #0x30
	bl sub_08067A68
	b _0806693A
_0806692E:
	cmp r0, #3
	bne _0806693A
	movs r0, #1
	movs r1, #0x32
	bl sub_08067A68
_0806693A:
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _08066954
	movs r0, #0
	movs r1, #0xc
	bl sub_08068234
	b _0806697C
_08066954:
	cmp r0, #1
	bne _08066962
	movs r0, #0
	movs r1, #0xd
	bl sub_08068234
	b _0806697C
_08066962:
	cmp r0, #2
	bne _08066970
	movs r0, #0
	movs r1, #0xe
	bl sub_08068234
	b _0806697C
_08066970:
	cmp r0, #3
	bne _0806697C
	movs r0, #0
	movs r1, #0xf
	bl sub_08068234
_0806697C:
	bl sub_08016ABC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806698E
	movs r0, #0
	movs r1, #0x19
	bl sub_08068234
_0806698E:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xec
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_08068330
	bl _08067732
_080669BA:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0xb0
	str r0, [sp]
	adds r0, #0xec
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_08068330
	movs r0, #0x18
	rsbs r0, r0, #0
	str r0, [sp]
	movs r0, #0xc8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080683F0
	ldr r0, [r6, #0xc]
	cmp r0, #0xd2
	beq _080669F6
	bl _08067772
_080669F6:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x46
	strh r0, [r6, #2]
	bl _08067772
_08066A02:
	movs r0, #0
	movs r1, #0xc
	bl sub_08067A68
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x34
	bl sub_08067A68
	movs r0, #1
	movs r1, #8
	movs r2, #0xa8
	bl sub_080682A8
	movs r0, #0
	movs r1, #4
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #8
	movs r1, #0x10
	movs r2, #8
	movs r3, #0
	bl sub_08068518
	movs r0, #0x3c
	movs r1, #0
	bl sub_08068570
	bl _08067732
_08066A58:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r4, #0
	str r4, [sp]
	movs r0, #0xca
	lsls r0, r0, #1
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	movs r3, #0x88
	bl sub_08068330
	movs r0, #0x80
	str r0, [sp]
	movs r0, #0xcc
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #8
	movs r2, #0xa8
	movs r3, #8
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0xcc
	beq _08066A92
	bl _08067772
_08066A92:
	str r4, [r6, #0xc]
	movs r0, #0x50
	strh r0, [r6, #2]
	bl _08067772
_08066A9C:
	movs r0, #1
	movs r1, #0x36
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0x10
	bl sub_08068234
	movs r1, #0x18
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r2, #0
	movs r0, #1
	strb r0, [r1]
	str r2, [sp]
	movs r0, #0xca
	lsls r0, r0, #1
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0x10
	movs r3, #0x88
	bl sub_08068330
	bl _08067732
_08066AE2:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r4, #0
	str r4, [sp]
	movs r0, #0xca
	lsls r0, r0, #1
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0x10
	movs r2, #0
	movs r3, #0x88
	bl sub_08068330
	movs r1, #0x18
	rsbs r1, r1, #0
	str r4, [sp]
	movs r0, #0xc8
	str r0, [sp, #4]
	movs r0, #0
	movs r2, #0
	movs r3, #0
	bl sub_080683F0
	ldr r0, [r6, #0xc]
	cmp r0, #0xc8
	beq _08066B1C
	bl _08067772
_08066B1C:
	str r4, [r6, #0xc]
	movs r0, #0x5a
	strh r0, [r6, #2]
	bl _08067772
_08066B26:
	movs r0, #0
	movs r1, #0xe
	bl sub_08067A68
	movs r0, #0
	movs r1, #0xc8
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x38
	bl sub_08067A68
	movs r0, #1
	movs r1, #0x28
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x80
	lsls r0, r0, #9
	str r0, [r7, #0x3c]
	movs r4, #0
	str r4, [r7, #0x4c]
	movs r0, #0
	movs r1, #0x11
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0x28
	bl sub_080683B4
	adds r0, r7, #0
	adds r0, #0x98
	strb r4, [r0]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #8
	movs r1, #0x10
	movs r2, #8
	movs r3, #0
	bl sub_08068518
	movs r0, #0x18
	movs r1, #0
	bl sub_08068570
	bl _08067732
_08066B8E:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r4, #0
	str r4, [sp]
	movs r0, #0xa3
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xc8
	movs r2, #0
	movs r3, #0xa0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0x18
	bgt _08066BE4
	ldr r1, [r7, #0x3c]
	ldr r2, [r7, #0x4c]
	movs r0, #1
	bl sub_080682DC
	ldr r1, [r7, #0x3c]
	ldr r0, _08066BDC @ =0x00000D99
	muls r0, r1, r0
	cmp r0, #0
	bge _08066BC6
	ldr r1, _08066BE0 @ =0x00000FFF
	adds r0, r0, r1
_08066BC6:
	asrs r0, r0, #0xc
	str r0, [r7, #0x3c]
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _08066BD4
	ldr r2, _08066BE0 @ =0x00000FFF
	adds r0, r0, r2
_08066BD4:
	asrs r0, r0, #0xc
	str r0, [r6, #0x2c]
	b _08066BF6
	.align 2, 0
_08066BDC: .4byte 0x00000D99
_08066BE0: .4byte 0x00000FFF
_08066BE4:
	ldr r1, [r6, #0x2c]
	str r4, [sp]
	movs r0, #0x8b
	str r0, [sp, #4]
	movs r0, #1
	movs r2, #0
	movs r3, #0xb0
	bl sub_08068330
_08066BF6:
	ldr r0, [r6, #0xc]
	cmp r0, #0x38
	bne _08066C06
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	b _08066C28
_08066C06:
	adds r0, r7, #0
	adds r0, #0x98
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08066C28
	movs r0, #0
	str r0, [sp]
	movs r0, #0x6b
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x28
	movs r3, #0
	bl sub_080683F0
_08066C28:
	ldr r0, [r6, #0xc]
	cmp r0, #0xa3
	beq _08066C32
	bl _08067772
_08066C32:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x64
	strh r0, [r6, #2]
	bl _08067772
_08066C3E:
	movs r0, #0
	movs r1, #0x10
	bl sub_08067A68
	movs r0, #0
	movs r1, #0xa8
	movs r2, #0
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x3a
	bl sub_08067A68
	movs r0, #1
	movs r1, #0xf0
	movs r2, #0
	bl sub_080682A8
	ldr r0, _08066CA8 @ =0xFFFEC000
	str r0, [r7, #0x3c]
	movs r4, #0
	str r4, [r7, #0x4c]
	movs r0, #0
	movs r1, #0x12
	bl sub_08068234
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #0
	movs r1, #0
	bl sub_080683B4
	adds r0, r7, #0
	adds r0, #0x98
	strb r4, [r0]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #8
	movs r1, #0x10
	movs r2, #8
	movs r3, #0
	bl sub_08068518
	movs r0, #0x18
	movs r1, #0
	bl sub_08068570
	bl _08067732
	.align 2, 0
_08066CA8: .4byte 0xFFFEC000
_08066CAC:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r4, #0
	str r4, [sp]
	movs r0, #0x8a
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xa8
	movs r2, #0
	movs r3, #0xc8
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0x18
	bgt _08066D00
	ldr r1, [r7, #0x3c]
	ldr r2, [r7, #0x4c]
	movs r0, #1
	bl sub_080682DC
	ldr r1, [r7, #0x3c]
	ldr r0, _08066CF8 @ =0x00000D99
	muls r0, r1, r0
	cmp r0, #0
	bge _08066CE4
	ldr r1, _08066CFC @ =0x00000FFF
	adds r0, r0, r1
_08066CE4:
	asrs r0, r0, #0xc
	str r0, [r7, #0x3c]
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _08066CF2
	ldr r2, _08066CFC @ =0x00000FFF
	adds r0, r0, r2
_08066CF2:
	asrs r0, r0, #0xc
	str r0, [r6, #0x2c]
	b _08066D12
	.align 2, 0
_08066CF8: .4byte 0x00000D99
_08066CFC: .4byte 0x00000FFF
_08066D00:
	ldr r1, [r6, #0x2c]
	str r4, [sp]
	movs r0, #0x72
	str r0, [sp, #4]
	movs r0, #1
	movs r2, #0
	movs r3, #0x50
	bl sub_08068330
_08066D12:
	ldr r0, [r6, #0xc]
	cmp r0, #0x28
	bne _08066D22
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	b _08066D46
_08066D22:
	adds r0, r7, #0
	adds r0, #0x98
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08066D46
	movs r2, #0x20
	rsbs r2, r2, #0
	movs r0, #0
	str r0, [sp]
	movs r0, #0x62
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_080683F0
_08066D46:
	ldr r0, [r6, #0xc]
	cmp r0, #0x8a
	beq _08066D50
	bl _08067772
_08066D50:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x6e
	strh r0, [r6, #2]
	bl _08067772
_08066D5C:
	movs r0, #0
	movs r1, #0x12
	bl sub_08067A68
	movs r0, #0
	movs r1, #0x3c
	movs r2, #0x30
	bl sub_080682A8
	movs r0, #1
	movs r1, #0x3c
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0x13
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #8
	movs r1, #0x10
	movs r2, #8
	movs r3, #0
	bl sub_08068518
	movs r0, #0x14
	movs r1, #0
	bl sub_08068570
	bl _08067732
_08066DBC:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r0, #0x30
	str r0, [sp]
	movs r0, #0x64
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0x40
	movs r2, #0x30
	movs r3, #0x28
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0xf
	bne _08066DE4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
_08066DE4:
	ldr r0, [r6, #0xc]
	cmp r0, #0x64
	beq _08066DEE
	bl _08067772
_08066DEE:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x78
	strh r0, [r6, #2]
	bl _08067772
_08066DFA:
	movs r0, #0
	movs r1, #6
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0x30
	bl sub_080682A8
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x50
	movs r3, #0xf0
	bl sub_08068480
	movs r0, #0
	movs r1, #5
	bl sub_08068234
	bl _0806772A
_08066E30:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r5, #0
	str r5, [sp]
	ldr r4, _08066E84 @ =0x00000173
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x30
	movs r3, #0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0xb4
	bne _08066E70
	movs r0, #0x50
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_08068480
	movs r0, #0
	movs r1, #6
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
_08066E70:
	ldr r0, [r6, #0xc]
	cmp r0, r4
	beq _08066E7A
	bl _08067772
_08066E7A:
	str r5, [r6, #0xc]
	movs r0, #0x82
	strh r0, [r6, #2]
	bl _08067772
	.align 2, 0
_08066E84: .4byte 0x00000173
_08066E88:
	movs r0, #0
	movs r1, #0x14
	bl sub_08067A68
	movs r0, #0
	movs r1, #0xd0
	movs r2, #0x30
	bl sub_080682A8
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_08068480
	movs r0, #1
	movs r1, #0x3e
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0x14
	bl sub_08068234
	movs r1, #0xf0
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x1e
	movs r1, #0
	bl sub_08068570
	bl _08067732
_08066EFA:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r0, #0x30
	str r0, [sp]
	ldr r0, _08066F5C @ =0x0000014F
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xd0
	movs r2, #0x30
	movs r3, #0x88
	bl sub_08068330
	ldr r0, [r6, #0xc]
	adds r4, r7, #0
	adds r4, #0x98
	cmp r0, #0x1e
	bne _08066F22
	movs r0, #1
	strb r0, [r4]
_08066F22:
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #1
	bne _08066F46
	ldr r0, [r6, #0xc]
	cmp r0, #0x27
	bgt _08066F46
	movs r1, #0xf0
	rsbs r1, r1, #0
	movs r0, #0
	str r0, [sp]
	movs r0, #0xa
	str r0, [sp, #4]
	movs r0, #0
	movs r2, #0
	movs r3, #0
	bl sub_080683F0
_08066F46:
	ldr r0, [r6, #0xc]
	cmp r0, #0x99
	beq _08066F50
	bl _08067772
_08066F50:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x8c
	strh r0, [r6, #2]
	bl _08067772
	.align 2, 0
_08066F5C: .4byte 0x0000014F
_08066F60:
	movs r0, #0x30
	str r0, [sp]
	ldr r0, _08066FC4 @ =0x0000014F
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xd0
	movs r2, #0x30
	movs r3, #0x88
	bl sub_08068330
	movs r0, #1
	movs r1, #0x40
	bl sub_08067A68
	movs r1, #0xb0
	lsls r1, r1, #1
	movs r0, #1
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0x15
	bl sub_08068234
	movs r0, #0
	movs r1, #0xe8
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x10
	movs r3, #0
	bl sub_08068518
	movs r0, #0x14
	movs r1, #0
	bl sub_08068570
	b _08067732
	.align 2, 0
_08066FC4: .4byte 0x0000014F
_08066FC8:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r0, #0x30
	str r0, [sp]
	ldr r0, _0806705C @ =0x0000014F
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xd0
	movs r2, #0x30
	movs r3, #0x88
	bl sub_08068330
	ldr r0, [r6, #0xc]
	adds r4, r7, #0
	adds r4, #0x98
	cmp r0, #0x12
	bne _08066FF0
	movs r0, #1
	strb r0, [r4]
_08066FF0:
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #1
	bne _08067012
	ldr r0, [r6, #0xc]
	cmp r0, #0x19
	bgt _08067012
	movs r0, #0
	str r0, [sp]
	movs r0, #8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xe8
	movs r2, #0
	movs r3, #0
	bl sub_080683F0
_08067012:
	ldr r0, [r6, #0xc]
	cmp r0, #0x99
	bne _08067032
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x1c
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	strb r0, [r4]
_08067032:
	ldr r0, [r6, #0xc]
	cmp r0, #0xb5
	beq _0806703A
	b _08067772
_0806703A:
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	bl sub_08011104
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0x96
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_0806705C: .4byte 0x0000014F
_08067060:
	movs r0, #0
	movs r1, #0x44
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0x42
	bl sub_08067A68
	movs r2, #0x8c
	lsls r2, r2, #1
	movs r0, #1
	movs r1, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #7
	bl sub_08068234
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	b _08067730
_080670B2:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	movs r2, #0x8c
	lsls r2, r2, #1
	movs r0, #0x88
	str r0, [sp]
	adds r0, #0xaf
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r3, #0
	bl sub_08068330
	ldr r0, [r6, #0xc]
	cmp r0, #0x14
	bne _080670DE
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	strb r0, [r1]
	b _08067106
_080670DE:
	cmp r0, #0xc4
	bne _08067106
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x73
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
_08067106:
	ldr r1, [r6, #0xc]
	ldr r0, _08067140 @ =0x0000011F
	cmp r1, r0
	bne _0806712C
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0x10
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_08068518
	movs r0, #0x18
	movs r1, #0
	bl sub_08068570
_0806712C:
	ldr r1, [r6, #0xc]
	ldr r0, _08067144 @ =0x00000137
	cmp r1, r0
	beq _08067136
	b _08067772
_08067136:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xa0
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_08067140: .4byte 0x0000011F
_08067144: .4byte 0x00000137
_08067148:
	movs r0, #0
	movs r1, #0x46
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x24
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #1
	movs r1, #0x44
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0x16
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0x10
	movs r1, #0x10
	movs r2, #0
	movs r3, #0
	bl sub_08068518
	movs r0, #1
	movs r1, #0
	bl sub_08068570
	b _08067732
_080671BA:
	ldr r0, [r6, #0xc]
	adds r1, r0, #1
	str r1, [r6, #0xc]
	cmp r1, #0xd
	bne _080671CC
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	b _080671F4
_080671CC:
	subs r0, #0x4c
	cmp r0, #3
	bhi _080671EA
	movs r3, #0xe8
	rsbs r3, r3, #0
	movs r0, #0
	str r0, [sp]
	movs r0, #4
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683F0
	b _080671F6
_080671EA:
	cmp r1, #0x55
	bne _080671F6
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
_080671F4:
	strb r0, [r1]
_080671F6:
	ldr r0, [r6, #0xc]
	cmp r0, #0x64
	bne _0806721A
	movs r1, #0x84
	lsls r1, r1, #6
	movs r0, #2
	bl sub_080684FC
	movs r0, #0x10
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_08068518
	movs r0, #0xc
	movs r1, #0
	bl sub_08068570
_0806721A:
	ldr r1, [r6, #0xc]
	cmp r1, #0x6b
	bne _08067260
	movs r0, #1
	movs r1, #0x48
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x10
	movs r1, #0x10
	movs r2, #0
	movs r3, #0
	bl sub_08068518
	movs r0, #1
	movs r1, #0
	bl sub_08068570
	movs r0, #0
	movs r1, #0x17
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	b _08067288
_08067260:
	adds r0, r1, #0
	subs r0, #0xb0
	cmp r0, #4
	bhi _0806727E
	movs r0, #0
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xa0
	bl sub_080683F0
	b _0806728A
_0806727E:
	cmp r1, #0xb5
	bne _0806728A
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
_08067288:
	strb r0, [r1]
_0806728A:
	ldr r1, [r6, #0xc]
	cmp r1, #0xd0
	bne _080672D0
	movs r0, #1
	movs r1, #0x66
	bl sub_08067A68
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x10
	movs r1, #0x10
	movs r2, #0
	movs r3, #0
	bl sub_08068518
	movs r0, #1
	movs r1, #0
	bl sub_08068570
	movs r0, #0
	movs r1, #0x18
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
	b _08067300
_080672D0:
	ldr r2, _080672F0 @ =0xFFFFFEF0
	adds r0, r1, r2
	cmp r0, #4
	bhi _080672F4
	movs r3, #0xc8
	rsbs r3, r3, #0
	movs r0, #0
	str r0, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683F0
	b _08067302
	.align 2, 0
_080672F0: .4byte 0xFFFFFEF0
_080672F4:
	ldr r0, _08067318 @ =0x00000115
	cmp r1, r0
	bne _08067302
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
_08067300:
	strb r0, [r1]
_08067302:
	ldr r1, [r6, #0xc]
	movs r0, #0x9a
	lsls r0, r0, #1
	cmp r1, r0
	beq _0806730E
	b _08067772
_0806730E:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xaa
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_08067318: .4byte 0x00000115
_0806731C:
	movs r0, #0
	movs r1, #0x4a
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067732
_08067354:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x56
	bne _08067368
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x14
	b _080674AA
_08067368:
	cmp r0, #0x6a
	beq _0806736E
	b _08067772
_0806736E:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xb4
	strh r0, [r6, #2]
	b _08067772
_08067378:
	movs r0, #0
	movs r1, #0x4c
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067732
_080673B0:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x46
	bne _080673C4
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x14
	b _080674AA
_080673C4:
	cmp r0, #0x5a
	beq _080673CA
	b _08067772
_080673CA:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xbe
	strh r0, [r6, #2]
	b _08067772
_080673D4:
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _080673E4
	movs r0, #0
	movs r1, #0x4e
	bl sub_08067A68
	b _0806740C
_080673E4:
	cmp r0, #1
	bne _080673F2
	movs r0, #0
	movs r1, #0x50
	bl sub_08067A68
	b _0806740C
_080673F2:
	cmp r0, #2
	bne _08067400
	movs r0, #0
	movs r1, #0x52
	bl sub_08067A68
	b _0806740C
_08067400:
	cmp r0, #3
	bne _0806740C
	movs r0, #0
	movs r1, #0x54
	bl sub_08067A68
_0806740C:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x16
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067732
_0806743C:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x14
	bne _08067450
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x14
	b _080674AA
_08067450:
	cmp r0, #0x28
	beq _08067456
	b _08067772
_08067456:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xc8
	strh r0, [r6, #2]
	b _08067772
_08067460:
	movs r0, #0
	movs r1, #0x56
	bl sub_08067A68
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x12
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067732
_08067498:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x13
	bne _080674B8
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x12
_080674AA:
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	b _08067772
_080674B8:
	cmp r0, #0x25
	beq _080674BE
	b _08067772
_080674BE:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xd2
	strh r0, [r6, #2]
	b _08067772
_080674C8:
	movs r0, #0
	movs r1, #0x58
	bl sub_08067A68
	movs r0, #0
	movs r1, #8
	movs r2, #0x60
	bl sub_080682A8
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #8
	bl sub_08068234
	b _0806772A
_080674F8:
	ldr r0, [r6, #0xc]
	adds r1, r0, #1
	str r1, [r6, #0xc]
	cmp r1, #0x36
	bne _08067518
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x46
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067532
_08067518:
	ldr r0, _08067570 @ =0x00000125
	cmp r1, r0
	bne _08067532
	movs r0, #2
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
_08067532:
	ldr r0, [r6, #0xc]
	cmp r0, #0x35
	ble _0806754C
	movs r0, #0x80
	str r0, [sp]
	adds r0, #0x8d
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #8
	movs r2, #0x60
	movs r3, #8
	bl sub_08068330
_0806754C:
	ldr r0, [r6, #0xc]
	cmp r0, #0x74
	bne _0806755A
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0
	strb r0, [r1]
_0806755A:
	ldr r1, [r6, #0xc]
	ldr r0, _08067574 @ =0x00000143
	cmp r1, r0
	beq _08067564
	b _08067772
_08067564:
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xdc
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_08067570: .4byte 0x00000125
_08067574: .4byte 0x00000143
_08067578:
	ldrb r0, [r6, #4]
	cmp r0, #0
	bne _08067588
	movs r0, #1
	movs r1, #0x5a
	bl sub_08067A68
	b _08067590
_08067588:
	movs r0, #1
	movs r1, #0x5c
	bl sub_08067A68
_08067590:
	ldrb r0, [r6, #5]
	cmp r0, #0
	bne _080675A0
	movs r0, #0
	movs r1, #0x5e
	bl sub_08067A68
	b _080675C8
_080675A0:
	cmp r0, #1
	bne _080675AE
	movs r0, #0
	movs r1, #0x60
	bl sub_08067A68
	b _080675C8
_080675AE:
	cmp r0, #2
	bne _080675BC
	movs r0, #0
	movs r1, #0x62
	bl sub_08067A68
	b _080675C8
_080675BC:
	cmp r0, #3
	bne _080675C8
	movs r0, #0
	movs r1, #0x64
	bl sub_08067A68
_080675C8:
	movs r0, #1
	movs r1, #0x58
	movs r2, #0
	bl sub_080682A8
	movs r0, #0
	movs r1, #0xc0
	movs r2, #0
	bl sub_080682A8
	movs r0, #0x80
	lsls r0, r0, #8
	str r0, [r7, #0x3c]
	movs r1, #0
	str r1, [r7, #0x4c]
	ldr r0, _08067624 @ =0xFFFF8000
	str r0, [r7, #0x38]
	str r1, [r7, #0x48]
	movs r0, #1
	bl sub_08011104
	movs r0, #1
	movs r1, #0xff
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #2
	bl sub_08011104
	movs r1, #0xff
	lsls r1, r1, #8
	movs r0, #2
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	b _08067732
	.align 2, 0
_08067624: .4byte 0xFFFF8000
_08067628:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0x28
	bgt _08067668
	ldr r1, [r7, #0x3c]
	ldr r2, [r7, #0x4c]
	movs r0, #1
	bl sub_080682DC
	ldr r1, [r7, #0x3c]
	ldr r0, _08067660 @ =0x00000E66
	muls r0, r1, r0
	cmp r0, #0
	bge _0806764A
	ldr r1, _08067664 @ =0x00000FFF
	adds r0, r0, r1
_0806764A:
	asrs r0, r0, #0xc
	str r0, [r7, #0x3c]
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bge _08067658
	ldr r2, _08067664 @ =0x00000FFF
	adds r0, r0, r2
_08067658:
	asrs r0, r0, #0xc
	str r0, [r6, #0x2c]
	b _0806767C
	.align 2, 0
_08067660: .4byte 0x00000E66
_08067664: .4byte 0x00000FFF
_08067668:
	ldr r1, [r6, #0x2c]
	movs r0, #0
	str r0, [sp]
	ldr r0, _080676CC @ =0x0000014B
	str r0, [sp, #4]
	movs r0, #1
	movs r2, #0
	movs r3, #0xc8
	bl sub_08068330
_0806767C:
	ldr r0, [r6, #0xc]
	cmp r0, #0x50
	bne _08067696
	movs r0, #1
	movs r1, #0xff
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
_08067696:
	ldr r1, [r6, #0xc]
	adds r0, r1, #0
	subs r0, #0x51
	cmp r0, #0x27
	bhi _080676D8
	ldr r1, [r7, #0x38]
	ldr r2, [r7, #0x48]
	movs r0, #0
	bl sub_080682DC
	ldr r1, [r7, #0x38]
	ldr r0, _080676D0 @ =0x00000E66
	muls r0, r1, r0
	cmp r0, #0
	bge _080676B8
	ldr r1, _080676D4 @ =0x00000FFF
	adds r0, r0, r1
_080676B8:
	asrs r0, r0, #0xc
	str r0, [r7, #0x38]
	ldr r0, [r7, #0x18]
	cmp r0, #0
	bge _080676C6
	ldr r2, _080676D4 @ =0x00000FFF
	adds r0, r0, r2
_080676C6:
	asrs r0, r0, #0xc
	str r0, [r6, #0x30]
	b _080676F0
	.align 2, 0
_080676CC: .4byte 0x0000014B
_080676D0: .4byte 0x00000E66
_080676D4: .4byte 0x00000FFF
_080676D8:
	cmp r1, #0x78
	ble _080676F0
	ldr r1, [r6, #0x30]
	movs r0, #0
	str r0, [sp]
	movs r0, #0xfb
	str r0, [sp, #4]
	movs r0, #0
	movs r2, #0
	movs r3, #0x58
	bl sub_08068330
_080676F0:
	ldr r1, [r6, #0xc]
	ldr r0, _08067704 @ =0x00000173
	cmp r1, r0
	bne _08067772
	movs r0, #0
	str r0, [r6, #0xc]
	movs r0, #0xe6
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_08067704: .4byte 0x00000173
_08067708:
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #9
	bl sub_08068234
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
_0806772A:
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #1
_08067730:
	strb r0, [r1]
_08067732:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08067772
_0806773A:
	ldr r0, [r6, #0xc]
	adds r0, #1
	str r0, [r6, #0xc]
	cmp r0, #0xbe
	bne _08067772
	movs r0, #0
	str r0, [r6, #0xc]
	ldr r0, _08067750 @ =0x000003E7
	strh r0, [r6, #2]
	b _08067772
	.align 2, 0
_08067750: .4byte 0x000003E7
_08067754:
	movs r0, #0
	str r0, [r6, #0xc]
	ldr r0, _08067768 @ =0x000003E7
	strh r0, [r6, #2]
	movs r0, #2
	movs r1, #0x1e
	bl sub_0801457C
	b _08067772
	.align 2, 0
_08067768: .4byte 0x000003E7
_0806776C:
	movs r0, #0
	strh r0, [r6, #2]
	mov r8, r0
_08067772:
	ldr r0, [r6, #8]
	adds r0, #1
	str r0, [r6, #8]
	mov r0, r8
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08067788
sub_08067788: @ 0x08067788
	push {r4, r5, lr}
	ldr r0, _080677A4 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r4, [r0, #4]
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080677CC
	cmp r0, #1
	bgt _080677A8
	cmp r0, #0
	beq _080677AE
	b _08067842
	.align 2, 0
_080677A4: .4byte gUnk_03006AF4
_080677A8:
	cmp r0, #2
	beq _0806783C
	b _08067842
_080677AE:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x2d
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _08067834
_080677CC:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08067842
	movs r0, #0
	bl sub_08004840
	movs r0, #0x3f
	bl sub_08004A34
	movs r0, #0x3f
	bl sub_08004A4C
	movs r0, #0x3f
	bl sub_08004A60
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	bl sub_08014614
_08067834:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08067842
_0806783C:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_08067842:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806784C
sub_0806784C: @ 0x0806784C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	movs r7, #0
	movs r0, #0
	mov r8, r0
	movs r0, #3
	movs r1, #0xe
	bl sub_08001D3C
	adds r5, r0, #0
	adds r1, r4, #0
	bl sub_08001D78
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r2, _080678AC @ =gUnk_08BC9C90
	lsls r1, r6, #2
	adds r1, r1, r2
	ldr r1, [r1]
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	cmp r6, #0
	bne _080678B0
	movs r7, #8
	mov r8, r6
	ldr r0, [sp, #0x20]
	movs r1, #8
	movs r2, #8
	bl sub_08010D40
	movs r0, #0
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	b _080678F8
	.align 2, 0
_080678AC: .4byte gUnk_08BC9C90
_080678B0:
	cmp r6, #1
	bne _080678D6
	movs r7, #7
	movs r0, #0xb0
	lsls r0, r0, #2
	mov r8, r0
	ldr r0, [sp, #0x20]
	movs r1, #7
	movs r2, #1
	bl sub_08010D40
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	b _080678F8
_080678D6:
	cmp r6, #2
	bne _08067920
	cmp r4, #0x1c
	bne _08067900
	movs r7, #0
	ldr r0, [sp, #0x20]
	movs r1, #0
	movs r2, #7
	bl sub_08010D40
	movs r0, #2
	movs r1, #0x80
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #2
_080678F8:
	movs r1, #1
	bl sub_0800471C
	b _08067920
_08067900:
	movs r7, #8
	ldr r0, [sp, #0x20]
	movs r1, #8
	movs r2, #8
	bl sub_08010D40
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
_08067920:
	adds r0, r6, #0
	bl sub_08005B5C
	adds r1, r4, #1
	adds r0, r5, #0
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _08067968 @ =gUnk_08BC9CA8
	lsls r0, r6, #2
	adds r4, r0, r4
	ldr r2, [r4]
	ldr r1, _0806796C @ =gUnk_08BC9C9C
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08005CF4
	ldr r2, [r4]
	adds r3, r7, #0
	mov r0, r8
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08005F14
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067968: .4byte gUnk_08BC9CA8
_0806796C: .4byte gUnk_08BC9C9C

	thumb_func_start sub_08067970
sub_08067970: @ 0x08067970
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080679FC @ =gUnk_03006AF4
	ldr r0, [r0]
	mov r8, r0
	movs r0, #3
	movs r1, #0xe
	bl sub_08001D3C
	adds r6, r0, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r5, r0, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, _08067A00 @ =0x06010000
	mov sb, r0
	adds r0, r7, #0
	mov r1, sp
	mov r2, sb
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	subs r1, r4, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	adds r2, r0, #0
	adds r0, r7, #0
	adds r1, r7, #0
	bl sub_0800A630
	lsls r0, r7, #2
	adds r0, r0, r7
	lsls r0, r0, #3
	adds r0, #0xa0
	mov r1, r8
	adds r5, r1, r0
	adds r0, r5, #0
	bl sub_08009F0C
	cmp r4, #0x31
	beq _08067A04
	movs r3, #0xf0
	lsls r3, r3, #7
	adds r0, r5, #0
	movs r1, #1
	mov r2, sb
	bl sub_0800A6F0
	b _08067A16
	.align 2, 0
_080679FC: .4byte gUnk_03006AF4
_08067A00: .4byte 0x06010000
_08067A04:
	lsls r2, r7, #0xb
	ldr r0, _08067A64 @ =0x06010000
	adds r2, r2, r0
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r5, #0
	movs r1, #1
	bl sub_0800A6F0
_08067A16:
	lsls r4, r7, #2
	adds r4, r4, r7
	lsls r4, r4, #3
	adds r4, #0xa0
	add r4, r8
	adds r0, r4, #0
	adds r1, r7, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067A64: .4byte 0x06010000

	thumb_func_start sub_08067A68
sub_08067A68: @ 0x08067A68
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	movs r0, #0
	mov sb, r0
	movs r0, #3
	movs r1, #0xd
	bl sub_08001D3C
	adds r6, r0, #0
	mov r1, r8
	bl sub_08001D78
	ldr r4, _08067AD8 @ =gUnk_08BC9CC4
	lsls r5, r7, #2
	adds r4, r5, r4
	ldr r1, [r4]
	bl LZ77UnCompWram
	ldr r0, [r4]
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _08067ADC @ =gUnk_08BC9CB4
	adds r5, r5, r1
	ldr r1, [r5]
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	cmp r7, #0
	bne _08067AE0
	mov sb, r7
	ldr r0, [sp, #0x20]
	movs r1, #0
	movs r2, #8
	bl sub_08010D40
	movs r0, #0
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	b _08067B06
	.align 2, 0
_08067AD8: .4byte gUnk_08BC9CC4
_08067ADC: .4byte gUnk_08BC9CB4
_08067AE0:
	cmp r7, #1
	bne _08067B06
	movs r0, #8
	mov sb, r0
	ldr r0, [sp, #0x20]
	movs r1, #8
	movs r2, #8
	bl sub_08010D40
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
_08067B06:
	adds r0, r7, #0
	bl sub_08005B5C
	mov r1, r8
	adds r1, #1
	adds r0, r6, #0
	bl sub_08001D78
	ldr r6, _08067B58 @ =gUnk_08BC9CCC
	lsls r4, r7, #2
	adds r6, r4, r6
	ldr r1, [r6]
	bl LZ77UnCompWram
	ldr r1, [r6]
	ldr r5, _08067B5C @ =gUnk_08BC9CD4
	adds r5, r4, r5
	ldr r2, [r5]
	ldr r0, _08067B60 @ =gUnk_08BC9CBC
	adds r4, r4, r0
	ldr r3, [r4]
	adds r0, r7, #0
	bl sub_08005CF4
	ldr r1, [r6]
	ldr r2, [r5]
	mov r3, sb
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r7, #0
	bl sub_08005F14
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067B58: .4byte gUnk_08BC9CCC
_08067B5C: .4byte gUnk_08BC9CD4
_08067B60: .4byte gUnk_08BC9CBC

	thumb_func_start sub_08067B64
sub_08067B64: @ 0x08067B64
	push {r4, r5, r6, r7, lr}
	ldr r0, _08067BEC @ =gUnk_03006AF4
	ldr r5, [r0]
	ldr r0, _08067BF0 @ =0x00000206
	adds r6, r5, r0
	ldrh r0, [r6]
	lsls r0, r0, #0xc
	movs r1, #0x81
	lsls r1, r1, #2
	adds r7, r5, r1
	ldrh r1, [r7]
	bl __udivsi3
	adds r4, r0, #0
	movs r2, #0x82
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r3, #0x83
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r1, [r1]
	subs r0, r0, r1
	muls r0, r4, r0
	cmp r0, #0
	bge _08067B9C
	ldr r2, _08067BF4 @ =0x00000FFF
	adds r0, r0, r2
_08067B9C:
	asrs r0, r0, #0xc
	adds r2, r1, r0
	movs r3, #0x84
	lsls r3, r3, #2
	adds r1, r5, r3
	adds r3, #4
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r1, [r1]
	subs r0, r0, r1
	muls r0, r4, r0
	cmp r0, #0
	bge _08067BBA
	ldr r3, _08067BF4 @ =0x00000FFF
	adds r0, r0, r3
_08067BBA:
	asrs r4, r0, #0xc
	adds r4, r1, r4
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	bl sub_08004894
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_080048B0
	ldrh r0, [r6]
	ldrh r7, [r7]
	cmp r0, r7
	bne _08067C42
	ldr r0, _08067BF8 @ =0x00000202
	adds r1, r5, r0
	ldrh r2, [r1]
	cmp r2, #0
	bne _08067BFC
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r5, r1
	strh r2, [r0]
	b _08067C42
	.align 2, 0
_08067BEC: .4byte gUnk_03006AF4
_08067BF0: .4byte 0x00000206
_08067BF4: .4byte 0x00000FFF
_08067BF8: .4byte 0x00000202
_08067BFC:
	cmp r2, #1
	bne _08067C06
	movs r2, #0x80
	lsls r2, r2, #2
	b _08067C3C
_08067C06:
	cmp r2, #2
	bne _08067C1E
	movs r2, #0
	movs r0, #1
	strh r0, [r1]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #3
	strh r0, [r1]
	strh r2, [r6]
	b _08067C42
_08067C1E:
	cmp r2, #3
	bne _08067C42
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #2
	bne _08067C32
	strh r2, [r1]
	b _08067C3A
_08067C32:
	cmp r0, #3
	bne _08067C3A
	movs r0, #2
	strh r0, [r1]
_08067C3A:
	ldr r2, _08067C54 @ =0x00000206
_08067C3C:
	adds r1, r5, r2
	movs r0, #0
	strh r0, [r1]
_08067C42:
	ldr r3, _08067C54 @ =0x00000206
	adds r1, r5, r3
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067C54: .4byte 0x00000206

	thumb_func_start sub_08067C58
sub_08067C58: @ 0x08067C58
	push {r4, r5, r6, r7, lr}
	ldr r0, _08067CE0 @ =gUnk_03006AF4
	ldr r5, [r0]
	ldr r0, _08067CE4 @ =0x00000206
	adds r6, r5, r0
	ldrh r0, [r6]
	lsls r0, r0, #0xc
	movs r1, #0x81
	lsls r1, r1, #2
	adds r7, r5, r1
	ldrh r1, [r7]
	bl __udivsi3
	adds r4, r0, #0
	movs r2, #0x83
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r3, #0x82
	lsls r3, r3, #2
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r1, [r1]
	subs r0, r0, r1
	muls r0, r4, r0
	cmp r0, #0
	bge _08067C90
	ldr r2, _08067CE8 @ =0x00000FFF
	adds r0, r0, r2
_08067C90:
	asrs r0, r0, #0xc
	adds r2, r1, r0
	movs r3, #0x85
	lsls r3, r3, #2
	adds r1, r5, r3
	subs r3, #4
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r1, [r1]
	subs r0, r0, r1
	muls r0, r4, r0
	cmp r0, #0
	bge _08067CAE
	ldr r3, _08067CE8 @ =0x00000FFF
	adds r0, r0, r3
_08067CAE:
	asrs r4, r0, #0xc
	adds r4, r1, r4
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	bl sub_08004894
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_080048B0
	ldrh r0, [r6]
	ldrh r7, [r7]
	cmp r0, r7
	bne _08067D36
	ldr r0, _08067CEC @ =0x00000202
	adds r1, r5, r0
	ldrh r2, [r1]
	cmp r2, #0
	bne _08067CF0
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r5, r1
	strh r2, [r0]
	b _08067D36
	.align 2, 0
_08067CE0: .4byte gUnk_03006AF4
_08067CE4: .4byte 0x00000206
_08067CE8: .4byte 0x00000FFF
_08067CEC: .4byte 0x00000202
_08067CF0:
	cmp r2, #1
	bne _08067CFA
	movs r2, #0x80
	lsls r2, r2, #2
	b _08067D30
_08067CFA:
	cmp r2, #2
	bne _08067D12
	movs r2, #0
	movs r0, #1
	strh r0, [r1]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r5, r3
	movs r0, #3
	strh r0, [r1]
	strh r2, [r6]
	b _08067D36
_08067D12:
	cmp r2, #3
	bne _08067D36
	movs r0, #0x80
	lsls r0, r0, #2
	adds r1, r5, r0
	ldrh r0, [r1]
	cmp r0, #2
	bne _08067D26
	strh r2, [r1]
	b _08067D2E
_08067D26:
	cmp r0, #3
	bne _08067D2E
	movs r0, #2
	strh r0, [r1]
_08067D2E:
	ldr r2, _08067D48 @ =0x00000206
_08067D30:
	adds r1, r5, r2
	movs r0, #0
	strh r0, [r1]
_08067D36:
	ldr r3, _08067D48 @ =0x00000206
	adds r1, r5, r3
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08067D48: .4byte 0x00000206

	thumb_func_start sub_08067D4C
sub_08067D4C: @ 0x08067D4C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08067D68 @ =gUnk_03006AF4
	ldr r7, [r0]
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _08067D7C
	cmp r0, #1
	bgt _08067D6C
	cmp r0, #0
	beq _08067D76
	b _08067DF2
	.align 2, 0
_08067D68: .4byte gUnk_03006AF4
_08067D6C:
	cmp r0, #2
	beq _08067D86
	cmp r0, #3
	beq _08067D96
	b _08067DF2
_08067D76:
	ldrh r0, [r7]
	adds r0, #1
	b _08067DF0
_08067D7C:
	movs r0, #0
	strh r0, [r7, #0xa]
	ldrh r0, [r7]
	adds r0, #1
	b _08067DF0
_08067D86:
	bl sub_08063F70
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08067DF2
	ldrh r0, [r7]
	adds r0, #1
	b _08067DF0
_08067D96:
	ldrh r1, [r7, #0xc]
	ldr r0, _08067DE8 @ =0x0000FFFF
	cmp r1, r0
	bne _08067DEC
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	b _08067DF0
	.align 2, 0
_08067DE8: .4byte 0x0000FFFF
_08067DEC:
	strh r1, [r7, #0xa]
	movs r0, #2
_08067DF0:
	strh r0, [r7]
_08067DF2:
	movs r0, #0x87
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	ldr r0, _08067E18 @ =gUnk_03006AF4
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #2
	beq _08067E1C
	cmp r0, #2
	ble _08067E26
	cmp r0, #3
	beq _08067E22
	b _08067E26
	.align 2, 0
_08067E18: .4byte gUnk_03006AF4
_08067E1C:
	bl sub_08067B64
	b _08067E26
_08067E22:
	bl sub_08067C58
_08067E26:
	movs r0, #0
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x98
	adds r5, r7, #0
	adds r5, #0xa0
_08067E32:
	mov r1, r8
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067E4C
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r5, #0
	bl sub_0800A778
_08067E4C:
	adds r4, r5, #0
	adds r4, #0x28
	mov r0, r8
	adds r0, #1
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067E6C
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08067E6C:
	adds r4, r5, #0
	adds r4, #0x50
	mov r0, r8
	adds r0, #2
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067E8C
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08067E8C:
	adds r4, r5, #0
	adds r4, #0x78
	mov r0, r8
	adds r0, #3
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067EAC
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08067EAC:
	adds r5, #0xa0
	movs r0, #4
	add r8, r0
	mov r1, r8
	cmp r1, #7
	ble _08067E32
	movs r1, #0
	ldrsh r0, [r7, r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08067EC8
sub_08067EC8: @ 0x08067EC8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08067EE4 @ =gUnk_03006AF4
	ldr r7, [r0]
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _08067EF8
	cmp r0, #1
	bgt _08067EE8
	cmp r0, #0
	beq _08067EF2
	b _08067F6E
	.align 2, 0
_08067EE4: .4byte gUnk_03006AF4
_08067EE8:
	cmp r0, #2
	beq _08067F02
	cmp r0, #3
	beq _08067F12
	b _08067F6E
_08067EF2:
	ldrh r0, [r7]
	adds r0, #1
	b _08067F6C
_08067EF8:
	movs r0, #3
	strh r0, [r7, #0xa]
	ldrh r0, [r7]
	adds r0, #1
	b _08067F6C
_08067F02:
	bl sub_08063F70
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08067F6E
	ldrh r0, [r7]
	adds r0, #1
	b _08067F6C
_08067F12:
	ldrh r1, [r7, #0xc]
	ldr r0, _08067F64 @ =0x0000FFFF
	cmp r1, r0
	bne _08067F68
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	b _08067F6C
	.align 2, 0
_08067F64: .4byte 0x0000FFFF
_08067F68:
	strh r1, [r7, #0xa]
	movs r0, #2
_08067F6C:
	strh r0, [r7]
_08067F6E:
	ldr r0, _08067F88 @ =gUnk_03006AF4
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #2
	beq _08067F8C
	cmp r0, #2
	ble _08067F96
	cmp r0, #3
	beq _08067F92
	b _08067F96
	.align 2, 0
_08067F88: .4byte gUnk_03006AF4
_08067F8C:
	bl sub_08067B64
	b _08067F96
_08067F92:
	bl sub_08067C58
_08067F96:
	movs r0, #0
	mov r8, r0
	adds r6, r7, #0
	adds r6, #0x98
	adds r5, r7, #0
	adds r5, #0xa0
_08067FA2:
	mov r1, r8
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067FBC
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r5, #0
	bl sub_0800A778
_08067FBC:
	adds r4, r5, #0
	adds r4, #0x28
	mov r0, r8
	adds r0, #1
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067FDC
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08067FDC:
	adds r4, r5, #0
	adds r4, #0x50
	mov r0, r8
	adds r0, #2
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08067FFC
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08067FFC:
	adds r4, r5, #0
	adds r4, #0x78
	mov r0, r8
	adds r0, #3
	adds r0, r6, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0806801C
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0806801C:
	adds r5, #0xa0
	movs r0, #4
	add r8, r0
	mov r1, r8
	cmp r1, #7
	ble _08067FA2
	movs r1, #0
	ldrsh r0, [r7, r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08068038
sub_08068038: @ 0x08068038
	push {lr}
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08063E64
	movs r0, #0
	pop {r1}
	bx r1

	thumb_func_start sub_08068048
sub_08068048: @ 0x08068048
	push {lr}
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08063E64
	movs r0, #0
	pop {r1}
	bx r1

	thumb_func_start sub_08068058
sub_08068058: @ 0x08068058
	ldr r1, _08068060 @ =gUnk_03006AF4
	ldr r1, [r1]
	strh r0, [r1, #0xa]
	bx lr
	.align 2, 0
_08068060: .4byte gUnk_03006AF4

	thumb_func_start sub_08068064
sub_08068064: @ 0x08068064
	ldr r0, _0806806C @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r0, [r0, #4]
	bx lr
	.align 2, 0
_0806806C: .4byte gUnk_03006AF4

	thumb_func_start sub_08068070
sub_08068070: @ 0x08068070
	lsls r0, r0, #0x10
	ldr r1, _08068084 @ =gUnk_03006AF4
	ldr r1, [r1]
	lsrs r0, r0, #0xf
	adds r1, #0xc
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
	bx lr
	.align 2, 0
_08068084: .4byte gUnk_03006AF4

	thumb_func_start sub_08068088
sub_08068088: @ 0x08068088
	lsls r0, r0, #0x10
	ldr r2, _08068098 @ =gUnk_03006AF4
	ldr r2, [r2]
	lsrs r0, r0, #0xf
	adds r2, #0xc
	adds r2, r2, r0
	strh r1, [r2]
	bx lr
	.align 2, 0
_08068098: .4byte gUnk_03006AF4

	thumb_func_start sub_0806809C
sub_0806809C: @ 0x0806809C
	push {lr}
	sub sp, #4
	ldr r0, _080680E0 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r1, [r0, #4]
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080680E4 @ =0x01000002
	mov r0, sp
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080680E0: .4byte gUnk_03006AF4
_080680E4: .4byte 0x01000002

	thumb_func_start sub_080680E8
sub_080680E8: @ 0x080680E8
	push {r4, lr}
	sub sp, #4
	ldr r0, _08068138 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r4, [r0, #4]
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0806813C @ =0x01000014
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	ldr r0, _08068140 @ =0x000001CD
	bl sub_08012F60
	strh r0, [r4, #0x24]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08068138: .4byte gUnk_03006AF4
_0806813C: .4byte 0x01000014
_08068140: .4byte 0x000001CD

	thumb_func_start sub_08068144
sub_08068144: @ 0x08068144
	push {lr}
	ldr r0, _0806815C @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r1, [r0, #4]
	movs r2, #1
	movs r3, #2
	ldrsh r0, [r1, r3]
	cmp r0, #0
	beq _08068160
	cmp r0, #1
	beq _08068168
	b _0806816E
	.align 2, 0
_0806815C: .4byte gUnk_03006AF4
_08068160:
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _0806816E
_08068168:
	movs r0, #0
	strh r0, [r1, #2]
	movs r2, #0
_0806816E:
	adds r0, r2, #0
	pop {r1}
	bx r1

	thumb_func_start sub_08068174
sub_08068174: @ 0x08068174
	push {lr}
	sub sp, #4
	ldr r0, _08068194 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r1, [r0, #4]
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _08068198 @ =0x01000004
	mov r0, sp
	bl CpuSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_08068194: .4byte gUnk_03006AF4
_08068198: .4byte 0x01000004

	thumb_func_start sub_0806819C
sub_0806819C: @ 0x0806819C
	push {lr}
	ldr r0, _080681B8 @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r1, [r0, #4]
	movs r2, #1
	movs r3, #2
	ldrsh r0, [r1, r3]
	cmp r0, #1
	beq _080681C2
	cmp r0, #1
	bgt _080681BC
	cmp r0, #0
	beq _080681C2
	b _080681D0
	.align 2, 0
_080681B8: .4byte gUnk_03006AF4
_080681BC:
	cmp r0, #2
	beq _080681CA
	b _080681D0
_080681C2:
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _080681D0
_080681CA:
	movs r0, #0
	strh r0, [r1, #2]
	movs r2, #0
_080681D0:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080681D8
sub_080681D8: @ 0x080681D8
	push {r4, lr}
	sub sp, #4
	ldr r0, _0806822C @ =gUnk_03006AF4
	ldr r0, [r0]
	ldr r4, [r0, #4]
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08068230 @ =0x01000036
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	bl GetPlayerGender
	strb r0, [r4, #4]
	bl sub_08018914
	strb r0, [r4, #5]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806822C: .4byte gUnk_03006AF4
_08068230: .4byte 0x01000036

	thumb_func_start sub_08068234
sub_08068234: @ 0x08068234
	push {r4, r5, r6, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r6, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080682A4 @ =gUnk_03006AF4
	ldr r1, [r0]
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #3
	adds r0, #0xa0
	adds r5, r1, r0
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	subs r4, #0x14
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r4, #1
	bhi _08068294
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
_08068294:
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_080683B4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080682A4: .4byte gUnk_03006AF4

	thumb_func_start sub_080682A8
sub_080682A8: @ 0x080682A8
	push {r4, r5, r6, lr}
	ldr r3, _080682D8 @ =gUnk_03006AF4
	ldr r5, [r3]
	lsls r6, r0, #2
	adds r3, r5, #0
	adds r3, #0x18
	adds r3, r3, r6
	lsls r4, r1, #0xc
	str r4, [r3]
	adds r5, #0x28
	adds r5, r5, r6
	lsls r3, r2, #0xc
	str r3, [r5]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_08005E18
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080682D8: .4byte gUnk_03006AF4

	thumb_func_start sub_080682DC
sub_080682DC: @ 0x080682DC
	push {r4, r5, r6, lr}
	ldr r3, _08068328 @ =gUnk_03006AF4
	ldr r4, [r3]
	lsls r6, r0, #2
	adds r5, r4, #0
	adds r5, #0x18
	adds r5, r5, r6
	ldr r3, [r5]
	adds r3, r3, r1
	str r3, [r5]
	adds r4, #0x28
	adds r4, r4, r6
	ldr r1, [r4]
	adds r1, r1, r2
	str r1, [r4]
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, [r5]
	cmp r0, #0
	bge _08068308
	ldr r2, _0806832C @ =0x00000FFF
	adds r0, r0, r2
_08068308:
	lsls r0, r0, #4
	asrs r5, r0, #0x10
	cmp r1, #0
	bge _08068314
	ldr r0, _0806832C @ =0x00000FFF
	adds r1, r1, r0
_08068314:
	lsls r2, r1, #4
	asrs r2, r2, #0x10
	adds r0, r3, #0
	adds r1, r5, #0
	bl sub_08005E18
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08068328: .4byte gUnk_03006AF4
_0806832C: .4byte 0x00000FFF

	thumb_func_start sub_08068330
sub_08068330: @ 0x08068330
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	mov sb, r2
	adds r0, r3, #0
	ldr r5, [sp, #0x1c]
	ldr r7, [sp, #0x20]
	ldr r2, _080683AC @ =gUnk_03006AF4
	ldr r4, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r7, #0
	bl __divsi3
	mov r8, r0
	mov r0, sb
	subs r5, r5, r0
	lsls r5, r5, #0xc
	adds r0, r5, #0
	adds r1, r7, #0
	bl __divsi3
	lsls r3, r6, #2
	adds r2, r4, #0
	adds r2, #0x18
	adds r2, r2, r3
	ldr r1, [r2]
	add r1, r8
	str r1, [r2]
	adds r4, #0x28
	adds r4, r4, r3
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, [r2]
	cmp r0, #0
	bge _08068386
	ldr r2, _080683B0 @ =0x00000FFF
	adds r0, r0, r2
_08068386:
	lsls r0, r0, #4
	asrs r3, r0, #0x10
	cmp r1, #0
	bge _08068392
	ldr r0, _080683B0 @ =0x00000FFF
	adds r1, r1, r0
_08068392:
	lsls r2, r1, #4
	asrs r2, r2, #0x10
	adds r0, r6, #0
	adds r1, r3, #0
	bl sub_08005E18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080683AC: .4byte gUnk_03006AF4
_080683B0: .4byte 0x00000FFF

	thumb_func_start sub_080683B4
sub_080683B4: @ 0x080683B4
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _080683EC @ =gUnk_03006AF4
	ldr r0, [r0]
	lsls r4, r6, #2
	adds r3, r0, #0
	adds r3, #0x58
	adds r3, r3, r4
	lsls r5, r1, #0xc
	str r5, [r3]
	adds r3, r0, #0
	adds r3, #0x78
	adds r3, r3, r4
	lsls r5, r2, #0xc
	str r5, [r3]
	adds r4, r4, r6
	lsls r4, r4, #3
	adds r4, #0xa0
	adds r0, r0, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0800A678
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080683EC: .4byte gUnk_03006AF4

	thumb_func_start sub_080683F0
sub_080683F0: @ 0x080683F0
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	mov sl, r0
	mov sb, r2
	adds r0, r3, #0
	ldr r4, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r2, _08068478 @ =gUnk_03006AF4
	ldr r5, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r6, #0
	bl __divsi3
	mov r8, r0
	mov r0, sb
	subs r4, r4, r0
	lsls r4, r4, #0xc
	adds r0, r4, #0
	adds r1, r6, #0
	bl __divsi3
	mov r1, sl
	lsls r2, r1, #2
	adds r4, r5, #0
	adds r4, #0x58
	adds r4, r4, r2
	ldr r1, [r4]
	add r1, r8
	str r1, [r4]
	adds r1, r5, #0
	adds r1, #0x78
	adds r1, r1, r2
	ldr r3, [r1]
	adds r3, r3, r0
	str r3, [r1]
	add r2, sl
	lsls r2, r2, #3
	adds r2, #0xa0
	adds r5, r5, r2
	ldr r0, [r4]
	cmp r0, #0
	bge _08068450
	ldr r1, _0806847C @ =0x00000FFF
	adds r0, r0, r1
_08068450:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	adds r2, r3, #0
	cmp r2, #0
	bge _0806845E
	ldr r0, _0806847C @ =0x00000FFF
	adds r2, r2, r0
_0806845E:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	adds r0, r5, #0
	bl sub_0800A678
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08068478: .4byte gUnk_03006AF4
_0806847C: .4byte 0x00000FFF

	thumb_func_start sub_08068480
sub_08068480: @ 0x08068480
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r7, [sp, #0x14]
	ldr r1, _080684DC @ =gUnk_03006AF4
	ldr r1, [r1]
	mov ip, r1
	lsls r3, r0, #2
	movs r1, #0xf0
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r4, #0xc
	str r2, [r1]
	movs r1, #0xf4
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r6, #0xc
	str r2, [r1]
	movs r1, #0xf8
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r5, #0xc
	str r2, [r1]
	movs r1, #0xfc
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r7, #0xc
	str r2, [r1]
	cmp r0, #0
	bne _080684E0
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	bl sub_0800493C
	b _080684F4
	.align 2, 0
_080684DC: .4byte gUnk_03006AF4
_080684E0:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	bl sub_080049B8
_080684F4:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080684FC
sub_080684FC: @ 0x080684FC
	push {r4, lr}
	adds r4, r1, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0800485C
	adds r0, r4, #0
	bl sub_08004878
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08068518
sub_08068518: @ 0x08068518
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r4, _08068558 @ =gUnk_03006AF4
	ldr r4, [r4]
	mov ip, r4
	movs r4, #0x82
	lsls r4, r4, #2
	add r4, ip
	str r0, [r4]
	movs r0, #0x83
	lsls r0, r0, #2
	add r0, ip
	str r1, [r0]
	movs r0, #0x84
	lsls r0, r0, #2
	add r0, ip
	str r2, [r0]
	movs r0, #0x85
	lsls r0, r0, #2
	add r0, ip
	str r3, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08068558: .4byte gUnk_03006AF4

	thumb_func_start sub_0806855C
sub_0806855C: @ 0x0806855C
	ldr r0, _0806856C @ =gUnk_03006AF4
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_0806856C: .4byte gUnk_03006AF4

	thumb_func_start sub_08068570
sub_08068570: @ 0x08068570
	push {r4, r5, lr}
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _080685A0 @ =gUnk_03006AF4
	ldr r4, [r2]
	ldr r3, _080685A4 @ =0x00000202
	adds r2, r4, r3
	movs r3, #0
	strh r1, [r2]
	movs r5, #0x81
	lsls r5, r5, #2
	adds r2, r4, r5
	strh r0, [r2]
	ldr r2, _080685A8 @ =0x00000206
	adds r0, r4, r2
	strh r3, [r0]
	cmp r1, #1
	bne _080685AC
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r4, r3
	movs r0, #3
	b _080685B4
	.align 2, 0
_080685A0: .4byte gUnk_03006AF4
_080685A4: .4byte 0x00000202
_080685A8: .4byte 0x00000206
_080685AC:
	movs r5, #0x80
	lsls r5, r5, #2
	adds r1, r4, r5
	movs r0, #2
_080685B4:
	strh r0, [r1]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080685BC
sub_080685BC: @ 0x080685BC
	push {lr}
	ldr r0, _080685D8 @ =gUnk_03006AF4
	ldr r0, [r0]
	movs r1, #0x80
	lsls r1, r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #2
	beq _080685DC
	cmp r0, #2
	ble _080685E6
	cmp r0, #3
	beq _080685E2
	b _080685E6
	.align 2, 0
_080685D8: .4byte gUnk_03006AF4
_080685DC:
	bl sub_08067B64
	b _080685E6
_080685E2:
	bl sub_08067C58
_080685E6:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080685EC
sub_080685EC: @ 0x080685EC
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #4
	mov sb, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, _080686FC @ =gUnk_03006AF8
	mov r8, r0
	mov r1, sb
	str r1, [r0]
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08068700 @ =0x010000A6
	mov r0, sp
	mov r1, sb
	bl CpuSet
	mov r1, r8
	ldr r0, [r1]
	strh r4, [r0, #4]
	strh r5, [r0, #6]
	strh r6, [r0, #8]
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080686FC: .4byte gUnk_03006AF8
_08068700: .4byte 0x010000A6

	thumb_func_start sub_08068704
sub_08068704: @ 0x08068704
	push {r4, r5, r6, lr}
	ldr r0, _08068720 @ =gUnk_03006AF8
	ldr r5, [r0]
	movs r4, #1
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08068730
	cmp r0, #1
	bgt _08068724
	cmp r0, #0
	beq _0806872A
	b _08068738
	.align 2, 0
_08068720: .4byte gUnk_03006AF8
_08068724:
	cmp r0, #0xff
	beq _08068736
	b _08068738
_0806872A:
	bl sub_080687D0
	b _08068738
_08068730:
	bl sub_08068C28
	b _08068738
_08068736:
	movs r4, #0
_08068738:
	adds r0, r5, #0
	adds r0, #0x50
	lsls r6, r4, #0x10
	adds r4, r5, #0
	adds r4, #0x54
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08068758
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08068758:
	adds r4, r5, #0
	adds r4, #0x7c
	adds r0, r5, #0
	adds r0, #0x51
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08068776
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08068776:
	adds r4, r5, #0
	adds r4, #0xa4
	adds r0, r5, #0
	adds r0, #0x52
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08068794
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08068794:
	adds r4, r5, #0
	adds r4, #0xcc
	adds r0, r5, #0
	adds r0, #0x53
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080687B2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_080687B2:
	movs r0, #1
	movs r1, #0
	bl sub_080048CC
	movs r0, #0x3f
	bl sub_08004A34
	movs r0, #0
	bl sub_08004A60
	asrs r0, r6, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080687D0
sub_080687D0: @ 0x080687D0
	push {r4, r5, lr}
	ldr r0, _080687EC @ =gUnk_03006AF8
	ldr r4, [r0]
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080687FC
	cmp r0, #1
	bgt _080687F0
	cmp r0, #0
	beq _080687F6
	b _08068820
	.align 2, 0
_080687EC: .4byte gUnk_03006AF8
_080687F0:
	cmp r0, #2
	beq _0806880E
	b _08068820
_080687F6:
	bl sub_08068828
	b _08068800
_080687FC:
	bl sub_08068924
_08068800:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08068820
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08068820
_0806880E:
	bl sub_08068B98
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08068820
	movs r0, #0xff
	strh r0, [r4, #4]
	movs r5, #0
	strh r5, [r4]
_08068820:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08068828
sub_08068828: @ 0x08068828
	push {r4, r5, lr}
	ldr r0, _08068840 @ =gUnk_03006AF8
	ldr r4, [r0]
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08068844
	cmp r0, #1
	beq _08068916
	b _0806891C
	.align 2, 0
_08068840: .4byte gUnk_03006AF8
_08068844:
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xc
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0x13
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	bl sub_08004554
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0806891C
_08068916:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_0806891C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08068924
sub_08068924: @ 0x08068924
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _08068948 @ =gUnk_03006AF8
	ldr r5, [r0]
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x28
	bls _0806893E
	b _08068B8A
_0806893E:
	lsls r0, r0, #2
	ldr r1, _0806894C @ =_08068950
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08068948: .4byte gUnk_03006AF8
_0806894C: .4byte _08068950
_08068950: @ jump table
	.4byte _080689F4 @ case 0
	.4byte _08068A2C @ case 1
	.4byte _08068B8A @ case 2
	.4byte _08068B8A @ case 3
	.4byte _08068B8A @ case 4
	.4byte _08068B8A @ case 5
	.4byte _08068B8A @ case 6
	.4byte _08068B8A @ case 7
	.4byte _08068B8A @ case 8
	.4byte _08068B8A @ case 9
	.4byte _08068AAC @ case 10
	.4byte _08068B8A @ case 11
	.4byte _08068B8A @ case 12
	.4byte _08068B8A @ case 13
	.4byte _08068B8A @ case 14
	.4byte _08068B8A @ case 15
	.4byte _08068B8A @ case 16
	.4byte _08068B8A @ case 17
	.4byte _08068B8A @ case 18
	.4byte _08068B8A @ case 19
	.4byte _08068ACC @ case 20
	.4byte _08068B8A @ case 21
	.4byte _08068B8A @ case 22
	.4byte _08068B8A @ case 23
	.4byte _08068B8A @ case 24
	.4byte _08068B8A @ case 25
	.4byte _08068B8A @ case 26
	.4byte _08068B8A @ case 27
	.4byte _08068B8A @ case 28
	.4byte _08068B8A @ case 29
	.4byte _08068B44 @ case 30
	.4byte _08068B8A @ case 31
	.4byte _08068B8A @ case 32
	.4byte _08068B8A @ case 33
	.4byte _08068B8A @ case 34
	.4byte _08068B8A @ case 35
	.4byte _08068B8A @ case 36
	.4byte _08068B8A @ case 37
	.4byte _08068B8A @ case 38
	.4byte _08068B8A @ case 39
	.4byte _08068B74 @ case 40
_080689F4:
	movs r1, #6
	ldrsh r0, [r5, r1]
	lsls r0, r0, #2
	adds r0, #3
	strh r0, [r5, #0xa]
	movs r0, #8
	ldrsh r1, [r5, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, #0xc
	strh r0, [r5, #0xc]
	adds r0, r1, #0
	cmp r0, #1
	bgt _08068A14
	movs r0, #2
	b _08068A22
_08068A14:
	cmp r0, #3
	bgt _08068A1C
	movs r0, #1
	b _08068A22
_08068A1C:
	cmp r0, #8
	bgt _08068A24
	movs r0, #0
_08068A22:
	strh r0, [r5, #0xe]
_08068A24:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08068B8A
_08068A2C:
	movs r0, #0
	bl sub_08069190
	ldrh r0, [r5, #0xa]
	ldrh r1, [r5, #0xe]
	bl sub_08069230
	ldrh r1, [r5, #0xc]
	movs r0, #0
	bl sub_08069334
	movs r0, #0
	movs r1, #0
	movs r2, #0x50
	bl sub_08069688
	movs r0, #1
	movs r1, #0
	movs r2, #0x50
	bl sub_08069688
	movs r2, #0x50
	rsbs r2, r2, #0
	movs r0, #0
	movs r1, #0
	bl sub_08069740
	adds r1, r5, #0
	adds r1, #0x50
	movs r0, #1
	strb r0, [r1]
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	bl sub_0800480C
	movs r0, #0x80
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0x20
	movs r3, #0xf0
	bl sub_0806980C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	movs r0, #0xa
	strh r0, [r5, #2]
	b _08068B8A
_08068AAC:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08068B8A
	movs r0, #1
	bl sub_08011104
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r5, r0
	movs r0, #0
	str r0, [r1]
	b _08068B66
_08068ACC:
	movs r1, #0x8a
	lsls r1, r1, #1
	adds r7, r5, r1
	ldr r0, [r7]
	movs r6, #0x96
	lsls r6, r6, #1
	cmp r0, r6
	bgt _08068B12
	movs r0, #0x28
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0x50
	movs r3, #0
	bl sub_080696BC
	movs r4, #0
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0x50
	movs r3, #0
	bl sub_080696BC
	movs r2, #0x50
	rsbs r2, r2, #0
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_0806977C
_08068B12:
	ldr r1, [r7]
	ldr r0, _08068B40 @ =0x0000012B
	cmp r1, r0
	ble _08068B2E
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0x78
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0x20
	movs r2, #0x80
	movs r3, #0
	bl sub_08069524
_08068B2E:
	ldr r0, [r7]
	adds r0, #1
	str r0, [r7]
	movs r1, #0xd2
	lsls r1, r1, #1
	cmp r0, r1
	ble _08068B8A
	b _08068B66
	.align 2, 0
_08068B40: .4byte 0x0000012B
_08068B44:
	ldr r0, _08068B70 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0xb
	ands r0, r1
	cmp r0, #0
	beq _08068B8A
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
_08068B66:
	ldrh r0, [r5, #2]
	adds r0, #0xa
	strh r0, [r5, #2]
	b _08068B8A
	.align 2, 0
_08068B70: .4byte gKeyNewPress
_08068B74:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08068B8A
	movs r0, #0
	mov r8, r0
	mov r1, r8
	strh r1, [r5, #2]
_08068B8A:
	mov r0, r8
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08068B98
sub_08068B98: @ 0x08068B98
	push {r4, r5, lr}
	ldr r0, _08068C24 @ =gUnk_03006AF8
	ldr r5, [r0]
	movs r1, #1
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _08068C1C
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
_08068C00:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_08011104
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xa
	ble _08068C00
	movs r0, #0
	strh r0, [r5, #2]
	movs r1, #0
_08068C1C:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08068C24: .4byte gUnk_03006AF8

	thumb_func_start sub_08068C28
sub_08068C28: @ 0x08068C28
	push {r4, r5, lr}
	ldr r0, _08068C44 @ =gUnk_03006AF8
	ldr r4, [r0]
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08068C54
	cmp r0, #1
	bgt _08068C48
	cmp r0, #0
	beq _08068C4E
	b _08068C78
	.align 2, 0
_08068C44: .4byte gUnk_03006AF8
_08068C48:
	cmp r0, #2
	beq _08068C66
	b _08068C78
_08068C4E:
	bl sub_08068C80
	b _08068C58
_08068C54:
	bl sub_08068D84
_08068C58:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08068C78
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08068C78
_08068C66:
	bl sub_08069100
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08068C78
	movs r0, #0xff
	strh r0, [r4, #4]
	movs r5, #0
	strh r5, [r4]
_08068C78:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08068C80
sub_08068C80: @ 0x08068C80
	push {r4, r5, lr}
	ldr r0, _08068C98 @ =gUnk_03006AF8
	ldr r4, [r0]
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08068C9C
	cmp r0, #1
	beq _08068D74
	b _08068D7A
	.align 2, 0
_08068C98: .4byte gUnk_03006AF8
_08068C9C:
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08068D70 @ =0x00007FFF
	movs r0, #1
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xc
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0x13
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	bl sub_08004554
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08068D7A
	.align 2, 0
_08068D70: .4byte 0x00007FFF
_08068D74:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_08068D7A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08068D84
sub_08068D84: @ 0x08068D84
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _08068DB4 @ =gUnk_03006AF8
	ldr r4, [r0]
	movs r6, #1
	movs r0, #2
	ldrsh r1, [r4, r0]
	cmp r1, #0x37
	bne _08068D98
	b _08068F7C
_08068D98:
	cmp r1, #0x37
	bgt _08068DDE
	cmp r1, #0x14
	bne _08068DA2
	b _08068EA8
_08068DA2:
	cmp r1, #0x14
	bgt _08068DBE
	cmp r1, #1
	beq _08068E46
	cmp r1, #1
	bgt _08068DB8
	cmp r1, #0
	beq _08068E2C
	b _080690F6
	.align 2, 0
_08068DB4: .4byte gUnk_03006AF8
_08068DB8:
	cmp r1, #0xa
	beq _08068E90
	b _080690F6
_08068DBE:
	cmp r1, #0x1e
	bne _08068DC4
	b _08068F04
_08068DC4:
	cmp r1, #0x1e
	bgt _08068DD0
	cmp r1, #0x19
	bne _08068DCE
	b _08068EDC
_08068DCE:
	b _080690F6
_08068DD0:
	cmp r1, #0x28
	bne _08068DD6
	b _08069090
_08068DD6:
	cmp r1, #0x32
	bne _08068DDC
	b _08068F48
_08068DDC:
	b _080690F6
_08068DDE:
	cmp r1, #0x55
	bne _08068DE4
	b _08069034
_08068DE4:
	cmp r1, #0x55
	bgt _08068E08
	cmp r1, #0x3d
	bne _08068DEE
	b _08068FC4
_08068DEE:
	cmp r1, #0x3d
	bgt _08068DFA
	cmp r1, #0x3c
	bne _08068DF8
	b _08068FA4
_08068DF8:
	b _080690F6
_08068DFA:
	cmp r1, #0x46
	bne _08068E00
	b _08069090
_08068E00:
	cmp r1, #0x50
	bne _08068E06
	b _0806900C
_08068E06:
	b _080690F6
_08068E08:
	cmp r1, #0x64
	bne _08068E0E
	b _08069090
_08068E0E:
	cmp r1, #0x64
	bgt _08068E1A
	cmp r1, #0x5a
	bne _08068E18
	b _0806904A
_08068E18:
	b _080690F6
_08068E1A:
	cmp r1, #0x6e
	bne _08068E20
	b _080690B6
_08068E20:
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	bne _08068E2A
	b _080690E4
_08068E2A:
	b _080690F6
_08068E2C:
	movs r0, #6
	ldrsh r1, [r4, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, #0x80
	strh r0, [r4, #0xa]
	movs r0, #8
	ldrsh r1, [r4, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, #0x86
	strh r0, [r4, #0xc]
	b _08068FBC
_08068E46:
	ldrh r0, [r4, #0xa]
	bl sub_08069190
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_0806980C
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08068E8C @ =0x00007FFF
	movs r0, #1
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	movs r0, #0xa
	strh r0, [r4, #2]
	b _080690F6
	.align 2, 0
_08068E8C: .4byte 0x00007FFF
_08068E90:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08068EA0
	b _080690F6
_08068EA0:
	movs r0, #1
	bl sub_08011104
	b _080690AE
_08068EA8:
	movs r1, #0x8a
	lsls r1, r1, #1
	adds r5, r4, r1
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	cmp r0, #0x3b
	bgt _08068EBA
	b _080690F6
_08068EBA:
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08068ED8 @ =0x00007FFF
	movs r0, #1
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	str r0, [r5]
	b _08069042
	.align 2, 0
_08068ED8: .4byte 0x00007FFF
_08068EDC:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08068EEC
	b _080690F6
_08068EEC:
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x3b
	bgt _08068EFE
	b _080690F6
_08068EFE:
	movs r0, #0
	str r0, [r1]
	b _08069042
_08068F04:
	ldrh r0, [r4, #0xc]
	bl sub_08069190
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_0806980C
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08068F44 @ =0x00007FFF
	movs r0, #1
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080690AE
	.align 2, 0
_08068F44: .4byte 0x00007FFF
_08068F48:
	movs r1, #0x8a
	lsls r1, r1, #1
	adds r5, r4, r1
	ldr r0, [r5]
	adds r0, #1
	str r0, [r5]
	cmp r0, #0x3b
	bgt _08068F5A
	b _080690F6
_08068F5A:
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08068F78 @ =0x00007FFF
	movs r0, #1
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	str r0, [r5]
	b _08069042
	.align 2, 0
_08068F78: .4byte 0x00007FFF
_08068F7C:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08068F8C
	b _080690F6
_08068F8C:
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x3b
	bgt _08068F9E
	b _080690F6
_08068F9E:
	movs r0, #0
	str r0, [r1]
	b _08069042
_08068FA4:
	movs r1, #8
	ldrsh r0, [r4, r1]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	movs r0, #6
	ldrsh r2, [r4, r0]
	lsls r0, r2, #2
	adds r0, r0, r2
	adds r0, #0x26
	adds r1, r1, r0
	strh r1, [r4, #0xc]
_08068FBC:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080690F6
_08068FC4:
	ldrh r0, [r4, #0xc]
	bl sub_08069190
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_0806980C
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08069008 @ =0x00007FFF
	movs r0, #1
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	movs r0, #0x46
	strh r0, [r4, #2]
	b _080690F6
	.align 2, 0
_08069008: .4byte 0x00007FFF
_0806900C:
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x3c
	bne _080690F6
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	b _08069042
_08069034:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080690F6
_08069042:
	ldrh r0, [r4, #2]
	adds r0, #5
	strh r0, [r4, #2]
	b _080690F6
_0806904A:
	ldrh r0, [r4, #0xc]
	adds r0, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08069190
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08069688
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xa0
	str r0, [sp]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_0806980C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	b _080690AE
_08069090:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080690F6
	movs r0, #1
	bl sub_08011104
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #0
	str r0, [r1]
_080690AE:
	ldrh r0, [r4, #2]
	adds r0, #0xa
	strh r0, [r4, #2]
	b _080690F6
_080690B6:
	movs r0, #0x8a
	lsls r0, r0, #1
	adds r1, r4, r0
	ldr r0, [r1]
	adds r0, #1
	str r0, [r1]
	cmp r0, #0x3c
	bne _080690F6
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
	movs r0, #0x96
	lsls r0, r0, #1
	strh r0, [r4, #2]
	b _080690F6
_080690E4:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080690F6
	movs r6, #0
	strh r6, [r4, #2]
_080690F6:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08069100
sub_08069100: @ 0x08069100
	push {r4, r5, lr}
	ldr r0, _0806918C @ =gUnk_03006AF8
	ldr r5, [r0]
	movs r1, #1
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _08069184
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
_08069168:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_08011104
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xa
	ble _08069168
	movs r0, #0
	strh r0, [r5, #2]
	movs r1, #0
_08069184:
	adds r0, r1, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0806918C: .4byte gUnk_03006AF8

	thumb_func_start sub_08069190
sub_08069190: @ 0x08069190
	push {r4, r5, r6, lr}
	sub sp, #0x28
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	movs r1, #0x1e
	bl sub_08001D3C
	adds r6, r0, #0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r5, _08069220 @ =gUnk_02011000
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0
	bl sub_08010D40
	adds r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r4, _08069224 @ =gUnk_0200E000
	adds r1, r4, #0
	bl LZ77UnCompWram
	movs r0, #0
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	ldr r5, _08069228 @ =gUnk_0200EC00
	ldr r3, _0806922C @ =0x06006000
	movs r0, #0
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_08005CF4
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_08005F14
	add sp, #0x28
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069220: .4byte gUnk_02011000
_08069224: .4byte gUnk_0200E000
_08069228: .4byte gUnk_0200EC00
_0806922C: .4byte 0x06006000

	thumb_func_start sub_08069230
sub_08069230: @ 0x08069230
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	mov sb, r8
	movs r0, #3
	movs r1, #0x1e
	bl sub_08001D3C
	adds r6, r0, #0
	adds r1, r7, #0
	bl sub_08001D78
	ldr r4, _080692F4 @ =gUnk_02018800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080692F8 @ =0x06008000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #6
	bl sub_08010D40
	adds r1, r7, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	ldr r4, _080692FC @ =gUnk_0200F800
	adds r1, r4, #0
	bl LZ77UnCompWram
	movs r0, #1
	bl sub_08006210
	movs r0, #1
	bl sub_08005B5C
	ldr r5, _08069300 @ =gUnk_02010400
	ldr r3, _08069304 @ =0x06009800
	movs r0, #1
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_08005CF4
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #1
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #6
	bl sub_08005F14
	adds r1, r7, #2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	ldr r4, _08069308 @ =gUnk_0201A800
	adds r1, r4, #0
	bl LZ77UnCompWram
	movs r0, #1
	adds r1, r4, #0
	bl sub_08005D6C
	cmp r7, #3
	bne _0806930C
	movs r0, #9
	str r0, [sp]
	str r7, [sp, #4]
	movs r0, #0
	movs r1, #1
	mov r2, r8
	movs r3, #8
	bl sub_08005C14
	b _08069324
	.align 2, 0
_080692F4: .4byte gUnk_02018800
_080692F8: .4byte 0x06008000
_080692FC: .4byte gUnk_0200F800
_08069300: .4byte gUnk_02010400
_08069304: .4byte 0x06009800
_08069308: .4byte gUnk_0201A800
_0806930C:
	cmp r7, #7
	bne _08069324
	movs r0, #8
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #1
	mov r2, sb
	movs r3, #8
	bl sub_08005C14
_08069324:
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08069334
sub_08069334: @ 0x08069334
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r6, r0, #0
	adds r4, r1, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _0806940C @ =gUnk_03006AF8
	ldr r0, [r0]
	mov r8, r0
	movs r0, #3
	movs r1, #0x1e
	bl sub_08001D3C
	mov sl, r0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r5, _08069410 @ =gUnk_0201C800
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	mov r1, sp
	bl sub_08001CBC
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	ldr r7, _08069414 @ =0x06010000
	mov r1, sp
	adds r2, r7, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	subs r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, sl
	adds r1, r4, #0
	bl sub_08001D78
	ldr r4, _08069418 @ =gUnk_02024000
	adds r1, r4, #0
	bl LZ77UnCompWram
	mov r0, sb
	mov r1, sb
	adds r2, r4, #0
	bl sub_0800A630
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #3
	adds r0, #0x54
	add r8, r0
	mov r0, r8
	bl sub_08009F0C
	movs r3, #0xf0
	lsls r3, r3, #7
	mov r0, r8
	movs r1, #1
	adds r2, r7, #0
	bl sub_0800A6F0
	mov r0, r8
	mov r1, sb
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	mov r0, r8
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	mov r0, r8
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	mov r0, r8
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806940C: .4byte gUnk_03006AF8
_08069410: .4byte gUnk_0201C800
_08069414: .4byte 0x06010000
_08069418: .4byte gUnk_02024000

	thumb_func_start sub_0806941C
sub_0806941C: @ 0x0806941C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov sb, r0
	mov r8, r2
	adds r0, r3, #0
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r2, _080694BC @ =gUnk_03006AF8
	ldr r7, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r5, #0
	bl __divsi3
	adds r6, r0, #0
	mov r0, r8
	subs r4, r4, r0
	lsls r4, r4, #0xc
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	mov r1, sb
	lsls r4, r1, #2
	adds r5, r7, #0
	adds r5, #0xf4
	adds r3, r5, r4
	ldr r1, [r3]
	adds r1, r1, r6
	str r1, [r3]
	adds r6, r7, #0
	adds r6, #0xfc
	adds r2, r6, r4
	ldr r1, [r2]
	adds r1, r1, r0
	str r1, [r2]
	mov r2, sb
	cmp r2, #0
	bne _080694C4
	ldr r0, [r5]
	cmp r0, #0
	bge _08069478
	ldr r3, _080694C0 @ =0x00000FFF
	adds r0, r0, r3
_08069478:
	lsls r0, r0, #4
	asrs r4, r0, #0x10
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r7, r1
	ldr r0, [r0]
	cmp r0, #0
	bge _0806948C
	ldr r2, _080694C0 @ =0x00000FFF
	adds r0, r0, r2
_0806948C:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	ldr r0, [r6]
	cmp r0, #0
	bge _0806949A
	ldr r3, _080694C0 @ =0x00000FFF
	adds r0, r0, r3
_0806949A:
	lsls r0, r0, #4
	asrs r2, r0, #0x10
	movs r3, #0x86
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #0
	bge _080694AE
	ldr r3, _080694C0 @ =0x00000FFF
	adds r0, r0, r3
_080694AE:
	lsls r3, r0, #4
	asrs r3, r3, #0x10
	adds r0, r4, #0
	bl sub_0800493C
	b _08069514
	.align 2, 0
_080694BC: .4byte gUnk_03006AF8
_080694C0: .4byte 0x00000FFF
_080694C4:
	ldr r0, [r3]
	cmp r0, #0
	bge _080694CE
	ldr r2, _08069520 @ =0x00000FFF
	adds r0, r0, r2
_080694CE:
	lsls r0, r0, #4
	asrs r6, r0, #0x10
	movs r3, #0x82
	lsls r3, r3, #1
	adds r0, r7, r3
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	bge _080694E4
	ldr r2, _08069520 @ =0x00000FFF
	adds r0, r0, r2
_080694E4:
	lsls r0, r0, #4
	asrs r5, r0, #0x10
	adds r0, r1, #0
	cmp r0, #0
	bge _080694F2
	ldr r3, _08069520 @ =0x00000FFF
	adds r0, r0, r3
_080694F2:
	lsls r0, r0, #4
	asrs r2, r0, #0x10
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r7, r1
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	bge _08069508
	ldr r3, _08069520 @ =0x00000FFF
	adds r0, r0, r3
_08069508:
	lsls r3, r0, #4
	asrs r3, r3, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_080049B8
_08069514:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069520: .4byte 0x00000FFF

	thumb_func_start sub_08069524
sub_08069524: @ 0x08069524
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	mov sb, r0
	mov r8, r2
	adds r0, r3, #0
	ldr r4, [sp, #0x1c]
	ldr r5, [sp, #0x20]
	ldr r2, _080695D0 @ =gUnk_03006AF8
	ldr r7, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r5, #0
	bl __divsi3
	adds r6, r0, #0
	mov r0, r8
	subs r4, r4, r0
	lsls r4, r4, #0xc
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	mov r1, sb
	lsls r5, r1, #2
	movs r2, #0x82
	lsls r2, r2, #1
	adds r1, r7, r2
	adds r4, r1, r5
	ldr r1, [r4]
	adds r1, r1, r6
	str r1, [r4]
	movs r3, #0x86
	lsls r3, r3, #1
	adds r1, r7, r3
	adds r1, r1, r5
	ldr r2, [r1]
	adds r2, r2, r0
	str r2, [r1]
	mov r0, sb
	cmp r0, #0
	bne _080695D8
	adds r0, r7, #0
	adds r0, #0xf4
	ldr r0, [r0]
	cmp r0, #0
	bge _08069588
	ldr r1, _080695D4 @ =0x00000FFF
	adds r0, r0, r1
_08069588:
	lsls r0, r0, #4
	asrs r4, r0, #0x10
	movs r2, #0x82
	lsls r2, r2, #1
	adds r0, r7, r2
	ldr r0, [r0]
	cmp r0, #0
	bge _0806959C
	ldr r3, _080695D4 @ =0x00000FFF
	adds r0, r0, r3
_0806959C:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	adds r0, r7, #0
	adds r0, #0xfc
	ldr r0, [r0]
	cmp r0, #0
	bge _080695AE
	ldr r2, _080695D4 @ =0x00000FFF
	adds r0, r0, r2
_080695AE:
	lsls r0, r0, #4
	asrs r2, r0, #0x10
	movs r3, #0x86
	lsls r3, r3, #1
	adds r0, r7, r3
	ldr r0, [r0]
	cmp r0, #0
	bge _080695C2
	ldr r3, _080695D4 @ =0x00000FFF
	adds r0, r0, r3
_080695C2:
	lsls r3, r0, #4
	asrs r3, r3, #0x10
	adds r0, r4, #0
	bl sub_0800493C
	b _08069622
	.align 2, 0
_080695D0: .4byte gUnk_03006AF8
_080695D4: .4byte 0x00000FFF
_080695D8:
	adds r0, r7, #0
	adds r0, #0xf4
	adds r0, r0, r5
	ldr r0, [r0]
	cmp r0, #0
	bge _080695E8
	ldr r1, _08069630 @ =0x00000FFF
	adds r0, r0, r1
_080695E8:
	lsls r0, r0, #4
	asrs r6, r0, #0x10
	ldr r0, [r4]
	cmp r0, #0
	bge _080695F6
	ldr r3, _08069630 @ =0x00000FFF
	adds r0, r0, r3
_080695F6:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	adds r0, r7, #0
	adds r0, #0xfc
	adds r0, r0, r5
	ldr r0, [r0]
	cmp r0, #0
	bge _0806960A
	ldr r3, _08069630 @ =0x00000FFF
	adds r0, r0, r3
_0806960A:
	lsls r0, r0, #4
	asrs r4, r0, #0x10
	cmp r2, #0
	bge _08069616
	ldr r0, _08069630 @ =0x00000FFF
	adds r2, r2, r0
_08069616:
	lsls r3, r2, #4
	asrs r3, r3, #0x10
	adds r0, r6, #0
	adds r2, r4, #0
	bl sub_080049B8
_08069622:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069630: .4byte 0x00000FFF

	thumb_func_start sub_08069634
sub_08069634: @ 0x08069634
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r3, r0, #0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080685EC
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08069670
sub_08069670: @ 0x08069670
	push {lr}
	bl sub_08068704
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08069688
sub_08069688: @ 0x08069688
	push {r4, r5, r6, lr}
	ldr r3, _080696B8 @ =gUnk_03006AF8
	ldr r5, [r3]
	lsls r6, r0, #2
	adds r3, r5, #0
	adds r3, #0x10
	adds r3, r3, r6
	lsls r4, r1, #0xc
	str r4, [r3]
	adds r5, #0x20
	adds r5, r5, r6
	lsls r3, r2, #0xc
	str r3, [r5]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_08005E18
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080696B8: .4byte gUnk_03006AF8

	thumb_func_start sub_080696BC
sub_080696BC: @ 0x080696BC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	mov sb, r2
	adds r0, r3, #0
	ldr r5, [sp, #0x1c]
	ldr r7, [sp, #0x20]
	ldr r2, _08069738 @ =gUnk_03006AF8
	ldr r4, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r7, #0
	bl __divsi3
	mov r8, r0
	mov r0, sb
	subs r5, r5, r0
	lsls r5, r5, #0xc
	adds r0, r5, #0
	adds r1, r7, #0
	bl __divsi3
	lsls r3, r6, #2
	adds r2, r4, #0
	adds r2, #0x10
	adds r2, r2, r3
	ldr r1, [r2]
	add r1, r8
	str r1, [r2]
	adds r4, #0x20
	adds r4, r4, r3
	ldr r1, [r4]
	adds r1, r1, r0
	str r1, [r4]
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, [r2]
	cmp r0, #0
	bge _08069712
	ldr r2, _0806973C @ =0x00000FFF
	adds r0, r0, r2
_08069712:
	lsls r0, r0, #4
	asrs r3, r0, #0x10
	cmp r1, #0
	bge _0806971E
	ldr r0, _0806973C @ =0x00000FFF
	adds r1, r1, r0
_0806971E:
	lsls r2, r1, #4
	asrs r2, r2, #0x10
	adds r0, r6, #0
	adds r1, r3, #0
	bl sub_08005E18
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069738: .4byte gUnk_03006AF8
_0806973C: .4byte 0x00000FFF

	thumb_func_start sub_08069740
sub_08069740: @ 0x08069740
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	ldr r0, _08069778 @ =gUnk_03006AF8
	ldr r0, [r0]
	lsls r4, r6, #2
	adds r3, r0, #0
	adds r3, #0x30
	adds r3, r3, r4
	lsls r5, r1, #0xc
	str r5, [r3]
	adds r3, r0, #0
	adds r3, #0x40
	adds r3, r3, r4
	lsls r5, r2, #0xc
	str r5, [r3]
	adds r4, r4, r6
	lsls r4, r4, #3
	adds r4, #0x54
	adds r0, r0, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0800A678
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069778: .4byte gUnk_03006AF8

	thumb_func_start sub_0806977C
sub_0806977C: @ 0x0806977C
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	mov sl, r0
	mov sb, r2
	adds r0, r3, #0
	ldr r4, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldr r2, _08069804 @ =gUnk_03006AF8
	ldr r5, [r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	adds r1, r6, #0
	bl __divsi3
	mov r8, r0
	mov r0, sb
	subs r4, r4, r0
	lsls r4, r4, #0xc
	adds r0, r4, #0
	adds r1, r6, #0
	bl __divsi3
	mov r1, sl
	lsls r2, r1, #2
	adds r4, r5, #0
	adds r4, #0x30
	adds r4, r4, r2
	ldr r1, [r4]
	add r1, r8
	str r1, [r4]
	adds r1, r5, #0
	adds r1, #0x40
	adds r1, r1, r2
	ldr r3, [r1]
	adds r3, r3, r0
	str r3, [r1]
	add r2, sl
	lsls r2, r2, #3
	adds r2, #0x54
	adds r5, r5, r2
	ldr r0, [r4]
	cmp r0, #0
	bge _080697DC
	ldr r1, _08069808 @ =0x00000FFF
	adds r0, r0, r1
_080697DC:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	adds r2, r3, #0
	cmp r2, #0
	bge _080697EA
	ldr r0, _08069808 @ =0x00000FFF
	adds r2, r2, r0
_080697EA:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	adds r0, r5, #0
	bl sub_0800A678
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069804: .4byte gUnk_03006AF8
_08069808: .4byte 0x00000FFF

	thumb_func_start sub_0806980C
sub_0806980C: @ 0x0806980C
	push {r4, r5, r6, r7, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	ldr r7, [sp, #0x14]
	ldr r1, _08069864 @ =gUnk_03006AF8
	ldr r1, [r1]
	mov ip, r1
	lsls r3, r0, #2
	adds r1, #0xf4
	adds r1, r1, r3
	lsls r2, r4, #0xc
	str r2, [r1]
	mov r1, ip
	adds r1, #0xfc
	adds r1, r1, r3
	lsls r2, r6, #0xc
	str r2, [r1]
	movs r1, #0x82
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r5, #0xc
	str r2, [r1]
	movs r1, #0x86
	lsls r1, r1, #1
	add r1, ip
	adds r1, r1, r3
	lsls r2, r7, #0xc
	str r2, [r1]
	cmp r0, #0
	bne _08069868
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	bl sub_0800493C
	b _0806987C
	.align 2, 0
_08069864: .4byte gUnk_03006AF8
_08069868:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	bl sub_080049B8
_0806987C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08069884
sub_08069884: @ 0x08069884
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r4, r0, #0
	ldr r0, _08069A8C @ =gUnk_03006B04
	mov r8, r0
	str r4, [r0]
	movs r5, #0x8d
	lsls r5, r5, #3
	add r0, sp, #8
	movs r1, #0
	mov sb, r1
	strh r1, [r0]
	lsrs r2, r5, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	add r0, sp, #8
	adds r1, r4, #0
	bl CpuSet
	mov r1, r8
	ldr r0, [r1]
	movs r6, #0
	strh r6, [r0]
	str r4, [r0, #4]
	strh r5, [r0, #0x24]
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #3
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xd
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0xe
	movs r2, #0
	bl sub_0800476C
	movs r0, #2
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #3
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0
	bl sub_0801B9BC
	ldr r0, _08069A90 @ =0x06002000
	movs r1, #0x90
	lsls r1, r1, #7
	bl sub_0800E690
	ldr r0, _08069A94 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #5
	bl sub_0800E6B0
	ldr r5, _08069A98 @ =gUnk_0200F800
	movs r0, #0
	adds r1, r5, #0
	bl sub_0800E6F0
	ldr r1, _08069A9C @ =gUnk_02010000
	movs r0, #1
	bl sub_0800E6F0
	ldr r1, _08069AA0 @ =gUnk_02010800
	movs r0, #2
	bl sub_0800E6F0
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E74C
	movs r0, #2
	bl sub_0800E74C
	movs r4, #0x14
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	ldr r0, _08069AA4 @ =0x06010000
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_0801B8E8
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r0, r4, #0
	bl sub_080045B0
	movs r0, #2
	adds r1, r4, #0
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	adds r0, r5, #0
	bl sub_080016D4
	movs r0, #0
	bl sub_0801B9EC
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	mov r1, r8
	ldr r0, [r1]
	adds r0, #0x35
	mov r1, sb
	strb r1, [r0]
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069A8C: .4byte gUnk_03006B04
_08069A90: .4byte 0x06002000
_08069A94: .4byte gUnk_0200E000
_08069A98: .4byte gUnk_0200F800
_08069A9C: .4byte gUnk_02010000
_08069AA0: .4byte gUnk_02010800
_08069AA4: .4byte 0x06010000

	thumb_func_start sub_08069AA8
sub_08069AA8: @ 0x08069AA8
	push {r4, r5, r6, lr}
	sub sp, #8
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #3
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xd
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0xe
	movs r2, #0
	bl sub_0800476C
	movs r0, #2
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #3
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0
	bl sub_0801B9BC
	ldr r0, _08069C3C @ =0x06002000
	movs r1, #0x90
	lsls r1, r1, #7
	bl sub_0800E690
	ldr r0, _08069C40 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #5
	bl sub_0800E6B0
	ldr r6, _08069C44 @ =gUnk_0200F800
	movs r0, #0
	adds r1, r6, #0
	bl sub_0800E6F0
	ldr r1, _08069C48 @ =gUnk_02010000
	movs r0, #1
	bl sub_0800E6F0
	ldr r1, _08069C4C @ =gUnk_02010800
	movs r0, #2
	bl sub_0800E6F0
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E74C
	movs r0, #2
	bl sub_0800E74C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	ldr r0, _08069C50 @ =0x06010000
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_0801B8E8
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r0, r4, #0
	bl sub_080045B0
	movs r0, #2
	adds r1, r4, #0
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	adds r0, r6, #0
	bl sub_080016D4
	movs r0, #0
	bl sub_0801B9EC
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069C3C: .4byte 0x06002000
_08069C40: .4byte gUnk_0200E000
_08069C44: .4byte gUnk_0200F800
_08069C48: .4byte gUnk_02010000
_08069C4C: .4byte gUnk_02010800
_08069C50: .4byte 0x06010000

	thumb_func_start sub_08069C54
sub_08069C54: @ 0x08069C54
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08069C6C @ =gUnk_03006B04
	ldr r7, [r0]
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _08069C70
	cmp r0, #1
	beq _08069CD0
	b _08069CEC
	.align 2, 0
_08069C6C: .4byte gUnk_03006B04
_08069C70:
	movs r0, #1
	bl sub_0806F0B4
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #2
	bl sub_0806F0B4
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #3
	bl sub_0806F0B4
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #4
	bl sub_0806F0B4
	adds r3, r0, #0
	ldr r1, _08069CCC @ =gUnk_08BCA098
	adds r0, r7, #0
	adds r0, #0x7c
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldr r0, [r0]
	mov r8, r0
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl _call_via_r8
	ldrh r0, [r7]
	adds r0, #1
	b _08069CEA
	.align 2, 0
_08069CCC: .4byte gUnk_08BCA098
_08069CD0:
	ldr r1, _08069D00 @ =gUnk_08BCA138
	adds r0, r7, #0
	adds r0, #0x7c
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	bl _call_via_r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _08069CEC
_08069CEA:
	strh r0, [r7]
_08069CEC:
	bl sub_0806B628
	movs r1, #0
	ldrsh r0, [r7, r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08069D00: .4byte gUnk_08BCA138

	thumb_func_start sub_08069D04
sub_08069D04: @ 0x08069D04
	push {r4, r5, r6, lr}
	sub sp, #0x38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #3
	movs r1, #8
	bl sub_08001D3C
	adds r6, r0, #0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r5, _08069D94 @ =gUnk_02012400
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _08069D98 @ =0x06008000
	ldr r2, [sp, #0x10]
	lsls r2, r2, #0xa
	lsrs r2, r2, #0xb
	bl CpuSet
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	adds r4, #0x32
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r4, _08069D9C @ =gUnk_02011000
	adds r1, r4, #0
	bl LZ77UnCompWram
	ldr r5, _08069DA0 @ =gUnk_02011A00
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #3
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #4
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _08069DA4 @ =0x0600D000
	ldrh r2, [r4, #8]
	lsrs r2, r2, #1
	bl CpuSet
	add sp, #0x38
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08069D94: .4byte gUnk_02012400
_08069D98: .4byte 0x06008000
_08069D9C: .4byte gUnk_02011000
_08069DA0: .4byte gUnk_02011A00
_08069DA4: .4byte 0x0600D000

	thumb_func_start sub_08069DA8
sub_08069DA8: @ 0x08069DA8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sl, r0
	adds r4, r1, #0
	adds r6, r2, #0
	mov r8, r3
	ldr r5, [sp, #0x3c]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	lsls r7, r4, #2
	movs r1, #0xc0
	adds r1, r1, r7
	mov sb, r1
	mov r1, sp
	bl sub_08001CBC
	lsls r1, r6, #7
	ldr r0, [sp, #0x10]
	adds r0, r0, r1
	lsls r4, r4, #7
	ldr r1, _08069E70 @ =0x06001800
	adds r4, r4, r1
	adds r1, r4, #0
	movs r2, #0x80
	bl sub_08006BA4
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r6, #0
	bl sub_08063E54
	mov r1, r8
	lsls r1, r1, #1
	mov r8, r1
	lsls r5, r5, #6
	add r5, sl
	add r8, r5
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	mov r1, sb
	orrs r0, r1
	mov r1, r8
	strh r0, [r1]
	adds r0, r6, #0
	bl sub_08063E54
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, r7, #0
	adds r1, #0xc1
	orrs r0, r1
	mov r1, r8
	strh r0, [r1, #2]
	adds r0, r6, #0
	bl sub_08063E54
	mov r2, r8
	adds r2, #0x40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, r7, #0
	adds r1, #0xc2
	orrs r0, r1
	strh r0, [r2]
	adds r0, r6, #0
	bl sub_08063E54
	movs r1, #0x42
	add r8, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, r7, #0
	adds r1, #0xc3
	orrs r0, r1
	mov r1, r8
	strh r0, [r1]
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08069E70: .4byte 0x06001800

	thumb_func_start sub_08069E74
sub_08069E74: @ 0x08069E74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sb, r0
	ldr r0, [sp, #0x34]
	ldr r4, [sp, #0x38]
	ldr r5, [sp, #0x3c]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsls r3, r3, #0x18
	lsrs r7, r3, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r8, r4
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	str r5, [sp, #4]
	adds r6, r1, #0
	movs r0, #0
	str r0, [sp, #8]
	movs r3, #0
	movs r0, #8
	subs r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bhi _08069F64
	lsls r1, r7, #0x18
	str r1, [sp, #0x10]
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	str r0, [sp, #0xc]
_08069EC2:
	movs r5, #0
	ldr r1, _08069F24 @ =gUnk_08BCA1D8
	lsls r0, r4, #2
	adds r0, r0, r1
	ldr r0, [r0]
	adds r7, r3, #1
	adds r2, r4, #1
	mov sl, r2
	cmp r6, r0
	blo _08069EE8
	adds r1, r0, #0
_08069ED8:
	subs r6, r6, r1
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #9
	bhi _08069EE8
	cmp r6, r1
	bhs _08069ED8
_08069EE8:
	ldr r1, [sp, #0x10]
	asrs r0, r1, #0x18
	cmp r0, #1
	bne _08069F2C
	cmp r5, #0
	bne _08069F2C
	ldr r2, [sp, #8]
	cmp r2, #0
	bne _08069F2C
	cmp r4, #7
	beq _08069F2C
	ldr r0, [sp]
	adds r4, r0, r3
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, sb
	adds r1, r4, #0
	mov r2, r8
	ldr r3, _08069F28 @ =gUnk_080BB710
	bl sub_08001284
	mov r0, sb
	adds r1, r4, #0
	ldr r3, [sp, #0xc]
	lsrs r2, r3, #0x10
	ldr r3, _08069F28 @ =gUnk_080BB710
	bl sub_08001284
	b _08069F56
	.align 2, 0
_08069F24: .4byte gUnk_08BCA1D8
_08069F28: .4byte gUnk_080BB710
_08069F2C:
	lsls r3, r3, #1
	ldr r0, [sp]
	lsls r1, r0, #1
	mov r2, r8
	lsls r0, r2, #6
	add r0, sb
	adds r1, r1, r0
	adds r3, r3, r1
	ldr r0, [sp, #4]
	lsls r2, r0, #0xc
	lsls r1, r5, #1
	adds r0, r1, #0
	adds r0, #0x42
	orrs r0, r2
	strh r0, [r3]
	adds r3, #0x40
	adds r1, #0x43
	orrs r2, r1
	strh r2, [r3]
	movs r1, #1
	str r1, [sp, #8]
_08069F56:
	lsls r0, r7, #0x18
	lsrs r3, r0, #0x18
	mov r2, sl
	lsls r0, r2, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #7
	bls _08069EC2
_08069F64:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08069F74
sub_08069F74: @ 0x08069F74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	mov sl, r0
	str r2, [sp, #0x1c]
	movs r0, #0
	str r0, [sp, #0x20]
	mov r8, r0
	adds r7, r1, #0
	mov sb, r0
	movs r0, #3
	movs r1, #9
	bl sub_08001D3C
	mov r1, sp
	bl sub_08001CBC
	movs r4, #3
_08069F9E:
	lsls r4, r4, #0x10
	asrs r5, r4, #0x10
	lsls r0, r5, #2
	ldr r1, _0806A038 @ =gUnk_08BCA1D8
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl __udivsi3
	adds r6, r0, #0
	cmp r6, #0
	beq _08069FCA
	mov r2, sb
	cmp r2, #0
	bne _08069FCA
	movs r0, #1
	mov sb, r0
	movs r0, #8
	subs r0, r0, r5
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x20]
_08069FCA:
	asrs r4, r4, #0x10
	lsls r0, r4, #2
	ldr r1, _0806A038 @ =gUnk_08BCA1D8
	adds r0, r0, r1
	ldr r1, [r0]
	adds r0, r7, #0
	bl __umodsi3
	adds r7, r0, #0
	mov r2, sb
	cmp r2, #1
	bne _0806A000
	lsls r1, r6, #6
	adds r1, #0x20
	ldr r0, [sp, #0x10]
	adds r0, r0, r1
	mov r2, r8
	lsls r1, r2, #6
	add r1, sl
	ldr r2, _0806A03C @ =0x04000010
	bl CpuSet
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
_0806A000:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _08069F9E
	ldr r0, [sp, #0x1c]
	cmp r0, #1
	bne _0806A026
	ldr r0, [sp, #0x10]
	movs r1, #0xa8
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r2, r8
	lsls r1, r2, #6
	add r1, sl
	ldr r2, _0806A03C @ =0x04000010
	bl CpuSet
_0806A026:
	ldr r0, [sp, #0x20]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806A038: .4byte gUnk_08BCA1D8
_0806A03C: .4byte 0x04000010

	thumb_func_start sub_0806A040
sub_0806A040: @ 0x0806A040
	push {r4, lr}
	ldr r3, _0806A0C0 @ =gUnk_03006B04
	ldr r1, [r3]
	mov ip, r1
	movs r1, #0xc8
	lsls r1, r1, #2
	add r1, ip
	movs r4, #0
	movs r2, #0
	strh r2, [r1]
	ldr r1, _0806A0C4 @ =0x00000322
	add r1, ip
	strh r2, [r1]
	movs r1, #0xc9
	lsls r1, r1, #2
	add r1, ip
	strh r2, [r1]
	ldr r1, _0806A0C8 @ =0x00000326
	add r1, ip
	strh r2, [r1]
	movs r1, #0xca
	lsls r1, r1, #2
	add r1, ip
	strh r2, [r1]
	movs r1, #0xcb
	lsls r1, r1, #2
	add r1, ip
	str r0, [r1]
	movs r0, #0xcc
	lsls r0, r0, #2
	add r0, ip
	str r2, [r0]
	movs r0, #0xcd
	lsls r0, r0, #2
	add r0, ip
	str r2, [r0]
	movs r0, #0xce
	lsls r0, r0, #2
	add r0, ip
	strh r2, [r0]
	ldr r0, _0806A0CC @ =0x0000033A
	add r0, ip
	strb r4, [r0]
	ldr r0, [r3]
	ldr r1, _0806A0D0 @ =0x0000033B
	adds r0, r0, r1
	strb r4, [r0]
	ldr r1, [r3]
	movs r3, #0xcf
	lsls r3, r3, #2
	adds r0, r1, r3
	str r2, [r0]
	adds r3, #4
	adds r0, r1, r3
	str r2, [r0]
	adds r3, #4
	adds r0, r1, r3
	str r2, [r0]
	adds r3, #4
	adds r0, r1, r3
	str r2, [r0]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806A0C0: .4byte gUnk_03006B04
_0806A0C4: .4byte 0x00000322
_0806A0C8: .4byte 0x00000326
_0806A0CC: .4byte 0x0000033A
_0806A0D0: .4byte 0x0000033B

	thumb_func_start sub_0806A0D4
sub_0806A0D4: @ 0x0806A0D4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r0, _0806A0F8 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #5
	bls _0806A0EC
	b _0806A2BC
_0806A0EC:
	lsls r0, r0, #2
	ldr r1, _0806A0FC @ =_0806A100
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806A0F8: .4byte gUnk_03006B04
_0806A0FC: .4byte _0806A100
_0806A100: @ jump table
	.4byte _0806A118 @ case 0
	.4byte _0806A1D4 @ case 1
	.4byte _0806A200 @ case 2
	.4byte _0806A248 @ case 3
	.4byte _0806A270 @ case 4
	.4byte _0806A294 @ case 5
_0806A118:
	ldr r5, _0806A1C4 @ =gUnk_03006B04
	ldr r0, [r5]
	movs r3, #0xcb
	lsls r3, r3, #2
	adds r0, r0, r3
	ldr r0, [r0]
	bl sub_0800B130
	ldr r1, [r5]
	movs r3, #0xce
	lsls r3, r3, #2
	adds r2, r1, r3
	movs r6, #0
	movs r7, #0
	strh r0, [r2]
	add r4, sp, #0x14
	ldrh r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0xb
	asrs r3, r0, #0xc
	adds r0, r3, #2
	strb r0, [r4, #4]
	ldrh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806A156
	add r1, sp, #0x14
	adds r0, r3, #3
	strb r0, [r1, #4]
_0806A156:
	add r0, sp, #0x14
	ldrb r0, [r0, #4]
	cmp r0, #0xa
	bhi _0806A164
	add r1, sp, #0x14
	movs r0, #0xb
	strb r0, [r1, #4]
_0806A164:
	add r1, sp, #0x14
	movs r0, #4
	strb r0, [r1, #5]
	adds r2, r1, #0
	adds r0, r1, #0
	ldrb r1, [r0, #4]
	lsrs r1, r1, #1
	movs r0, #0xf
	subs r0, r0, r1
	strb r0, [r2, #2]
	adds r0, r2, #0
	ldrb r1, [r0, #5]
	lsrs r1, r1, #1
	movs r0, #0xa
	subs r0, r0, r1
	strb r0, [r2, #3]
	ldr r0, [r5]
	adds r1, r2, #0
	ldrb r1, [r1, #2]
	ldr r2, _0806A1C8 @ =0x0000033A
	adds r0, r0, r2
	strb r1, [r0]
	ldr r0, [r5]
	add r1, sp, #0x14
	ldrb r1, [r1, #3]
	ldr r3, _0806A1CC @ =0x0000033B
	adds r0, r0, r3
	strb r1, [r0]
	add r0, sp, #0x14
	strb r6, [r0, #1]
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r1, #0
	strb r6, [r0]
	strb r6, [r0, #7]
	movs r0, #5
	strb r0, [r1, #8]
	str r7, [sp, #0x20]
	str r7, [sp, #0x24]
	ldr r0, [r5]
	ldr r1, _0806A1D0 @ =0x00000322
	adds r0, r0, r1
	add r1, sp, #0x14
	bl sub_08019944
	ldr r1, [r5]
	b _0806A27E
	.align 2, 0
_0806A1C4: .4byte gUnk_03006B04
_0806A1C8: .4byte 0x0000033A
_0806A1CC: .4byte 0x0000033B
_0806A1D0: .4byte 0x00000322
_0806A1D4:
	ldr r4, _0806A1F8 @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r3, _0806A1FC @ =0x00000322
	adds r0, r0, r3
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0806A2BC
	ldr r0, [r4]
	ldr r1, _0806A1FC @ =0x00000322
	adds r0, r0, r1
	movs r1, #1
	bl sub_080199C0
	b _0806A27C
	.align 2, 0
_0806A1F8: .4byte gUnk_03006B04
_0806A1FC: .4byte 0x00000322
_0806A200:
	ldr r5, _0806A23C @ =gUnk_03006B04
	ldr r4, [r5]
	movs r3, #0xc9
	lsls r3, r3, #2
	adds r0, r4, r3
	movs r2, #0xcb
	lsls r2, r2, #2
	adds r1, r4, r2
	ldr r2, [r1]
	adds r3, #0x16
	adds r1, r4, r3
	ldrb r3, [r1]
	adds r3, #1
	ldr r1, _0806A240 @ =0x0000033B
	adds r4, r4, r1
	ldrb r1, [r4]
	adds r1, #1
	str r1, [sp]
	ldr r1, _0806A244 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldr r1, [r5]
	b _0806A27E
	.align 2, 0
_0806A23C: .4byte gUnk_03006B04
_0806A240: .4byte 0x0000033B
_0806A244: .4byte 0x44444444
_0806A248:
	ldr r0, _0806A268 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0806A25C
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806A2BC
_0806A25C:
	ldr r0, _0806A26C @ =gUnk_03006B04
	ldr r1, [r0]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r1, r1, r3
	b _0806A284
	.align 2, 0
_0806A268: .4byte gKeyNewPress
_0806A26C: .4byte gUnk_03006B04
_0806A270:
	ldr r4, _0806A28C @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r1, _0806A290 @ =0x00000322
	adds r0, r0, r1
	bl sub_0801BA7C
_0806A27C:
	ldr r1, [r4]
_0806A27E:
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r1, r1, r2
_0806A284:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806A2BC
	.align 2, 0
_0806A28C: .4byte gUnk_03006B04
_0806A290: .4byte 0x00000322
_0806A294:
	ldr r4, _0806A2D4 @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r3, _0806A2D8 @ =0x00000322
	adds r0, r0, r3
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _0806A2BC
	ldr r1, [r4]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r0, r1, r3
	strh r2, [r0]
	movs r2, #0xc9
	lsls r2, r2, #2
	adds r0, r1, r2
	bl sub_0800B4E4
_0806A2BC:
	ldr r0, _0806A2D4 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r0, r0, r3
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806A2D4: .4byte gUnk_03006B04
_0806A2D8: .4byte 0x00000322

	thumb_func_start sub_0806A2DC
sub_0806A2DC: @ 0x0806A2DC
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r5, _0806A364 @ =gUnk_03006B04
	ldr r3, [r5]
	mov ip, r3
	movs r3, #0xc8
	lsls r3, r3, #2
	add r3, ip
	movs r6, #0
	movs r4, #0
	strh r4, [r3]
	ldr r3, _0806A368 @ =0x00000322
	add r3, ip
	strh r4, [r3]
	movs r3, #0xc9
	lsls r3, r3, #2
	add r3, ip
	strh r4, [r3]
	ldr r3, _0806A36C @ =0x00000326
	add r3, ip
	strh r4, [r3]
	movs r3, #0xca
	lsls r3, r3, #2
	add r3, ip
	strh r4, [r3]
	movs r3, #0xcb
	lsls r3, r3, #2
	add r3, ip
	str r1, [r3]
	movs r1, #0xcc
	lsls r1, r1, #2
	add r1, ip
	str r2, [r1]
	movs r1, #0xcd
	lsls r1, r1, #2
	add r1, ip
	str r4, [r1]
	movs r1, #0xce
	lsls r1, r1, #2
	add r1, ip
	strh r4, [r1]
	ldr r1, _0806A370 @ =0x0000033A
	add r1, ip
	strb r6, [r1]
	ldr r1, [r5]
	ldr r2, _0806A374 @ =0x0000033B
	adds r1, r1, r2
	strb r6, [r1]
	ldr r2, [r5]
	movs r3, #0xcf
	lsls r3, r3, #2
	adds r1, r2, r3
	str r0, [r1]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r2, r1
	str r4, [r0]
	adds r3, #8
	adds r0, r2, r3
	str r4, [r0]
	adds r1, #8
	adds r0, r2, r1
	str r4, [r0]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806A364: .4byte gUnk_03006B04
_0806A368: .4byte 0x00000322
_0806A36C: .4byte 0x00000326
_0806A370: .4byte 0x0000033A
_0806A374: .4byte 0x0000033B

	thumb_func_start sub_0806A378
sub_0806A378: @ 0x0806A378
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r1, _0806A3A0 @ =gUnk_03006B04
	ldr r0, [r1]
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r0, r0, r2
	movs r3, #0
	ldrsh r0, [r0, r3]
	adds r4, r1, #0
	cmp r0, #5
	bls _0806A396
	b _0806A64A
_0806A396:
	lsls r0, r0, #2
	ldr r1, _0806A3A4 @ =_0806A3A8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806A3A0: .4byte gUnk_03006B04
_0806A3A4: .4byte _0806A3A8
_0806A3A8: @ jump table
	.4byte _0806A3C0 @ case 0
	.4byte _0806A4C0 @ case 1
	.4byte _0806A4EC @ case 2
	.4byte _0806A5CC @ case 3
	.4byte _0806A5F4 @ case 4
	.4byte _0806A618 @ case 5
_0806A3C0:
	ldr r2, [r4]
	movs r0, #0xce
	lsls r0, r0, #2
	adds r1, r2, r0
	movs r0, #0
	strh r0, [r1]
	movs r3, #0
	movs r1, #0xcb
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r1, [r0]
	b _0806A3DC
_0806A3D8:
	adds r1, #2
	adds r3, #1
_0806A3DC:
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806A3D8
	ldr r2, [r4]
	movs r0, #0xce
	lsls r0, r0, #2
	adds r1, r2, r0
	ldrh r0, [r1]
	adds r0, r0, r3
	strh r0, [r1]
	movs r3, #0
	movs r1, #0xcc
	lsls r1, r1, #2
	adds r0, r2, r1
	ldr r1, [r0]
	b _0806A400
_0806A3FC:
	adds r1, #2
	adds r3, #1
_0806A400:
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806A3FC
	ldr r5, _0806A4B0 @ =gUnk_03006B04
	ldr r0, [r5]
	movs r1, #0xce
	lsls r1, r1, #2
	adds r2, r0, r1
	ldrh r0, [r2]
	adds r0, r0, r3
	movs r6, #0
	movs r7, #0
	strh r0, [r2]
	add r4, sp, #0x14
	ldrh r1, [r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0xb
	asrs r3, r0, #0xc
	adds r0, r3, #3
	strb r0, [r4, #4]
	ldrh r1, [r2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806A43A
	add r1, sp, #0x14
	adds r0, r3, #4
	strb r0, [r1, #4]
_0806A43A:
	add r1, sp, #0x14
	adds r0, r1, #0
	ldrb r0, [r0, #4]
	adds r0, #2
	strb r0, [r1, #4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xa
	bhi _0806A450
	movs r0, #0xb
	strb r0, [r1, #4]
_0806A450:
	add r1, sp, #0x14
	movs r0, #4
	strb r0, [r1, #5]
	adds r2, r1, #0
	adds r0, r1, #0
	ldrb r1, [r0, #4]
	lsrs r1, r1, #1
	movs r0, #0xf
	subs r0, r0, r1
	strb r0, [r2, #2]
	adds r0, r2, #0
	ldrb r1, [r0, #5]
	lsrs r1, r1, #1
	movs r0, #0xa
	subs r0, r0, r1
	strb r0, [r2, #3]
	ldr r0, [r5]
	adds r1, r2, #0
	ldrb r1, [r1, #2]
	ldr r2, _0806A4B4 @ =0x0000033A
	adds r0, r0, r2
	strb r1, [r0]
	ldr r0, [r5]
	add r1, sp, #0x14
	ldrb r1, [r1, #3]
	ldr r3, _0806A4B8 @ =0x0000033B
	adds r0, r0, r3
	strb r1, [r0]
	add r0, sp, #0x14
	strb r6, [r0, #1]
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r1, #0
	strb r6, [r0]
	strb r6, [r0, #7]
	movs r0, #5
	strb r0, [r1, #8]
	str r7, [sp, #0x20]
	str r7, [sp, #0x24]
	ldr r0, [r5]
	ldr r1, _0806A4BC @ =0x00000322
	adds r0, r0, r1
	add r1, sp, #0x14
	bl sub_08019944
	ldr r1, [r5]
	b _0806A602
	.align 2, 0
_0806A4B0: .4byte gUnk_03006B04
_0806A4B4: .4byte 0x0000033A
_0806A4B8: .4byte 0x0000033B
_0806A4BC: .4byte 0x00000322
_0806A4C0:
	ldr r4, _0806A4E4 @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r3, _0806A4E8 @ =0x00000322
	adds r0, r0, r3
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806A4D6
	b _0806A64A
_0806A4D6:
	ldr r0, [r4]
	ldr r1, _0806A4E8 @ =0x00000322
	adds r0, r0, r1
	movs r1, #1
	bl sub_080199C0
	b _0806A600
	.align 2, 0
_0806A4E4: .4byte gUnk_03006B04
_0806A4E8: .4byte 0x00000322
_0806A4EC:
	ldr r6, _0806A530 @ =gUnk_03006B04
	ldr r4, [r6]
	movs r3, #0xc9
	lsls r3, r3, #2
	adds r0, r4, r3
	movs r5, #0xcb
	lsls r5, r5, #2
	adds r1, r4, r5
	ldr r2, [r1]
	adds r3, #0x16
	adds r1, r4, r3
	ldrb r3, [r1]
	adds r3, #3
	ldr r1, _0806A534 @ =0x0000033B
	adds r4, r4, r1
	ldrb r1, [r4]
	adds r1, #1
	str r1, [sp]
	ldr r1, _0806A538 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	movs r2, #0
	ldr r0, [r6]
	adds r0, r0, r5
	ldr r1, [r0]
	b _0806A540
	.align 2, 0
_0806A530: .4byte gUnk_03006B04
_0806A534: .4byte 0x0000033B
_0806A538: .4byte 0x44444444
_0806A53C:
	adds r1, #2
	adds r2, #1
_0806A540:
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806A53C
	lsls r3, r2, #1
	adds r3, r3, r2
	lsls r3, r3, #2
	ldr r6, _0806A5B4 @ =gUnk_03006B04
	ldr r4, [r6]
	ldr r2, _0806A5B8 @ =0x00000326
	adds r0, r4, r2
	adds r2, #0xa
	adds r1, r4, r2
	ldr r2, [r1]
	ldr r5, _0806A5BC @ =0x0000033A
	adds r1, r4, r5
	lsrs r3, r3, #3
	ldrb r1, [r1]
	adds r3, r3, r1
	adds r3, #4
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldr r1, _0806A5C0 @ =0x0000033B
	mov r8, r1
	add r4, r8
	ldrb r1, [r4]
	adds r1, #1
	str r1, [sp]
	ldr r1, _0806A5C4 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldr r0, _0806A5C8 @ =gUnk_02010000
	ldr r4, [r6]
	movs r2, #0xcf
	lsls r2, r2, #2
	adds r1, r4, r2
	ldrh r2, [r1]
	adds r5, r4, r5
	ldrb r3, [r5]
	adds r3, #1
	add r4, r8
	ldrb r1, [r4]
	adds r1, #1
	str r1, [sp]
	movs r1, #0xf
	bl sub_08069DA8
	ldr r1, [r6]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r1, r1, r3
	b _0806A608
	.align 2, 0
_0806A5B4: .4byte gUnk_03006B04
_0806A5B8: .4byte 0x00000326
_0806A5BC: .4byte 0x0000033A
_0806A5C0: .4byte 0x0000033B
_0806A5C4: .4byte 0x44444444
_0806A5C8: .4byte gUnk_02010000
_0806A5CC:
	ldr r0, _0806A5EC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0806A5E0
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806A64A
_0806A5E0:
	ldr r0, _0806A5F0 @ =gUnk_03006B04
	ldr r1, [r0]
	movs r0, #0xc8
	lsls r0, r0, #2
	adds r1, r1, r0
	b _0806A608
	.align 2, 0
_0806A5EC: .4byte gKeyNewPress
_0806A5F0: .4byte gUnk_03006B04
_0806A5F4:
	ldr r4, _0806A610 @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r1, _0806A614 @ =0x00000322
	adds r0, r0, r1
	bl sub_0801BA7C
_0806A600:
	ldr r1, [r4]
_0806A602:
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r1, r1, r2
_0806A608:
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806A64A
	.align 2, 0
_0806A610: .4byte gUnk_03006B04
_0806A614: .4byte 0x00000322
_0806A618:
	ldr r4, _0806A664 @ =gUnk_03006B04
	ldr r0, [r4]
	ldr r3, _0806A668 @ =0x00000322
	adds r0, r0, r3
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	bne _0806A64A
	ldr r1, [r4]
	movs r3, #0xc8
	lsls r3, r3, #2
	adds r0, r1, r3
	strh r2, [r0]
	movs r2, #0xc9
	lsls r2, r2, #2
	adds r0, r1, r2
	bl sub_0800B4E4
	ldr r0, [r4]
	ldr r3, _0806A66C @ =0x00000326
	adds r0, r0, r3
	bl sub_0800B4E4
_0806A64A:
	ldr r0, _0806A664 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806A664: .4byte gUnk_03006B04
_0806A668: .4byte 0x00000322
_0806A66C: .4byte 0x00000326

	thumb_func_start sub_0806A670
sub_0806A670: @ 0x0806A670
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	adds r7, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	bl sub_08063A18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r4, _0806A740 @ =gUnk_02019400
	adds r1, r4, #0
	bl sub_08063C14
	adds r0, r4, #0
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r5, _0806A744 @ =0x06012800
	ldr r2, [sp, #8]
	adds r1, r5, #0
	bl sub_08006BA4
	ldr r0, [sp, #0x18]
	add r1, sp, #4
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	movs r0, #1
	add r1, sp, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r0, r7, #0
	bl CpuClear16Bytes
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	bl sub_08009400
	adds r0, r7, #0
	movs r1, #1
	bl sub_08009448
	adds r0, r7, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	mov r0, sb
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x27
	bhi _0806A748
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0x5a
	adds r1, r2, #0
	bl sub_08009108
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r7, #0
	movs r1, #1
	bl sub_08009494
	lsls r5, r6, #0x10
	asrs r1, r5, #0x10
	subs r1, #0x20
	mov r0, r8
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	subs r2, #0x28
	adds r0, r7, #0
	bl sub_080091C4
	b _0806A758
	.align 2, 0
_0806A740: .4byte gUnk_02019400
_0806A744: .4byte 0x06012800
_0806A748:
	lsls r5, r6, #0x10
	asrs r1, r5, #0x10
	mov r0, r8
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	adds r0, r7, #0
	bl sub_080091C4
_0806A758:
	adds r6, r5, #0
	mov r8, r4
	mov r0, sb
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x20]
	cmp r0, #0x27
	bhi _0806A84C
	mov r0, sb
	bl sub_08063A30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r4, _0806A89C @ =gUnk_02019E00
	adds r1, r4, #0
	bl sub_08063C4C
	adds r0, r4, #0
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r5, _0806A8A0 @ =0x06013000
	ldr r2, [sp, #8]
	adds r1, r5, #0
	bl sub_08006BA4
	movs r0, #2
	add r1, sp, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #1
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	asrs r6, r6, #0x10
	adds r1, r6, #0
	adds r1, #0x10
	mov r0, r8
	asrs r5, r0, #0x10
	adds r2, r5, #0
	adds r2, #0x20
	adds r0, r4, #0
	bl sub_080091C4
	ldr r0, _0806A8A4 @ =gUnk_08BCA1F8
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r4, _0806A8A8 @ =0x06013200
	ldr r2, [sp, #8]
	adds r1, r4, #0
	bl sub_08006BA4
	ldr r3, [sp, #0x14]
	movs r0, #3
	add r1, sp, #4
	adds r2, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x18]
	add r1, sp, #4
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x16
	bl sub_08010D40
	adds r4, r7, #0
	adds r4, #0x20
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #6
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	adds r6, #0xf
	adds r5, #0x1f
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_080091C4
_0806A84C:
	movs r0, #0
	bl sub_08010FC8
	mov r0, sl
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r0, sl
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	mov r0, sb
	bl sub_08063A78
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r0, sb
	bl sub_08063A60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	mov r0, sb
	cmp r0, #0xef
	bls _0806A886
	cmp r0, #0xf7
	bne _0806A90E
_0806A886:
	cmp r5, #0xff
	bne _0806A8AC
	mov r0, sb
	bl sub_08063A90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0806A94C
	b _0806A916
	.align 2, 0
_0806A89C: .4byte gUnk_02019E00
_0806A8A0: .4byte 0x06013000
_0806A8A4: .4byte gUnk_08BCA1F8
_0806A8A8: .4byte 0x06013200
_0806A8AC:
	adds r0, r5, #0
	bl sub_08063DFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806A8C8
	mov r0, sb
	bl sub_08063A90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0806A94C
	b _0806A916
_0806A8C8:
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r1, #1
	adds r0, r7, #0
	bl sub_08009448
	ldr r0, [sp, #0x20]
	cmp r0, #0x27
	bhi _0806A8FA
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r1, #1
	adds r0, r4, #0
	bl sub_08009448
_0806A8FA:
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	adds r1, #0x11
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r6, [sp]
	movs r0, #0
	b _0806A91C
_0806A90E:
	cmp r5, #0xff
	bne _0806A92E
	cmp r4, #0xff
	bne _0806A92E
_0806A916:
	str r6, [sp]
	movs r0, #0
	movs r1, #0x11
_0806A91C:
	movs r2, #1
	mov r3, r8
	bl sub_08010FFC
	movs r0, #0
	movs r1, #0
	bl sub_08011024
	b _0806A94C
_0806A92E:
	adds r0, r7, #0
	movs r1, #2
	bl sub_08009448
	str r6, [sp]
	movs r0, #0
	movs r1, #0x12
	movs r2, #1
	mov r3, r8
	bl sub_08010FFC
	movs r0, #0
	movs r1, #0
	bl sub_08011024
_0806A94C:
	movs r0, #2
	bl sub_08011104
	mov r0, sb
	cmp r0, #0xef
	bls _0806A95C
	cmp r0, #0xf7
	bne _0806A992
_0806A95C:
	mov r0, sl
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806A992
	movs r0, #0
	bl sub_08010FC8
	movs r1, #0xf8
	lsls r1, r1, #0xe
	ldr r2, _0806A9A4 @ =0x000035AD
	movs r0, #2
	movs r3, #2
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #2
	movs r1, #0x32
	bl sub_08011278
	movs r0, #2
	bl sub_080111B0
_0806A992:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806A9A4: .4byte 0x000035AD

	thumb_func_start sub_0806A9A8
sub_0806A9A8: @ 0x0806A9A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r7, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	bl sub_08063A18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r4, _0806AA6C @ =gUnk_02019400
	adds r1, r4, #0
	bl sub_08063C14
	adds r0, r4, #0
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r5, _0806AA70 @ =0x06012800
	ldr r2, [sp, #8]
	adds r1, r5, #0
	bl sub_08006BA4
	ldr r0, [sp, #0x18]
	add r1, sp, #4
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	movs r0, #1
	add r1, sp, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r0, r7, #0
	bl CpuClear16Bytes
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	bl sub_08009400
	adds r0, r7, #0
	movs r1, #1
	bl sub_08009448
	adds r0, r7, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	mov r0, r8
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x27
	bhi _0806AA74
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0x5a
	adds r1, r2, #0
	bl sub_08009108
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r7, #0
	movs r1, #1
	bl sub_08009494
	lsls r5, r6, #0x10
	asrs r1, r5, #0x10
	subs r1, #0x20
	mov r0, sb
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	subs r2, #0x28
	adds r0, r7, #0
	bl sub_080091C4
	b _0806AA84
	.align 2, 0
_0806AA6C: .4byte gUnk_02019400
_0806AA70: .4byte 0x06012800
_0806AA74:
	lsls r5, r6, #0x10
	asrs r1, r5, #0x10
	mov r0, sb
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	adds r0, r7, #0
	bl sub_080091C4
_0806AA84:
	adds r6, r5, #0
	mov sb, r4
	mov r0, r8
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	cmp r0, #0x27
	bhi _0806AB78
	mov r0, r8
	bl sub_08063A30
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r4, _0806ABB8 @ =gUnk_02019E00
	adds r1, r4, #0
	bl sub_08063C4C
	adds r0, r4, #0
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r5, _0806ABBC @ =0x06013000
	ldr r2, [sp, #8]
	adds r1, r5, #0
	bl sub_08006BA4
	movs r0, #2
	add r1, sp, #4
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #1
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	asrs r6, r6, #0x10
	adds r1, r6, #0
	adds r1, #0x10
	mov r0, sb
	asrs r5, r0, #0x10
	adds r2, r5, #0
	adds r2, #0x20
	adds r0, r4, #0
	bl sub_080091C4
	ldr r0, _0806ABC0 @ =gUnk_08BCA1F8
	add r1, sp, #4
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	ldr r4, _0806ABC4 @ =0x06013200
	ldr r2, [sp, #8]
	adds r1, r4, #0
	bl sub_08006BA4
	ldr r0, [sp, #0x18]
	add r1, sp, #4
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x16
	bl sub_08010D40
	ldr r3, [sp, #0x14]
	movs r0, #3
	add r1, sp, #4
	adds r2, r4, #0
	bl sub_08009334
	adds r4, r7, #0
	adds r4, #0x20
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #6
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	adds r6, #0xf
	adds r5, #0x1f
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_080091C4
_0806AB78:
	movs r0, #0
	bl sub_08010FC8
	mov r0, r8
	bl sub_08063BB4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r0, r8
	bl sub_08063A78
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r0, r8
	bl sub_08063A60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	cmp r5, #0xff
	bne _0806ABC8
	mov r0, r8
	bl sub_08063A90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0806AC68
	str r6, [sp]
	movs r0, #0
	movs r1, #0x11
	b _0806AC38
	.align 2, 0
_0806ABB8: .4byte gUnk_02019E00
_0806ABBC: .4byte 0x06013000
_0806ABC0: .4byte gUnk_08BCA1F8
_0806ABC4: .4byte 0x06013200
_0806ABC8:
	adds r0, r5, #0
	bl sub_08063DFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0806ABEA
	mov r0, r8
	bl sub_08063A90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0806AC68
	str r6, [sp]
	movs r0, #0
	movs r1, #0x11
	b _0806AC38
_0806ABEA:
	mov r0, r8
	cmp r0, #0xef
	bls _0806ABF4
	cmp r0, #0xf7
	bne _0806AC4A
_0806ABF4:
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r1, #1
	adds r0, r7, #0
	bl sub_08009448
	mov r0, sl
	cmp r0, #0x27
	bhi _0806AC26
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r1, #1
	adds r0, r4, #0
	bl sub_08009448
_0806AC26:
	adds r0, r5, #0
	bl sub_08063DFC
	adds r1, r0, #0
	adds r1, #0x11
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r6, [sp]
	movs r0, #0
_0806AC38:
	movs r2, #1
	mov r3, sb
	bl sub_08010FFC
	movs r0, #0
	movs r1, #0
	bl sub_08011024
	b _0806AC68
_0806AC4A:
	adds r0, r7, #0
	movs r1, #2
	bl sub_08009448
	str r6, [sp]
	movs r0, #0
	movs r1, #0x12
	movs r2, #1
	mov r3, sb
	bl sub_08010FFC
	movs r0, #0
	movs r1, #0
	bl sub_08011024
_0806AC68:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806AC78
sub_0806AC78: @ 0x0806AC78
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x44
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	ldr r0, _0806ACA8 @ =gUnk_03006B04
	ldr r7, [r0]
	mov sb, r0
	cmp r2, #0xff
	bne _0806ACD4
	adds r0, r7, #0
	adds r0, #0x7e
	ldrh r1, [r0]
	adds r5, r0, #0
	cmp r1, #1
	bne _0806ACAC
	movs r0, #0
	strh r0, [r5]
	b _0806ACDC
	.align 2, 0
_0806ACA8: .4byte gUnk_03006B04
_0806ACAC:
	cmp r1, #3
	bne _0806ACB6
	movs r0, #2
	strh r0, [r5]
	b _0806ACDC
_0806ACB6:
	cmp r1, #5
	bne _0806ACC0
	movs r0, #4
	strh r0, [r5]
	b _0806ACDC
_0806ACC0:
	cmp r1, #7
	bne _0806ACCA
	movs r0, #6
	strh r0, [r5]
	b _0806ACDC
_0806ACCA:
	cmp r1, #9
	bne _0806ACDC
	movs r0, #8
	strh r0, [r5]
	b _0806ACDC
_0806ACD4:
	adds r0, r7, #0
	adds r0, #0x7e
	strh r2, [r0]
	adds r5, r0, #0
_0806ACDC:
	ldrh r0, [r5]
	adds r1, r0, #0
	cmp r1, #0
	bne _0806AD02
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	mov r3, r8
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	b _0806AFB4
_0806AD02:
	cmp r1, #1
	bne _0806AD24
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	mov r3, r8
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _0806AFB4
_0806AD24:
	subs r0, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bls _0806AD30
	b _0806AF08
_0806AD30:
	ldr r0, _0806ADFC @ =gUnk_08BCA650
	ldr r1, _0806AE00 @ =gUnk_08BCA760
	mov sb, r1
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _0806AE04 @ =gUnk_0201AA00
	ldr r2, [sp, #0x10]
	lsrs r2, r2, #1
	ldr r4, _0806AE08 @ =0x001FFFFF
	ands r2, r4
	bl CpuSet
	ldr r0, [sp, #0x1c]
	ldr r1, _0806AE0C @ =0x0600D800
	ldr r2, [sp, #0x10]
	lsrs r2, r2, #1
	ands r2, r4
	bl CpuSet
	movs r6, #0
	str r6, [sp, #0x38]
	add r0, sp, #0x38
	ldr r1, _0806AE10 @ =0x050001E0
	ldr r2, _0806AE14 @ =0x05000008
	bl CpuSet
	ldrh r0, [r5]
	cmp r0, #5
	beq _0806AD72
	cmp r0, #3
	bne _0806AE24
_0806AD72:
	str r6, [sp, #0x3c]
	add r0, sp, #0x3c
	ldr r1, _0806AE18 @ =gUnk_0201AA20
	ldr r4, _0806AE1C @ =0x05000020
	adds r2, r4, #0
	bl CpuSet
	str r6, [sp, #0x40]
	add r0, sp, #0x40
	ldr r1, _0806AE20 @ =0x0600D820
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0x22
	mov r3, r8
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #0x22
	movs r1, #0
	movs r2, #0
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #0
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #1
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #2
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #3
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #4
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #5
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #6
	bl sub_0800F224
	b _0806AE90
	.align 2, 0
_0806ADFC: .4byte gUnk_08BCA650
_0806AE00: .4byte gUnk_08BCA760
_0806AE04: .4byte gUnk_0201AA00
_0806AE08: .4byte 0x001FFFFF
_0806AE0C: .4byte 0x0600D800
_0806AE10: .4byte 0x050001E0
_0806AE14: .4byte 0x05000008
_0806AE18: .4byte gUnk_0201AA20
_0806AE1C: .4byte 0x05000020
_0806AE20: .4byte 0x0600D820
_0806AE24:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0x22
	mov r3, r8
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0x22
	movs r1, #0
	movs r2, #0
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #0
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #1
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #2
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #3
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #4
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #5
	bl sub_0800F224
	movs r0, #0x22
	movs r1, #0xf
	movs r2, #6
	bl sub_0800F224
_0806AE90:
	ldr r5, _0806AF00 @ =gUnk_0201A000
	movs r0, #0xc0
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	movs r0, #0
	mov r1, sb
	adds r2, r5, #0
	movs r3, #0xf
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _0806AF04 @ =gUnk_0200F800
	ldrh r2, [r4, #8]
	lsrs r2, r2, #1
	bl CpuSet
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xd
	movs r2, #3
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	adds r0, r7, #0
	adds r0, #0x8c
	mov r1, r8
	str r1, [r0]
	adds r0, #4
	str r6, [r0]
	adds r4, r7, #0
	adds r4, #0x94
	movs r0, #0x80
	lsls r0, r0, #0xa
	bl __divsi3
	str r0, [r4]
	adds r0, r7, #0
	adds r0, #0x98
	str r6, [r0]
	b _0806AFB4
	.align 2, 0
_0806AF00: .4byte gUnk_0201A000
_0806AF04: .4byte gUnk_0200F800
_0806AF08:
	cmp r1, #9
	beq _0806AF18
	cmp r1, #7
	beq _0806AF18
	cmp r1, #8
	beq _0806AF18
	cmp r1, #6
	bne _0806AFB4
_0806AF18:
	adds r0, r7, #0
	adds r0, #0x8c
	mov r1, r8
	str r1, [r0]
	adds r0, #4
	movs r6, #0
	str r6, [r0]
	adds r4, r7, #0
	adds r4, #0x94
	movs r0, #0xf0
	lsls r0, r0, #0xc
	bl __divsi3
	str r0, [r4]
	ldrh r0, [r5]
	cmp r0, #9
	beq _0806AF3E
	cmp r0, #7
	bne _0806AF48
_0806AF3E:
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0xf0
	str r0, [r1]
	b _0806AF62
_0806AF48:
	cmp r0, #8
	bne _0806AF58
	adds r1, r7, #0
	adds r1, #0x98
	movs r0, #0xf0
	lsls r0, r0, #1
	str r0, [r1]
	b _0806AF62
_0806AF58:
	cmp r0, #6
	bne _0806AF62
	adds r0, r7, #0
	adds r0, #0x98
	str r6, [r0]
_0806AF62:
	mov r1, sb
	ldr r0, [r1]
	adds r0, #0x9c
	movs r1, #0
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x35
	movs r4, #1
	strb r4, [r0]
	mov r1, sb
	ldr r0, [r1]
	adds r0, #0x9c
	ldrb r0, [r0]
	bl sub_0806B50C
	ldr r1, _0806AFC4 @ =0x04000040
	mov r0, sb
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x9c
	ldr r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #6
	adds r0, #0xa0
	adds r2, r2, r0
	movs r0, #0
	bl sub_080070F8
	mov r1, sb
	ldr r0, [r1]
	adds r0, #0x9c
	ldr r1, [r0]
	subs r4, r4, r1
	str r4, [r0]
	bl sub_08006CA4
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
_0806AFB4:
	add sp, #0x44
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806AFC4: .4byte 0x04000040

	thumb_func_start sub_0806AFC8
sub_0806AFC8: @ 0x0806AFC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	ldr r0, _0806B010 @ =gUnk_03006B04
	ldr r1, [r0]
	str r1, [sp, #0x10]
	adds r5, r1, #0
	adds r5, #0x7e
	ldrh r3, [r5]
	adds r4, r3, #0
	adds r6, r0, #0
	cmp r4, #1
	bhi _0806B01E
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #1
	bne _0806B014
	movs r0, #0
	bl sub_08011358
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0806B00A
	movs r0, #0
	bl sub_08011104
_0806B00A:
	movs r2, #0
	str r2, [sp, #0x18]
	b _0806B4F4
	.align 2, 0
_0806B010: .4byte gUnk_03006B04
_0806B014:
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	str r0, [sp, #0x18]
	b _0806B4F4
_0806B01E:
	subs r0, r3, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bls _0806B02A
	b _0806B186
_0806B02A:
	movs r7, #1
	str r7, [sp, #0x18]
	ldr r2, [sp, #0x10]
	adds r2, #0x98
	ldr r0, [sp, #0x10]
	adds r0, #0x94
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #0xa
	str r2, [sp, #0x38]
	cmp r1, r0
	ble _0806B08C
	str r0, [r2]
	ldrh r0, [r5]
	cmp r0, #4
	bne _0806B082
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xd
	movs r2, #0
	bl sub_0800476C
	movs r0, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800F224
_0806B082:
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	str r0, [sp, #0x18]
_0806B08C:
	movs r4, #0
	mov r1, sp
	adds r1, #0xc
	str r1, [sp, #0x28]
_0806B094:
	add r0, sp, #8
	ldr r1, _0806B0CC @ =gUnk_080BB71A
	movs r2, #4
	bl memcpy
	ldr r0, [sp, #0x28]
	ldr r1, _0806B0D0 @ =gUnk_080BB71E
	movs r2, #4
	bl memcpy
	adds r1, r4, #1
	lsls r0, r1, #5
	ldr r2, _0806B0D4 @ =gUnk_0201AA00
	adds r7, r0, r2
	ldr r2, [sp, #0x38]
	ldr r0, [r2]
	str r1, [sp, #0x30]
	cmp r0, #0
	bge _0806B0BE
	ldr r1, _0806B0D8 @ =0x00000FFF
	adds r0, r0, r1
_0806B0BE:
	asrs r1, r0, #0xc
	lsls r0, r4, #3
	subs r6, r1, r0
	cmp r6, #8
	ble _0806B0DC
	movs r6, #8
	b _0806B0E2
	.align 2, 0
_0806B0CC: .4byte gUnk_080BB71A
_0806B0D0: .4byte gUnk_080BB71E
_0806B0D4: .4byte gUnk_0201AA00
_0806B0D8: .4byte 0x00000FFF
_0806B0DC:
	cmp r6, #0
	bge _0806B0E2
	movs r6, #0
_0806B0E2:
	movs r0, #0
	cmp r0, r6
	bhs _0806B17E
	ldr r2, [sp, #0x10]
	adds r2, #0x7e
	str r2, [sp, #0x34]
	movs r1, #1
	mov r8, r1
	ldr r2, [sp, #0x28]
	adds r5, r2, r4
	add r4, sp
	adds r4, #8
_0806B0FA:
	movs r1, #0
	str r1, [sp, #0x14]
	adds r2, r0, #1
	str r2, [sp, #0x2c]
	adds r3, r0, #0
	mov r1, r8
	ands r3, r1
	lsrs r0, r0, #1
	adds r2, r7, r0
_0806B10C:
	ldr r1, [sp, #0x34]
	ldrh r0, [r1]
	cmp r0, #5
	bne _0806B128
	cmp r3, #0
	beq _0806B11E
	ldrb r1, [r2]
	ldrb r0, [r5]
	b _0806B122
_0806B11E:
	ldrb r1, [r2]
	ldrb r0, [r4]
_0806B122:
	orrs r1, r0
	strb r1, [r2]
	b _0806B13C
_0806B128:
	cmp r0, #4
	bne _0806B13C
	cmp r3, #0
	beq _0806B134
	ldrb r1, [r5]
	b _0806B136
_0806B134:
	ldrb r1, [r4]
_0806B136:
	ldrb r0, [r2]
	bics r0, r1
	strb r0, [r2]
_0806B13C:
	ldr r1, [sp, #0x34]
	ldrh r0, [r1]
	cmp r0, #5
	bne _0806B158
	cmp r3, #0
	beq _0806B14E
	ldrb r1, [r2, #4]
	ldrb r0, [r5]
	b _0806B152
_0806B14E:
	ldrb r1, [r2, #4]
	ldrb r0, [r4]
_0806B152:
	orrs r1, r0
	strb r1, [r2, #4]
	b _0806B16C
_0806B158:
	cmp r0, #4
	bne _0806B16C
	cmp r3, #0
	beq _0806B164
	ldrb r1, [r5]
	b _0806B166
_0806B164:
	ldrb r1, [r4]
_0806B166:
	ldrb r0, [r2, #4]
	bics r0, r1
	strb r0, [r2, #4]
_0806B16C:
	adds r2, #8
	ldr r0, [sp, #0x14]
	adds r0, #2
	str r0, [sp, #0x14]
	cmp r0, #7
	bls _0806B10C
	ldr r0, [sp, #0x2c]
	cmp r0, r6
	blo _0806B0FA
_0806B17E:
	ldr r4, [sp, #0x30]
	cmp r4, #3
	bls _0806B094
	b _0806B368
_0806B186:
	subs r0, r3, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bls _0806B192
	b _0806B37C
_0806B192:
	movs r1, #1
	str r1, [sp, #0x18]
	ldr r2, [sp, #0x10]
	adds r2, #0x98
	ldr r0, [sp, #0x10]
	adds r0, #0x94
	ldr r1, [r2]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r2]
	movs r0, #0x80
	lsls r0, r0, #0xa
	str r2, [sp, #0x38]
	cmp r1, r0
	ble _0806B1F4
	str r0, [r2]
	ldrh r0, [r5]
	cmp r0, #2
	bne _0806B1EA
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xd
	movs r2, #0
	bl sub_0800476C
	movs r0, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800F224
_0806B1EA:
	movs r0, #0
	bl sub_08011104
	movs r2, #0
	str r2, [sp, #0x18]
_0806B1F4:
	movs r4, #0
	mov r7, sp
	adds r7, #0xc
	str r7, [sp, #0x28]
_0806B1FC:
	add r0, sp, #8
	ldr r1, _0806B238 @ =gUnk_080BB722
	movs r2, #4
	bl memcpy
	ldr r0, [sp, #0x28]
	ldr r1, _0806B23C @ =gUnk_080BB726
	movs r2, #4
	bl memcpy
	lsls r1, r4, #5
	ldr r0, _0806B240 @ =gUnk_0201AA80
	subs r0, r0, r1
	str r0, [sp, #0x1c]
	ldr r0, [sp, #0x38]
	ldr r1, [r0]
	cmp r1, #0
	bge _0806B224
	ldr r2, _0806B244 @ =0x00000FFF
	adds r1, r1, r2
_0806B224:
	asrs r1, r1, #0xc
	lsls r0, r4, #3
	subs r1, r1, r0
	str r1, [sp, #0x20]
	cmp r1, #8
	ble _0806B248
	movs r7, #8
	str r7, [sp, #0x20]
	b _0806B252
	.align 2, 0
_0806B238: .4byte gUnk_080BB722
_0806B23C: .4byte gUnk_080BB726
_0806B240: .4byte gUnk_0201AA80
_0806B244: .4byte 0x00000FFF
_0806B248:
	ldr r0, [sp, #0x20]
	cmp r0, #0
	bge _0806B252
	movs r1, #0
	str r1, [sp, #0x20]
_0806B252:
	movs r0, #0
	adds r2, r4, #1
	str r2, [sp, #0x30]
	ldr r7, [sp, #0x20]
	cmp r0, r7
	blo _0806B260
	b _0806B360
_0806B260:
	ldr r1, [sp, #0x10]
	adds r1, #0x7e
	str r1, [sp, #0x34]
	ldr r2, [sp, #0x28]
	adds r2, r2, r4
	str r2, [sp, #0x24]
	add r4, sp
	adds r4, #8
	mov sl, r4
_0806B272:
	movs r7, #0
	str r7, [sp, #0x14]
	adds r1, r0, #1
	str r1, [sp, #0x2c]
	adds r3, r0, #0
	movs r2, #1
	ands r3, r2
	lsrs r0, r0, #1
	subs r0, #3
	ldr r7, [sp, #0x1c]
	subs r0, r7, r0
	adds r2, r0, #0
	mov sb, r2
	mov r8, r2
	mov ip, r2
	str r2, [sp, #0x44]
	adds r6, r2, #0
	adds r5, r2, #0
	adds r4, r2, #0
_0806B298:
	ldr r1, [sp, #0x34]
	ldrh r0, [r1]
	cmp r0, #3
	bne _0806B2BE
	cmp r3, #0
	beq _0806B2B0
	ldr r7, [sp, #0x24]
	ldrb r0, [r7]
	ldrb r1, [r4]
	orrs r1, r0
	strb r1, [r5]
	b _0806B2E8
_0806B2B0:
	mov r1, sl
	ldrb r0, [r1]
	ldrb r1, [r6]
	orrs r1, r0
	ldr r7, [sp, #0x44]
	strb r1, [r7]
	b _0806B2E8
_0806B2BE:
	cmp r0, #2
	bne _0806B2E8
	cmp r3, #0
	beq _0806B2DC
	ldr r0, [sp, #0x24]
	ldrb r0, [r0]
	add r1, sp, #0x3c
	strb r0, [r1]
	mov r7, ip
	ldrb r0, [r7]
	ldrb r1, [r1]
	bics r0, r1
	mov r7, r8
	strb r0, [r7]
	b _0806B2E8
_0806B2DC:
	mov r1, sb
	ldrb r0, [r1]
	mov r7, sl
	ldrb r7, [r7]
	bics r0, r7
	strb r0, [r2]
_0806B2E8:
	ldr r1, [sp, #0x34]
	ldrh r0, [r1]
	cmp r0, #3
	bne _0806B30E
	cmp r3, #0
	beq _0806B300
	ldr r7, [sp, #0x24]
	ldrb r0, [r7]
	ldrb r1, [r4, #4]
	orrs r1, r0
	strb r1, [r5, #4]
	b _0806B338
_0806B300:
	mov r1, sl
	ldrb r0, [r1]
	ldrb r1, [r6, #4]
	orrs r1, r0
	ldr r7, [sp, #0x44]
	strb r1, [r7, #4]
	b _0806B338
_0806B30E:
	cmp r0, #2
	bne _0806B338
	cmp r3, #0
	beq _0806B32C
	ldr r0, [sp, #0x24]
	ldrb r0, [r0]
	add r1, sp, #0x40
	strb r0, [r1]
	mov r7, ip
	ldrb r0, [r7, #4]
	ldrb r1, [r1]
	bics r0, r1
	mov r7, r8
	strb r0, [r7, #4]
	b _0806B338
_0806B32C:
	mov r1, sb
	ldrb r0, [r1, #4]
	mov r7, sl
	ldrb r7, [r7]
	bics r0, r7
	strb r0, [r2, #4]
_0806B338:
	adds r2, #8
	movs r0, #8
	add sb, r0
	add r8, r0
	add ip, r0
	ldr r1, [sp, #0x44]
	adds r1, #8
	str r1, [sp, #0x44]
	adds r6, #8
	adds r5, #8
	adds r4, #8
	ldr r7, [sp, #0x14]
	adds r7, #2
	str r7, [sp, #0x14]
	cmp r7, #7
	bls _0806B298
	ldr r0, [sp, #0x2c]
	ldr r1, [sp, #0x20]
	cmp r0, r1
	blo _0806B272
_0806B360:
	ldr r4, [sp, #0x30]
	cmp r4, #3
	bhi _0806B368
	b _0806B1FC
_0806B368:
	ldr r0, _0806B374 @ =gUnk_0201AA00
	ldr r1, _0806B378 @ =0x0600D800
	movs r2, #0xa0
	bl sub_08006BA4
	b _0806B4F4
	.align 2, 0
_0806B374: .4byte gUnk_0201AA00
_0806B378: .4byte 0x0600D800
_0806B37C:
	cmp r4, #9
	beq _0806B38E
	cmp r4, #7
	beq _0806B38E
	cmp r4, #8
	beq _0806B38E
	cmp r4, #6
	beq _0806B38E
	b _0806B4F0
_0806B38E:
	movs r2, #1
	str r2, [sp, #0x18]
	ldr r1, [r6]
	adds r3, r1, #0
	adds r3, #0x90
	ldr r0, [r3]
	cmp r0, #1
	bne _0806B3BA
	ldr r0, [sp, #0x10]
	adds r0, #0x7e
	ldrh r0, [r0]
	cmp r0, #8
	beq _0806B3AC
	cmp r0, #6
	bne _0806B3B2
_0806B3AC:
	adds r1, #0x35
	movs r0, #0
	strb r0, [r1]
_0806B3B2:
	bl sub_08006FF0
	movs r0, #0
	b _0806B4FA
_0806B3BA:
	ldr r0, [sp, #0x10]
	adds r0, #0x7e
	ldrh r0, [r0]
	cmp r0, #8
	bne _0806B3EC
	adds r2, r1, #0
	adds r2, #0x98
	ldr r0, [r2]
	lsls r0, r0, #0xc
	adds r1, #0x94
	ldr r1, [r1]
	subs r0, r0, r1
	cmp r0, #0
	bge _0806B3DA
	ldr r7, _0806B3E8 @ =0x00000FFF
	adds r0, r0, r7
_0806B3DA:
	asrs r0, r0, #0xc
	str r0, [r2]
	cmp r0, #0xef
	bgt _0806B474
	movs r0, #0xf0
	b _0806B43C
	.align 2, 0
_0806B3E8: .4byte 0x00000FFF
_0806B3EC:
	cmp r0, #6
	bne _0806B418
	adds r2, r1, #0
	adds r2, #0x98
	ldr r0, [r2]
	lsls r0, r0, #0xc
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r0, r1
	cmp r0, #0
	bge _0806B406
	ldr r1, _0806B414 @ =0x00000FFF
	adds r0, r0, r1
_0806B406:
	asrs r0, r0, #0xc
	str r0, [r2]
	cmp r0, #0xef
	ble _0806B474
	movs r0, #0xf0
	b _0806B46E
	.align 2, 0
_0806B414: .4byte 0x00000FFF
_0806B418:
	cmp r0, #9
	bne _0806B448
	adds r2, r1, #0
	adds r2, #0x98
	ldr r0, [r2]
	lsls r0, r0, #0xc
	adds r1, #0x94
	ldr r1, [r1]
	subs r0, r0, r1
	cmp r0, #0
	bge _0806B432
	ldr r7, _0806B444 @ =0x00000FFF
	adds r0, r0, r7
_0806B432:
	asrs r0, r0, #0xc
	str r0, [r2]
	cmp r0, #0
	bgt _0806B474
	movs r0, #0
_0806B43C:
	str r0, [r2]
	ldr r0, [sp, #0x18]
	str r0, [r3]
	b _0806B474
	.align 2, 0
_0806B444: .4byte 0x00000FFF
_0806B448:
	cmp r0, #7
	bne _0806B474
	adds r2, r1, #0
	adds r2, #0x98
	ldr r0, [r2]
	lsls r0, r0, #0xc
	adds r1, #0x94
	ldr r1, [r1]
	adds r0, r0, r1
	cmp r0, #0
	bge _0806B462
	ldr r1, _0806B4B0 @ =0x00000FFF
	adds r0, r0, r1
_0806B462:
	asrs r1, r0, #0xc
	str r1, [r2]
	ldr r0, _0806B4B4 @ =0x000001DF
	cmp r1, r0
	ble _0806B474
	adds r0, #1
_0806B46E:
	str r0, [r2]
	ldr r2, [sp, #0x18]
	str r2, [r3]
_0806B474:
	ldr r1, [r6]
	adds r0, r1, #0
	adds r0, #0x90
	ldr r4, [r0]
	cmp r4, #1
	beq _0806B4BC
	adds r0, #0xc
	ldrb r0, [r0]
	bl sub_0806B58C
	ldr r1, _0806B4B8 @ =0x04000040
	ldr r2, [r6]
	adds r0, r2, #0
	adds r0, #0x9c
	ldr r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #6
	adds r0, #0xa0
	adds r2, r2, r0
	movs r0, #0
	bl sub_080070F8
	ldr r1, [r6]
	adds r1, #0x9c
	ldr r2, [r1]
	movs r0, #1
	subs r0, r0, r2
	str r0, [r1]
	b _0806B4F4
	.align 2, 0
_0806B4B0: .4byte 0x00000FFF
_0806B4B4: .4byte 0x000001DF
_0806B4B8: .4byte 0x04000040
_0806B4BC:
	adds r0, r1, #0
	adds r0, #0x9c
	ldrb r0, [r0]
	bl sub_0806B50C
	ldr r1, _0806B4EC @ =0x04000040
	ldr r2, [r6]
	adds r0, r2, #0
	adds r0, #0x9c
	ldr r3, [r0]
	lsls r0, r3, #2
	adds r0, r0, r3
	lsls r0, r0, #6
	adds r0, #0xa0
	adds r2, r2, r0
	movs r0, #0
	bl sub_080070F8
	ldr r1, [r6]
	adds r1, #0x9c
	ldr r0, [r1]
	subs r0, r4, r0
	str r0, [r1]
	b _0806B4F4
	.align 2, 0
_0806B4EC: .4byte 0x04000040
_0806B4F0:
	movs r7, #0
	str r7, [sp, #0x18]
_0806B4F4:
	ldr r1, [sp, #0x18]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
_0806B4FA:
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806B50C
sub_0806B50C: @ 0x0806B50C
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r6, _0806B53C @ =gUnk_03006B04
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r4, r1, #6
	movs r5, #0x9f
_0806B51C:
	ldr r0, [r6]
	adds r0, #0x98
	ldr r0, [r0]
	subs r0, #0xf0
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r2, r0, #0x10
	movs r3, #0xf0
	lsls r3, r3, #0x10
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	cmp r2, #0
	bge _0806B540
	movs r1, #0
	b _0806B546
	.align 2, 0
_0806B53C: .4byte gUnk_03006B04
_0806B540:
	cmp r2, #0xf0
	ble _0806B546
	movs r1, #0xf0
_0806B546:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0806B552
	movs r3, #0
	b _0806B558
_0806B552:
	cmp r0, #0xf0
	ble _0806B558
	movs r3, #0xf0
_0806B558:
	ldr r0, [r6]
	adds r0, #0x7e
	ldrh r0, [r0]
	cmp r0, #9
	bne _0806B566
	movs r1, #0
	b _0806B56C
_0806B566:
	cmp r0, #7
	bne _0806B56C
	movs r3, #0xf0
_0806B56C:
	ldr r2, [r6]
	adds r2, #0xa0
	adds r2, r2, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x10
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	strh r0, [r2]
	adds r4, #2
	subs r5, #1
	cmp r5, #0
	bge _0806B51C
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0806B58C
sub_0806B58C: @ 0x0806B58C
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r6, #0
	ldr r1, _0806B5CC @ =gUnk_08BCAF80
	mov ip, r1
	ldr r7, _0806B5D0 @ =gUnk_03006B04
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r5, r1, #6
_0806B5A0:
	ldr r0, [r7]
	adds r0, #0x98
	ldr r1, [r0]
	mov r2, ip
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #0xf0
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	asrs r0, r1, #0x10
	movs r2, #0xf0
	lsls r2, r2, #0x10
	adds r1, r1, r2
	lsrs r3, r1, #0x10
	cmp r0, #0
	bge _0806B5D4
	movs r4, #0
	b _0806B5DA
	.align 2, 0
_0806B5CC: .4byte gUnk_08BCAF80
_0806B5D0: .4byte gUnk_03006B04
_0806B5D4:
	cmp r0, #0xf0
	ble _0806B5DA
	movs r4, #0xf0
_0806B5DA:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _0806B5E6
	movs r3, #0
	b _0806B5EC
_0806B5E6:
	cmp r0, #0xf0
	ble _0806B5EC
	movs r3, #0xf0
_0806B5EC:
	ldr r0, [r7]
	adds r0, #0x7e
	ldrh r0, [r0]
	cmp r0, #9
	beq _0806B606
	cmp r0, #7
	beq _0806B5FE
	cmp r0, #8
	bne _0806B602
_0806B5FE:
	movs r3, #0xf0
	b _0806B608
_0806B602:
	cmp r0, #6
	bne _0806B608
_0806B606:
	movs r4, #0
_0806B608:
	ldr r2, [r7]
	adds r2, #0xa0
	adds r2, r2, r5
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x10
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	orrs r0, r1
	strh r0, [r2]
	adds r5, #2
	adds r6, #1
	cmp r6, #0x9f
	ble _0806B5A0
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806B628
sub_0806B628: @ 0x0806B628
	push {r4, lr}
	ldr r1, _0806B694 @ =gUnk_03006B04
	ldr r0, [r1]
	adds r0, #0x98
	ldr r0, [r0]
	subs r0, #0xf0
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	movs r2, #0xf0
	lsls r2, r2, #0x10
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	adds r4, r1, #0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r0, [r4]
	adds r0, #0x35
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl sub_080048CC
	movs r0, #0x3f
	bl sub_08004A34
	movs r0, #0
	bl sub_08004A60
	ldr r2, [r4]
	adds r0, r2, #0
	adds r0, #0x9c
	ldr r1, [r0]
	movs r0, #1
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #6
	adds r2, #0xa0
	adds r2, r2, r1
	ldrh r0, [r2]
	lsrs r0, r0, #8
	movs r1, #0
	ldrb r2, [r2]
	movs r3, #0xa0
	bl sub_0800493C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806B694: .4byte gUnk_03006B04

	thumb_func_start sub_0806B698
sub_0806B698: @ 0x0806B698
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x44
	adds r5, r0, #0
	mov r8, r1
	mov sb, r2
	adds r6, r3, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, _0806B734 @ =gUnk_03006B04
	ldr r4, [r0]
	movs r0, #0xf1
	lsls r0, r0, #2
	adds r4, r4, r0
	ldr r0, _0806B738 @ =gUnk_08BC9EC8
	ldr r1, [r0]
	str r1, [sp, #0x20]
	ldr r0, _0806B73C @ =gUnk_08BC9ECC
	ldr r0, [r0]
	str r0, [sp, #0x24]
	ldr r0, _0806B740 @ =gUnk_08BC9ED0
	ldr r0, [r0]
	str r0, [sp, #0x28]
	ldr r0, _0806B744 @ =gUnk_08BC9F10
	ldr r0, [r0]
	str r0, [sp, #0x2c]
	ldr r0, _0806B748 @ =gUnk_08BC9ED4
	ldr r0, [r0]
	str r0, [sp, #0x30]
	str r0, [sp, #0x34]
	str r0, [sp, #0x38]
	str r1, [sp, #0x3c]
	add r1, sp, #0x20
	mov r0, sp
	movs r2, #0x20
	bl memcpy
	add r0, sp, #0x40
	movs r1, #0
	strh r1, [r0]
	ldr r2, _0806B74C @ =0x01000052
	adds r1, r4, #0
	bl CpuSet
	movs r1, #0
	strh r5, [r4, #4]
	mov r2, r8
	strh r2, [r4, #0x1c]
	strh r6, [r4, #0x24]
	mov r0, sb
	strh r0, [r4, #0x26]
	movs r0, #1
	strh r0, [r4, #0x22]
	lsls r5, r5, #2
	mov r2, sp
	adds r0, r2, r5
	ldr r0, [r0]
	str r0, [r4, #0x14]
	strh r1, [r4]
	add sp, #0x44
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806B734: .4byte gUnk_03006B04
_0806B738: .4byte gUnk_08BC9EC8
_0806B73C: .4byte gUnk_08BC9ECC
_0806B740: .4byte gUnk_08BC9ED0
_0806B744: .4byte gUnk_08BC9F10
_0806B748: .4byte gUnk_08BC9ED4
_0806B74C: .4byte 0x01000052

	thumb_func_start sub_0806B750
sub_0806B750: @ 0x0806B750
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	ldr r0, _0806B778 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r6, r0, r1
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r0, #0xb
	bls _0806B76E
	b _0806BC10
_0806B76E:
	lsls r0, r0, #2
	ldr r1, _0806B77C @ =_0806B780
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806B778: .4byte gUnk_03006B04
_0806B77C: .4byte _0806B780
_0806B780: @ jump table
	.4byte _0806B7B0 @ case 0
	.4byte _0806B814 @ case 1
	.4byte _0806B834 @ case 2
	.4byte _0806B9C4 @ case 3
	.4byte _0806BB64 @ case 4
	.4byte _0806BC10 @ case 5
	.4byte _0806BC10 @ case 6
	.4byte _0806BC10 @ case 7
	.4byte _0806BC10 @ case 8
	.4byte _0806BC10 @ case 9
	.4byte _0806BBAE @ case 10
	.4byte _0806BC00 @ case 11
_0806B7B0:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r1, #0
	strb r2, [r0, #1]
	movs r0, #7
	strb r0, [r1, #2]
	movs r0, #4
	strb r0, [r1, #3]
	adds r0, r1, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x18]
	adds r0, r1, #0
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x1a]
	movs r0, #0x10
	strb r0, [r1, #4]
	ldrh r0, [r6, #4]
	cmp r0, #3
	bne _0806B7F2
	movs r0, #0xa
	b _0806B7F6
_0806B7F2:
	add r1, sp, #0x14
	movs r0, #0xb
_0806B7F6:
	strb r0, [r1, #5]
	movs r0, #0
	str r0, [sp, #0x20]
	str r0, [sp, #0x24]
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	adds r0, r6, #6
	add r1, sp, #0x14
	bl sub_08019944
	ldrh r0, [r6]
	adds r0, #1
	b _0806BC0E
_0806B814:
	adds r4, r6, #6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806B826
	b _0806BC10
_0806B826:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	ldrh r0, [r6]
	adds r0, #1
	b _0806BC0E
_0806B834:
	adds r0, r6, #0
	adds r0, #8
	ldr r2, [r6, #0x14]
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r5, _0806B894 @ =0x44444444
	str r5, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldrh r0, [r6, #4]
	cmp r0, #5
	beq _0806B898
	ldrh r0, [r6, #0x1c]
	bl sub_0806380C
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xa
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	b _0806B8C4
	.align 2, 0
_0806B894: .4byte 0x44444444
_0806B898:
	ldrb r0, [r6, #0x1c]
	bl sub_080639BC
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xa
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r5, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
_0806B8C4:
	ldrh r0, [r6, #0x1c]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0806B9B8 @ =gUnk_02010000
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #7
	bl sub_08069DA8
	movs r0, #8
	mov sb, r0
	movs r0, #0
	bl sub_080012D4
	movs r5, #0
	adds r4, r6, #0
	adds r4, #0x2c
	adds r7, r6, #0
	adds r7, #0x54
	movs r1, #0x7c
	adds r1, r1, r6
	mov r8, r1
_0806B904:
	mov r2, sb
	adds r1, r2, r5
	ldr r0, _0806B9BC @ =gUnk_0200F800
	movs r2, #7
	ldr r3, _0806B9C0 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xe
	blo _0806B904
	movs r0, #0xa
	mov sb, r0
	movs r0, #0
	bl sub_080012D4
	movs r5, #0
_0806B928:
	mov r2, sb
	adds r1, r2, r5
	ldr r0, _0806B9BC @ =gUnk_0200F800
	movs r2, #0xc
	ldr r3, _0806B9C0 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xa
	blo _0806B928
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x54
	bl sub_0800A678
	adds r0, r7, #0
	bl sub_08009F0C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0xb
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0x6c
	movs r2, #0x50
	bl sub_0800A678
	mov r0, r8
	bl sub_08009F0C
	mov r0, r8
	movs r1, #0
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	mov r0, r8
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r0, r8
	movs r1, #0x6c
	movs r2, #0x60
	bl sub_0800A678
	ldrh r0, [r6]
	adds r0, #1
	b _0806BC0E
	.align 2, 0
_0806B9B8: .4byte gUnk_02010000
_0806B9BC: .4byte gUnk_0200F800
_0806B9C0: .4byte gUnk_080BB718
_0806B9C4:
	ldr r0, _0806B9D8 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0806B9DC
	ldrh r0, [r6, #0x22]
	adds r0, #1
	b _0806BA28
	.align 2, 0
_0806B9D8: .4byte gCurrentKeyPress
_0806B9DC:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0806B9EA
	ldrh r0, [r6, #0x22]
	subs r0, #1
	b _0806BA28
_0806B9EA:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0806B9F8
	ldrh r0, [r6, #0x22]
	adds r0, #0xa
	b _0806BA28
_0806B9F8:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0806BA24
	ldr r2, _0806BA1C @ =gKeyNewPress
	ldrh r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806BA2C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0806BA20 @ =0x0000FFFF
	strh r0, [r6, #0x22]
	movs r0, #0xa
	b _0806BC0E
	.align 2, 0
_0806BA1C: .4byte gKeyNewPress
_0806BA20: .4byte 0x0000FFFF
_0806BA24:
	ldrh r0, [r6, #0x22]
	subs r0, #0xa
_0806BA28:
	strh r0, [r6, #0x22]
	ldr r2, _0806BA50 @ =gKeyNewPress
_0806BA2C:
	ldrh r1, [r2]
	movs r2, #1
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0806BA42
	movs r0, #0
	strh r0, [r6, #0x28]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
_0806BA42:
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bgt _0806BA54
	strh r2, [r6, #0x22]
	b _0806BA60
	.align 2, 0
_0806BA50: .4byte gKeyNewPress
_0806BA54:
	movs r2, #0x22
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #0x24]
	cmp r0, r1
	ble _0806BA60
	strh r1, [r6, #0x22]
_0806BA60:
	ldr r5, _0806BB04 @ =gUnk_0200F800
	ldr r3, _0806BB08 @ =gUnk_080BB72C
	adds r0, r5, #0
	movs r1, #0x12
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _0806BB0C @ =gUnk_080BB730
	adds r0, r5, #0
	movs r1, #0x13
	movs r2, #0xb
	bl sub_08001284
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	movs r2, #0xd
	mov r8, r2
	movs r7, #0xb
	movs r4, #2
	str r2, [sp]
	str r7, [sp, #4]
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldr r3, _0806BB10 @ =gUnk_080BB734
	adds r0, r5, #0
	movs r1, #0xf
	movs r2, #0xb
	bl sub_08001284
	ldrh r1, [r6, #0x24]
	movs r0, #0x10
	str r0, [sp]
	str r7, [sp, #4]
	str r1, [sp, #8]
	str r4, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldrh r0, [r6, #4]
	cmp r0, #3
	beq _0806BB24
	cmp r0, #6
	beq _0806BB24
	ldrh r1, [r6, #0x26]
	movs r2, #0x22
	ldrsh r0, [r6, r2]
	muls r0, r1, r0
	movs r1, #7
	str r7, [sp]
	mov r2, r8
	str r2, [sp, #4]
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldrh r0, [r6, #4]
	subs r0, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bls _0806BB18
	ldr r3, _0806BB14 @ =gUnk_080BB738
	adds r0, r5, #0
	movs r1, #0x12
	movs r2, #0xd
	bl sub_08001284
	b _0806BB24
	.align 2, 0
_0806BB04: .4byte gUnk_0200F800
_0806BB08: .4byte gUnk_080BB72C
_0806BB0C: .4byte gUnk_080BB730
_0806BB10: .4byte gUnk_080BB734
_0806BB14: .4byte gUnk_080BB738
_0806BB18:
	ldr r3, _0806BB60 @ =gUnk_080BB73C
	adds r0, r5, #0
	movs r1, #0x12
	movs r2, #0xd
	bl sub_08001284
_0806BB24:
	adds r4, r6, #0
	adds r4, #0x2c
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	ldrh r2, [r6, #0x24]
	cmp r0, r2
	beq _0806BB4C
	adds r0, r4, #0
	bl sub_0800A778
_0806BB4C:
	adds r4, r6, #0
	adds r4, #0x7c
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _0806BC10
	b _0806BBA6
	.align 2, 0
_0806BB60: .4byte gUnk_080BB73C
_0806BB64:
	ldrh r0, [r6, #0x28]
	cmp r0, #0
	bne _0806BB7C
	adds r4, r6, #0
	adds r4, #0x2c
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	b _0806BB9A
_0806BB7C:
	cmp r0, #0x14
	bne _0806BB8E
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	adds r4, r6, #0
	adds r4, #0x2c
	b _0806BB9A
_0806BB8E:
	adds r4, r6, #0
	adds r4, #0x2c
	cmp r0, #0x23
	bne _0806BB9A
	movs r0, #0xa
	strh r0, [r6]
_0806BB9A:
	ldrh r0, [r6, #0x28]
	adds r0, #1
	strh r0, [r6, #0x28]
	adds r0, r4, #0
	bl sub_08009FF8
_0806BBA6:
	adds r0, r4, #0
	bl sub_0800A778
	b _0806BC10
_0806BBAE:
	movs r5, #1
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #8
	movs r2, #7
	movs r3, #0xe
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0xa
	movs r2, #0xc
	movs r3, #0xa
	bl sub_0801BBB8
	movs r0, #7
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0xc
	movs r2, #0xb
	movs r3, #0xe
	bl sub_0801BBB8
	adds r0, r6, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r6, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r6, #6
	bl sub_0801BA7C
	ldrh r0, [r6]
	adds r0, #1
	b _0806BC0E
_0806BC00:
	adds r0, r6, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0806BC10
_0806BC0E:
	strh r0, [r6]
_0806BC10:
	movs r2, #0
	ldrsh r0, [r6, r2]
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806BC24
sub_0806BC24: @ 0x0806BC24
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0806BC84 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r5, r0, r1
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0806BC88 @ =0x01000052
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	strh r4, [r5, #4]
	strh r6, [r5, #0x20]
	strh r6, [r5, #0x1c]
	cmp r4, #0
	beq _0806BC64
	cmp r4, #2
	beq _0806BC64
	cmp r4, #3
	beq _0806BC64
	cmp r4, #6
	beq _0806BC64
	cmp r4, #5
	bne _0806BC74
_0806BC64:
	ldrh r0, [r5, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #0x1e]
_0806BC74:
	cmp r4, #4
	bne _0806BC7A
	strh r6, [r5, #0x1e]
_0806BC7A:
	cmp r4, #0
	bne _0806BC8C
	movs r0, #1
	b _0806BCA6
	.align 2, 0
_0806BC84: .4byte gUnk_03006B04
_0806BC88: .4byte 0x01000052
_0806BC8C:
	cmp r4, #1
	beq _0806BCA4
	cmp r4, #2
	bne _0806BC98
	movs r0, #1
	b _0806BCA6
_0806BC98:
	cmp r4, #3
	bne _0806BCA0
	movs r0, #1
	b _0806BCA6
_0806BCA0:
	cmp r4, #6
	bne _0806BCA8
_0806BCA4:
	movs r0, #0
_0806BCA6:
	strh r0, [r5, #0x22]
_0806BCA8:
	cmp r4, #0
	bne _0806BCB4
	ldr r0, _0806BCB0 @ =gUnk_08BC9ED8
	b _0806BCF6
	.align 2, 0
_0806BCB0: .4byte gUnk_08BC9ED8
_0806BCB4:
	cmp r4, #1
	bne _0806BCC0
	ldr r0, _0806BCBC @ =gUnk_08BC9F0C
	b _0806BCF6
	.align 2, 0
_0806BCBC: .4byte gUnk_08BC9F0C
_0806BCC0:
	cmp r4, #2
	bne _0806BCCC
	ldr r0, _0806BCC8 @ =gUnk_08BC9F14
	b _0806BCF6
	.align 2, 0
_0806BCC8: .4byte gUnk_08BC9F14
_0806BCCC:
	cmp r4, #3
	bne _0806BCD8
	ldr r0, _0806BCD4 @ =gUnk_08BC9FB8
	b _0806BCF6
	.align 2, 0
_0806BCD4: .4byte gUnk_08BC9FB8
_0806BCD8:
	cmp r4, #4
	bne _0806BCE4
	ldr r0, _0806BCE0 @ =gUnk_08BC9FDC
	b _0806BCF6
	.align 2, 0
_0806BCE0: .4byte gUnk_08BC9FDC
_0806BCE4:
	cmp r4, #5
	bne _0806BCF0
	ldr r0, _0806BCEC @ =gUnk_08BC9FDC
	b _0806BCF6
	.align 2, 0
_0806BCEC: .4byte gUnk_08BC9FDC
_0806BCF0:
	cmp r4, #6
	bne _0806BCFA
	ldr r0, _0806BD08 @ =gUnk_08BC9EDC
_0806BCF6:
	ldr r0, [r0]
	str r0, [r5, #0x14]
_0806BCFA:
	movs r0, #0
	strh r0, [r5]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806BD08: .4byte gUnk_08BC9EDC

	thumb_func_start sub_0806BD0C
sub_0806BD0C: @ 0x0806BD0C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	ldr r0, _0806BD34 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r6, r0, r1
	movs r2, #0
	ldrsh r0, [r6, r2]
	cmp r0, #0xb
	bls _0806BD28
	b _0806C284
_0806BD28:
	lsls r0, r0, #2
	ldr r1, _0806BD38 @ =_0806BD3C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806BD34: .4byte gUnk_03006B04
_0806BD38: .4byte _0806BD3C
_0806BD3C: @ jump table
	.4byte _0806BD6C @ case 0
	.4byte _0806BDDA @ case 1
	.4byte _0806BDFA @ case 2
	.4byte _0806C10C @ case 3
	.4byte _0806C1C8 @ case 4
	.4byte _0806C284 @ case 5
	.4byte _0806C284 @ case 6
	.4byte _0806C284 @ case 7
	.4byte _0806C284 @ case 8
	.4byte _0806C284 @ case 9
	.4byte _0806C212 @ case 10
	.4byte _0806C274 @ case 11
_0806BD6C:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r1, #0
	strb r2, [r0, #1]
	movs r0, #7
	strb r0, [r1, #2]
	movs r0, #4
	strb r0, [r1, #3]
	adds r0, r1, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x18]
	adds r0, r1, #0
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x1a]
	ldrh r0, [r6, #4]
	cmp r0, #2
	beq _0806BDAE
	cmp r0, #0
	beq _0806BDAE
	cmp r0, #6
	bne _0806BDB4
_0806BDAE:
	add r1, sp, #0x14
	movs r0, #0x11
	b _0806BDB8
_0806BDB4:
	add r1, sp, #0x14
	movs r0, #0x10
_0806BDB8:
	strb r0, [r1, #4]
	add r2, sp, #0x14
	movs r1, #0
	movs r0, #0xb
	strb r0, [r2, #5]
	str r1, [sp, #0x20]
	str r1, [sp, #0x24]
	movs r0, #0x6a
	bl sub_080147B8
	adds r0, r6, #6
	add r1, sp, #0x14
	bl sub_08019944
	ldrh r0, [r6]
	adds r0, #1
	b _0806C282
_0806BDDA:
	adds r4, r6, #6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806BDEC
	b _0806C284
_0806BDEC:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	ldrh r0, [r6]
	adds r0, #1
	b _0806C282
_0806BDFA:
	adds r0, r6, #0
	adds r0, #0xe
	ldr r1, _0806BE90 @ =gUnk_08BCA080
	ldr r2, [r1]
	ldrh r3, [r6, #0x18]
	adds r3, #6
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806BE94 @ =0x44444444
	mov r8, r1
	str r1, [sp, #4]
	movs r5, #0
	str r5, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x10
	ldr r1, _0806BE98 @ =gUnk_08BCA084
	ldr r2, [r1]
	ldrh r3, [r6, #0x18]
	adds r3, #6
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r5, [sp, #8]
	str r7, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldrh r4, [r6, #4]
	cmp r4, #0
	beq _0806BE66
	cmp r4, #5
	beq _0806BE66
	cmp r4, #4
	beq _0806BE66
	cmp r4, #6
	bne _0806BE9C
_0806BE66:
	adds r0, r6, #0
	adds r0, #8
	ldr r2, [r6, #0x14]
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806BE94 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	b _0806BEC6
	.align 2, 0
_0806BE90: .4byte gUnk_08BCA080
_0806BE94: .4byte 0x44444444
_0806BE98: .4byte gUnk_08BCA084
_0806BE9C:
	cmp r4, #1
	beq _0806BEA4
	cmp r4, #3
	bne _0806BECE
_0806BEA4:
	adds r0, r6, #0
	adds r0, #8
	ldr r2, [r6, #0x14]
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r5, [sp, #8]
	str r7, [sp, #0xc]
	str r5, [sp, #0x10]
_0806BEC6:
	movs r1, #1
	bl sub_0800B1AC
	b _0806BEFA
_0806BECE:
	cmp r4, #2
	bne _0806BEFA
	adds r0, r6, #0
	adds r0, #8
	ldr r2, [r6, #0x14]
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
_0806BEFA:
	ldrh r0, [r6, #4]
	cmp r0, #0
	beq _0806BF14
	cmp r0, #2
	beq _0806BF14
	cmp r0, #3
	beq _0806BF14
	cmp r0, #5
	beq _0806BF14
	cmp r0, #4
	beq _0806BF14
	cmp r0, #6
	bne _0806BF90
_0806BF14:
	ldrb r0, [r6, #0x1e]
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrh r0, [r6, #4]
	cmp r0, #4
	beq _0806BF38
	ldrh r0, [r6, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0806BF38
	adds r5, #0x6f
_0806BF38:
	ldrb r0, [r6, #0x1e]
	bl sub_080639BC
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xa
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806BF88 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldr r0, _0806BF8C @ =gUnk_02010000
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #7
	adds r2, r5, #0
	bl sub_08069DA8
	b _0806C068
	.align 2, 0
_0806BF88: .4byte 0x44444444
_0806BF8C: .4byte gUnk_02010000
_0806BF90:
	cmp r0, #1
	bne _0806C068
	ldrh r1, [r6, #0x1c]
	ldr r0, _0806BFF8 @ =0x0000012B
	cmp r1, r0
	bhi _0806C004
	ldrh r0, [r6, #0x1c]
	bl sub_0806380C
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xa
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806BFFC @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldrh r0, [r6, #0x1c]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0806C000 @ =gUnk_02010000
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #7
	bl sub_08069DA8
	b _0806C068
	.align 2, 0
_0806BFF8: .4byte 0x0000012B
_0806BFFC: .4byte 0x44444444
_0806C000: .4byte gUnk_02010000
_0806C004:
	adds r0, r1, #0
	subs r0, #0x2c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063C70
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xa
	ldrh r3, [r6, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806C098 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	ldrb r0, [r6, #0x1c]
	subs r0, #0x2c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063C98
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0806C09C @ =gUnk_02010000
	ldrh r3, [r6, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r1, [r6, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #7
	bl sub_08069DA8
_0806C068:
	ldrh r0, [r6, #4]
	cmp r0, #2
	beq _0806C072
	cmp r0, #6
	bne _0806C0A8
_0806C072:
	movs r7, #8
	movs r0, #0
	bl sub_080012D4
	movs r5, #0
	adds r4, r6, #0
	adds r4, #0x2c
_0806C080:
	adds r1, r7, r5
	ldr r0, _0806C0A0 @ =gUnk_0200F800
	movs r2, #7
	ldr r3, _0806C0A4 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xf
	blo _0806C080
	b _0806C0CC
	.align 2, 0
_0806C098: .4byte 0x44444444
_0806C09C: .4byte gUnk_02010000
_0806C0A0: .4byte gUnk_0200F800
_0806C0A4: .4byte gUnk_080BB718
_0806C0A8:
	movs r7, #8
	movs r0, #0
	bl sub_080012D4
	movs r5, #0
	adds r4, r6, #0
	adds r4, #0x2c
_0806C0B6:
	adds r1, r7, r5
	ldr r0, _0806C104 @ =gUnk_0200F800
	movs r2, #7
	ldr r3, _0806C108 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xe
	blo _0806C0B6
_0806C0CC:
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	movs r0, #0x22
	ldrsh r2, [r6, r0]
	lsls r2, r2, #0x14
	movs r1, #0xa0
	lsls r1, r1, #0xf
	adds r2, r2, r1
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0x58
	bl sub_0800A678
	ldrh r0, [r6]
	adds r0, #1
	b _0806C282
	.align 2, 0
_0806C104: .4byte gUnk_0200F800
_0806C108: .4byte gUnk_080BB718
_0806C10C:
	ldr r0, _0806C12C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0806C130
	ldrh r0, [r6, #0x22]
	adds r1, r0, #0
	subs r0, r1, #1
	strh r0, [r6, #0x22]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0806C14A
	movs r0, #0
	b _0806C148
	.align 2, 0
_0806C12C: .4byte gCurrentKeyPress
_0806C130:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0806C15C
	ldrh r1, [r6, #0x22]
	adds r0, r1, #1
	strh r0, [r6, #0x22]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _0806C14A
	movs r0, #1
_0806C148:
	strh r0, [r6, #0x22]
_0806C14A:
	movs r2, #0x22
	ldrsh r0, [r6, r2]
	cmp r1, r0
	beq _0806C1AC
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0806C1AC
_0806C15C:
	ldr r0, _0806C17C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806C18E
	movs r1, #0x22
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _0806C180
	strh r0, [r6, #0x28]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	b _0806C1AC
	.align 2, 0
_0806C17C: .4byte gKeyNewPress
_0806C180:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0xa
	strh r0, [r6]
	b _0806C1AC
_0806C18E:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806C1AC
	ldr r0, _0806C1A8 @ =0x0000FFFF
	strh r0, [r6, #0x22]
	movs r0, #0xa
	strh r0, [r6]
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	b _0806C284
	.align 2, 0
_0806C1A8: .4byte 0x0000FFFF
_0806C1AC:
	adds r4, r6, #0
	adds r4, #0x2c
	movs r0, #0x22
	ldrsh r2, [r6, r0]
	lsls r2, r2, #0x14
	movs r1, #0xa0
	lsls r1, r1, #0xf
	adds r2, r2, r1
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0x58
	bl sub_0800A678
	b _0806C204
_0806C1C8:
	ldrh r0, [r6, #0x28]
	cmp r0, #0
	bne _0806C1E0
	adds r4, r6, #0
	adds r4, #0x2c
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	b _0806C1FE
_0806C1E0:
	cmp r0, #0x14
	bne _0806C1F2
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	adds r4, r6, #0
	adds r4, #0x2c
	b _0806C1FE
_0806C1F2:
	adds r4, r6, #0
	adds r4, #0x2c
	cmp r0, #0x23
	bne _0806C1FE
	movs r0, #0xa
	strh r0, [r6]
_0806C1FE:
	ldrh r0, [r6, #0x28]
	adds r0, #1
	strh r0, [r6, #0x28]
_0806C204:
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _0806C284
_0806C212:
	ldrh r0, [r6, #4]
	cmp r0, #2
	beq _0806C21C
	cmp r0, #6
	bne _0806C220
_0806C21C:
	movs r5, #0xf
	b _0806C222
_0806C220:
	movs r5, #0xe
_0806C222:
	movs r0, #1
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #8
	movs r2, #7
	adds r3, r5, #0
	bl sub_0801BBB8
	movs r0, #7
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0xc
	movs r2, #0xc
	adds r3, r5, #0
	bl sub_0801BBB8
	adds r0, r6, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r6, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r6, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r6, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r6, #6
	bl sub_0801BA7C
	ldrh r0, [r6]
	adds r0, #1
	b _0806C282
_0806C274:
	adds r0, r6, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0806C284
_0806C282:
	strh r0, [r6]
_0806C284:
	movs r2, #0
	ldrsh r0, [r6, r2]
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0806C294
sub_0806C294: @ 0x0806C294
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	ldr r0, _0806C2C0 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r7, r0, r1
	movs r2, #0
	ldrsh r0, [r7, r2]
	cmp r0, #0x15
	bls _0806C2B6
	bl _0806D03E
_0806C2B6:
	lsls r0, r0, #2
	ldr r1, _0806C2C4 @ =_0806C2C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806C2C0: .4byte gUnk_03006B04
_0806C2C4: .4byte _0806C2C8
_0806C2C8: @ jump table
	.4byte _0806C320 @ case 0
	.4byte _0806C39C @ case 1
	.4byte _0806C3C0 @ case 2
	.4byte _0806CAF4 @ case 3
	.4byte _0806CBBC @ case 4
	.4byte _0806D03E @ case 5
	.4byte _0806D03E @ case 6
	.4byte _0806D03E @ case 7
	.4byte _0806D03E @ case 8
	.4byte _0806D03E @ case 9
	.4byte _0806D03E @ case 10
	.4byte _0806D03E @ case 11
	.4byte _0806D03E @ case 12
	.4byte _0806D03E @ case 13
	.4byte _0806D03E @ case 14
	.4byte _0806D03E @ case 15
	.4byte _0806D03E @ case 16
	.4byte _0806D03E @ case 17
	.4byte _0806D03E @ case 18
	.4byte _0806D03E @ case 19
	.4byte _0806CFDC @ case 20
	.4byte _0806D02E @ case 21
_0806C320:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	movs r3, #1
	strb r3, [r0, #6]
	strb r2, [r0, #1]
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C348
	movs r0, #6
	strb r0, [r1, #2]
	movs r0, #3
	strb r0, [r1, #3]
	b _0806C350
_0806C348:
	add r0, sp, #0x14
	movs r1, #6
	strb r1, [r0, #2]
	strb r3, [r0, #3]
_0806C350:
	add r0, sp, #0x14
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r7, #0x18]
	add r0, sp, #0x14
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r7, #0x1a]
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C374
	add r1, sp, #0x14
	movs r0, #0x13
	strb r0, [r1, #4]
	movs r0, #0xf
	b _0806C37C
_0806C374:
	add r1, sp, #0x14
	movs r0, #0x13
	strb r0, [r1, #4]
	movs r0, #0x11
_0806C37C:
	strb r0, [r1, #5]
	movs r0, #0
	str r0, [sp, #0x20]
	str r0, [sp, #0x24]
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	adds r0, r7, #6
	add r1, sp, #0x14
	bl sub_08019944
	ldrh r0, [r7]
	adds r0, #1
	bl _0806D03C
_0806C39C:
	adds r4, r7, #6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806C3B0
	bl _0806D03E
_0806C3B0:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	ldrh r0, [r7]
	adds r0, #1
	bl _0806D03C
_0806C3C0:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C458
	ldrh r0, [r7, #0x1c]
	cmp r0, #0xc7
	bhi _0806C438
	ldrh r0, [r7, #0x1c]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	ldrh r0, [r7, #0x1c]
	bl sub_0806380C
	mov r8, r0
	ldr r3, _0806C430 @ =gUnk_0200F800
	mov sb, r3
	ldrh r1, [r7, #0x18]
	adds r1, #0xf
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r2, [r7, #0x1a]
	adds r2, #2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r3, _0806C434 @ =gUnk_080BB740
	mov r0, sb
	bl sub_08001284
	ldrh r5, [r7, #0x18]
	adds r5, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldrh r4, [r7, #0x1a]
	adds r4, #2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldrh r0, [r7, #0x1c]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #2
	str r5, [sp]
	str r4, [sp, #4]
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	mov r0, sb
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	b _0806C4B6
	.align 2, 0
_0806C430: .4byte gUnk_0200F800
_0806C434: .4byte gUnk_080BB740
_0806C438:
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	ldrb r0, [r7, #0x1c]
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063C70
	mov r8, r0
	b _0806C4B6
_0806C458:
	ldrh r0, [r7, #0x1c]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	ldrh r0, [r7, #0x1c]
	bl sub_0806380C
	mov r8, r0
	ldr r0, _0806C4E8 @ =gUnk_0200F800
	mov sb, r0
	ldrh r1, [r7, #0x18]
	adds r1, #0xf
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r2, [r7, #0x1a]
	adds r2, #2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r3, _0806C4EC @ =gUnk_080BB740
	bl sub_08001284
	ldrh r5, [r7, #0x18]
	adds r5, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldrh r4, [r7, #0x1a]
	adds r4, #2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldrh r0, [r7, #0x1c]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #2
	str r5, [sp]
	str r4, [sp, #4]
	str r0, [sp, #8]
	str r1, [sp, #0xc]
	mov r0, sb
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
_0806C4B6:
	ldrh r4, [r7, #4]
	cmp r4, #0
	bne _0806C4F4
	adds r0, r7, #0
	adds r0, #8
	ldr r2, [r7, #0x14]
	ldrh r3, [r7, #0x18]
	adds r3, #5
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806C4F0 @ =0x44444444
	str r1, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	b _0806C520
	.align 2, 0
_0806C4E8: .4byte gUnk_0200F800
_0806C4EC: .4byte gUnk_080BB740
_0806C4F0: .4byte 0x44444444
_0806C4F4:
	adds r0, r7, #0
	adds r0, #8
	ldr r2, [r7, #0x14]
	ldrh r3, [r7, #0x18]
	adds r3, #5
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #0xa
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806C634 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
_0806C520:
	adds r0, r7, #0
	adds r0, #0xa
	ldrh r3, [r7, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r6, _0806C634 @ =0x44444444
	str r6, [sp, #4]
	movs r5, #0
	str r5, [sp, #8]
	movs r1, #2
	mov sb, r1
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	mov r2, r8
	bl sub_0800B1AC
	ldr r2, _0806C638 @ =gUnk_02010000
	mov r8, r2
	ldrh r3, [r7, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r0, [r7, #0x1a]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	movs r1, #7
	mov r2, sl
	bl sub_08069DA8
	ldrh r0, [r7, #4]
	cmp r0, #1
	bne _0806C5D8
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_080639BC
	adds r2, r0, #0
	adds r0, r7, #0
	adds r0, #0xc
	ldrh r3, [r7, #0x18]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	adds r0, r4, #0
	bl sub_080639E8
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldrh r3, [r7, #0x18]
	adds r3, #1
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r0, [r7, #0x1a]
	adds r0, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	movs r1, #8
	bl sub_08069DA8
_0806C5D8:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C644
	adds r0, r7, #0
	adds r0, #0xe
	ldr r1, _0806C63C @ =gUnk_08BCA080
	ldr r2, [r1]
	ldrh r3, [r7, #0x18]
	adds r3, #8
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #0xa
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x10
	ldr r1, _0806C640 @ =gUnk_08BCA084
	ldr r2, [r1]
	ldrh r3, [r7, #0x18]
	adds r3, #8
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #0xc
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	b _0806C698
	.align 2, 0
_0806C634: .4byte 0x44444444
_0806C638: .4byte gUnk_02010000
_0806C63C: .4byte gUnk_08BCA080
_0806C640: .4byte gUnk_08BCA084
_0806C644:
	adds r0, r7, #0
	adds r0, #0xe
	ldr r1, _0806C6E8 @ =gUnk_08BCA080
	ldr r2, [r1]
	ldrh r3, [r7, #0x18]
	adds r3, #8
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #0xc
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x10
	ldr r1, _0806C6EC @ =gUnk_08BCA084
	ldr r2, [r1]
	ldrh r3, [r7, #0x18]
	adds r3, #8
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0x1a]
	adds r1, #0xe
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	bl sub_0800B1AC
_0806C698:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C6F8
	movs r5, #7
	movs r0, #0
	bl sub_080012D4
	movs r4, #0
	movs r2, #0x2c
	adds r2, r2, r7
	mov sb, r2
_0806C6AE:
	adds r1, r5, r4
	ldr r0, _0806C6F0 @ =gUnk_0200F800
	movs r2, #6
	ldr r3, _0806C6F4 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x11
	blo _0806C6AE
	movs r5, #7
	movs r0, #0
	bl sub_080012D4
	movs r4, #0
_0806C6CE:
	adds r1, r5, r4
	ldr r0, _0806C6F0 @ =gUnk_0200F800
	movs r2, #0xa
	ldr r3, _0806C6F4 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x11
	blo _0806C6CE
	b _0806C73E
	.align 2, 0
_0806C6E8: .4byte gUnk_08BCA080
_0806C6EC: .4byte gUnk_08BCA084
_0806C6F0: .4byte gUnk_0200F800
_0806C6F4: .4byte gUnk_080BB718
_0806C6F8:
	movs r5, #7
	movs r0, #0
	bl sub_080012D4
	movs r4, #0
	movs r3, #0x2c
	adds r3, r3, r7
	mov sb, r3
_0806C708:
	adds r1, r5, r4
	ldr r0, _0806C7D0 @ =gUnk_0200F800
	movs r2, #4
	ldr r3, _0806C7D4 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x11
	blo _0806C708
	movs r5, #7
	movs r0, #0
	bl sub_080012D4
	movs r4, #0
_0806C728:
	adds r1, r5, r4
	ldr r0, _0806C7D0 @ =gUnk_0200F800
	movs r2, #0xa
	ldr r3, _0806C7D4 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0x11
	blo _0806C728
_0806C73E:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C81C
	ldr r6, _0806C7D0 @ =gUnk_0200F800
	ldr r3, _0806C7D8 @ =gUnk_080BB744
	adds r0, r6, #0
	movs r1, #9
	movs r2, #7
	bl sub_08001284
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xc
	movs r4, #7
	movs r5, #4
	str r1, [sp]
	str r4, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldr r3, _0806C7DC @ =gUnk_080BB734
	adds r0, r6, #0
	movs r1, #0x10
	movs r2, #7
	bl sub_08001284
	bl GetPlayerMaxHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	movs r0, #3
	bl sub_080012D4
	ldrh r4, [r7, #0x1c]
	cmp r4, #0xc7
	bhi _0806C7E0
	ldrh r0, [r7, #0x1c]
	bl sub_080638C8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xb
	movs r2, #8
	movs r3, #5
	str r1, [sp]
	str r2, [sp, #4]
	str r0, [sp, #8]
	str r3, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	b _0806C814
	.align 2, 0
_0806C7D0: .4byte gUnk_0200F800
_0806C7D4: .4byte gUnk_080BB718
_0806C7D8: .4byte gUnk_080BB744
_0806C7DC: .4byte gUnk_080BB734
_0806C7E0:
	subs r4, #0xc8
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08018954
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08038C70
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xb
	movs r2, #8
	movs r3, #5
	str r1, [sp]
	str r2, [sp, #4]
	str r0, [sp, #8]
	str r3, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
_0806C814:
	movs r0, #0
	bl sub_080012D4
	b _0806C8B6
_0806C81C:
	ldr r4, _0806C8E0 @ =gUnk_0200F800
	ldr r3, _0806C8E4 @ =gUnk_080BB748
	adds r0, r4, #0
	movs r1, #9
	movs r2, #7
	bl sub_08001284
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0xd
	movs r5, #7
	movs r2, #3
	mov r8, r2
	str r1, [sp]
	str r5, [sp, #4]
	str r0, [sp, #8]
	str r2, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldr r3, _0806C8E8 @ =gUnk_080BB734
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #7
	bl sub_08001284
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x11
	str r1, [sp]
	str r5, [sp, #4]
	str r0, [sp, #8]
	mov r3, r8
	str r3, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	movs r0, #3
	bl sub_080012D4
	ldrh r0, [r7, #0x1c]
	bl sub_080638E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xc
	movs r2, #8
	movs r3, #4
	str r1, [sp]
	str r2, [sp, #4]
	str r0, [sp, #8]
	str r3, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	movs r0, #0
	bl sub_080012D4
_0806C8B6:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806C99C
	bl GetPlayerMaxHp
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r4, #0
	beq _0806C8EC
	lsls r0, r6, #0xc
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	b _0806C8EE
	.align 2, 0
_0806C8E0: .4byte gUnk_0200F800
_0806C8E4: .4byte gUnk_080BB748
_0806C8E8: .4byte gUnk_080BB734
_0806C8EC:
	movs r1, #0
_0806C8EE:
	movs r0, #0x40
	muls r0, r1, r0
	lsrs r0, r0, #0xc
	cmp r4, #0
	bne _0806C8FE
	cmp r6, #0
	bne _0806C8FE
	movs r0, #0x40
_0806C8FE:
	lsrs r4, r0, #3
	movs r1, #7
	mov ip, r1
	mov r2, ip
	ands r2, r0
	mov ip, r2
	movs r1, #0
	ldr r0, _0806C994 @ =gUnk_0200FA5A
	strh r1, [r0]
	ldr r5, _0806C998 @ =gUnk_0200FA5C
	strh r1, [r5]
	adds r0, #4
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0
	cmp r0, r4
	bhs _0806C970
	movs r3, #0x5f
	ldr r1, _0806C994 @ =gUnk_0200FA5A
	movs r2, #3
	ands r2, r4
	cmp r4, #0
	ble _0806C956
	cmp r2, #0
	beq _0806C960
	cmp r2, #1
	ble _0806C956
	cmp r2, #2
	ble _0806C950
	strh r3, [r1]
	adds r1, r5, #0
	movs r0, #1
_0806C950:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
_0806C956:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
	cmp r0, r4
	bhs _0806C970
_0806C960:
	strh r3, [r1]
	strh r3, [r1, #2]
	strh r3, [r1, #4]
	strh r3, [r1, #6]
	adds r1, #8
	adds r0, #4
	cmp r0, r4
	blo _0806C960
_0806C970:
	cmp r6, #0
	beq _0806C982
	cmp r4, #0
	bne _0806C982
	mov r3, ip
	cmp r3, #0
	bne _0806C988
	movs r1, #1
	mov ip, r1
_0806C982:
	mov r2, ip
	cmp r2, #0
	beq _0806CA7E
_0806C988:
	lsls r0, r0, #1
	ldr r3, _0806C994 @ =gUnk_0200FA5A
	adds r0, r0, r3
	mov r1, ip
	adds r1, #0x57
	b _0806CA7C
	.align 2, 0
_0806C994: .4byte gUnk_0200FA5A
_0806C998: .4byte gUnk_0200FA5C
_0806C99C:
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponMaxDur
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r4, #0
	beq _0806C9CA
	lsls r0, r6, #0xc
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	b _0806C9CC
_0806C9CA:
	movs r1, #0
_0806C9CC:
	movs r0, #0x40
	muls r0, r1, r0
	lsrs r0, r0, #0xc
	cmp r4, #0
	bne _0806C9DC
	cmp r6, #0
	bne _0806C9DC
	movs r0, #0x40
_0806C9DC:
	lsrs r4, r0, #3
	movs r1, #7
	mov ip, r1
	mov r2, ip
	ands r2, r0
	mov ip, r2
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	ldr r0, _0806CAE0 @ =gUnk_0200FA5A
	strh r1, [r0]
	ldr r5, _0806CAE4 @ =gUnk_0200FA5C
	strh r1, [r5]
	adds r0, #4
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0
	cmp r0, r4
	bhs _0806CA54
	ldr r3, _0806CAE8 @ =0x0000105F
	ldr r1, _0806CAE0 @ =gUnk_0200FA5A
	movs r2, #3
	ands r2, r4
	cmp r4, #0
	ble _0806CA3A
	cmp r2, #0
	beq _0806CA44
	cmp r2, #1
	ble _0806CA3A
	cmp r2, #2
	ble _0806CA34
	strh r3, [r1]
	adds r1, r5, #0
	movs r0, #1
_0806CA34:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
_0806CA3A:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
	cmp r0, r4
	bhs _0806CA54
_0806CA44:
	strh r3, [r1]
	strh r3, [r1, #2]
	strh r3, [r1, #4]
	strh r3, [r1, #6]
	adds r1, #8
	adds r0, #4
	cmp r0, r4
	blo _0806CA44
_0806CA54:
	cmp r6, #0
	beq _0806CA66
	cmp r4, #0
	bne _0806CA66
	mov r3, ip
	cmp r3, #0
	bne _0806CA6C
	movs r1, #1
	mov ip, r1
_0806CA66:
	mov r2, ip
	cmp r2, #0
	beq _0806CA7E
_0806CA6C:
	lsls r0, r0, #1
	ldr r3, _0806CAE0 @ =gUnk_0200FA5A
	adds r0, r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	mov r1, ip
	adds r1, #0x57
	orrs r1, r2
_0806CA7C:
	strh r1, [r0]
_0806CA7E:
	movs r2, #0x65
	ldr r0, _0806CAEC @ =gUnk_02010258
	strh r2, [r0]
	movs r1, #0x66
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldr r1, _0806CAF0 @ =gUnk_0201026A
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r3, #0
	orrs r2, r0
	strh r2, [r1]
	mov r0, sb
	bl sub_08009F0C
	mov r0, sb
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	mov r0, sb
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r0, sb
	movs r1, #0x60
	movs r2, #0x68
	bl sub_0800A678
	ldrh r0, [r7]
	adds r0, #1
	b _0806D03C
	.align 2, 0
_0806CAE0: .4byte gUnk_0200FA5A
_0806CAE4: .4byte gUnk_0200FA5C
_0806CAE8: .4byte 0x0000105F
_0806CAEC: .4byte gUnk_02010258
_0806CAF0: .4byte gUnk_0201026A
_0806CAF4:
	ldr r0, _0806CB18 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0806CB1C
	ldrh r0, [r7, #0x22]
	adds r1, r0, #0
	subs r0, r1, #1
	strh r0, [r7, #0x22]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0806CB12
	movs r0, #0
	strh r0, [r7, #0x22]
_0806CB12:
	movs r2, #0x22
	ldrsh r0, [r7, r2]
	b _0806CB3E
	.align 2, 0
_0806CB18: .4byte gCurrentKeyPress
_0806CB1C:
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0806CB4C
	ldrh r1, [r7, #0x22]
	adds r0, r1, #1
	strh r0, [r7, #0x22]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _0806CB3A
	movs r0, #1
	strh r0, [r7, #0x22]
_0806CB3A:
	movs r3, #0x22
	ldrsh r0, [r7, r3]
_0806CB3E:
	cmp r1, r0
	beq _0806CB90
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0806CB90
_0806CB4C:
	ldr r0, _0806CB6C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806CB78
	movs r1, #0x22
	ldrsh r0, [r7, r1]
	cmp r0, #1
	bne _0806CB70
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	b _0806CB8C
	.align 2, 0
_0806CB6C: .4byte gKeyNewPress
_0806CB70:
	strh r2, [r7, #0x28]
	ldrh r0, [r7]
	adds r0, #1
	b _0806CB8E
_0806CB78:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806CB90
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0806CBB8 @ =0x0000FFFF
	strh r0, [r7, #0x22]
_0806CB8C:
	movs r0, #0x14
_0806CB8E:
	strh r0, [r7]
_0806CB90:
	adds r4, r7, #0
	adds r4, #0x2c
	movs r3, #0x22
	ldrsh r2, [r7, r3]
	lsls r2, r2, #0x14
	movs r0, #0xd0
	lsls r0, r0, #0xf
	adds r2, r2, r0
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0x60
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _0806D03E
	.align 2, 0
_0806CBB8: .4byte 0x0000FFFF
_0806CBBC:
	ldrh r0, [r7, #0x28]
	cmp r0, #0
	bne _0806CBD6
	adds r4, r7, #0
	adds r4, #0x2c
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	mov sb, r4
	b _0806CC2C
_0806CBD6:
	cmp r0, #0x10
	bne _0806CC0C
	movs r0, #0x72
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _0806CC08 @ =0x00007FFF
	movs r0, #0
	movs r3, #0xc
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r1, #0x2c
	adds r1, r1, r7
	mov sb, r1
	b _0806CC2C
	.align 2, 0
_0806CC08: .4byte 0x00007FFF
_0806CC0C:
	movs r2, #0x2c
	adds r2, r2, r7
	mov sb, r2
	cmp r0, #0x20
	bne _0806CC2C
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _0806CC48 @ =0x00007FFF
	movs r0, #0
	movs r3, #0x32
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
_0806CC2C:
	ldrh r0, [r7, #0x28]
	cmp r0, #0x17
	bhi _0806CC34
	b _0806CFBC
_0806CC34:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806CC4C
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	bl GetPlayerMaxHp
	b _0806CC64
	.align 2, 0
_0806CC48: .4byte 0x00007FFF
_0806CC4C:
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponMaxDur
_0806CC64:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r6, r0, r5
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806CC9A
	ldrh r4, [r7, #0x1c]
	cmp r4, #0xc7
	bhi _0806CC7E
	ldrh r0, [r7, #0x1c]
	bl sub_080638C8
	b _0806CCA0
_0806CC7E:
	subs r4, #0xc8
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08018954
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08038C70
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	b _0806CCA4
_0806CC9A:
	ldrh r0, [r7, #0x1c]
	bl sub_080638E0
_0806CCA0:
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
_0806CCA4:
	cmp r4, r6
	bgt _0806CCAC
	lsls r0, r4, #0xc
	b _0806CCAE
_0806CCAC:
	lsls r0, r6, #0xc
_0806CCAE:
	movs r1, #0x28
	bl __divsi3
	adds r6, r0, #0
	ldrh r0, [r7, #0x28]
	cmp r0, #0x3f
	bhi _0806CCD8
	lsls r0, r5, #0xc
	ldrh r1, [r7, #0x28]
	subs r1, #0x18
	muls r1, r6, r1
	adds r0, r0, r1
	cmp r0, #0
	bge _0806CCCE
	ldr r3, _0806CCD4 @ =0x00000FFF
	adds r0, r0, r3
_0806CCCE:
	asrs r6, r0, #0xc
	b _0806CD18
	.align 2, 0
_0806CCD4: .4byte 0x00000FFF
_0806CCD8:
	cmp r0, #0x40
	bne _0806CD10
	adds r6, r5, r4
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0806CCF2
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	bl SetPlayerCurrentHp
	bl GetPlayerCurrentHp
	b _0806CD0A
_0806CCF2:
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	bl SetBagWeaponCurrentDur
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponCurrentDur
_0806CD0A:
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	b _0806CD18
_0806CD10:
	cmp r0, #0x4a
	bne _0806CD18
	movs r0, #0x14
	strh r0, [r7]
_0806CD18:
	ldrh r0, [r7, #0x28]
	cmp r0, #0x40
	bls _0806CD20
	b _0806CFBC
_0806CD20:
	ldrh r0, [r7, #4]
	cmp r0, #0
	beq _0806CD28
	b _0806CE6C
_0806CD28:
	ldr r4, _0806CDA8 @ =gUnk_0200F800
	ldr r3, _0806CDAC @ =gUnk_080BB74C
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #8
	bl sub_08001284
	ldr r3, _0806CDB0 @ =gUnk_080BB744
	adds r0, r4, #0
	movs r1, #9
	movs r2, #7
	bl sub_08001284
	movs r0, #0xc
	movs r5, #7
	movs r1, #4
	mov r8, r1
	str r0, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	str r1, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldr r3, _0806CDB4 @ =gUnk_080BB734
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #7
	bl sub_08001284
	bl GetPlayerMaxHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x11
	str r1, [sp]
	str r5, [sp, #4]
	str r0, [sp, #8]
	mov r2, r8
	str r2, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	bl GetPlayerMaxHp
	lsls r0, r0, #0x10
	lsls r1, r6, #0x10
	lsrs r4, r0, #0x10
	lsrs r6, r1, #0x10
	cmp r4, #0
	beq _0806CDB8
	lsls r0, r6, #0xc
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	b _0806CDBA
	.align 2, 0
_0806CDA8: .4byte gUnk_0200F800
_0806CDAC: .4byte gUnk_080BB74C
_0806CDB0: .4byte gUnk_080BB744
_0806CDB4: .4byte gUnk_080BB734
_0806CDB8:
	movs r1, #0
_0806CDBA:
	movs r0, #0x40
	muls r0, r1, r0
	lsrs r0, r0, #0xc
	cmp r4, #0
	bne _0806CDCA
	cmp r6, #0
	bne _0806CDCA
	movs r0, #0x40
_0806CDCA:
	lsrs r4, r0, #3
	movs r3, #7
	mov ip, r3
	mov r1, ip
	ands r1, r0
	mov ip, r1
	movs r1, #0
	ldr r0, _0806CE64 @ =gUnk_0200FA5A
	strh r1, [r0]
	ldr r5, _0806CE68 @ =gUnk_0200FA5C
	strh r1, [r5]
	adds r0, #4
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0
	cmp r0, r4
	bhs _0806CE3C
	movs r3, #0x5f
	ldr r1, _0806CE64 @ =gUnk_0200FA5A
	movs r2, #3
	ands r2, r4
	cmp r4, #0
	ble _0806CE22
	cmp r2, #0
	beq _0806CE2C
	cmp r2, #1
	ble _0806CE22
	cmp r2, #2
	ble _0806CE1C
	strh r3, [r1]
	adds r1, r5, #0
	movs r0, #1
_0806CE1C:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
_0806CE22:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
	cmp r0, r4
	bhs _0806CE3C
_0806CE2C:
	strh r3, [r1]
	strh r3, [r1, #2]
	strh r3, [r1, #4]
	strh r3, [r1, #6]
	adds r1, #8
	adds r0, #4
	cmp r0, r4
	blo _0806CE2C
_0806CE3C:
	cmp r6, #0
	beq _0806CE4E
	cmp r4, #0
	bne _0806CE4E
	mov r2, ip
	cmp r2, #0
	bne _0806CE56
	movs r3, #1
	mov ip, r3
_0806CE4E:
	mov r1, ip
	cmp r1, #0
	bne _0806CE56
	b _0806CFBC
_0806CE56:
	lsls r0, r0, #1
	ldr r2, _0806CE64 @ =gUnk_0200FA5A
	adds r0, r0, r2
	mov r1, ip
	adds r1, #0x57
	b _0806CFBA
	.align 2, 0
_0806CE64: .4byte gUnk_0200FA5A
_0806CE68: .4byte gUnk_0200FA5C
_0806CE6C:
	ldr r4, _0806CEF8 @ =gUnk_0200F800
	ldr r3, _0806CEFC @ =gUnk_080BB74C
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #8
	bl sub_08001284
	ldr r3, _0806CF00 @ =gUnk_080BB748
	adds r0, r4, #0
	movs r1, #9
	movs r2, #7
	bl sub_08001284
	movs r0, #0xd
	movs r5, #7
	movs r3, #3
	mov r8, r3
	str r0, [sp]
	str r5, [sp, #4]
	str r6, [sp, #8]
	str r3, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldr r3, _0806CF04 @ =gUnk_080BB734
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #7
	bl sub_08001284
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x11
	str r1, [sp]
	str r5, [sp, #4]
	str r0, [sp, #8]
	mov r0, r8
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #1
	bl sub_0806F304
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsls r1, r6, #0x10
	lsrs r4, r0, #0x10
	lsrs r6, r1, #0x10
	cmp r4, #0
	beq _0806CF08
	lsls r0, r6, #0xc
	adds r1, r4, #0
	bl __divsi3
	adds r1, r0, #0
	b _0806CF0A
	.align 2, 0
_0806CEF8: .4byte gUnk_0200F800
_0806CEFC: .4byte gUnk_080BB74C
_0806CF00: .4byte gUnk_080BB748
_0806CF04: .4byte gUnk_080BB734
_0806CF08:
	movs r1, #0
_0806CF0A:
	movs r0, #0x40
	muls r0, r1, r0
	lsrs r0, r0, #0xc
	cmp r4, #0
	bne _0806CF1A
	cmp r6, #0
	bne _0806CF1A
	movs r0, #0x40
_0806CF1A:
	lsrs r4, r0, #3
	movs r1, #7
	mov ip, r1
	mov r2, ip
	ands r2, r0
	mov ip, r2
	movs r1, #0
	movs r0, #0x80
	lsls r0, r0, #5
	orrs r1, r0
	ldr r0, _0806CFD0 @ =gUnk_0200FA5A
	strh r1, [r0]
	ldr r5, _0806CFD4 @ =gUnk_0200FA5C
	strh r1, [r5]
	adds r0, #4
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	movs r0, #0
	cmp r0, r4
	bhs _0806CF92
	ldr r3, _0806CFD8 @ =0x0000105F
	ldr r1, _0806CFD0 @ =gUnk_0200FA5A
	movs r2, #3
	ands r2, r4
	cmp r4, #0
	ble _0806CF78
	cmp r2, #0
	beq _0806CF82
	cmp r2, #1
	ble _0806CF78
	cmp r2, #2
	ble _0806CF72
	strh r3, [r1]
	adds r1, r5, #0
	movs r0, #1
_0806CF72:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
_0806CF78:
	strh r3, [r1]
	adds r1, #2
	adds r0, #1
	cmp r0, r4
	bhs _0806CF92
_0806CF82:
	strh r3, [r1]
	strh r3, [r1, #2]
	strh r3, [r1, #4]
	strh r3, [r1, #6]
	adds r1, #8
	adds r0, #4
	cmp r0, r4
	blo _0806CF82
_0806CF92:
	cmp r6, #0
	beq _0806CFA4
	cmp r4, #0
	bne _0806CFA4
	mov r3, ip
	cmp r3, #0
	bne _0806CFAA
	movs r1, #1
	mov ip, r1
_0806CFA4:
	mov r2, ip
	cmp r2, #0
	beq _0806CFBC
_0806CFAA:
	lsls r0, r0, #1
	ldr r3, _0806CFD0 @ =gUnk_0200FA5A
	adds r0, r0, r3
	movs r2, #0x80
	lsls r2, r2, #5
	mov r1, ip
	adds r1, #0x57
	orrs r1, r2
_0806CFBA:
	strh r1, [r0]
_0806CFBC:
	ldrh r0, [r7, #0x28]
	adds r0, #1
	strh r0, [r7, #0x28]
	mov r0, sb
	bl sub_08009FF8
	mov r0, sb
	bl sub_0800A778
	b _0806D03E
	.align 2, 0
_0806CFD0: .4byte gUnk_0200FA5A
_0806CFD4: .4byte gUnk_0200FA5C
_0806CFD8: .4byte 0x0000105F
_0806CFDC:
	movs r0, #0
	bl sub_08011104
	movs r0, #8
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r1, #7
	movs r2, #3
	movs r3, #0x11
	bl sub_0801BBB8
	adds r0, r7, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x10
	bl sub_0800B4E4
	ldrh r0, [r7, #4]
	cmp r0, #1
	bne _0806D022
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0806D022:
	adds r0, r7, #6
	bl sub_0801BA7C
	ldrh r0, [r7]
	adds r0, #1
	b _0806D03C
_0806D02E:
	adds r0, r7, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0806D03E
_0806D03C:
	strh r0, [r7]
_0806D03E:
	movs r1, #0
	ldrsh r0, [r7, r1]
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806D054
sub_0806D054: @ 0x0806D054
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r6, r0, #0
	mov r8, r1
	movs r0, #1
	mov sb, r0
	cmp r6, #0xf7
	bhi _0806D0BC
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	lsls r0, r6, #0x18
	lsrs r5, r0, #0x18
	adds r0, r5, #0
	bl sub_080639BC
	ldr r1, _0806D0A4 @ =gUnk_03005170
	str r0, [r1]
	ldr r0, _0806D0A8 @ =gUnk_08BCA088
	ldr r0, [r0]
	str r0, [r1, #4]
	ldr r4, _0806D0AC @ =gUnk_03006B1C
	adds r0, r5, #0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r4]
	mov r1, r8
	cmp r1, #0
	bge _0806D09A
	b _0806D2AA
_0806D09A:
	cmp r7, #0x1e
	bne _0806D0B0
	movs r2, #0
	mov sb, r2
	b _0806D146
	.align 2, 0
_0806D0A4: .4byte gUnk_03005170
_0806D0A8: .4byte gUnk_08BCA088
_0806D0AC: .4byte gUnk_03006B1C
_0806D0B0:
	adds r0, r5, #0
	bl sub_08015854
	bl sub_08015A28
	b _0806D12A
_0806D0BC:
	ldr r0, _0806D108 @ =0xFFFFFED4
	adds r1, r6, r0
	ldr r0, _0806D10C @ =0x000002BB
	cmp r1, r0
	bls _0806D0C8
	b _0806D208
_0806D0C8:
	lsls r0, r1, #0x10
	lsrs r5, r0, #0x10
	adds r0, r5, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	bl sub_0806380C
	ldr r1, _0806D110 @ =gUnk_03005170
	str r0, [r1]
	ldr r0, _0806D114 @ =gUnk_08BCA088
	ldr r0, [r0]
	str r0, [r1, #4]
	ldr r4, _0806D118 @ =gUnk_03006B1C
	adds r0, r5, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r4]
	mov r1, r8
	cmp r1, #0
	blt _0806D154
	adds r0, r7, #0
	cmp r0, #0x63
	bne _0806D11C
	movs r2, #0
	mov sb, r2
	b _0806D146
	.align 2, 0
_0806D108: .4byte 0xFFFFFED4
_0806D10C: .4byte 0x000002BB
_0806D110: .4byte gUnk_03005170
_0806D114: .4byte gUnk_08BCA088
_0806D118: .4byte gUnk_03006B1C
_0806D11C:
	add r0, r8
	cmp r0, #0x63
	ble _0806D138
	adds r0, r5, #0
	movs r1, #0x63
	bl SetItemQuantity
_0806D12A:
	ldr r0, _0806D134 @ =gUnk_03006B18
	mov r2, sb
	strh r2, [r0]
	b _0806D2AA
	.align 2, 0
_0806D134: .4byte gUnk_03006B18
_0806D138:
	mov r0, r8
	adds r1, r7, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl SetItemQuantity
_0806D146:
	ldr r0, _0806D150 @ =gUnk_03006B18
	mov r1, sb
	strh r1, [r0]
	b _0806D2AA
	.align 2, 0
_0806D150: .4byte gUnk_03006B18
_0806D154:
	adds r0, r7, #0
	cmp r0, #0
	bne _0806D160
	movs r2, #0
	mov sb, r2
	b _0806D18A
_0806D160:
	add r0, r8
	cmp r0, #0
	bge _0806D17C
	adds r0, r5, #0
	movs r1, #0
	bl SetItemQuantity
	ldr r0, _0806D178 @ =gUnk_03006B18
	mov r2, sb
	strh r2, [r0]
	b _0806D190
	.align 2, 0
_0806D178: .4byte gUnk_03006B18
_0806D17C:
	mov r0, r8
	adds r1, r7, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl SetItemQuantity
_0806D18A:
	ldr r0, _0806D200 @ =gUnk_03006B18
	mov r1, sb
	strh r1, [r0]
_0806D190:
	movs r5, #0
	movs r0, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0806D204 @ =0xFFFFFED4
	adds r4, r6, r2
	cmp r0, r4
	bne _0806D1AE
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D270
_0806D1AE:
	movs r5, #1
	movs r0, #1
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r4
	bne _0806D1C8
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D270
_0806D1C8:
	movs r5, #2
	movs r0, #2
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r4
	bne _0806D1E2
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D270
_0806D1E2:
	movs r5, #3
	movs r0, #3
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r4
	bne _0806D2AA
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0806D270
	b _0806D2AA
	.align 2, 0
_0806D200: .4byte gUnk_03006B18
_0806D204: .4byte 0xFFFFFED4
_0806D208:
	ldr r0, _0806D230 @ =0x000003E7
	cmp r6, r0
	bls _0806D2AA
	ldr r1, _0806D234 @ =0xFFFFFC18
	adds r0, r6, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	bl sub_08018E3C
	ldr r6, _0806D238 @ =0x0098967F
	cmp r0, r6
	bne _0806D244
	movs r2, #0
	mov sb, r2
	ldr r0, _0806D23C @ =gUnk_03006B18
	strh r4, [r0]
	ldr r0, _0806D240 @ =gUnk_03006B1C
	mov r1, sb
	strh r1, [r0]
	b _0806D2A2
	.align 2, 0
_0806D230: .4byte 0x000003E7
_0806D234: .4byte 0xFFFFFC18
_0806D238: .4byte 0x0098967F
_0806D23C: .4byte gUnk_03006B18
_0806D240: .4byte gUnk_03006B1C
_0806D244:
	bl sub_08018E3C
	lsls r1, r4, #0x10
	asrs r5, r1, #0x10
	adds r0, r0, r5
	cmp r0, r6
	bhi _0806D27A
	bl sub_08018E3C
	adds r0, r0, r5
	bl SetMoney
	ldr r0, _0806D268 @ =gUnk_03006B18
	strh r4, [r0]
	ldr r0, _0806D26C @ =gUnk_03006B1C
	mov r2, sb
	strh r2, [r0]
	b _0806D2A2
	.align 2, 0
_0806D268: .4byte gUnk_03006B18
_0806D26C: .4byte gUnk_03006B1C
_0806D270:
	adds r0, r5, #0
	movs r1, #0xff
	bl SetBattleAidItem
	b _0806D2AA
_0806D27A:
	bl sub_08018E3C
	adds r0, r0, r5
	cmp r0, r6
	bls _0806D2A2
	ldr r4, _0806D2DC @ =gUnk_03006B18
	bl sub_08018E3C
	ldr r2, _0806D2E0 @ =0x0000967F
	adds r1, r2, #0
	subs r1, r1, r0
	strh r1, [r4]
	ldr r0, _0806D2E4 @ =gUnk_03006B1C
	mov r1, sb
	strh r1, [r0]
	bl sub_08018E3C
	adds r0, r0, r5
	bl SetMoney
_0806D2A2:
	ldr r0, _0806D2E8 @ =gUnk_03005170
	ldr r1, _0806D2EC @ =gUnk_08BCA088
	ldr r1, [r1]
	str r1, [r0]
_0806D2AA:
	ldr r0, _0806D2F0 @ =gUnk_03005578
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0806D2F4 @ =gUnk_03005888
	strh r1, [r0]
	ldr r0, _0806D2F8 @ =gUnk_030056B8
	strh r1, [r0]
	ldr r0, _0806D2FC @ =gUnk_03006B08
	strh r1, [r0]
	ldr r1, _0806D300 @ =gUnk_03006B14
	movs r0, #0x10
	strh r0, [r1]
	ldr r1, _0806D304 @ =gUnk_03006B10
	ldr r0, _0806D308 @ =gUnk_02012800
	str r0, [r1]
	ldr r1, _0806D30C @ =gUnk_03006AFC
	ldr r0, _0806D310 @ =0x06002800
	str r0, [r1]
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806D2DC: .4byte gUnk_03006B18
_0806D2E0: .4byte 0x0000967F
_0806D2E4: .4byte gUnk_03006B1C
_0806D2E8: .4byte gUnk_03005170
_0806D2EC: .4byte gUnk_08BCA088
_0806D2F0: .4byte gUnk_03005578
_0806D2F4: .4byte gUnk_03005888
_0806D2F8: .4byte gUnk_030056B8
_0806D2FC: .4byte gUnk_03006B08
_0806D300: .4byte gUnk_03006B14
_0806D304: .4byte gUnk_03006B10
_0806D308: .4byte gUnk_02012800
_0806D30C: .4byte gUnk_03006AFC
_0806D310: .4byte 0x06002800

	thumb_func_start sub_0806D314
sub_0806D314: @ 0x0806D314
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x70
	movs r0, #1
	str r0, [sp, #0x6c]
	ldr r1, _0806D358 @ =gKeyNewPress
	ldrh r2, [r1]
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	bne _0806D338
	movs r0, #0xa
	ands r0, r2
	cmp r0, #0
	beq _0806D340
_0806D338:
	ldr r0, _0806D35C @ =gUnk_03006B08
	add r1, sp, #0x6c
	ldrh r1, [r1]
	strh r1, [r0]
_0806D340:
	ldr r0, _0806D360 @ =gUnk_03006B0C
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #9
	bls _0806D34E
	b _0806D71E
_0806D34E:
	lsls r0, r1, #2
	ldr r1, _0806D364 @ =_0806D368
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806D358: .4byte gKeyNewPress
_0806D35C: .4byte gUnk_03006B08
_0806D360: .4byte gUnk_03006B0C
_0806D364: .4byte _0806D368
_0806D368: @ jump table
	.4byte _0806D390 @ case 0
	.4byte _0806D3CC @ case 1
	.4byte _0806D59C @ case 2
	.4byte _0806D6E2 @ case 3
	.4byte _0806D5E0 @ case 4
	.4byte _0806D630 @ case 5
	.4byte _0806D670 @ case 6
	.4byte _0806D6C8 @ case 7
	.4byte _0806D6E2 @ case 8
	.4byte _0806D704 @ case 9
_0806D390:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #2]
	ldr r0, _0806D3C4 @ =gUnk_03006B14
	ldrh r0, [r0]
	strb r0, [r1, #3]
	movs r0, #0x1c
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r2, [r0, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r2, [r0, #6]
	str r2, [sp, #0x20]
	str r2, [sp, #0x24]
	ldr r0, _0806D3C8 @ =gUnk_030056B8
	bl sub_08019944
	b _0806D6EE
	.align 2, 0
_0806D3C4: .4byte gUnk_03006B14
_0806D3C8: .4byte gUnk_030056B8
_0806D3CC:
	ldr r4, _0806D570 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806D3DE
	b _0806D71E
_0806D3DE:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	movs r5, #0
	ldr r0, _0806D574 @ =gUnk_03005170
	ldr r1, [r0]
	ldrh r0, [r1]
	add r6, sp, #0x28
	add r3, sp, #0x50
	mov sl, r3
	cmp r0, #0
	beq _0806D40E
	adds r2, r6, #0
_0806D3FA:
	ldrh r0, [r1]
	strh r0, [r2]
	adds r1, #2
	adds r2, #2
	adds r5, #1
	cmp r5, #7
	bgt _0806D40E
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806D3FA
_0806D40E:
	ldr r4, _0806D574 @ =gUnk_03005170
	ldr r0, [r4]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r3, #0
	ldr r1, [r4, #4]
	ldrh r0, [r1]
	cmp r0, #0
	beq _0806D43C
	lsls r0, r5, #1
	adds r2, r0, r6
_0806D428:
	ldrh r0, [r1]
	strh r0, [r2]
	adds r1, #2
	adds r2, #2
	adds r3, #1
	cmp r3, #7
	bgt _0806D43C
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806D428
_0806D43C:
	adds r0, r5, r3
	lsls r0, r0, #1
	adds r0, r6, r0
	movs r1, #0
	mov sb, r1
	mov r2, sb
	strh r2, [r0]
	adds r0, r7, r3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	asrs r0, r0, #3
	adds r0, #3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r3, #0x1c
	subs r3, r3, r4
	lsrs r0, r3, #0x1f
	adds r3, r3, r0
	asrs r3, r3, #1
	adds r3, #1
	lsls r3, r3, #0x10
	ldr r0, _0806D578 @ =gUnk_03005888
	lsrs r4, r3, #0x10
	movs r1, #0x80
	lsls r1, r1, #0xa
	adds r3, r3, r1
	asrs r3, r3, #0x10
	ldr r7, _0806D57C @ =gUnk_03006B14
	ldrh r1, [r7]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806D580 @ =0x44444444
	str r1, [sp, #4]
	mov r2, sb
	str r2, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r2, [sp, #0x10]
	movs r1, #0
	adds r2, r6, #0
	bl sub_0800B1AC
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	adds r1, r0, #0
	ldr r0, _0806D584 @ =gUnk_03006AFC
	ldr r0, [r0]
	ldr r3, _0806D588 @ =0xFA000500
	adds r6, r0, r3
	cmp r6, #0
	bge _0806D4B4
	ldr r2, _0806D58C @ =0xFA00051F
	adds r6, r0, r2
_0806D4B4:
	asrs r6, r6, #5
	adds r0, r1, #0
	mov r1, sl
	bl sub_08001CBC
	ldr r3, _0806D590 @ =gUnk_03006B1C
	mov r8, r3
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #7
	mov r2, sl
	ldr r0, [r2, #0x10]
	adds r0, r0, r1
	ldr r5, _0806D594 @ =gUnk_03006B10
	ldr r1, [r5]
	movs r3, #0xa0
	lsls r3, r3, #3
	adds r1, r1, r3
	ldr r2, _0806D598 @ =0x04000020
	bl CpuSet
	mov r1, r8
	ldrb r0, [r1]
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	ldr r2, [r5]
	lsls r4, r4, #1
	lsls r1, r1, #6
	adds r1, r1, r2
	adds r1, r4, r1
	adds r1, #0x40
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	orrs r0, r6
	strh r0, [r1]
	mov r3, r8
	ldrb r0, [r3]
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	ldr r2, [r5]
	lsls r1, r1, #6
	adds r1, r1, r2
	adds r1, r4, r1
	adds r1, #0x42
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r2, r6, #1
	orrs r0, r2
	strh r0, [r1]
	mov r3, r8
	ldrb r0, [r3]
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	ldr r2, [r5]
	lsls r1, r1, #6
	adds r1, r1, r2
	adds r1, r4, r1
	adds r1, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r2, r6, #2
	orrs r0, r2
	strh r0, [r1]
	mov r3, r8
	ldrb r0, [r3]
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	ldr r2, [r5]
	lsls r1, r1, #6
	adds r1, r1, r2
	adds r4, r4, r1
	adds r4, #0x82
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r6, #3
	orrs r0, r6
	strh r0, [r4]
	movs r0, #0x70
	movs r1, #0
	bl sub_080147B8
	mov r0, sb
	mov r3, r8
	strh r0, [r3]
	b _0806D6EE
	.align 2, 0
_0806D570: .4byte gUnk_030056B8
_0806D574: .4byte gUnk_03005170
_0806D578: .4byte gUnk_03005888
_0806D57C: .4byte gUnk_03006B14
_0806D580: .4byte 0x44444444
_0806D584: .4byte gUnk_03006AFC
_0806D588: .4byte 0xFA000500
_0806D58C: .4byte 0xFA00051F
_0806D590: .4byte gUnk_03006B1C
_0806D594: .4byte gUnk_03006B10
_0806D598: .4byte 0x04000020
_0806D59C:
	ldr r1, _0806D5D8 @ =gUnk_03006B1C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	bgt _0806D5AE
	b _0806D71E
_0806D5AE:
	movs r0, #0xf
	strh r0, [r1]
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806D5BE
	b _0806D6DA
_0806D5BE:
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806D5C8
	b _0806D6DA
_0806D5C8:
	ldr r0, _0806D5DC @ =gUnk_03006B08
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	beq _0806D5D4
	b _0806D71E
_0806D5D4:
	b _0806D6DA
	.align 2, 0
_0806D5D8: .4byte gUnk_03006B1C
_0806D5DC: .4byte gUnk_03006B08
_0806D5E0:
	ldr r4, _0806D60C @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0806D5F2
	b _0806D71E
_0806D5F2:
	ldr r0, _0806D610 @ =gUnk_03006B18
	movs r3, #0
	ldrsh r1, [r0, r3]
	cmp r1, #1
	bne _0806D61C
	ldr r0, _0806D614 @ =gUnk_03006B08
	strh r2, [r0]
	ldr r0, _0806D618 @ =gUnk_03006B0C
	strh r2, [r0]
	movs r0, #0
	str r0, [sp, #0x6c]
	b _0806D71E
	.align 2, 0
_0806D60C: .4byte gUnk_030056B8
_0806D610: .4byte gUnk_03006B18
_0806D614: .4byte gUnk_03006B08
_0806D618: .4byte gUnk_03006B0C
_0806D61C:
	cmp r1, #0
	beq _0806D622
	b _0806D71E
_0806D622:
	ldr r0, _0806D62C @ =gUnk_03005888
	strh r1, [r0]
	strh r1, [r4]
	b _0806D6EE
	.align 2, 0
_0806D62C: .4byte gUnk_03005888
_0806D630:
	add r4, sp, #0x50
	movs r1, #0
	strb r1, [r4]
	strb r1, [r4, #1]
	movs r0, #1
	strb r0, [r4, #2]
	ldr r0, _0806D668 @ =gUnk_03006B14
	ldrh r0, [r0]
	strb r0, [r4, #3]
	movs r0, #0x1c
	strb r0, [r4, #4]
	movs r0, #4
	strb r0, [r4, #5]
	strb r1, [r4, #7]
	movs r0, #5
	strb r0, [r4, #8]
	strb r1, [r4, #6]
	str r1, [r4, #0xc]
	str r1, [r4, #0x10]
	movs r0, #0x6a
	bl sub_080147B8
	ldr r0, _0806D66C @ =gUnk_030056B8
	adds r1, r4, #0
	bl sub_08019944
	b _0806D6EE
	.align 2, 0
_0806D668: .4byte gUnk_03006B14
_0806D66C: .4byte gUnk_030056B8
_0806D670:
	ldr r4, _0806D6B4 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0806D71E
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r0, _0806D6B8 @ =gUnk_03005888
	ldr r1, _0806D6BC @ =gUnk_08BCA090
	ldr r2, [r1]
	ldr r1, _0806D6C0 @ =gUnk_03006B14
	ldrh r1, [r1]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	ldr r1, _0806D6C4 @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #8
	bl sub_0800B1AC
	b _0806D6EE
	.align 2, 0
_0806D6B4: .4byte gUnk_030056B8
_0806D6B8: .4byte gUnk_03005888
_0806D6BC: .4byte gUnk_08BCA090
_0806D6C0: .4byte gUnk_03006B14
_0806D6C4: .4byte 0x44444444
_0806D6C8:
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0806D6DA
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806D71E
_0806D6DA:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	b _0806D71E
_0806D6E2:
	ldr r0, _0806D6F8 @ =gUnk_03005888
	bl sub_0800B4E4
	ldr r0, _0806D6FC @ =gUnk_030056B8
	bl sub_0801BA7C
_0806D6EE:
	ldr r1, _0806D700 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806D71E
	.align 2, 0
_0806D6F8: .4byte gUnk_03005888
_0806D6FC: .4byte gUnk_030056B8
_0806D700: .4byte gUnk_03006B0C
_0806D704:
	ldr r0, _0806D730 @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0806D71E
	ldr r0, _0806D734 @ =gUnk_03006B08
	strh r1, [r0]
	ldr r0, _0806D738 @ =gUnk_03006B0C
	strh r1, [r0]
	movs r1, #0
	str r1, [sp, #0x6c]
_0806D71E:
	ldr r0, [sp, #0x6c]
	add sp, #0x70
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806D730: .4byte gUnk_030056B8
_0806D734: .4byte gUnk_03006B08
_0806D738: .4byte gUnk_03006B0C

	thumb_func_start sub_0806D73C
sub_0806D73C: @ 0x0806D73C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	movs r0, #1
	str r0, [sp, #0x3c]
	ldr r1, _0806D780 @ =gKeyNewPress
	ldrh r2, [r1]
	ands r0, r2
	adds r3, r1, #0
	cmp r0, #0
	bne _0806D760
	movs r0, #0xa
	ands r0, r2
	cmp r0, #0
	beq _0806D768
_0806D760:
	ldr r0, _0806D784 @ =gUnk_03006B08
	mov r1, sp
	ldrh r1, [r1, #0x3c]
	strh r1, [r0]
_0806D768:
	ldr r0, _0806D788 @ =gUnk_03006B0C
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r2, r0, #0
	cmp r1, #9
	bls _0806D776
	b _0806DAE2
_0806D776:
	lsls r0, r1, #2
	ldr r1, _0806D78C @ =_0806D790
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806D780: .4byte gKeyNewPress
_0806D784: .4byte gUnk_03006B08
_0806D788: .4byte gUnk_03006B0C
_0806D78C: .4byte _0806D790
_0806D790: @ jump table
	.4byte _0806D7B8 @ case 0
	.4byte _0806D7F0 @ case 1
	.4byte _0806D978 @ case 2
	.4byte _0806DAA6 @ case 3
	.4byte _0806D9BC @ case 4
	.4byte _0806DA08 @ case 5
	.4byte _0806DA40 @ case 6
	.4byte _0806DA8C @ case 7
	.4byte _0806DAA6 @ case 8
	.4byte _0806DAC8 @ case 9
_0806D7B8:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #2]
	movs r0, #0x10
	strb r0, [r1, #3]
	movs r0, #0x1c
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r2, [r0, #7]
	movs r0, #5
	strb r0, [r1, #8]
	str r2, [sp, #0x20]
	str r2, [sp, #0x24]
	adds r0, r1, #0
	strb r2, [r0, #6]
	ldr r0, _0806D7EC @ =gUnk_030056B8
	bl sub_08019944
	b _0806DAB2
	.align 2, 0
_0806D7EC: .4byte gUnk_030056B8
_0806D7F0:
	ldr r4, _0806D950 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806D802
	b _0806DAE2
_0806D802:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r0, _0806D954 @ =gUnk_02012D00
	ldr r1, _0806D958 @ =gUnk_03006B18
	movs r3, #0
	ldrsh r1, [r1, r3]
	movs r2, #1
	bl sub_08069F74
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r6, #0
	ldr r1, _0806D95C @ =gUnk_03005170
	ldr r0, [r1]
	ldrh r0, [r0]
	cmp r0, #0
	beq _0806D83E
	adds r2, r1, #0
_0806D82C:
	adds r6, #1
	cmp r6, #7
	bgt _0806D83E
	ldr r0, [r2]
	lsls r1, r6, #1
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806D82C
_0806D83E:
	lsls r0, r6, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r0, #1
	add r0, r8
	lsls r0, r0, #2
	asrs r0, r0, #3
	add r0, sb
	adds r0, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0x1c
	mov r1, r8
	subs r0, r0, r1
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r2, #0xb4
	lsls r2, r2, #1
	mov ip, r2
	mov r3, sb
	lsls r3, r3, #1
	mov sl, r3
	mov r0, sb
	cmp r0, #0
	beq _0806D900
	mov r5, ip
	adds r5, #1
	mov r1, r8
	lsls r7, r1, #1
	ldr r2, _0806D960 @ =gUnk_02012C80
	adds r3, r7, r2
	mov r4, ip
	ldr r0, _0806D964 @ =gUnk_02012C40
	adds r2, r7, r0
	mov r6, sb
	rsbs r1, r6, #0
	movs r0, #3
	ands r1, r0
	cmp r1, #0
	beq _0806D8D6
	cmp r1, #3
	bge _0806D8C4
	cmp r1, #2
	bge _0806D8B6
	mov r1, ip
	strh r1, [r2]
	strh r5, [r3]
	adds r5, #2
	ldr r2, _0806D968 @ =gUnk_02012C82
	adds r3, r7, r2
	adds r4, #2
	ldr r0, _0806D96C @ =gUnk_02012C42
	adds r2, r7, r0
	subs r6, #1
_0806D8B6:
	strh r4, [r2]
	strh r5, [r3]
	adds r5, #2
	adds r3, #2
	adds r4, #2
	adds r2, #2
	subs r6, #1
_0806D8C4:
	strh r4, [r2]
	strh r5, [r3]
	adds r5, #2
	adds r3, #2
	adds r4, #2
	adds r2, #2
	subs r6, #1
	cmp r6, #0
	beq _0806D900
_0806D8D6:
	strh r4, [r2]
	strh r5, [r3]
	adds r1, r5, #2
	adds r0, r4, #2
	strh r0, [r2, #2]
	strh r1, [r3, #2]
	adds r1, r5, #4
	adds r0, r4, #4
	strh r0, [r2, #4]
	strh r1, [r3, #4]
	adds r1, r5, #6
	adds r0, r4, #6
	strh r0, [r2, #6]
	strh r1, [r3, #6]
	adds r5, #8
	adds r3, #8
	adds r4, #8
	adds r2, #8
	subs r6, #4
	cmp r6, #0
	bne _0806D8D6
_0806D900:
	mov r2, r8
	lsls r1, r2, #1
	add r1, sl
	ldr r3, _0806D964 @ =gUnk_02012C40
	adds r2, r1, r3
	mov r0, ip
	add r0, sl
	strh r0, [r2]
	ldr r2, _0806D960 @ =gUnk_02012C80
	adds r1, r1, r2
	adds r0, #1
	strh r0, [r1]
	movs r0, #0x70
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0806D970 @ =gUnk_03005888
	ldr r1, _0806D95C @ =gUnk_03005170
	ldr r2, [r1]
	mov r3, r8
	add r3, sb
	adds r3, #2
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r1, #0x11
	str r1, [sp]
	ldr r1, _0806D974 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	ldr r0, _0806D958 @ =gUnk_03006B18
	strh r4, [r0]
	b _0806DAB2
	.align 2, 0
_0806D950: .4byte gUnk_030056B8
_0806D954: .4byte gUnk_02012D00
_0806D958: .4byte gUnk_03006B18
_0806D95C: .4byte gUnk_03005170
_0806D960: .4byte gUnk_02012C80
_0806D964: .4byte gUnk_02012C40
_0806D968: .4byte gUnk_02012C82
_0806D96C: .4byte gUnk_02012C42
_0806D970: .4byte gUnk_03005888
_0806D974: .4byte 0x44444444
_0806D978:
	ldr r1, _0806D9B4 @ =gUnk_03006B18
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf
	bgt _0806D98A
	b _0806DAE2
_0806D98A:
	movs r0, #0xf
	strh r0, [r1]
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806D99A
	b _0806DA9E
_0806D99A:
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806D9A4
	b _0806DA9E
_0806D9A4:
	ldr r0, _0806D9B8 @ =gUnk_03006B08
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #1
	beq _0806D9B0
	b _0806DAE2
_0806D9B0:
	b _0806DA9E
	.align 2, 0
_0806D9B4: .4byte gUnk_03006B18
_0806D9B8: .4byte gUnk_03006B08
_0806D9BC:
	ldr r4, _0806D9E8 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0806D9CE
	b _0806DAE2
_0806D9CE:
	ldr r0, _0806D9EC @ =gUnk_03006B1C
	movs r3, #0
	ldrsh r1, [r0, r3]
	cmp r1, #1
	bne _0806D9F8
	ldr r0, _0806D9F0 @ =gUnk_03006B08
	strh r2, [r0]
	ldr r0, _0806D9F4 @ =gUnk_03006B0C
	strh r2, [r0]
	movs r0, #0
	str r0, [sp, #0x3c]
	b _0806DAE2
	.align 2, 0
_0806D9E8: .4byte gUnk_030056B8
_0806D9EC: .4byte gUnk_03006B1C
_0806D9F0: .4byte gUnk_03006B08
_0806D9F4: .4byte gUnk_03006B0C
_0806D9F8:
	cmp r1, #0
	bne _0806DAE2
	ldr r0, _0806DA04 @ =gUnk_03005888
	strh r1, [r0]
	strh r1, [r4]
	b _0806DAB2
	.align 2, 0
_0806DA04: .4byte gUnk_03005888
_0806DA08:
	add r4, sp, #0x28
	movs r1, #0
	strb r1, [r4]
	strb r1, [r4, #1]
	movs r0, #1
	strb r0, [r4, #2]
	movs r0, #0x10
	strb r0, [r4, #3]
	movs r0, #0x1c
	strb r0, [r4, #4]
	movs r0, #4
	strb r0, [r4, #5]
	strb r1, [r4, #7]
	movs r0, #5
	strb r0, [r4, #8]
	strb r1, [r4, #6]
	str r1, [r4, #0xc]
	str r1, [r4, #0x10]
	movs r0, #0x6a
	bl sub_080147B8
	ldr r0, _0806DA3C @ =gUnk_030056B8
	adds r1, r4, #0
	bl sub_08019944
	b _0806DAB2
	.align 2, 0
_0806DA3C: .4byte gUnk_030056B8
_0806DA40:
	ldr r4, _0806DA7C @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0806DAE2
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r0, _0806DA80 @ =gUnk_03005888
	ldr r1, _0806DA84 @ =gUnk_08BCA090
	ldr r2, [r1]
	movs r1, #0x11
	str r1, [sp]
	ldr r1, _0806DA88 @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #8
	bl sub_0800B1AC
	b _0806DAB2
	.align 2, 0
_0806DA7C: .4byte gUnk_030056B8
_0806DA80: .4byte gUnk_03005888
_0806DA84: .4byte gUnk_08BCA090
_0806DA88: .4byte 0x44444444
_0806DA8C:
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0806DA9E
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _0806DAE2
_0806DA9E:
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	b _0806DAE2
_0806DAA6:
	ldr r0, _0806DABC @ =gUnk_03005888
	bl sub_0800B4E4
	ldr r0, _0806DAC0 @ =gUnk_030056B8
	bl sub_0801BA7C
_0806DAB2:
	ldr r1, _0806DAC4 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806DAE2
	.align 2, 0
_0806DABC: .4byte gUnk_03005888
_0806DAC0: .4byte gUnk_030056B8
_0806DAC4: .4byte gUnk_03006B0C
_0806DAC8:
	ldr r0, _0806DAF4 @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _0806DAE2
	ldr r0, _0806DAF8 @ =gUnk_03006B08
	strh r1, [r0]
	ldr r0, _0806DAFC @ =gUnk_03006B0C
	strh r1, [r0]
	movs r1, #0
	str r1, [sp, #0x3c]
_0806DAE2:
	ldr r0, [sp, #0x3c]
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806DAF4: .4byte gUnk_030056B8
_0806DAF8: .4byte gUnk_03006B08
_0806DAFC: .4byte gUnk_03006B0C

	thumb_func_start sub_0806DB00
sub_0806DB00: @ 0x0806DB00
	push {r4, r5, lr}
	ldr r0, _0806DB24 @ =gUnk_03006B08
	movs r5, #0
	strh r5, [r0]
	ldr r4, _0806DB28 @ =gUnk_03005888
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	beq _0806DB2C
	adds r0, r4, #0
	bl sub_0800B4E4
	strh r5, [r4]
	b _0806DB2E
	.align 2, 0
_0806DB24: .4byte gUnk_03006B08
_0806DB28: .4byte gUnk_03005888
_0806DB2C:
	strh r0, [r4]
_0806DB2E:
	ldr r4, _0806DB58 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806DB6A
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0806DB5C
	adds r0, r4, #0
	movs r1, #9
	bl sub_0801BB7C
	b _0806DB7E
	.align 2, 0
_0806DB58: .4byte gUnk_030056B8
_0806DB5C:
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0806DB7A
_0806DB6A:
	adds r0, r4, #0
	movs r1, #9
	bl sub_0801BB7C
	adds r0, r4, #0
	bl sub_0801BA7C
	b _0806DB7E
_0806DB7A:
	movs r0, #0
	strh r0, [r4]
_0806DB7E:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0806DB84
sub_0806DB84: @ 0x0806DB84
	push {r4, r5, lr}
	sub sp, #0x28
	ldr r5, _0806DBA0 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #2
	beq _0806DC4C
	cmp r0, #2
	bgt _0806DBA4
	cmp r0, #0
	beq _0806DBB2
	cmp r0, #1
	beq _0806DBCC
	b _0806DD00
	.align 2, 0
_0806DBA0: .4byte gUnk_03006B0C
_0806DBA4:
	cmp r0, #0x3f
	bne _0806DBAA
	b _0806DCCC
_0806DBAA:
	cmp r0, #0x40
	bne _0806DBB0
	b _0806DCE8
_0806DBB0:
	b _0806DD00
_0806DBB2:
	ldr r4, _0806DBC8 @ =gUnk_030056B8
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	beq _0806DBC4
	b _0806DD08
_0806DBC4:
	strh r0, [r4]
	b _0806DCD8
	.align 2, 0
_0806DBC8: .4byte gUnk_030056B8
_0806DBCC:
	bl sub_08018E64
	adds r1, r0, #0
	movs r2, #0
	b _0806DBDA
_0806DBD6:
	adds r1, #2
	adds r2, #1
_0806DBDA:
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806DBD6
	add r1, sp, #0x14
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #0xb
	lsrs r3, r0, #0xc
	adds r0, r3, #4
	movs r4, #0
	strb r0, [r1, #4]
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _0806DBFC
	adds r0, r3, #5
	strb r0, [r1, #4]
_0806DBFC:
	add r0, sp, #0x14
	ldrb r0, [r0, #4]
	cmp r0, #0xa
	bhi _0806DC0A
	add r1, sp, #0x14
	movs r0, #0xb
	strb r0, [r1, #4]
_0806DC0A:
	add r1, sp, #0x14
	movs r0, #4
	strb r0, [r1, #5]
	adds r2, r1, #0
	adds r0, r1, #0
	ldrb r1, [r0, #4]
	lsrs r1, r1, #1
	movs r0, #0xf
	subs r0, r0, r1
	strb r0, [r2, #2]
	adds r0, r2, #0
	ldrb r1, [r0, #5]
	lsrs r1, r1, #1
	movs r0, #0xa
	subs r0, r0, r1
	strb r0, [r2, #3]
	adds r0, r2, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	movs r1, #3
	strb r1, [r0, #7]
	strb r1, [r0, #8]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	strb r4, [r0, #6]
	ldr r0, _0806DC48 @ =gUnk_030056B8
	adds r1, r2, #0
	bl sub_08019944
	b _0806DD00
	.align 2, 0
_0806DC48: .4byte gUnk_030056B8
_0806DC4C:
	ldr r0, _0806DCC0 @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0806DD08
	bl sub_08018E64
	adds r4, r0, #0
	movs r2, #0
	ldrh r0, [r4]
	cmp r0, #0
	beq _0806DC78
	adds r1, r4, #0
_0806DC6A:
	adds r1, #2
	adds r2, #1
	cmp r2, #0x11
	bgt _0806DC78
	ldrh r0, [r1]
	cmp r0, #0
	bne _0806DC6A
_0806DC78:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #0xb
	lsrs r3, r0, #0xc
	adds r1, r3, #4
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _0806DC8C
	adds r1, r3, #5
_0806DC8C:
	cmp r1, #0xa
	bhi _0806DC92
	movs r1, #0xb
_0806DC92:
	lsrs r0, r1, #1
	movs r3, #0xf
	subs r3, r3, r0
	lsls r3, r3, #0x10
	ldr r0, _0806DCC4 @ =gUnk_03005888
	movs r1, #0x80
	lsls r1, r1, #0xa
	adds r3, r3, r1
	asrs r3, r3, #0x10
	movs r1, #9
	str r1, [sp]
	ldr r1, _0806DCC8 @ =0x44444444
	str r1, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r2, [sp, #0x10]
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800B1AC
	b _0806DD00
	.align 2, 0
_0806DCC0: .4byte gUnk_030056B8
_0806DCC4: .4byte gUnk_03005888
_0806DCC8: .4byte 0x44444444
_0806DCCC:
	ldr r0, _0806DCE0 @ =gUnk_03005888
	bl sub_0800B4E4
	ldr r0, _0806DCE4 @ =gUnk_030056B8
	bl sub_0801BA7C
_0806DCD8:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0806DD08
	.align 2, 0
_0806DCE0: .4byte gUnk_03005888
_0806DCE4: .4byte gUnk_030056B8
_0806DCE8:
	ldr r0, _0806DCFC @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0806DD08
	strh r0, [r5]
	b _0806DD08
	.align 2, 0
_0806DCFC: .4byte gUnk_030056B8
_0806DD00:
	ldr r1, _0806DD18 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_0806DD08:
	ldr r0, _0806DD18 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #0x28
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0806DD18: .4byte gUnk_03006B0C

	thumb_func_start sub_0806DD1C
sub_0806DD1C: @ 0x0806DD1C
	push {r4, r5, r6, lr}
	sub sp, #0x2c
	ldr r0, _0806DD40 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r5, r0, r1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #4
	bls _0806DD34
	b _0806DF44
_0806DD34:
	lsls r0, r0, #2
	ldr r1, _0806DD44 @ =_0806DD48
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806DD40: .4byte gUnk_03006B04
_0806DD44: .4byte _0806DD48
_0806DD48: @ jump table
	.4byte _0806DD5C @ case 0
	.4byte _0806DDAE @ case 1
	.4byte _0806DDC4 @ case 2
	.4byte _0806DE00 @ case 3
	.4byte _0806DF34 @ case 4
_0806DD5C:
	movs r3, #0
	movs r2, #0
	strh r2, [r5, #6]
	strh r2, [r5, #0x22]
	add r0, sp, #8
	strb r3, [r0]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #3
	strb r0, [r1, #8]
	str r2, [sp, #0x14]
	str r2, [sp, #0x18]
	adds r0, r1, #0
	movs r1, #1
	strb r1, [r0, #6]
	strb r3, [r0, #1]
	strb r1, [r0, #2]
	adds r1, r0, #0
	movs r0, #0xa
	strb r0, [r1, #3]
	adds r0, r1, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r5, #0x18]
	adds r0, r1, #0
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r5, #0x1a]
	movs r0, #0xc
	strb r0, [r1, #4]
	movs r0, #6
	strb r0, [r1, #5]
	adds r0, r5, #6
	bl sub_08019944
	ldrh r0, [r5]
	adds r0, #1
	b _0806DF42
_0806DDAE:
	adds r0, r5, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806DDBE
	b _0806DF44
_0806DDBE:
	ldrh r0, [r5]
	adds r0, #1
	b _0806DF42
_0806DDC4:
	ldr r4, _0806DDF0 @ =gUnk_0200F800
	ldr r3, _0806DDF4 @ =gUnk_080BB754
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _0806DDF8 @ =gUnk_080BB760
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _0806DDFC @ =gUnk_080BB768
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0xe
	bl sub_08001284
	ldrh r0, [r5]
	adds r0, #1
	b _0806DF42
	.align 2, 0
_0806DDF0: .4byte gUnk_0200F800
_0806DDF4: .4byte gUnk_080BB754
_0806DDF8: .4byte gUnk_080BB760
_0806DDFC: .4byte gUnk_080BB768
_0806DE00:
	ldr r0, _0806DE18 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0806DE1C
	ldrh r0, [r5, #0x22]
	adds r0, #1
	b _0806DE3C
	.align 2, 0
_0806DE18: .4byte gCurrentKeyPress
_0806DE1C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0806DE2A
	ldrh r0, [r5, #0x22]
	subs r0, #1
	b _0806DE60
_0806DE2A:
	movs r6, #0x10
	adds r0, r6, #0
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0806DE50
	ldrh r0, [r5, #0x22]
	adds r0, #0xa
_0806DE3C:
	strh r0, [r5, #0x22]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _0806DE4C @ =0x0000033F
	cmp r0, r1
	ble _0806DEC6
	strh r1, [r5, #0x22]
	b _0806DEC6
	.align 2, 0
_0806DE4C: .4byte 0x0000033F
_0806DE50:
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _0806DE6C
	ldrh r0, [r5, #0x22]
	subs r0, #0xa
_0806DE60:
	strh r0, [r5, #0x22]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0806DEC6
	strh r2, [r5, #0x22]
	b _0806DEC6
_0806DE6C:
	ldr r0, _0806DEA0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806DEA4
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	adds r0, r5, #6
	bl sub_0801BA7C
	movs r0, #6
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #2
	movs r2, #0xa
	movs r3, #0xc
	bl sub_0801BBB8
	ldrh r0, [r5]
	adds r0, #1
	b _0806DF42
	.align 2, 0
_0806DEA0: .4byte gKeyNewPress
_0806DEA4:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _0806DEC6
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #4]
	cmp r0, #0xa
	bne _0806DEBE
	strh r6, [r5, #4]
	b _0806DEC6
_0806DEBE:
	cmp r0, #0x10
	bne _0806DEC6
	movs r0, #0xa
	strh r0, [r5, #4]
_0806DEC6:
	movs r1, #0x22
	ldrsh r0, [r5, r1]
	add r4, sp, #0x1c
	adds r1, r4, #0
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	ldr r6, _0806DF00 @ =gUnk_0200F800
	adds r0, r6, #0
	movs r1, #3
	movs r2, #0xd
	adds r3, r4, #0
	bl sub_08001284
	ldrh r0, [r5, #4]
	cmp r0, #0xa
	bne _0806DF04
	ldrh r0, [r5, #0x22]
	bl sub_08012F60
	adds r1, r4, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08001314
	adds r0, r6, #0
	movs r1, #2
	b _0806DF26
	.align 2, 0
_0806DF00: .4byte gUnk_0200F800
_0806DF04:
	cmp r0, #0x10
	bne _0806DF44
	ldrh r0, [r5, #0x22]
	bl sub_08012F60
	adds r1, r4, #0
	movs r2, #8
	bl sub_08001444
	ldr r3, _0806DF30 @ =gUnk_080BB774
	adds r0, r6, #0
	movs r1, #2
	movs r2, #0xe
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #4
_0806DF26:
	movs r2, #0xe
	adds r3, r4, #0
	bl sub_08001284
	b _0806DF44
	.align 2, 0
_0806DF30: .4byte gUnk_080BB774
_0806DF34:
	adds r0, r5, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0806DF44
_0806DF42:
	strh r0, [r5]
_0806DF44:
	movs r1, #0
	ldrsh r0, [r5, r1]
	add sp, #0x2c
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0806DF50
sub_0806DF50: @ 0x0806DF50
	push {r4, lr}
	ldr r4, _0806DF68 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806DF98
	cmp r0, #1
	bgt _0806DF6C
	cmp r0, #0
	beq _0806DF76
	b _0806E00E
	.align 2, 0
_0806DF68: .4byte gUnk_03006B0C
_0806DF6C:
	cmp r0, #2
	beq _0806DFAC
	cmp r0, #3
	beq _0806DFBC
	b _0806E00E
_0806DF76:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	movs r0, #0x80
	bl sub_0801444C
	ldr r0, _0806DF94 @ =0x000001C9
	movs r1, #0
	bl sub_08012F0C
	ldrh r0, [r4]
	adds r0, #1
	b _0806E00C
	.align 2, 0
_0806DF94: .4byte 0x000001C9
_0806DF98:
	ldr r0, _0806DFA8 @ =gUnk_03006B04
	ldr r0, [r0]
	adds r0, #0x7c
	movs r1, #0
	strh r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _0806E00C
	.align 2, 0
_0806DFA8: .4byte gUnk_03006B04
_0806DFAC:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E00E
	ldrh r0, [r4]
	adds r0, #1
	b _0806E00C
_0806DFBC:
	ldr r0, _0806DFFC @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E000 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E004
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0806E00C
	.align 2, 0
_0806DFFC: .4byte gUnk_03006B04
_0806E000: .4byte 0x0000FFFF
_0806E004:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #2
_0806E00C:
	strh r0, [r4]
_0806E00E:
	ldr r0, _0806E01C @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E01C: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E020
sub_0806E020: @ 0x0806E020
	push {r4, lr}
	ldr r4, _0806E038 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E054
	cmp r0, #1
	bgt _0806E03C
	cmp r0, #0
	beq _0806E046
	b _0806E0D2
	.align 2, 0
_0806E038: .4byte gUnk_03006B0C
_0806E03C:
	cmp r0, #2
	beq _0806E084
	cmp r0, #3
	beq _0806E094
	b _0806E0D2
_0806E046:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r4]
	adds r0, #1
	b _0806E0D0
_0806E054:
	movs r2, #0x18
	ldr r0, _0806E080 @ =gUnk_03006B04
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x7c
	movs r1, #0
	strh r2, [r0]
	movs r0, #3
	adds r2, r3, #0
	adds r2, #0x82
	strh r0, [r2]
	adds r0, r3, #0
	adds r0, #0x84
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _0806E0D0
	.align 2, 0
_0806E080: .4byte gUnk_03006B04
_0806E084:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E0D2
	ldrh r0, [r4]
	adds r0, #1
	b _0806E0D0
_0806E094:
	ldr r0, _0806E0E0 @ =gUnk_03006B04
	ldr r0, [r0]
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E0E4 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E0D2
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
_0806E0D0:
	strh r0, [r4]
_0806E0D2:
	ldr r0, _0806E0E8 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E0E0: .4byte gUnk_03006B04
_0806E0E4: .4byte 0x0000FFFF
_0806E0E8: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E0EC
sub_0806E0EC: @ 0x0806E0EC
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r6, _0806E104 @ =gUnk_03006B0C
	movs r0, #0
	ldrsh r5, [r6, r0]
	cmp r5, #1
	beq _0806E17C
	cmp r5, #1
	bgt _0806E108
	cmp r5, #0
	beq _0806E10E
	b _0806E1A4
	.align 2, 0
_0806E104: .4byte gUnk_03006B0C
_0806E108:
	cmp r5, #2
	beq _0806E18C
	b _0806E1A4
_0806E10E:
	bl sub_0800EC34
	ldr r4, _0806E168 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	str r5, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xff
	bl sub_0800EC64
	ldr r0, _0806E16C @ =gUnk_08BD1BCC
	bl sub_0800ED08
	ldr r0, _0806E170 @ =gUnk_08BD1BC4
	bl sub_0800ECFC
	movs r0, #2
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	movs r0, #0x18
	bl sub_0800ECF0
	ldr r0, _0806E174 @ =gUnk_08BC9F20
	ldr r0, [r0]
	ldr r1, _0806E178 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	ldrh r0, [r6]
	adds r0, #1
	b _0806E1A2
	.align 2, 0
_0806E168: .4byte gUnk_03005610
_0806E16C: .4byte gUnk_08BD1BCC
_0806E170: .4byte gUnk_08BD1BC4
_0806E174: .4byte gUnk_08BC9F20
_0806E178: .4byte gUnk_08BC9F6C
_0806E17C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E1A4
	ldrh r0, [r6]
	adds r0, #1
	b _0806E1A2
_0806E18C:
	movs r4, #0xe2
	lsls r4, r4, #1
	bl sub_0800ED38
	adds r1, r0, #0
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_08012F0C
	movs r0, #0
_0806E1A2:
	strh r0, [r6]
_0806E1A4:
	ldr r0, _0806E1B4 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0806E1B4: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E1B8
sub_0806E1B8: @ 0x0806E1B8
	push {r4, lr}
	ldr r4, _0806E1D0 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E1EC
	cmp r0, #1
	bgt _0806E1D4
	cmp r0, #0
	beq _0806E1DE
	b _0806E262
	.align 2, 0
_0806E1D0: .4byte gUnk_03006B0C
_0806E1D4:
	cmp r0, #2
	beq _0806E214
	cmp r0, #3
	beq _0806E224
	b _0806E262
_0806E1DE:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r4]
	adds r0, #1
	b _0806E260
_0806E1EC:
	movs r2, #0x18
	ldr r0, _0806E210 @ =gUnk_03006B04
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x7c
	movs r1, #0
	strh r2, [r0]
	adds r0, #6
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _0806E260
	.align 2, 0
_0806E210: .4byte gUnk_03006B04
_0806E214:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E262
	ldrh r0, [r4]
	adds r0, #1
	b _0806E260
_0806E224:
	ldr r0, _0806E270 @ =gUnk_03006B04
	ldr r0, [r0]
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E274 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E262
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
_0806E260:
	strh r0, [r4]
_0806E262:
	ldr r0, _0806E278 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E270: .4byte gUnk_03006B04
_0806E274: .4byte 0x0000FFFF
_0806E278: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E27C
sub_0806E27C: @ 0x0806E27C
	push {r4, lr}
	ldr r4, _0806E294 @ =gUnk_03006B00
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E2B4
	cmp r0, #1
	bgt _0806E298
	cmp r0, #0
	beq _0806E2A2
	b _0806E382
	.align 2, 0
_0806E294: .4byte gUnk_03006B00
_0806E298:
	cmp r0, #2
	beq _0806E31C
	cmp r0, #3
	beq _0806E32C
	b _0806E382
_0806E2A2:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	bl sub_08014614
	ldrh r0, [r4]
	adds r0, #1
	b _0806E380
_0806E2B4:
	bl sub_08012578
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0806E2E8
	movs r1, #0x18
	ldr r0, _0806E2E4 @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #6
	adds r1, r2, #0
	adds r1, #0x82
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0x84
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	b _0806E30A
	.align 2, 0
_0806E2E4: .4byte gUnk_03006B04
_0806E2E8:
	cmp r4, #1
	bne _0806E30A
	movs r2, #0x20
	ldr r0, _0806E314 @ =gUnk_03006B04
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x7c
	movs r1, #0
	strh r2, [r0]
	adds r0, #6
	strh r4, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
_0806E30A:
	ldr r1, _0806E318 @ =gUnk_03006B00
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806E382
	.align 2, 0
_0806E314: .4byte gUnk_03006B04
_0806E318: .4byte gUnk_03006B00
_0806E31C:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E382
	ldrh r0, [r4]
	adds r0, #1
	b _0806E380
_0806E32C:
	ldr r0, _0806E370 @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E374 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E378
	bl sub_08014614
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0806E380
	.align 2, 0
_0806E370: .4byte gUnk_03006B04
_0806E374: .4byte 0x0000FFFF
_0806E378:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #2
_0806E380:
	strh r0, [r4]
_0806E382:
	ldr r0, _0806E390 @ =gUnk_03006B00
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E390: .4byte gUnk_03006B00

	thumb_func_start sub_0806E394
sub_0806E394: @ 0x0806E394
	push {r4, lr}
	ldr r4, _0806E3AC @ =gUnk_03006B00
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E3CC
	cmp r0, #1
	bgt _0806E3B0
	cmp r0, #0
	beq _0806E3BA
	b _0806E496
	.align 2, 0
_0806E3AC: .4byte gUnk_03006B00
_0806E3B0:
	cmp r0, #2
	beq _0806E430
	cmp r0, #3
	beq _0806E440
	b _0806E496
_0806E3BA:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	bl sub_08014614
	ldrh r0, [r4]
	adds r0, #1
	b _0806E494
_0806E3CC:
	bl sub_08012578
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0806E400
	movs r1, #0x18
	ldr r0, _0806E3FC @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #5
	adds r1, r2, #0
	adds r1, #0x82
	strh r0, [r1]
	adds r0, r2, #0
	adds r0, #0x84
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	adds r0, #2
	strh r4, [r0]
	b _0806E41E
	.align 2, 0
_0806E3FC: .4byte gUnk_03006B04
_0806E400:
	movs r2, #0x21
	ldr r0, _0806E428 @ =gUnk_03006B04
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x7c
	movs r1, #0
	strh r2, [r0]
	adds r0, #6
	strh r4, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
_0806E41E:
	ldr r1, _0806E42C @ =gUnk_03006B00
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806E496
	.align 2, 0
_0806E428: .4byte gUnk_03006B04
_0806E42C: .4byte gUnk_03006B00
_0806E430:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E496
	ldrh r0, [r4]
	adds r0, #1
	b _0806E494
_0806E440:
	ldr r0, _0806E484 @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E488 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E48C
	bl sub_08014614
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0806E494
	.align 2, 0
_0806E484: .4byte gUnk_03006B04
_0806E488: .4byte 0x0000FFFF
_0806E48C:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #2
_0806E494:
	strh r0, [r4]
_0806E496:
	ldr r0, _0806E4A4 @ =gUnk_03006B00
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E4A4: .4byte gUnk_03006B00

	thumb_func_start sub_0806E4A8
sub_0806E4A8: @ 0x0806E4A8
	push {r4, lr}
	ldr r4, _0806E4C0 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E504
	cmp r0, #1
	bgt _0806E4C4
	cmp r0, #0
	beq _0806E4CE
	b _0806E59A
	.align 2, 0
_0806E4C0: .4byte gUnk_03006B0C
_0806E4C4:
	cmp r0, #2
	beq _0806E538
	cmp r0, #3
	beq _0806E548
	b _0806E59A
_0806E4CE:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x1b
	bl sub_08014544
	bl sub_08012578
	ldr r1, _0806E4FC @ =gUnk_03006B04
	ldr r1, [r1]
	adds r1, #0x37
	strb r0, [r1]
	ldr r0, _0806E500 @ =0x000001CF
	movs r1, #0
	bl sub_08012F0C
	ldrh r0, [r4]
	adds r0, #1
	b _0806E598
	.align 2, 0
_0806E4FC: .4byte gUnk_03006B04
_0806E500: .4byte 0x000001CF
_0806E504:
	ldr r0, _0806E51C @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _0806E520
	movs r1, #0x19
	b _0806E522
	.align 2, 0
_0806E51C: .4byte gUnk_03006B04
_0806E520:
	movs r1, #0x1b
_0806E522:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	ldr r1, _0806E534 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806E59A
	.align 2, 0
_0806E534: .4byte gUnk_03006B0C
_0806E538:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E59A
	ldrh r0, [r4]
	adds r0, #1
	b _0806E598
_0806E548:
	ldr r0, _0806E588 @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E58C @ =0x0000FFFF
	cmp r1, r0
	bne _0806E590
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0806E598
	.align 2, 0
_0806E588: .4byte gUnk_03006B04
_0806E58C: .4byte 0x0000FFFF
_0806E590:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #2
_0806E598:
	strh r0, [r4]
_0806E59A:
	ldr r0, _0806E5A8 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E5A8: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E5AC
sub_0806E5AC: @ 0x0806E5AC
	push {r4, lr}
	ldr r4, _0806E5C4 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806E5E0
	cmp r0, #1
	bgt _0806E5C8
	cmp r0, #0
	beq _0806E5D2
	b _0806E672
	.align 2, 0
_0806E5C4: .4byte gUnk_03006B0C
_0806E5C8:
	cmp r0, #2
	beq _0806E610
	cmp r0, #3
	beq _0806E620
	b _0806E672
_0806E5D2:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r4]
	adds r0, #1
	b _0806E670
_0806E5E0:
	movs r2, #5
	ldr r0, _0806E60C @ =gUnk_03006B04
	ldr r3, [r0]
	adds r0, r3, #0
	adds r0, #0x7c
	movs r1, #0
	strh r2, [r0]
	movs r0, #6
	adds r2, r3, #0
	adds r2, #0x82
	strh r0, [r2]
	adds r0, r3, #0
	adds r0, #0x84
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _0806E670
	.align 2, 0
_0806E60C: .4byte gUnk_03006B04
_0806E610:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E672
	ldrh r0, [r4]
	adds r0, #1
	b _0806E670
_0806E620:
	ldr r0, _0806E660 @ =gUnk_03006B04
	ldr r2, [r0]
	adds r0, r2, #0
	adds r0, #0x80
	ldrh r1, [r0]
	ldr r0, _0806E664 @ =0x0000FFFF
	cmp r1, r0
	bne _0806E668
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0806E670
	.align 2, 0
_0806E660: .4byte gUnk_03006B04
_0806E664: .4byte 0x0000FFFF
_0806E668:
	adds r0, r2, #0
	adds r0, #0x7c
	strh r1, [r0]
	movs r0, #2
_0806E670:
	strh r0, [r4]
_0806E672:
	ldr r0, _0806E680 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0806E680: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E684
sub_0806E684: @ 0x0806E684
	push {r4, r5, r6, lr}
	sub sp, #8
	ldr r0, _0806E6A0 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x1e
	bls _0806E694
	b _0806E954
_0806E694:
	lsls r0, r0, #2
	ldr r1, _0806E6A4 @ =_0806E6A8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806E6A0: .4byte gUnk_03006B0C
_0806E6A4: .4byte _0806E6A8
_0806E6A8: @ jump table
	.4byte _0806E724 @ case 0
	.4byte _0806E74C @ case 1
	.4byte _0806E800 @ case 2
	.4byte _0806E874 @ case 3
	.4byte _0806E88C @ case 4
	.4byte _0806E954 @ case 5
	.4byte _0806E954 @ case 6
	.4byte _0806E954 @ case 7
	.4byte _0806E954 @ case 8
	.4byte _0806E954 @ case 9
	.4byte _0806E954 @ case 10
	.4byte _0806E954 @ case 11
	.4byte _0806E954 @ case 12
	.4byte _0806E954 @ case 13
	.4byte _0806E954 @ case 14
	.4byte _0806E954 @ case 15
	.4byte _0806E954 @ case 16
	.4byte _0806E954 @ case 17
	.4byte _0806E954 @ case 18
	.4byte _0806E954 @ case 19
	.4byte _0806E954 @ case 20
	.4byte _0806E954 @ case 21
	.4byte _0806E954 @ case 22
	.4byte _0806E954 @ case 23
	.4byte _0806E954 @ case 24
	.4byte _0806E954 @ case 25
	.4byte _0806E954 @ case 26
	.4byte _0806E954 @ case 27
	.4byte _0806E954 @ case 28
	.4byte _0806E954 @ case 29
	.4byte _0806E944 @ case 30
_0806E724:
	ldr r2, _0806E73C @ =gUnk_03006B0C
	movs r1, #0
	ldr r0, _0806E740 @ =gUnk_03006B18
	strh r1, [r0]
	ldr r0, _0806E744 @ =gUnk_03006B1C
	strh r1, [r0]
	ldr r0, _0806E748 @ =gUnk_03006B08
	strh r1, [r0]
	movs r0, #1
	strh r0, [r2]
	b _0806E954
	.align 2, 0
_0806E73C: .4byte gUnk_03006B0C
_0806E740: .4byte gUnk_03006B18
_0806E744: .4byte gUnk_03006B1C
_0806E748: .4byte gUnk_03006B08
_0806E74C:
	ldr r1, _0806E774 @ =gUnk_03005178
	ldr r0, _0806E778 @ =gUnk_080BB778
	str r0, [r1]
	movs r5, #0
	ldr r4, _0806E77C @ =gUnk_03005860
_0806E756:
	adds r0, r5, #0
	bl sub_08019278
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0806E780
	movs r0, #0x91
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	b _0806E782
	.align 2, 0
_0806E774: .4byte gUnk_03005178
_0806E778: .4byte gUnk_080BB778
_0806E77C: .4byte gUnk_03005860
_0806E780:
	ldr r0, _0806E7A4 @ =gUnk_080BB788
_0806E782:
	str r0, [r4]
	adds r0, r5, #1
	bl sub_08019278
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0806E7A8
	movs r0, #0x91
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	b _0806E7AA
	.align 2, 0
_0806E7A4: .4byte gUnk_080BB788
_0806E7A8:
	ldr r0, _0806E7CC @ =gUnk_080BB788
_0806E7AA:
	str r0, [r4, #4]
	adds r0, r5, #2
	bl sub_08019278
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0806E7D0
	movs r0, #0x91
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	b _0806E7D2
	.align 2, 0
_0806E7CC: .4byte gUnk_080BB788
_0806E7D0:
	ldr r0, _0806E7F0 @ =gUnk_080BB788
_0806E7D2:
	str r0, [r4, #8]
	adds r4, #0xc
	adds r5, #3
	cmp r5, #5
	ble _0806E756
	movs r2, #0
	ldr r0, _0806E7F4 @ =gUnk_03005860
	ldr r1, _0806E7F8 @ =gUnk_080BB79C
	str r1, [r0, #0x18]
	str r2, [r0, #0x1c]
	str r2, [r0, #0x20]
	ldr r1, _0806E7FC @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0806E952
	.align 2, 0
_0806E7F0: .4byte gUnk_080BB788
_0806E7F4: .4byte gUnk_03005860
_0806E7F8: .4byte gUnk_080BB79C
_0806E7FC: .4byte gUnk_03006B0C
_0806E800:
	ldr r4, _0806E864 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0x3b
	bl sub_0800EC64
	movs r0, #2
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldr r0, _0806E868 @ =gUnk_03005178
	ldr r0, [r0]
	ldr r1, _0806E86C @ =gUnk_03005860
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x93
	bl sub_08012F60
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_0800ED48
	ldr r1, _0806E870 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0806E952
	.align 2, 0
_0806E864: .4byte gUnk_03005610
_0806E868: .4byte gUnk_03005178
_0806E86C: .4byte gUnk_03005860
_0806E870: .4byte gUnk_03006B0C
_0806E874:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E954
	ldr r1, _0806E888 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0806E952
	.align 2, 0
_0806E888: .4byte gUnk_03006B0C
_0806E88C:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #6
	beq _0806E8A8
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0806E8BC
_0806E8A8:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0x93
	bl sub_08012F0C
	ldr r1, _0806E8B8 @ =gUnk_03006B0C
	movs r0, #0
	b _0806E952
	.align 2, 0
_0806E8B8: .4byte gUnk_03006B0C
_0806E8BC:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #8
	lsrs r6, r0, #0x10
	asrs r5, r0, #0x10
	adds r0, r5, #0
	bl sub_08019278
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _0806E930
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0806E8F0
	ldr r0, _0806E8EC @ =gUnk_08BCA090
	ldr r0, [r0]
	bl sub_0800EE5C
	b _0806E914
	.align 2, 0
_0806E8EC: .4byte gUnk_08BCA090
_0806E8F0:
	ldr r4, _0806E924 @ =0x0000C483
	movs r0, #0x91
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
	ldr r0, _0806E928 @ =gUnk_080BB7B0
	bl sub_0800EE5C
	adds r0, r5, #0
	bl sub_0801701C
_0806E914:
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x93
	bl sub_08012F0C
	ldr r1, _0806E92C @ =gUnk_03006B0C
	movs r0, #0x1e
	b _0806E952
	.align 2, 0
_0806E924: .4byte 0x0000C483
_0806E928: .4byte gUnk_080BB7B0
_0806E92C: .4byte gUnk_03006B0C
_0806E930:
	movs r0, #0x93
	adds r1, r5, #0
	bl sub_08012F0C
	ldr r1, _0806E940 @ =gUnk_03006B0C
	movs r0, #0
	b _0806E952
	.align 2, 0
_0806E940: .4byte gUnk_03006B0C
_0806E944:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806E954
	ldr r1, _0806E964 @ =gUnk_03006B0C
	movs r0, #1
_0806E952:
	strh r0, [r1]
_0806E954:
	ldr r0, _0806E964 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0806E964: .4byte gUnk_03006B0C

	thumb_func_start sub_0806E968
sub_0806E968: @ 0x0806E968
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	ldr r0, _0806E98C @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #6
	bls _0806E980
	b _0806EF20
_0806E980:
	lsls r0, r0, #2
	ldr r1, _0806E990 @ =_0806E994
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806E98C: .4byte gUnk_03006B0C
_0806E990: .4byte _0806E994
_0806E994: @ jump table
	.4byte _0806E9B0 @ case 0
	.4byte _0806EA3C @ case 1
	.4byte _0806EAC4 @ case 2
	.4byte _0806EAF0 @ case 3
	.4byte _0806ED40 @ case 4
	.4byte _0806EE98 @ case 5
	.4byte _0806EEC0 @ case 6
_0806E9B0:
	ldr r0, _0806EA0C @ =gUnk_03006AA4
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0806EA10 @ =gUnk_030056B8
	strh r1, [r0]
	ldr r0, _0806EA14 @ =gUnk_03006B18
	strh r1, [r0]
	ldr r0, _0806EA18 @ =gUnk_03005888
	strh r1, [r0]
	ldr r0, _0806EA1C @ =gUnk_03006B1C
	strh r1, [r0]
	ldr r0, _0806EA20 @ =gUnk_03006B08
	strh r1, [r0]
	movs r4, #0
	movs r5, #0
	movs r6, #0
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806E9E0
	movs r4, #1
_0806E9E0:
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806E9F2
	movs r5, #1
	adds r4, #1
_0806E9F2:
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806EA04
	movs r5, #2
	adds r4, #1
_0806EA04:
	cmp r4, #0
	bne _0806EA24
	movs r0, #0
	b _0806EF18
	.align 2, 0
_0806EA0C: .4byte gUnk_03006AA4
_0806EA10: .4byte gUnk_030056B8
_0806EA14: .4byte gUnk_03006B18
_0806EA18: .4byte gUnk_03005888
_0806EA1C: .4byte gUnk_03006B1C
_0806EA20: .4byte gUnk_03006B08
_0806EA24:
	cmp r4, #1
	beq _0806EA2A
	b _0806EEA8
_0806EA2A:
	adds r0, r5, #0
	bl sub_08017C9C
	ldr r0, _0806EA38 @ =gUnk_03006B0C
	strh r6, [r0]
	b _0806EF20
	.align 2, 0
_0806EA38: .4byte gUnk_03006B0C
_0806EA3C:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	movs r6, #5
	strb r6, [r0, #2]
	movs r2, #4
	strb r2, [r0, #3]
	adds r1, r0, #0
	movs r0, #0x14
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r2, [r0, #5]
	movs r2, #2
	mov r8, r2
	mov r3, r8
	strb r3, [r0, #7]
	movs r5, #6
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	ldr r0, _0806EABC @ =gUnk_03006AA4
	bl sub_08019944
	add r0, sp, #0x14
	strb r4, [r0]
	strb r6, [r0, #1]
	adds r1, r0, #0
	movs r0, #8
	strb r0, [r1, #2]
	movs r0, #9
	strb r0, [r1, #3]
	movs r0, #0xe
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r5, [r0, #5]
	mov r1, r8
	strb r1, [r0, #7]
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	ldr r0, _0806EAC0 @ =gUnk_030056B8
	add r1, sp, #0x14
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	b _0806EEA8
	.align 2, 0
_0806EABC: .4byte gUnk_03006AA4
_0806EAC0: .4byte gUnk_030056B8
_0806EAC4:
	ldr r0, _0806EAE8 @ =gUnk_03006AA4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806EAD4
	b _0806EF20
_0806EAD4:
	ldr r0, _0806EAEC @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0806EAE4
	b _0806EF20
_0806EAE4:
	b _0806EEA8
	.align 2, 0
_0806EAE8: .4byte gUnk_03006AA4
_0806EAEC: .4byte gUnk_030056B8
_0806EAF0:
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	movs r2, #0xb4
	lsls r2, r2, #1
	mov sb, r2
	add r4, sp, #0x28
	adds r1, r4, #0
	bl sub_08001CBC
	movs r3, #0
	mov r8, r3
	mov sl, r4
	ldr r7, _0806EB48 @ =gUnk_03006B08
_0806EB0E:
	mov r1, r8
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _0806EB4C
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r5, #0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0806EB50
	adds r6, #0x6f
	b _0806EB50
	.align 2, 0
_0806EB48: .4byte gUnk_03006B08
_0806EB4C:
	movs r5, #0xff
	movs r6, #0
_0806EB50:
	mov r2, r8
	cmp r2, #0
	bne _0806EB60
	ldr r0, _0806EB5C @ =gUnk_03006B14
	strh r5, [r0]
	b _0806EB7A
	.align 2, 0
_0806EB5C: .4byte gUnk_03006B14
_0806EB60:
	mov r3, r8
	cmp r3, #1
	bne _0806EB70
	ldr r0, _0806EB6C @ =gUnk_03006B10
	b _0806EB78
	.align 2, 0
_0806EB6C: .4byte gUnk_03006B10
_0806EB70:
	mov r0, r8
	cmp r0, #2
	bne _0806EB7A
	ldr r0, _0806ECC4 @ =gUnk_03006AFC
_0806EB78:
	str r5, [r0]
_0806EB7A:
	lsls r1, r6, #7
	mov r2, sl
	ldr r0, [r2, #0x10]
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r7, r3]
	lsls r1, r1, #7
	ldr r2, _0806ECC8 @ =gUnk_02012D00
	adds r1, r1, r2
	ldr r2, _0806ECCC @ =0x04000020
	bl CpuSet
	lsls r4, r6, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_08063E54
	movs r3, #0
	ldrsh r1, [r7, r3]
	lsls r1, r1, #2
	ldr r3, _0806ECD0 @ =gUnk_02012A92
	adds r2, r1, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	add r1, sb
	orrs r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	lsls r1, r1, #2
	ldr r3, _0806ECD4 @ =gUnk_02012A94
	adds r2, r1, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, #1
	add r1, sb
	orrs r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	lsls r1, r1, #2
	ldr r3, _0806ECD8 @ =gUnk_02012AD2
	adds r2, r1, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, #2
	add r1, sb
	orrs r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	bl sub_08063E54
	movs r2, #0
	ldrsh r1, [r7, r2]
	lsls r1, r1, #2
	ldr r3, _0806ECDC @ =gUnk_02012AD4
	adds r2, r1, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	adds r1, #3
	add r1, sb
	orrs r0, r1
	strh r0, [r2]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	movs r0, #1
	add r8, r0
	mov r1, r8
	cmp r1, #2
	bhi _0806EC16
	b _0806EB0E
_0806EC16:
	ldr r4, _0806ECE0 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x4c
	movs r2, #0x4e
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r4, _0806ECE4 @ =gUnk_030058A0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0xb
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x4c
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r0, _0806ECE8 @ =gUnk_03006B18
	ldr r2, _0806ECEC @ =gUnk_080BB7C4
	movs r1, #5
	str r1, [sp]
	ldr r1, _0806ECF0 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #7
	bl sub_0800B1AC
	ldr r0, _0806ECF4 @ =gUnk_03006B1C
	strh r4, [r0]
	adds r4, r0, #0
	b _0806ECFE
	.align 2, 0
_0806ECC4: .4byte gUnk_03006AFC
_0806ECC8: .4byte gUnk_02012D00
_0806ECCC: .4byte 0x04000020
_0806ECD0: .4byte gUnk_02012A92
_0806ECD4: .4byte gUnk_02012A94
_0806ECD8: .4byte gUnk_02012AD2
_0806ECDC: .4byte gUnk_02012AD4
_0806ECE0: .4byte gUnk_03005610
_0806ECE4: .4byte gUnk_030058A0
_0806ECE8: .4byte gUnk_03006B18
_0806ECEC: .4byte gUnk_080BB7C4
_0806ECF0: .4byte 0x44444444
_0806ECF4: .4byte gUnk_03006B1C
_0806ECF8:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_0806ECFE:
	ldrb r0, [r4]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806ECF8
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	adds r2, r0, #0
	ldr r0, _0806ED38 @ =gUnk_03005888
	movs r1, #0xc
	str r1, [sp]
	ldr r1, _0806ED3C @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #9
	bl sub_0800B1AC
	b _0806EEA8
	.align 2, 0
_0806ED38: .4byte gUnk_03005888
_0806ED3C: .4byte 0x44444444
_0806ED40:
	ldr r0, _0806ED58 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806ED60
	ldr r1, _0806ED5C @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806EDF0
	.align 2, 0
_0806ED58: .4byte gKeyNewPress
_0806ED5C: .4byte gUnk_03006B0C
_0806ED60:
	ldr r0, _0806EDA8 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0806EDB0
	ldr r0, _0806EDAC @ =gUnk_03006B1C
	movs r2, #0
	ldrsh r5, [r0, r2]
	adds r4, r0, #0
_0806ED74:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _0806ED86
	movs r0, #0
	strh r0, [r4]
_0806ED86:
	ldrb r0, [r4]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806ED74
	ldr r0, _0806EDAC @ =gUnk_03006B1C
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r5, r0
	beq _0806EDF0
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0806EDF0
	.align 2, 0
_0806EDA8: .4byte gCurrentKeyPress
_0806EDAC: .4byte gUnk_03006B1C
_0806EDB0:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0806EDF0
	ldr r0, _0806EE58 @ =gUnk_03006B1C
	movs r1, #0
	ldrsh r5, [r0, r1]
	adds r4, r0, #0
_0806EDC0:
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0806EDD0
	movs r0, #2
	strh r0, [r4]
_0806EDD0:
	ldrb r0, [r4]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806EDC0
	ldr r0, _0806EE58 @ =gUnk_03006B1C
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r5, r0
	beq _0806EDF0
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_0806EDF0:
	ldr r5, _0806EE5C @ =gUnk_03005610
	ldr r6, _0806EE58 @ =gUnk_03006B1C
	movs r3, #0
	ldrsh r1, [r6, r3]
	lsls r1, r1, #0x14
	movs r0, #0x98
	lsls r0, r0, #0xf
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0x4e
	bl sub_0800A678
	ldr r4, _0806EE60 @ =gUnk_030058A0
	movs r2, #0
	ldrsh r1, [r6, r2]
	lsls r1, r1, #0x14
	movs r3, #0x98
	lsls r3, r3, #0xf
	adds r1, r1, r3
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r5, #0
	bl sub_0800A778
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	ldrb r0, [r6]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0806EE64
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	adds r5, r0, #0
	b _0806EE66
	.align 2, 0
_0806EE58: .4byte gUnk_03006B1C
_0806EE5C: .4byte gUnk_03005610
_0806EE60: .4byte gUnk_030058A0
_0806EE64:
	ldr r5, _0806EE8C @ =gUnk_080BB7DC
_0806EE66:
	ldr r4, _0806EE90 @ =gUnk_03005888
	adds r0, r4, #0
	bl sub_0800B4E4
	movs r0, #0xc
	str r0, [sp]
	ldr r0, _0806EE94 @ =0x44444444
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	adds r2, r5, #0
	movs r3, #9
	bl sub_0800B1AC
	b _0806EF20
	.align 2, 0
_0806EE8C: .4byte gUnk_080BB7DC
_0806EE90: .4byte gUnk_03005888
_0806EE94: .4byte 0x44444444
_0806EE98:
	ldr r0, _0806EEB4 @ =gUnk_03006AA4
	movs r1, #5
	bl sub_0801BA94
	ldr r0, _0806EEB8 @ =gUnk_030056B8
	movs r1, #0
	bl sub_0801BA94
_0806EEA8:
	ldr r1, _0806EEBC @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0806EF20
	.align 2, 0
_0806EEB4: .4byte gUnk_03006AA4
_0806EEB8: .4byte gUnk_030056B8
_0806EEBC: .4byte gUnk_03006B0C
_0806EEC0:
	ldr r0, _0806EF38 @ =gUnk_03006AA4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0806EEDE
	ldr r1, _0806EF3C @ =gUnk_03006B18
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	beq _0806EEDE
	adds r0, r1, #0
	bl sub_0800B4E4
_0806EEDE:
	ldr r0, _0806EF40 @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0806EEFA
	ldr r1, _0806EF44 @ =gUnk_03005888
	ldrh r0, [r1]
	cmp r0, #0
	beq _0806EEFA
	adds r0, r1, #0
	bl sub_0800B4E4
_0806EEFA:
	ldr r0, _0806EF38 @ =gUnk_03006AA4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806EF20
	ldr r0, _0806EF40 @ =gUnk_030056B8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _0806EF20
	ldr r0, _0806EF48 @ =gUnk_03006B1C
	ldrb r0, [r0]
_0806EF18:
	bl sub_08017C9C
	ldr r0, _0806EF4C @ =gUnk_03006B0C
	strh r4, [r0]
_0806EF20:
	ldr r0, _0806EF4C @ =gUnk_03006B0C
	movs r3, #0
	ldrsh r0, [r0, r3]
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0806EF38: .4byte gUnk_03006AA4
_0806EF3C: .4byte gUnk_03006B18
_0806EF40: .4byte gUnk_030056B8
_0806EF44: .4byte gUnk_03005888
_0806EF48: .4byte gUnk_03006B1C
_0806EF4C: .4byte gUnk_03006B0C

	thumb_func_start sub_0806EF50
sub_0806EF50: @ 0x0806EF50
	ldr r0, _0806EF78 @ =gUnk_03006B0C
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0806EF7C @ =gUnk_03006B00
	strh r1, [r0]
	ldr r0, _0806EF80 @ =gUnk_03006B18
	strh r1, [r0]
	ldr r0, _0806EF84 @ =gUnk_03006B1C
	strh r1, [r0]
	ldr r0, _0806EF88 @ =gUnk_03006B08
	strh r1, [r0]
	ldr r0, _0806EF8C @ =gUnk_03006B14
	strh r1, [r0]
	ldr r0, _0806EF90 @ =gUnk_03006B10
	movs r1, #0
	str r1, [r0]
	ldr r0, _0806EF94 @ =gUnk_03006AFC
	str r1, [r0]
	bx lr
	.align 2, 0
_0806EF78: .4byte gUnk_03006B0C
_0806EF7C: .4byte gUnk_03006B00
_0806EF80: .4byte gUnk_03006B18
_0806EF84: .4byte gUnk_03006B1C
_0806EF88: .4byte gUnk_03006B08
_0806EF8C: .4byte gUnk_03006B14
_0806EF90: .4byte gUnk_03006B10
_0806EF94: .4byte gUnk_03006AFC

	thumb_func_start sub_0806EF98
sub_0806EF98: @ 0x0806EF98
	ldr r1, _0806EFA4 @ =gUnk_03006B04
	ldr r1, [r1]
	adds r1, #0x7c
	strh r0, [r1]
	bx lr
	.align 2, 0
_0806EFA4: .4byte gUnk_03006B04

	thumb_func_start sub_0806EFA8
sub_0806EFA8: @ 0x0806EFA8
	push {r4, lr}
	ldr r1, _0806EFEC @ =gUnk_03006B04
	ldr r1, [r1]
	mov ip, r1
	mov r2, ip
	adds r2, #0x34
	ldrb r1, [r2]
	adds r1, #1
	strb r1, [r2]
	ldrb r1, [r2]
	lsls r1, r1, #1
	mov r3, ip
	adds r3, #0x24
	adds r1, r3, r1
	strh r0, [r1]
	ldrb r0, [r2]
	lsls r4, r0, #2
	subs r2, #0x30
	adds r4, r2, r4
	subs r0, #1
	lsls r1, r0, #2
	adds r2, r2, r1
	lsls r0, r0, #1
	adds r3, r3, r0
	ldrh r1, [r3]
	lsrs r1, r1, #2
	lsls r1, r1, #2
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r4]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806EFEC: .4byte gUnk_03006B04

	thumb_func_start sub_0806EFF0
sub_0806EFF0: @ 0x0806EFF0
	ldr r0, _0806F01C @ =gUnk_03006B04
	ldr r0, [r0]
	mov ip, r0
	mov r2, ip
	adds r2, #0x34
	ldrb r0, [r2]
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x24
	adds r1, r1, r0
	movs r3, #0
	strh r3, [r1]
	ldrb r1, [r2]
	lsls r1, r1, #2
	mov r0, ip
	adds r0, #4
	adds r0, r0, r1
	str r3, [r0]
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
	bx lr
	.align 2, 0
_0806F01C: .4byte gUnk_03006B04

	thumb_func_start sub_0806F020
sub_0806F020: @ 0x0806F020
	ldr r0, _0806F034 @ =gUnk_03006B04
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x34
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r1, #4
	adds r1, r1, r0
	ldr r0, [r1]
	bx lr
	.align 2, 0
_0806F034: .4byte gUnk_03006B04

	thumb_func_start sub_0806F038
sub_0806F038: @ 0x0806F038
	ldr r1, _0806F050 @ =gUnk_03006B04
	ldr r3, [r1]
	ldr r2, [r3, #0x78]
	lsls r2, r2, #2
	adds r1, r3, #0
	adds r1, #0x38
	adds r1, r1, r2
	str r0, [r1]
	ldr r0, [r3, #0x78]
	adds r0, #1
	str r0, [r3, #0x78]
	bx lr
	.align 2, 0
_0806F050: .4byte gUnk_03006B04

	thumb_func_start sub_0806F054
sub_0806F054: @ 0x0806F054
	ldr r1, _0806F06C @ =gUnk_03006B04
	ldr r1, [r1]
	ldr r2, [r1, #0x78]
	subs r2, #1
	str r2, [r1, #0x78]
	lsls r2, r2, #2
	adds r1, #0x38
	adds r1, r1, r2
	ldr r1, [r1]
	str r1, [r0]
	bx lr
	.align 2, 0
_0806F06C: .4byte gUnk_03006B04

	thumb_func_start sub_0806F070
sub_0806F070: @ 0x0806F070
	ldr r0, _0806F09C @ =gUnk_03006B04
	ldr r1, [r0]
	movs r0, #0
	str r0, [r1, #0x78]
	movs r0, #0x10
	str r0, [r1, #0x38]
	str r0, [r1, #0x3c]
	str r0, [r1, #0x40]
	str r0, [r1, #0x44]
	str r0, [r1, #0x48]
	str r0, [r1, #0x4c]
	str r0, [r1, #0x50]
	str r0, [r1, #0x54]
	str r0, [r1, #0x58]
	str r0, [r1, #0x5c]
	str r0, [r1, #0x60]
	str r0, [r1, #0x64]
	str r0, [r1, #0x68]
	str r0, [r1, #0x6c]
	str r0, [r1, #0x70]
	str r0, [r1, #0x74]
	bx lr
	.align 2, 0
_0806F09C: .4byte gUnk_03006B04

	thumb_func_start sub_0806F0A0
sub_0806F0A0: @ 0x0806F0A0
	ldr r0, _0806F0B0 @ =gUnk_03006B04
	ldr r0, [r0]
	adds r0, #0x37
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bx lr
	.align 2, 0
_0806F0B0: .4byte gUnk_03006B04

	thumb_func_start sub_0806F0B4
sub_0806F0B4: @ 0x0806F0B4
	lsls r0, r0, #0x10
	ldr r1, _0806F0C8 @ =gUnk_03006B04
	ldr r1, [r1]
	lsrs r0, r0, #0xf
	adds r1, #0x80
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
	bx lr
	.align 2, 0
_0806F0C8: .4byte gUnk_03006B04

	thumb_func_start sub_0806F0CC
sub_0806F0CC: @ 0x0806F0CC
	lsls r0, r0, #0x10
	ldr r2, _0806F0DC @ =gUnk_03006B04
	ldr r2, [r2]
	lsrs r0, r0, #0xf
	adds r2, #0x80
	adds r2, r2, r0
	strh r1, [r2]
	bx lr
	.align 2, 0
_0806F0DC: .4byte gUnk_03006B04

	thumb_func_start sub_0806F0E0
sub_0806F0E0: @ 0x0806F0E0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r7, r0, #0
	ldr r0, [sp, #0x18]
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	lsls r5, r3, #1
	lsls r2, r0, #6
	adds r0, r2, r7
	adds r0, r5, r0
	strh r6, [r0]
	movs r3, #0
	cmp r3, r4
	bhs _0806F14E
	adds r1, r6, #1
	adds r0, r5, r2
	adds r0, r0, r7
	movs r2, #3
	ands r2, r4
	cmp r4, #0
	ble _0806F134
	cmp r2, #0
	beq _0806F13E
	cmp r2, #1
	ble _0806F134
	cmp r2, #2
	ble _0806F12E
	strh r1, [r0, #2]
	adds r0, #2
	movs r3, #1
_0806F12E:
	strh r1, [r0, #2]
	adds r0, #2
	adds r3, #1
_0806F134:
	strh r1, [r0, #2]
	adds r0, #2
	adds r3, #1
	cmp r3, r4
	bhs _0806F14E
_0806F13E:
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	strh r1, [r0, #6]
	strh r1, [r0, #8]
	adds r0, #8
	adds r3, #4
	cmp r3, r4
	blo _0806F13E
_0806F14E:
	lsls r2, r4, #1
	mov r0, r8
	lsls r1, r0, #1
	mov r3, ip
	lsls r0, r3, #6
	adds r0, r0, r7
	adds r1, r1, r0
	adds r2, r2, r1
	movs r0, #0x80
	lsls r0, r0, #3
	adds r1, r0, #0
	adds r0, r6, #0
	orrs r0, r1
	strh r0, [r2, #2]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806F174
sub_0806F174: @ 0x0806F174
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	str r0, [sp]
	ldr r0, [sp, #0x2c]
	ldr r4, [sp, #0x30]
	ldr r5, [sp, #0x34]
	ldr r6, [sp, #0x38]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #4]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp, #8]
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov sl, r5
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	cmp r7, #0
	beq _0806F1BE
	lsls r0, r0, #0xc
	adds r1, r7, #0
	bl __divsi3
	b _0806F1C0
_0806F1BE:
	movs r0, #0
_0806F1C0:
	mov r1, r8
	muls r1, r0, r1
	adds r0, r1, #0
	lsrs r0, r0, #0xc
	cmp r7, #0
	bne _0806F1D4
	mov r3, sb
	cmp r3, #0
	bne _0806F1D4
	mov r0, r8
_0806F1D4:
	lsrs r4, r0, #3
	movs r5, #7
	ands r5, r0
	movs r2, #0
	mov r7, r8
	lsrs r1, r7, #3
	cmp r2, r1
	bhs _0806F238
	lsls r3, r6, #0xc
	ldr r0, [sp, #4]
	subs r0, #0x58
	orrs r3, r0
	adds r7, r1, #0
	ldr r1, [sp, #8]
	lsls r0, r1, #1
	mov r1, sl
	lsls r1, r1, #6
	mov r8, r1
	add r0, r8
	ldr r1, [sp]
	adds r0, r0, r1
	movs r1, #3
	ands r1, r7
	cmp r7, #0
	ble _0806F21E
	cmp r1, #0
	beq _0806F228
	cmp r1, #1
	ble _0806F21E
	cmp r1, #2
	ble _0806F218
	strh r3, [r0]
	adds r0, #2
	movs r2, #1
_0806F218:
	strh r3, [r0]
	adds r0, #2
	adds r2, #1
_0806F21E:
	strh r3, [r0]
	adds r0, #2
	adds r2, #1
	cmp r2, r7
	bhs _0806F238
_0806F228:
	strh r3, [r0]
	strh r3, [r0, #2]
	strh r3, [r0, #4]
	strh r3, [r0, #6]
	adds r0, #8
	adds r2, #4
	cmp r2, r7
	blo _0806F228
_0806F238:
	movs r2, #0
	cmp r2, r4
	bhs _0806F28E
	lsls r3, r6, #0xc
	ldr r0, [sp, #4]
	adds r0, #7
	orrs r3, r0
	ldr r7, [sp, #8]
	lsls r0, r7, #1
	mov r7, sl
	lsls r1, r7, #6
	adds r0, r0, r1
	ldr r1, [sp]
	adds r0, r0, r1
	movs r1, #3
	ands r1, r4
	cmp r4, #0
	ble _0806F274
	cmp r1, #0
	beq _0806F27E
	cmp r1, #1
	ble _0806F274
	cmp r1, #2
	ble _0806F26E
	strh r3, [r0]
	adds r0, #2
	movs r2, #1
_0806F26E:
	strh r3, [r0]
	adds r0, #2
	adds r2, #1
_0806F274:
	strh r3, [r0]
	adds r0, #2
	adds r2, #1
	cmp r2, r4
	bhs _0806F28E
_0806F27E:
	strh r3, [r0]
	strh r3, [r0, #2]
	strh r3, [r0, #4]
	strh r3, [r0, #6]
	adds r0, #8
	adds r2, #4
	cmp r2, r4
	blo _0806F27E
_0806F28E:
	mov r3, sb
	cmp r3, #0
	beq _0806F29E
	cmp r4, #0
	bne _0806F29E
	cmp r5, #0
	bne _0806F2A2
	movs r5, #1
_0806F29E:
	cmp r5, #0
	beq _0806F2C0
_0806F2A2:
	lsls r2, r2, #1
	ldr r7, [sp, #8]
	lsls r1, r7, #1
	mov r3, sl
	lsls r0, r3, #6
	ldr r7, [sp]
	adds r0, r0, r7
	adds r1, r1, r0
	adds r2, r2, r1
	lsls r1, r6, #0xc
	ldr r3, [sp, #4]
	adds r0, r3, r5
	subs r0, #1
	orrs r1, r0
	strh r1, [r2]
_0806F2C0:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806F2D0
sub_0806F2D0: @ 0x0806F2D0
	push {r4, r5, r6, lr}
	sub sp, #0x10
	ldr r4, [sp, #0x20]
	ldr r6, [sp, #0x24]
	ldr r5, [sp, #0x28]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	str r3, [sp]
	str r4, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	movs r3, #1
	bl sub_0806F304
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0806F304
sub_0806F304: @ 0x0806F304
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sl, r0
	adds r4, r1, #0
	adds r5, r3, #0
	ldr r0, [sp, #0x30]
	ldr r1, [sp, #0x34]
	ldr r3, [sp, #0x3c]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	lsls r3, r3, #0x18
	lsrs r6, r3, #0x18
	ldr r0, [sp, #0x38]
	mov r1, sp
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_08001314
	cmp r5, #1
	bne _0806F350
	mov r0, sp
	adds r1, r6, #0
	bl sub_08001488
_0806F350:
	cmp r7, #0
	bne _0806F3B4
	ldr r0, [sp, #0x38]
	cmp r0, #0
	bne _0806F3B4
	movs r1, #0
	cmp r1, r6
	bhs _0806F3AE
	movs r2, #0x20
	movs r0, #3
	ands r0, r6
	cmp r6, #0
	ble _0806F384
	cmp r0, #0
	beq _0806F390
	cmp r0, #1
	ble _0806F384
	cmp r0, #2
	ble _0806F37C
	mov r0, sp
	strb r2, [r0]
	movs r1, #1
_0806F37C:
	mov r3, sp
	adds r0, r3, r1
	strb r2, [r0]
	adds r1, #1
_0806F384:
	mov r3, sp
	adds r0, r3, r1
	strb r2, [r0]
	adds r1, #1
	cmp r1, r6
	bhs _0806F3AE
_0806F390:
	mov r3, sp
	adds r0, r3, r1
	strb r2, [r0]
	adds r0, r1, #1
	add r0, sp
	strb r2, [r0]
	adds r0, r1, #2
	add r0, sp
	strb r2, [r0]
	adds r0, r1, #3
	add r0, sp
	strb r2, [r0]
	adds r1, #4
	cmp r1, r6
	blo _0806F390
_0806F3AE:
	add r1, sp
	movs r0, #0
	strb r0, [r1]
_0806F3B4:
	mov r0, sl
	mov r1, sb
	mov r2, r8
	mov r3, sp
	bl sub_08001284
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806F3D0
sub_0806F3D0: @ 0x0806F3D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov sl, r0
	ldr r0, [sp, #0x30]
	ldr r5, [sp, #0x34]
	ldr r4, [sp, #0x38]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r8, r2
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	cmp r5, #0
	ble _0806F408
	movs r0, #3
	bl sub_080012D4
	b _0806F41E
_0806F408:
	cmp r5, #0
	bne _0806F414
	movs r0, #1
	bl sub_080012D4
	b _0806F41E
_0806F414:
	cmp r5, #0
	bge _0806F41E
	movs r0, #2
	bl sub_080012D4
_0806F41E:
	str r7, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, sl
	mov r1, sb
	mov r2, r8
	movs r3, #1
	bl sub_0806F304
	movs r0, #0
	bl sub_080012D4
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0806F448
sub_0806F448: @ 0x0806F448
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0x20
	mov r8, r0
	adds r0, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	add r1, sp, #0x10
	add r2, sp, #0x14
	add r3, sp, #0x18
	add r4, sp, #0x1c
	str r4, [sp]
	bl sub_08001624
	ldr r0, [sp, #0x10]
	add r1, sp, #4
	movs r2, #2
	movs r3, #0
	bl sub_08001314
	ldr r0, [sp, #0x14]
	add r1, sp, #8
	mov sb, r1
	movs r2, #2
	movs r3, #0
	bl sub_08001314
	ldr r0, [sp, #0x18]
	add r1, sp, #0xc
	mov sl, r1
	movs r2, #2
	movs r3, #0
	bl sub_08001314
	mov r0, r8
	adds r1, r5, #0
	adds r2, r6, #0
	add r3, sp, #4
	bl sub_08001284
	adds r1, r5, #2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r4, _0806F4FC @ =gUnk_080BB714
	mov r0, r8
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_08001284
	adds r1, r5, #3
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, r8
	adds r2, r6, #0
	mov r3, sb
	bl sub_08001284
	adds r1, r5, #5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, r8
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_08001284
	adds r5, #6
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	adds r1, r5, #0
	adds r2, r6, #0
	mov r3, sl
	bl sub_08001284
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806F4FC: .4byte gUnk_080BB714

	thumb_func_start sub_0806F500
sub_0806F500: @ 0x0806F500
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	lsls r3, r3, #0x18
	lsrs r5, r3, #0x18
	movs r0, #0
	bl sub_080012D4
	movs r4, #0
	cmp r4, r5
	bhs _0806F536
_0806F520:
	adds r1, r7, r4
	mov r0, r8
	adds r2, r6, #0
	ldr r3, _0806F540 @ =gUnk_080BB718
	bl sub_08001284
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, r5
	blo _0806F520
_0806F536:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0806F540: .4byte gUnk_080BB718

	thumb_func_start sub_0806F544
sub_0806F544: @ 0x0806F544
	push {r4, r5, r6, r7, lr}
	adds r7, r1, #0
	lsls r0, r0, #0x18
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r4, r3, #0x10
	lsrs r6, r0, #0x18
	movs r1, #0xe0
	lsls r1, r1, #0x16
	adds r0, r0, r1
	lsrs r0, r0, #0x18
	cmp r0, #0x27
	bhi _0806F58E
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #0x5a
	adds r1, r2, #0
	bl sub_08009108
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r7, #0
	movs r1, #1
	bl sub_08009494
	lsls r5, r5, #0x10
	asrs r1, r5, #0x10
	subs r1, #0x20
	lsls r4, r4, #0x10
	asrs r2, r4, #0x10
	subs r2, #0x28
	adds r0, r7, #0
	bl sub_080091C4
	b _0806F59C
_0806F58E:
	lsls r5, r5, #0x10
	asrs r1, r5, #0x10
	lsls r4, r4, #0x10
	asrs r2, r4, #0x10
	adds r0, r7, #0
	bl sub_080091C4
_0806F59C:
	adds r0, r7, #0
	bl sub_080093C0
	adds r0, r6, #0
	adds r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x27
	bhi _0806F5E0
	adds r6, r7, #0
	adds r6, #0x10
	asrs r5, r5, #0x10
	adds r1, r5, #0
	adds r1, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, #0
	adds r2, #0x20
	adds r0, r6, #0
	bl sub_080091C4
	adds r0, r6, #0
	bl sub_080093C0
	adds r6, #0x10
	adds r5, #0xf
	adds r4, #0x1f
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080091C4
	adds r0, r6, #0
	bl sub_080093C0
_0806F5E0:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0806F5E8
sub_0806F5E8: @ 0x0806F5E8
	ldr r0, _0806F5F4 @ =gUnk_03006B04
	ldr r0, [r0]
	adds r0, #0x7e
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_0806F5F4: .4byte gUnk_03006B04

	thumb_func_start sub_0806F5F8
sub_0806F5F8: @ 0x0806F5F8
	ldr r0, _0806F608 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0x22
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0
_0806F608: .4byte gUnk_03006B04

	thumb_func_start sub_0806F60C
sub_0806F60C: @ 0x0806F60C
	ldr r0, _0806F61C @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0x22
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0
_0806F61C: .4byte gUnk_03006B04

	thumb_func_start sub_0806F620
sub_0806F620: @ 0x0806F620
	push {r4, r5, r6, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	adds r3, r2, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0806F66C @ =gUnk_03006B04
	ldr r4, [r0]
	movs r0, #0xf1
	lsls r0, r0, #2
	adds r4, r4, r0
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0806F670 @ =0x01000052
	mov r0, sp
	adds r1, r4, #0
	str r3, [sp, #4]
	bl CpuSet
	movs r1, #0
	strh r5, [r4, #4]
	strh r6, [r4, #0x1c]
	ldr r3, [sp, #4]
	strh r3, [r4, #0x20]
	ldr r0, _0806F674 @ =gUnk_08BC9F0C
	ldr r0, [r0]
	str r0, [r4, #0x14]
	strh r1, [r4, #0x22]
	add sp, #8
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0806F66C: .4byte gUnk_03006B04
_0806F670: .4byte 0x01000052
_0806F674: .4byte gUnk_08BC9F0C

	thumb_func_start sub_0806F678
sub_0806F678: @ 0x0806F678
	ldr r0, _0806F688 @ =gUnk_03006B04
	ldr r0, [r0]
	movs r1, #0xf1
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0x22
	ldrsh r0, [r0, r1]
	bx lr
	.align 2, 0
_0806F688: .4byte gUnk_03006B04

	thumb_func_start sub_0806F68C
sub_0806F68C: @ 0x0806F68C
	push {r4, lr}
	sub sp, #4
	ldr r0, _0806F6BC @ =gUnk_03006B04
	ldr r4, [r0]
	movs r0, #0xf1
	lsls r0, r0, #2
	adds r4, r4, r0
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0806F6C0 @ =0x01000052
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	strh r0, [r4, #0x22]
	movs r0, #0xa
	strh r0, [r4, #4]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0806F6BC: .4byte gUnk_03006B04
_0806F6C0: .4byte 0x01000052

	thumb_func_start sub_0806F6C4
sub_0806F6C4: @ 0x0806F6C4
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	movs r1, #0
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf7
	bgt _0806F6E0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	b _0806F6F4
_0806F6E0:
	ldr r2, _0806F70C @ =0xFFFFFED4
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r0, _0806F710 @ =0x000002BB
	cmp r2, r0
	bhi _0806F6F6
	adds r0, r2, #0
	bl sub_0806380C
_0806F6F4:
	adds r1, r0, #0
_0806F6F6:
	ldr r0, _0806F714 @ =0x0000C483
	bl sub_0800E77C
	ldr r0, _0806F718 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0806F70C: .4byte 0xFFFFFED4
_0806F710: .4byte 0x000002BB
_0806F714: .4byte 0x0000C483
_0806F718: .4byte gUnk_03006578

	thumb_func_start sub_0806F71C
sub_0806F71C: @ 0x0806F71C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806F744
	cmp r0, #1
	bgt _0806F738
	cmp r0, #0
	beq _0806F73E
	b _0806F76A
_0806F738:
	cmp r0, #2
	beq _0806F756
	b _0806F76A
_0806F73E:
	bl sub_0806F774
	b _0806F748
_0806F744:
	bl sub_0806F808
_0806F748:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806F76A
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0806F76A
_0806F756:
	bl sub_0806FD44
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806F76A
	movs r5, #0
	strh r5, [r4]
	movs r0, #0x40
	bl sub_0806EFF0
_0806F76A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806F774
sub_0806F774: @ 0x0806F774
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806F7B4
	cmp r0, #1
	bgt _0806F78E
	cmp r0, #0
	beq _0806F798
	b _0806F7FC
_0806F78E:
	cmp r0, #2
	beq _0806F7E8
	cmp r0, #3
	beq _0806F7F8
	b _0806F7FC
_0806F798:
	strh r0, [r4, #0x14]
	bl sub_08070240
	adds r0, r4, #0
	adds r0, #0x14
	adds r1, r4, #0
	adds r1, #0x18
	bl sub_080072F8
	bl sub_0806FDA4
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0806F7FA
_0806F7B4:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0806F7FA
_0806F7E8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806F7FC
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0806F7FA
_0806F7F8:
	movs r0, #0
_0806F7FA:
	strh r0, [r4, #2]
_0806F7FC:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806F808
sub_0806F808: @ 0x0806F808
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x15
	bls _0806F826
	b _0806FD30
_0806F826:
	lsls r0, r0, #2
	ldr r1, _0806F830 @ =_0806F834
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0806F830: .4byte _0806F834
_0806F834: @ jump table
	.4byte _0806F88C @ case 0
	.4byte _0806FCCC @ case 1
	.4byte _0806FCE6 @ case 2
	.4byte _0806FD30 @ case 3
	.4byte _0806FD30 @ case 4
	.4byte _0806FD30 @ case 5
	.4byte _0806FD30 @ case 6
	.4byte _0806FD30 @ case 7
	.4byte _0806FD30 @ case 8
	.4byte _0806FD30 @ case 9
	.4byte _0806FCEC @ case 10
	.4byte _0806FD30 @ case 11
	.4byte _0806FD30 @ case 12
	.4byte _0806FD30 @ case 13
	.4byte _0806FD30 @ case 14
	.4byte _0806FD30 @ case 15
	.4byte _0806FD30 @ case 16
	.4byte _0806FD30 @ case 17
	.4byte _0806FD30 @ case 18
	.4byte _0806FD30 @ case 19
	.4byte _0806FD02 @ case 20
	.4byte _0806FD18 @ case 21
_0806F88C:
	movs r0, #0x14
	adds r0, r0, r5
	mov r8, r0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0806F8A0
	b _0806FD30
_0806F8A0:
	ldr r0, _0806F8E0 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r1, #0xc0
	mov sl, r1
	ands r1, r0
	mov sl, r1
	cmp r1, #0
	beq _0806F8E4
	mov r0, r8
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	bl sub_080079E0
	mov r0, r8
	bl sub_08008D30
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _0806F8D4
	b _0806FC74
_0806F8D4:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0806FC74
	.align 2, 0
_0806F8E0: .4byte gCurrentKeyPress
_0806F8E4:
	ldr r0, _0806F91C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	mov sb, r0
	mov r6, sb
	ands r6, r1
	cmp r6, #0
	bne _0806F8F6
	b _0806FBF8
_0806F8F6:
	mov r0, r8
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r6, [r5, #4]
	cmp r6, #0
	bne _0806F9A6
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #1
	bne _0806F924
	ldr r0, _0806F920 @ =gUnk_08BC9DA0
	lsls r1, r4, #2
	adds r1, r1, r0
	ldr r0, [r1]
	b _0806FA8A
	.align 2, 0
_0806F91C: .4byte gKeyNewPress
_0806F920: .4byte gUnk_08BC9DA0
_0806F924:
	cmp r4, #6
	bne _0806F938
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	mov r0, sb
	strh r0, [r5, #4]
	strh r6, [r5, #6]
	b _0806FC70
_0806F938:
	cmp r4, #0
	bne _0806F94A
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x10
	b _0806FC14
_0806F94A:
	cmp r4, #1
	bne _0806F95C
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	b _0806FC14
_0806F95C:
	cmp r4, #5
	bne _0806F96E
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #1
	b _0806FC14
_0806F96E:
	cmp r4, #2
	bne _0806F980
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	b _0806FC14
_0806F980:
	cmp r4, #3
	bne _0806F992
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #4
	b _0806FC14
_0806F992:
	cmp r4, #4
	beq _0806F998
	b _0806FC74
_0806F998:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	b _0806FC14
_0806F9A6:
	cmp r6, #1
	bne _0806FA76
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #1
	bne _0806F9C4
	ldr r0, _0806F9C0 @ =gUnk_08BC9DB8
	lsls r1, r4, #2
	adds r1, r1, r0
	ldr r0, [r1]
	b _0806FA8A
	.align 2, 0
_0806F9C0: .4byte gUnk_08BC9DB8
_0806F9C4:
	cmp r4, #0
	bne _0806F9D6
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #6
	b _0806FC14
_0806F9D6:
	cmp r4, #1
	bne _0806F9E8
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0xa
	b _0806FC14
_0806F9E8:
	cmp r4, #2
	bne _0806F9FA
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	strh r4, [r5, #4]
	mov r0, sl
	b _0806FC6E
_0806F9FA:
	cmp r4, #3
	bne _0806FA0C
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #8
	b _0806FC14
_0806FA0C:
	cmp r4, #4
	bne _0806FA1E
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #9
	b _0806FC14
_0806FA1E:
	cmp r4, #5
	bne _0806FA4E
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1f
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
_0806FA4E:
	cmp r4, #6
	bne _0806FA60
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #2
	b _0806FC14
_0806FA60:
	cmp r4, #7
	beq _0806FA66
	b _0806FC74
_0806FA66:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	strh r1, [r5, #4]
	b _0806FC6E
_0806FA76:
	cmp r6, #2
	bne _0806FAB0
	adds r0, r5, #0
	adds r0, #0xc
	adds r0, r0, r4
	ldrb r0, [r0]
	cmp r0, #1
	bne _0806FA98
	ldr r0, _0806FA94 @ =gUnk_08BC9DD4
	ldr r0, [r0]
_0806FA8A:
	str r0, [r5, #8]
	mov r1, sb
	strh r1, [r5, #2]
	b _0806FC74
	.align 2, 0
_0806FA94: .4byte gUnk_08BC9DD4
_0806FA98:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #7
	bl sub_0806F0CC
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	movs r0, #1
	b _0806FC1C
_0806FAB0:
	cmp r6, #3
	beq _0806FAB6
	b _0806FC74
_0806FAB6:
	cmp r4, #0
	bne _0806FAE6
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x28
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
_0806FAE6:
	cmp r4, #1
	bne _0806FB16
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x29
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
_0806FB16:
	cmp r4, #2
	bne _0806FB46
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x2a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
_0806FB46:
	cmp r4, #3
	bne _0806FB56
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0x14
	b _0806FC72
_0806FB56:
	cmp r4, #4
	bne _0806FB88
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0806FB7C @ =gUnk_02020000
	ldr r1, _0806FB80 @ =gUnk_02022000
	bl sub_08093638
	mov r0, r8
	movs r1, #0
	bl sub_08008E4C
	ldr r0, _0806FB84 @ =gUnk_080BB7E0
	bl sub_0806A040
	movs r0, #2
	b _0806FC72
	.align 2, 0
_0806FB7C: .4byte gUnk_02020000
_0806FB80: .4byte gUnk_02022000
_0806FB84: .4byte gUnk_080BB7E0
_0806FB88:
	cmp r4, #5
	bne _0806FBC8
	ldr r0, _0806FBC4 @ =0x000001CB
	bl sub_08012F60
	cmp r0, #1
	bne _0806FBC8
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x18
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
	.align 2, 0
_0806FBC4: .4byte 0x000001CB
_0806FBC8:
	cmp r4, #6
	bne _0806FC74
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x18
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _0806FC2A
_0806FBF8:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806FC74
	ldrh r4, [r5, #4]
	cmp r4, #0
	bne _0806FC36
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
_0806FC14:
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
_0806FC1C:
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
_0806FC2A:
	movs r1, #0
	bl sub_0806F0CC
	movs r7, #0
	strh r7, [r5, #2]
	b _0806FC74
_0806FC36:
	cmp r4, #1
	bne _0806FC48
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	strh r6, [r5, #4]
	movs r0, #6
	b _0806FC6E
_0806FC48:
	cmp r4, #2
	bne _0806FC5C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	mov r0, sb
	strh r0, [r5, #4]
	strh r4, [r5, #6]
	b _0806FC70
_0806FC5C:
	cmp r4, #3
	bne _0806FC74
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	mov r1, sb
	strh r1, [r5, #4]
	movs r0, #7
_0806FC6E:
	strh r0, [r5, #6]
_0806FC70:
	movs r0, #0xa
_0806FC72:
	strh r0, [r5, #2]
_0806FC74:
	ldr r0, _0806FC88 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0806FC8C
	bl sub_08015788
	b _0806FC9A
	.align 2, 0
_0806FC88: .4byte gCurrentKeyPress
_0806FC8C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0806FD30
	bl sub_080156C4
_0806FC9A:
	ldr r1, _0806FCC4 @ =gUnk_080BB800
	add r0, sp, #4
	movs r2, #7
	bl memcpy
	bl sub_080184F0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	add r0, sp
	adds r0, #4
	ldrb r2, [r0]
	ldr r0, _0806FCC8 @ =gUnk_02010800
	movs r1, #0xe
	str r1, [sp]
	movs r1, #3
	movs r3, #0x1b
	bl sub_08069DA8
	b _0806FD30
	.align 2, 0
_0806FCC4: .4byte gUnk_080BB800
_0806FCC8: .4byte gUnk_02010800
_0806FCCC:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	adds r0, r5, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r5, #8]
	bl sub_0806A040
	b _0806FD10
_0806FCE6:
	bl sub_0806A0D4
	b _0806FD1C
_0806FCEC:
	bl sub_08070240
	adds r0, r5, #0
	adds r0, #0x14
	adds r1, r5, #0
	adds r1, #0x18
	bl sub_080076B0
	movs r0, #0
	strh r0, [r5, #2]
	b _0806FD30
_0806FD02:
	bl sub_0806F68C
	adds r0, r5, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E4C
_0806FD10:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0806FD30
_0806FD18:
	bl sub_0806DD1C
_0806FD1C:
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0806FD30
	adds r0, r5, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r5, #2]
_0806FD30:
	adds r0, r7, #0
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0806FD44
sub_0806FD44: @ 0x0806FD44
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0806FD74
	cmp r0, #1
	bgt _0806FD60
	cmp r0, #0
	beq _0806FD6A
	b _0806FD9C
_0806FD60:
	cmp r0, #2
	beq _0806FD80
	cmp r0, #3
	beq _0806FD98
	b _0806FD9C
_0806FD6A:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0806FD90
_0806FD74:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0806FD9C
	b _0806FD90
_0806FD80:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x16
	bl sub_0800B4E4
_0806FD90:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0806FD9C
_0806FD98:
	movs r5, #0
	strh r5, [r4, #2]
_0806FD9C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0806FDA4
sub_0806FDA4: @ 0x0806FDA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	bl sub_0806F020
	str r0, [sp, #0x14]
	ldr r5, _0806FE74 @ =gUnk_02010800
	ldr r3, _0806FE78 @ =gUnk_080BB808
	adds r0, r5, #0
	movs r1, #0xd
	movs r2, #2
	bl sub_08001284
	bl GetPlayerLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #2
	str r1, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0806FE7C @ =gUnk_080BB80C
	adds r0, r5, #0
	movs r1, #0xd
	movs r2, #3
	bl sub_08001284
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r4, #3
	str r4, [sp]
	str r0, [sp, #4]
	movs r6, #4
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0806FE80 @ =gUnk_080BB810
	adds r0, r5, #0
	movs r1, #0x14
	movs r2, #3
	bl sub_08001284
	bl GetPlayerMaxHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r4, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	bl GetPlayerMaxHp
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #0x11
	str r0, [sp, #4]
	str r6, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0x58
	movs r2, #0x58
	adds r3, r4, #0
	bl sub_0806F174
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _0806FE84
	movs r5, #0
	mov sl, r5
	movs r0, #0
	str r0, [sp, #0x18]
	movs r7, #0
	b _0806FECE
	.align 2, 0
_0806FE74: .4byte gUnk_02010800
_0806FE78: .4byte gUnk_080BB808
_0806FE7C: .4byte gUnk_080BB80C
_0806FE80: .4byte gUnk_080BB810
_0806FE84:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0806FEAC
	adds r0, r5, #0
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0806FEAC:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_0806FECE:
	ldr r4, _0806FF88 @ =gUnk_02010800
	movs r0, #0xd
	str r0, [sp]
	movs r6, #5
	str r6, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #0
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_08069DA8
	ldr r3, _0806FF8C @ =gUnk_08BC9CF4
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #5
	bl sub_08001284
	ldr r3, _0806FF90 @ =gUnk_08BC9CF7
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #6
	bl sub_08001284
	str r6, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #6
	mov r8, r0
	str r0, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	mov r1, sl
	str r1, [sp]
	movs r5, #0x16
	str r5, [sp, #4]
	str r6, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	ldr r3, [sp, #0x18]
	bl sub_0806F174
	str r7, [sp]
	str r5, [sp, #4]
	mov r0, r8
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	movs r3, #0xff
	bl sub_0806F174
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _0806FF94
	movs r5, #0
	mov sl, r5
	movs r1, #0
	str r1, [sp, #0x18]
	movs r7, #0
	b _0806FFDE
	.align 2, 0
_0806FF88: .4byte gUnk_02010800
_0806FF8C: .4byte gUnk_08BC9CF4
_0806FF90: .4byte gUnk_08BC9CF7
_0806FF94:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0806FFBC
	adds r0, r5, #0
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0806FFBC:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_0806FFDE:
	ldr r4, _08070098 @ =gUnk_02010800
	movs r0, #0xd
	str r0, [sp]
	movs r6, #8
	str r6, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #1
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_08069DA8
	ldr r3, _0807009C @ =gUnk_08BC9CF4
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #8
	bl sub_08001284
	ldr r3, _080700A0 @ =gUnk_08BC9CF7
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #9
	bl sub_08001284
	str r6, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r1, #9
	mov r8, r1
	str r1, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	mov r0, sl
	str r0, [sp]
	movs r5, #0x16
	str r5, [sp, #4]
	str r6, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	ldr r3, [sp, #0x18]
	bl sub_0806F174
	str r7, [sp]
	str r5, [sp, #4]
	mov r1, r8
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	movs r3, #0xff
	bl sub_0806F174
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _080700A4
	movs r5, #0
	mov sl, r5
	movs r0, #0
	str r0, [sp, #0x18]
	movs r7, #0
	b _080700EE
	.align 2, 0
_08070098: .4byte gUnk_02010800
_0807009C: .4byte gUnk_08BC9CF4
_080700A0: .4byte gUnk_08BC9CF7
_080700A4:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080700CC
	adds r0, r5, #0
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080700CC:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
_080700EE:
	ldr r4, _08070228 @ =gUnk_02010800
	movs r0, #0xd
	str r0, [sp]
	movs r6, #0xb
	str r6, [sp, #4]
	movs r1, #0
	mov sb, r1
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #3
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #2
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_08069DA8
	ldr r3, _0807022C @ =gUnk_08BC9CF4
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _08070230 @ =gUnk_08BC9CF7
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0xc
	bl sub_08001284
	str r6, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r1, #0xc
	mov r8, r1
	str r1, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	mov r0, sl
	str r0, [sp]
	movs r5, #0x16
	str r5, [sp, #4]
	str r6, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	ldr r3, [sp, #0x18]
	bl sub_0806F174
	str r7, [sp]
	str r5, [sp, #4]
	mov r1, r8
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x30
	movs r3, #0xff
	bl sub_0806F174
	bl sub_080184F0
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #8
	movs r0, #0x80
	lsls r0, r0, #9
	adds r2, r2, r0
	lsrs r2, r2, #0x10
	movs r0, #0xe
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #3
	movs r3, #0x1b
	bl sub_08069DA8
	ldr r3, _08070234 @ =gUnk_080BB814
	adds r0, r4, #0
	movs r1, #0x18
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _08070238 @ =gUnk_080BB818
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #0xe
	bl sub_08001284
	bl sub_08018E3C
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0807023C @ =gUnk_080BB820
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #0xf
	bl sub_08001284
	mov r0, sb
	ldr r1, [sp, #0x14]
	strh r0, [r1, #0x16]
	bl sub_08018E64
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x16
	movs r1, #0x11
	str r1, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r1, #4
	str r1, [sp, #0xc]
	mov r1, sb
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #2
	bl sub_0800B1AC
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070228: .4byte gUnk_02010800
_0807022C: .4byte gUnk_08BC9CF4
_08070230: .4byte gUnk_08BC9CF7
_08070234: .4byte gUnk_080BB814
_08070238: .4byte gUnk_080BB818
_0807023C: .4byte gUnk_080BB820

	thumb_func_start sub_08070240
sub_08070240: @ 0x08070240
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	adds r5, r6, #0
	adds r5, #0x18
	movs r1, #0
	movs r0, #2
	strb r0, [r6, #0x18]
	strb r0, [r5, #1]
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r1, [r5, #0x11]
	strb r0, [r5, #0x12]
	movs r0, #0x18
	strh r0, [r5, #8]
	ldrh r0, [r6, #6]
	strh r0, [r5, #2]
	strh r1, [r5, #4]
	movs r0, #0xf0
	strb r0, [r5, #0xd]
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _08070278
	ldr r0, _08070274 @ =gUnk_08BC9D00
	b _0807028A
	.align 2, 0
_08070274: .4byte gUnk_08BC9D00
_08070278:
	cmp r0, #1
	bne _08070284
	ldr r0, _08070280 @ =gUnk_08BC9D20
	b _0807028A
	.align 2, 0
_08070280: .4byte gUnk_08BC9D20
_08070284:
	cmp r0, #2
	bne _0807028C
	ldr r0, _080702F8 @ =gUnk_08BC9D64
_0807028A:
	str r0, [r5, #0x14]
_0807028C:
	movs r2, #0
	ldr r0, [r5, #0x14]
	ldr r0, [r0]
	adds r7, r6, #0
	adds r7, #0xc
	cmp r0, #0
	beq _080702B4
	adds r3, r7, #0
	movs r4, #0
_0807029E:
	adds r0, r3, r2
	strb r4, [r0]
	adds r2, #1
	cmp r2, #7
	bhi _080702B4
	ldr r0, [r5, #0x14]
	lsls r1, r2, #2
	adds r1, r1, r0
	ldr r0, [r1]
	cmp r0, #0
	bne _0807029E
_080702B4:
	strb r2, [r5, #0xa]
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #7
	bls _080702C2
	movs r0, #7
	strb r0, [r5, #0xa]
_080702C2:
	ldrh r4, [r6, #4]
	cmp r4, #0
	bne _080702FC
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080702D6
	movs r0, #1
	strb r0, [r6, #0xe]
_080702D6:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080702E4
	movs r0, #1
	strb r0, [r6, #0x10]
_080702E4:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08070324
	movs r0, #1
	strb r0, [r6, #0xd]
	strb r0, [r6, #0xf]
	b _08070324
	.align 2, 0
_080702F8: .4byte gUnk_08BC9D64
_080702FC:
	cmp r4, #1
	bne _0807030E
	bl sub_08018C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08070324
	strb r4, [r6, #0xc]
	b _08070324
_0807030E:
	cmp r4, #2
	beq _08070324
	cmp r4, #3
	bne _08070324
	ldr r0, _08070330 @ =0x000001CB
	bl sub_08012F60
	cmp r0, #0
	bne _08070324
	movs r0, #1
	strb r0, [r6, #0x11]
_08070324:
	str r7, [r5, #0x18]
	movs r0, #0
	strb r0, [r5, #0x10]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08070330: .4byte 0x000001CB

	thumb_func_start sub_08070334
sub_08070334: @ 0x08070334
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0807035C
	cmp r0, #1
	bgt _08070350
	cmp r0, #0
	beq _08070356
	b _08070382
_08070350:
	cmp r0, #2
	beq _0807036E
	b _08070382
_08070356:
	bl sub_080703C4
	b _08070360
_0807035C:
	bl sub_08070590
_08070360:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08070382
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08070382
_0807036E:
	bl sub_08070680
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08070382
	movs r6, #0
	strh r6, [r5]
	movs r0, #0x90
	bl sub_0806EFF0
_08070382:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080703AC
	adds r4, r5, #0
	adds r4, #0x68
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_080703AC:
	adds r4, r5, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080703C4
sub_080703C4: @ 0x080703C4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	bl sub_0806F020
	adds r6, r0, #0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080703D8
	b _0807053C
_080703D8:
	cmp r0, #1
	bgt _080703E2
	cmp r0, #0
	beq _080703F0
	b _08070584
_080703E2:
	cmp r0, #2
	bne _080703E8
	b _08070570
_080703E8:
	cmp r0, #3
	bne _080703EE
	b _08070580
_080703EE:
	b _08070584
_080703F0:
	bl sub_08070714
	adds r4, r6, #0
	adds r4, #0x40
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x68
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	movs r7, #0
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _08070460
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
	b _0807049C
_08070460:
	bl sub_08018914
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807046E
	movs r7, #2
	b _0807049C
_0807046E:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0807047E
	movs r7, #3
	b _0807049C
_0807047E:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0807048E
	movs r7, #4
	b _0807049C
_0807048E:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0807049C
	movs r7, #5
_0807049C:
	movs r0, #1
	movs r1, #4
	bl sub_08001D3C
	adds r5, r0, #0
	adds r1, r7, #0
	bl sub_08001D78
	ldr r4, _08070534 @ =gUnk_02017400
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #1
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	adds r1, r7, #0
	adds r1, #0x32
	adds r0, r5, #0
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #1
	movs r1, #1
	bl sub_0800A630
	adds r4, r6, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _08070538 @ =0x06011000
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x3a
	bl sub_0800A678
	ldrh r0, [r6, #2]
	adds r0, #1
	b _08070582
	.align 2, 0
_08070534: .4byte gUnk_02017400
_08070538: .4byte 0x06011000
_0807053C:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r6, #2]
	adds r0, #1
	b _08070582
_08070570:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08070584
	ldrh r0, [r6, #2]
	adds r0, #1
	b _08070582
_08070580:
	movs r0, #0
_08070582:
	strh r0, [r6, #2]
_08070584:
	movs r1, #2
	ldrsh r0, [r6, r1]
	add sp, #0x1c
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08070590
sub_08070590: @ 0x08070590
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08070678
	ldr r0, _080705DC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080705E0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r5, [r4, #8]
	b _08070674
	.align 2, 0
_080705DC: .4byte gKeyNewPress
_080705E0:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807062A
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08070678
	movs r0, #0
	movs r1, #1
	bl sub_0806F0CC
	ldrh r0, [r4, #4]
	cmp r0, #0
	bne _0807060E
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08070616
_0807060E:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
_08070616:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #7
	b _08070672
_0807062A:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08070678
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08070678
	movs r0, #0
	movs r1, #1
	bl sub_0806F0CC
	ldrh r0, [r4, #4]
	cmp r0, #0
	bne _08070658
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08070660
_08070658:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
_08070660:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #9
_08070672:
	strh r0, [r4, #8]
_08070674:
	movs r5, #0
	strh r5, [r4, #2]
_08070678:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08070680
sub_08070680: @ 0x08070680
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080706B0
	cmp r0, #1
	bgt _0807069C
	cmp r0, #0
	beq _080706A6
	b _0807070C
_0807069C:
	cmp r0, #2
	beq _080706BC
	cmp r0, #3
	beq _08070708
	b _0807070C
_080706A6:
	ldrh r0, [r4, #8]
	movs r1, #8
	bl sub_0806AC78
	b _08070700
_080706B0:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807070C
	b _08070700
_080706BC:
	ldrh r0, [r4, #4]
	cmp r0, #0
	bne _080706D4
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
	b _08070700
_080706D4:
	cmp r0, #1
	bne _08070700
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800B4E4
_08070700:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807070C
_08070708:
	movs r5, #0
	strh r5, [r4, #2]
_0807070C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08070714
sub_08070714: @ 0x08070714
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	bl sub_0806F020
	str r0, [sp, #0x14]
	ldrh r0, [r0, #4]
	mov sl, r0
	cmp r0, #0
	beq _08070730
	b _08070D80
_08070730:
	ldr r1, [sp, #0x14]
	strh r0, [r1, #0xa]
	bl GetSavedPlayerName
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xa
	movs r1, #5
	mov r8, r1
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r1, #2
	mov sb, r1
	str r1, [sp, #0xc]
	mov r1, sl
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldr r4, _080709B4 @ =gUnk_02010800
	ldr r3, _080709B8 @ =gUnk_080BB824
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #7
	bl sub_08001284
	ldr r3, _080709BC @ =gUnk_080BB828
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #9
	bl sub_08001284
	ldr r3, _080709C0 @ =gUnk_080BB82C
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _080709C4 @ =gUnk_080BB830
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _080709C8 @ =gUnk_080BB834
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _080709CC @ =gUnk_080BB808
	adds r0, r4, #0
	movs r1, #1
	movs r2, #2
	bl sub_08001284
	ldr r3, _080709D0 @ =gUnk_080BB80C
	adds r0, r4, #0
	movs r1, #1
	movs r2, #3
	bl sub_08001284
	ldr r3, _080709D4 @ =gUnk_080BB838
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #2
	bl sub_08001284
	ldr r3, _080709D8 @ =gUnk_080BB83C
	adds r0, r4, #0
	movs r1, #0x11
	movs r2, #3
	bl sub_08001284
	ldr r3, _080709DC @ =gUnk_080BB810
	adds r0, r4, #0
	movs r1, #8
	movs r2, #3
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #8
	movs r3, #0x13
	bl sub_0806F500
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xa
	movs r3, #0x13
	bl sub_0806F500
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xc
	movs r3, #0x13
	bl sub_0806F500
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0xe
	movs r3, #0x13
	bl sub_0806F500
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #0x10
	movs r3, #0x13
	bl sub_0806F500
	movs r0, #0x12
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sl
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	movs r0, #0x16
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sl
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	movs r0, #0x1a
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sl
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #3
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	ldr r0, _080709E0 @ =gUnk_0201095C
	movs r2, #0x56
	strh r2, [r0]
	adds r0, #0x40
	movs r1, #0x57
	strh r1, [r0]
	ldr r0, _080709E4 @ =gUnk_02010C5C
	strh r2, [r0]
	adds r0, #0x40
	strh r1, [r0]
	bl GetPlayerLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, sb
	str r1, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #6
	bl sub_0806F2D0
	bl GetPlayerCurrentHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #3
	str r1, [sp]
	str r0, [sp, #4]
	movs r5, #4
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	bl GetPlayerMaxHp
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #3
	str r1, [sp]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #9
	bl sub_0806F2D0
	bl GetPlayerExp
	mov r1, sb
	str r1, [sp]
	str r0, [sp, #4]
	movs r5, #8
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	bl sub_08018470
	movs r1, #3
	str r1, [sp]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	mov r0, r8
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_08069DA8
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r0, #7
	str r0, [sp]
	str r7, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0xb
	str r0, [sp]
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0xf
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _080709E8
	movs r1, #0
	mov r8, r1
	mov r0, sl
	b _08070A2A
	.align 2, 0
_080709B4: .4byte gUnk_02010800
_080709B8: .4byte gUnk_080BB824
_080709BC: .4byte gUnk_080BB828
_080709C0: .4byte gUnk_080BB82C
_080709C4: .4byte gUnk_080BB830
_080709C8: .4byte gUnk_080BB834
_080709CC: .4byte gUnk_080BB808
_080709D0: .4byte gUnk_080BB80C
_080709D4: .4byte gUnk_080BB838
_080709D8: .4byte gUnk_080BB83C
_080709DC: .4byte gUnk_080BB810
_080709E0: .4byte gUnk_0201095C
_080709E4: .4byte gUnk_02010C5C
_080709E8:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08070A14
	mov r0, r8
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
_08070A14:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_08070A2A:
	str r0, [sp, #0x18]
	movs r0, #0
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #0
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #0
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r5, _08070AE8 @ =gUnk_02010800
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #1
	mov r2, r8
	movs r3, #0x13
	bl sub_08069DA8
	movs r0, #7
	str r0, [sp]
	str r7, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #0xb
	str r0, [sp]
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #0xf
	str r0, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08070AEC
	movs r0, #0
	mov r8, r0
	mov sl, r0
	movs r1, #0
	str r1, [sp, #0x18]
	b _08070B30
	.align 2, 0
_08070AE8: .4byte gUnk_02010800
_08070AEC:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08070B18
	mov r0, r8
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
_08070B18:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
_08070B30:
	movs r0, #1
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #1
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #1
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r5, _08070BEC @ =gUnk_02010800
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #2
	mov r2, r8
	movs r3, #0x17
	bl sub_08069DA8
	movs r0, #7
	str r0, [sp]
	str r7, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0xb
	str r0, [sp]
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0xf
	str r0, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08070BF0
	movs r0, #0
	mov r8, r0
	mov sl, r0
	movs r1, #0
	str r1, [sp, #0x18]
	b _08070C34
	.align 2, 0
_08070BEC: .4byte gUnk_02010800
_08070BF0:
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08070C1C
	mov r0, r8
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
_08070C1C:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
_08070C34:
	movs r0, #2
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #2
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #2
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r5, _08070D0C @ =gUnk_02010800
	movs r0, #5
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #3
	mov r2, r8
	movs r3, #0x1b
	bl sub_08069DA8
	movs r0, #7
	str r0, [sp]
	str r7, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r0, #0xb
	str r0, [sp]
	mov r1, sb
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r0, #0xf
	str r0, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08070D14
	movs r0, #0
	mov r8, r0
	ldr r0, [sp, #0x14]
	adds r0, #0xc
	ldr r1, _08070D10 @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r1, #0x11
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	mov r1, r8
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x11
	bl sub_0800B1AC
	b _08070D42
	.align 2, 0
_08070D0C: .4byte gUnk_02010800
_08070D10: .4byte gUnk_08BCA070
_08070D14:
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xc
	movs r1, #0x11
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #0x11
	bl sub_0800B1AC
_08070D42:
	ldr r0, _08070D7C @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	movs r1, #4
	mov r2, r8
	movs r3, #0xf
	bl sub_08069DA8
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08070D6A
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _08070D6A
	b _080712A2
_08070D6A:
	movs r0, #3
	movs r1, #0x15
	bl sub_08001D3C
	movs r0, #3
	movs r1, #0x16
	bl sub_08001D3C
	b _080712A2
	.align 2, 0
_08070D7C: .4byte gUnk_02010800
_08070D80:
	mov r0, sl
	cmp r0, #1
	beq _08070D88
	b _080712A2
_08070D88:
	movs r5, #0
	ldr r1, [sp, #0x14]
	strh r5, [r1, #0xa]
	bl sub_08018908
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xa
	movs r1, #5
	str r1, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #2
	mov r8, r1
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
	ldr r7, _08070F5C @ =gUnk_02010800
	ldr r3, _08070F60 @ =gUnk_080BB824
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #6
	bl sub_08001284
	ldr r3, _08070F64 @ =gUnk_080BB828
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #7
	bl sub_08001284
	ldr r3, _08070F68 @ =gUnk_080BB82C
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #8
	bl sub_08001284
	ldr r3, _08070F6C @ =gUnk_080BB844
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #9
	bl sub_08001284
	ldr r3, _08070F70 @ =gUnk_080BB808
	adds r0, r7, #0
	movs r1, #1
	movs r2, #2
	bl sub_08001284
	ldr r3, _08070F74 @ =gUnk_080BB80C
	adds r0, r7, #0
	movs r1, #1
	movs r2, #3
	bl sub_08001284
	ldr r3, _08070F78 @ =gUnk_080BB838
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #2
	bl sub_08001284
	ldr r3, _08070F7C @ =gUnk_080BB83C
	adds r0, r7, #0
	movs r1, #0x11
	movs r2, #3
	bl sub_08001284
	adds r0, r7, #0
	movs r1, #0xa
	movs r2, #0xa
	movs r3, #0x13
	bl sub_0806F500
	movs r4, #0xb
	str r4, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r4, [sp]
	movs r0, #0xd
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #2
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r4, [sp]
	movs r0, #0xf
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #3
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	str r4, [sp]
	movs r0, #0x11
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #4
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	bl sub_08018924
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, r8
	str r1, [sp]
	str r0, [sp, #4]
	str r1, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #6
	bl sub_0806F2D0
	bl sub_08018944
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #3
	mov sb, r1
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	bl sub_080189E4
	mov r1, r8
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #8
	mov sl, r0
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	bl sub_080189F4
	mov r1, sb
	str r1, [sp]
	str r0, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	bl sub_08018964
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08018974
	mov r1, sp
	strh r0, [r1, #0x20]
	lsls r0, r0, #0x10
	str r0, [sp, #0x24]
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08018984
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08018954
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	movs r0, #6
	str r0, [sp]
	str r5, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #7
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0
	blt _08070F80
	mov r0, sl
	str r0, [sp]
	str r4, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	b _08070F96
	.align 2, 0
_08070F5C: .4byte gUnk_02010800
_08070F60: .4byte gUnk_080BB824
_08070F64: .4byte gUnk_080BB828
_08070F68: .4byte gUnk_080BB82C
_08070F6C: .4byte gUnk_080BB844
_08070F70: .4byte gUnk_080BB808
_08070F74: .4byte gUnk_080BB80C
_08070F78: .4byte gUnk_080BB838
_08070F7C: .4byte gUnk_080BB83C
_08070F80:
	mov r0, sl
	str r0, [sp]
	str r4, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
_08070F96:
	ldr r0, _08070FD8 @ =gUnk_02010800
	movs r1, #9
	str r1, [sp]
	ldr r1, [sp, #0x1c]
	str r1, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x12
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08070FE0
	movs r5, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xe
	ldr r1, _08070FDC @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r1, #0xb
	str r1, [sp]
	str r5, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	b _0807101C
	.align 2, 0
_08070FD8: .4byte gUnk_02010800
_08070FDC: .4byte gUnk_08BCA070
_08070FE0:
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _08071024
	adds r0, r4, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C70
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xe
	movs r1, #0xb
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
_0807101C:
	movs r3, #0xe
	bl sub_0800B1AC
	b _08071050
_08071024:
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0xe
	movs r1, #0xb
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #0xe
	bl sub_0800B1AC
_08071050:
	ldr r0, _0807108C @ =gUnk_02010800
	movs r1, #0xb
	str r1, [sp]
	movs r1, #0
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_08069DA8
	movs r0, #1
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08071094
	movs r5, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x10
	ldr r1, _08071090 @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r1, #0xd
	str r1, [sp]
	str r5, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	b _080710D0
	.align 2, 0
_0807108C: .4byte gUnk_02010800
_08071090: .4byte gUnk_08BCA070
_08071094:
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _080710D8
	adds r0, r4, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C70
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x10
	movs r1, #0xd
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
_080710D0:
	movs r3, #0xe
	bl sub_0800B1AC
	b _08071104
_080710D8:
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x10
	movs r1, #0xd
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #0xe
	bl sub_0800B1AC
_08071104:
	ldr r0, _08071140 @ =gUnk_02010800
	movs r1, #0xd
	str r1, [sp]
	movs r1, #1
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_08069DA8
	movs r0, #2
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08071148
	movs r5, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x12
	ldr r1, _08071144 @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r1, #0xf
	str r1, [sp]
	str r5, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	b _08071184
	.align 2, 0
_08071140: .4byte gUnk_02010800
_08071144: .4byte gUnk_08BCA070
_08071148:
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _0807118C
	adds r0, r4, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C70
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x12
	movs r1, #0xf
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
_08071184:
	movs r3, #0xe
	bl sub_0800B1AC
	b _080711B8
_0807118C:
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x12
	movs r1, #0xf
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #0xe
	bl sub_0800B1AC
_080711B8:
	ldr r0, _080711F4 @ =gUnk_02010800
	movs r1, #0xf
	str r1, [sp]
	movs r1, #2
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_08069DA8
	movs r0, #3
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _080711FC
	movs r5, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x14
	ldr r1, _080711F8 @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r1, #0x11
	str r1, [sp]
	str r5, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	b _08071238
	.align 2, 0
_080711F4: .4byte gUnk_02010800
_080711F8: .4byte gUnk_08BCA070
_080711FC:
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _08071240
	adds r0, r4, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063C70
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x14
	movs r1, #0x11
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
_08071238:
	movs r3, #0xe
	bl sub_0800B1AC
	b _0807126C
_08071240:
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldr r0, [sp, #0x14]
	adds r0, #0x14
	movs r1, #0x11
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #0xe
	bl sub_0800B1AC
_0807126C:
	ldr r0, _080712B4 @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	movs r1, #3
	adds r2, r5, #0
	movs r3, #0xc
	bl sub_08069DA8
	bl sub_08018914
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080712A2
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _080712A2
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	beq _080712A2
	bl sub_08018914
_080712A2:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080712B4: .4byte gUnk_02010800

	thumb_func_start sub_080712B8
sub_080712B8: @ 0x080712B8
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080712E0
	cmp r0, #1
	bgt _080712D4
	cmp r0, #0
	beq _080712DA
	b _08071306
_080712D4:
	cmp r0, #2
	beq _080712F2
	b _08071306
_080712DA:
	bl sub_08071310
	b _080712E4
_080712E0:
	bl sub_080713A0
_080712E4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08071306
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08071306
_080712F2:
	bl sub_08071448
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08071306
	movs r5, #0
	strh r5, [r4]
	movs r0, #0x60
	bl sub_0806EFF0
_08071306:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08071310
sub_08071310: @ 0x08071310
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807134E
	cmp r0, #1
	bgt _0807132A
	cmp r0, #0
	beq _08071334
	b _08071396
_0807132A:
	cmp r0, #2
	beq _08071382
	cmp r0, #3
	beq _08071392
	b _08071396
_08071334:
	bl sub_08071500
	adds r0, r4, #6
	adds r1, r4, #0
	adds r1, #0x38
	bl sub_080072F8
	ldrh r0, [r4, #4]
	bl sub_0807159C
	ldrh r0, [r4, #2]
	adds r0, #1
	b _08071394
_0807134E:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _08071394
_08071382:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08071396
	ldrh r0, [r4, #2]
	adds r0, #1
	b _08071394
_08071392:
	movs r0, #0
_08071394:
	strh r0, [r4, #2]
_08071396:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080713A0
sub_080713A0: @ 0x080713A0
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _0807143C
	adds r5, r6, #6
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807143C
	ldr r0, _08071400 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08071404
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	beq _0807143C
	ldrh r0, [r6, #4]
	bl sub_0807159C
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0807143C
	.align 2, 0
_08071400: .4byte gCurrentKeyPress
_08071404:
	ldr r0, _08071444 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807143C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r7, #0
	strh r7, [r6, #2]
_0807143C:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08071444: .4byte gKeyNewPress

	thumb_func_start sub_08071448
sub_08071448: @ 0x08071448
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08071478
	cmp r0, #1
	bgt _08071464
	cmp r0, #0
	beq _0807146E
	b _080714F6
_08071464:
	cmp r0, #2
	beq _08071484
	cmp r0, #3
	beq _080714F2
	b _080714F6
_0807146E:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _080714EA
_08071478:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080714F6
	b _080714EA
_08071484:
	adds r0, r4, #6
	bl sub_08008C14
	adds r1, r4, #0
	adds r1, #0x2c
	ldrh r0, [r4, #0x2c]
	cmp r0, #0
	beq _0807149A
	adds r0, r1, #0
	bl sub_0800B4E4
_0807149A:
	adds r1, r4, #0
	adds r1, #0x2e
	ldrh r0, [r4, #0x2e]
	cmp r0, #0
	beq _080714AA
	adds r0, r1, #0
	bl sub_0800B4E4
_080714AA:
	adds r1, r4, #0
	adds r1, #0x30
	ldrh r0, [r4, #0x30]
	cmp r0, #0
	beq _080714BA
	adds r0, r1, #0
	bl sub_0800B4E4
_080714BA:
	adds r1, r4, #0
	adds r1, #0x32
	ldrh r0, [r4, #0x32]
	cmp r0, #0
	beq _080714CA
	adds r0, r1, #0
	bl sub_0800B4E4
_080714CA:
	adds r1, r4, #0
	adds r1, #0x34
	ldrh r0, [r4, #0x34]
	cmp r0, #0
	beq _080714DA
	adds r0, r1, #0
	bl sub_0800B4E4
_080714DA:
	adds r1, r4, #0
	adds r1, #0x36
	ldrh r0, [r4, #0x36]
	cmp r0, #0
	beq _080714EA
	adds r0, r1, #0
	bl sub_0800B4E4
_080714EA:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080714F6
_080714F2:
	movs r5, #0
	strh r5, [r4, #2]
_080714F6:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08071500
sub_08071500: @ 0x08071500
	push {r4, r5, r6, lr}
	bl sub_0806F020
	mov ip, r0
	mov r3, ip
	adds r3, #0x38
	movs r4, #0
	movs r0, #4
	strb r0, [r3]
	movs r0, #3
	strb r0, [r3, #1]
	movs r0, #2
	strb r0, [r3, #6]
	strb r4, [r3, #7]
	strb r0, [r3, #0x11]
	strb r0, [r3, #0x12]
	strh r4, [r3, #2]
	strh r4, [r3, #4]
	movs r0, #0xe0
	strb r0, [r3, #0xd]
	movs r0, #0xf0
	strb r0, [r3, #0xc]
	mov r5, ip
	adds r5, #8
	str r5, [r3, #0x14]
	mov r2, ip
	adds r2, #0x24
	str r2, [r3, #0x18]
	ldr r1, _08071594 @ =gUnk_08BC9DF4
	ldr r0, [r1]
	mov r6, ip
	str r0, [r6, #8]
	strb r4, [r2]
	ldr r0, [r1, #4]
	str r0, [r6, #0xc]
	mov r0, ip
	adds r0, #0x25
	strb r4, [r0]
	ldr r0, [r1, #8]
	str r0, [r5, #8]
	mov r0, ip
	adds r0, #0x26
	strb r4, [r0]
	ldr r0, [r1, #0xc]
	str r0, [r6, #0x14]
	mov r0, ip
	adds r0, #0x27
	strb r4, [r0]
	ldr r0, [r1, #0x10]
	str r0, [r6, #0x18]
	mov r0, ip
	adds r0, #0x28
	strb r4, [r0]
	ldr r0, [r1, #0x14]
	str r0, [r6, #0x1c]
	mov r0, ip
	adds r0, #0x29
	strb r4, [r0]
	movs r0, #6
	str r4, [r6, #0x20]
	strb r0, [r3, #0xa]
	movs r1, #0
	movs r0, #0x18
	strh r0, [r3, #8]
	strb r1, [r3, #0xe]
	strb r1, [r3, #0xf]
	str r4, [r3, #0x20]
	str r4, [r3, #0x1c]
	ldr r0, _08071598 @ =sub_08073528
	str r0, [r3, #0x24]
	strb r1, [r3, #0x10]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08071594: .4byte gUnk_08BC9DF4
_08071598: .4byte sub_08073528

	thumb_func_start sub_0807159C
sub_0807159C: @ 0x0807159C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	lsls r0, r0, #0x10
	str r0, [sp, #0x1c]
	lsrs r5, r0, #0x10
	bl sub_0806F020
	adds r6, r0, #0
	ldr r1, _080716C4 @ =gUnk_080BB848
	add r0, sp, #0x14
	movs r2, #4
	bl memcpy
	lsls r5, r5, #0x18
	lsrs r1, r5, #0x18
	str r1, [sp, #0x20]
	adds r0, r1, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _080716C8 @ =gUnk_02010800
	movs r1, #0xa
	movs r2, #2
	add r3, sp, #0x14
	bl sub_08001284
	ldr r5, _080716CC @ =gUnk_080BB84C
	ldr r0, _080716C8 @ =gUnk_02010800
	movs r1, #0x1b
	movs r2, #6
	adds r3, r5, #0
	bl sub_08001284
	ldr r0, _080716C8 @ =gUnk_02010800
	movs r1, #0x1b
	movs r2, #0xa
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r6, #0
	adds r0, #0x2c
	str r0, [sp, #0x28]
	movs r5, #0
	ldrh r0, [r6, #0x2c]
	cmp r0, #0
	beq _08071608
	ldr r0, [sp, #0x28]
	bl sub_0800B4E4
_08071608:
	adds r1, r6, #0
	adds r1, #0x2e
	str r1, [sp, #0x2c]
	ldrh r0, [r6, #0x2e]
	cmp r0, #0
	beq _0807161A
	adds r0, r1, #0
	bl sub_0800B4E4
_0807161A:
	adds r1, r6, #0
	adds r1, #0x30
	str r1, [sp, #0x30]
	ldrh r0, [r6, #0x30]
	cmp r0, #0
	beq _0807162C
	adds r0, r1, #0
	bl sub_0800B4E4
_0807162C:
	adds r1, r6, #0
	adds r1, #0x32
	movs r0, #0
	mov sl, r0
	str r1, [sp, #0x34]
	ldrh r0, [r6, #0x32]
	cmp r0, #0
	beq _08071642
	adds r0, r1, #0
	bl sub_0800B4E4
_08071642:
	adds r1, r6, #0
	adds r1, #0x34
	movs r0, #0
	mov sb, r0
	str r1, [sp, #0x38]
	ldrh r0, [r6, #0x34]
	cmp r0, #0
	beq _08071658
	adds r0, r1, #0
	bl sub_0800B4E4
_08071658:
	adds r1, r6, #0
	adds r1, #0x36
	movs r0, #0
	mov r8, r0
	str r1, [sp, #0x3c]
	ldrh r0, [r6, #0x36]
	cmp r0, #0
	beq _0807166E
	adds r0, r1, #0
	bl sub_0800B4E4
_0807166E:
	movs r7, #0
	cmp r4, #0
	bne _080716D4
	ldr r5, _080716D0 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x14]
	movs r0, #0xb
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r3, #0x17
	bl sub_0800B1AC
	b _08071D0C
	.align 2, 0
_080716C4: .4byte gUnk_080BB848
_080716C8: .4byte gUnk_02010800
_080716CC: .4byte gUnk_080BB84C
_080716D0: .4byte gUnk_08BC9E3C
_080716D4:
	cmp r4, #1
	bne _0807174C
	ldr r6, _08071744 @ =gUnk_08BC9E3C
	ldr r2, [r6]
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #4]
	movs r0, #5
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x14]
	movs r0, #0xb
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r3, _08071748 @ =gUnk_080BB850
	b _080717B4
	.align 2, 0
_08071744: .4byte gUnk_08BC9E3C
_08071748: .4byte gUnk_080BB850
_0807174C:
	cmp r4, #2
	bne _080717CC
	ldr r6, _080717C0 @ =gUnk_08BC9E3C
	ldr r2, [r6]
	movs r0, #3
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #4]
	movs r0, #5
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x14]
	movs r0, #0xb
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r3, _080717C4 @ =gUnk_080BB854
_080717B4:
	ldr r0, _080717C8 @ =gUnk_02010800
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	b _08071D0C
	.align 2, 0
_080717C0: .4byte gUnk_08BC9E3C
_080717C4: .4byte gUnk_080BB854
_080717C8: .4byte gUnk_02010800
_080717CC:
	cmp r4, #3
	bne _08071870
	ldr r6, _08071860 @ =gUnk_08BC9E3C
	ldr r2, [r6]
	str r4, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #4]
	movs r0, #5
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x10]
	movs r0, #9
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x14]
	movs r0, #0xb
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r6, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x38]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r3, _08071864 @ =gUnk_080BB854
	ldr r0, _08071868 @ =gUnk_02010800
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _0807186C @ =gUnk_080BB858
	b _08071C2C
	.align 2, 0
_08071860: .4byte gUnk_08BC9E3C
_08071864: .4byte gUnk_080BB854
_08071868: .4byte gUnk_02010800
_0807186C: .4byte gUnk_080BB858
_08071870:
	cmp r4, #4
	bne _08071928
	ldr r5, _08071918 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #4]
	movs r0, #5
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x10]
	movs r0, #9
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x14]
	movs r0, #0xb
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x38]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _0807191C @ =gUnk_02010800
	ldr r3, _08071920 @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _08071924 @ =gUnk_080BB858
	adds r0, r5, #0
	b _08071C2E
	.align 2, 0
_08071918: .4byte gUnk_08BC9E3C
_0807191C: .4byte gUnk_02010800
_08071920: .4byte gUnk_080BB85C
_08071924: .4byte gUnk_080BB858
_08071928:
	cmp r4, #5
	bne _080719D8
	ldr r5, _080719C8 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x2e
	ldr r2, [r5, #4]
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x10]
	movs r0, #9
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x18]
	movs r0, #0xb
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _080719CC @ =gUnk_02010800
	ldr r3, _080719D0 @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _080719D4 @ =gUnk_080BB858
	adds r0, r5, #0
	b _08071C2E
	.align 2, 0
_080719C8: .4byte gUnk_08BC9E3C
_080719CC: .4byte gUnk_02010800
_080719D0: .4byte gUnk_080BB85C
_080719D4: .4byte gUnk_080BB858
_080719D8:
	cmp r4, #6
	bne _08071AA4
	ldr r5, _08071A94 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x2e
	ldr r2, [r5, #4]
	movs r1, #5
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x30
	ldr r2, [r5, #8]
	movs r1, #7
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x10]
	movs r0, #9
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x34]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x18]
	movs r0, #0xb
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x38]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x3c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _08071A98 @ =gUnk_02010800
	ldr r3, _08071A9C @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _08071AA0 @ =gUnk_080BB858
	adds r0, r5, #0
	b _08071C2E
	.align 2, 0
_08071A94: .4byte gUnk_08BC9E3C
_08071A98: .4byte gUnk_02010800
_08071A9C: .4byte gUnk_080BB85C
_08071AA0: .4byte gUnk_080BB858
_08071AA4:
	cmp r4, #7
	bne _08071B70
	ldr r5, _08071B60 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x2e
	ldr r2, [r5, #4]
	movs r1, #5
	str r1, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x30
	ldr r2, [r5, #8]
	str r4, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x32
	ldr r2, [r5, #0x10]
	movs r1, #9
	str r1, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x18]
	movs r0, #0xb
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x38]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x3c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _08071B64 @ =gUnk_02010800
	ldr r3, _08071B68 @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _08071B6C @ =gUnk_080BB860
	adds r0, r5, #0
	b _08071C2E
	.align 2, 0
_08071B60: .4byte gUnk_08BC9E3C
_08071B64: .4byte gUnk_02010800
_08071B68: .4byte gUnk_080BB85C
_08071B6C: .4byte gUnk_080BB860
_08071B70:
	cmp r4, #8
	bne _08071C48
	ldr r5, _08071C38 @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x2e
	ldr r2, [r5, #4]
	movs r1, #5
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x30
	ldr r2, [r5, #8]
	movs r1, #7
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x32
	ldr r2, [r5, #0x10]
	movs r1, #9
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x34
	ldr r2, [r5, #0x18]
	movs r1, #0xb
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r2, [r5, #0x1c]
	movs r0, #0xd
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x3c]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _08071C3C @ =gUnk_02010800
	ldr r3, _08071C40 @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _08071C44 @ =gUnk_080BB864
_08071C2C:
	ldr r0, _08071C3C @ =gUnk_02010800
_08071C2E:
	movs r1, #0x1b
	movs r2, #0xa
	bl sub_08001284
	b _08071D0C
	.align 2, 0
_08071C38: .4byte gUnk_08BC9E3C
_08071C3C: .4byte gUnk_02010800
_08071C40: .4byte gUnk_080BB85C
_08071C44: .4byte gUnk_080BB864
_08071C48:
	cmp r4, #9
	bne _08071D0C
	ldr r5, _08071D1C @ =gUnk_08BC9E3C
	ldr r2, [r5]
	movs r0, #3
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	mov r8, r1
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x2e
	ldr r2, [r5, #4]
	movs r1, #5
	str r1, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x30
	ldr r2, [r5, #8]
	movs r1, #7
	str r1, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x32
	ldr r2, [r5, #0x10]
	str r4, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x34
	ldr r2, [r5, #0x18]
	movs r1, #0xb
	str r1, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x36
	ldr r2, [r5, #0x1c]
	movs r1, #0xd
	str r1, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #2
	movs r3, #0x17
	bl sub_0800B1AC
	ldr r5, _08071D20 @ =gUnk_02010800
	ldr r3, _08071D24 @ =gUnk_080BB85C
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #6
	bl sub_08001284
	ldr r3, _08071D28 @ =gUnk_080BB868
	adds r0, r5, #0
	movs r1, #0x1b
	movs r2, #0xa
	bl sub_08001284
_08071D0C:
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08071D1C: .4byte gUnk_08BC9E3C
_08071D20: .4byte gUnk_02010800
_08071D24: .4byte gUnk_080BB85C
_08071D28: .4byte gUnk_080BB868

	thumb_func_start sub_08071D2C
sub_08071D2C: @ 0x08071D2C
	push {r4, r5, r6, lr}
	sub sp, #0xc
	movs r0, #0xa0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r6, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08071E54 @ =0x01000050
	adds r0, r1, #0
	adds r1, r6, #0
	bl CpuSet
	movs r0, #0x19
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	ldr r0, _08071E58 @ =0x000001E5
	bl sub_08012F60
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x1c]
	cmp r0, #1
	ble _08071DC0
	movs r0, #1
	strh r0, [r6, #0x1c]
_08071DC0:
	movs r0, #0x80
	bl sub_08012F60
	strh r0, [r6, #0x14]
	movs r0, #0x81
	bl sub_08012F60
	strh r0, [r6, #0x16]
	movs r0, #0x82
	bl sub_08012F60
	strh r0, [r6, #0x18]
	movs r0, #0xe1
	lsls r0, r0, #1
	bl sub_08012F60
	strh r0, [r6, #0x1a]
	movs r0, #0xe0
	lsls r0, r0, #1
	bl sub_08012F60
	strh r0, [r6, #0x1e]
	bl sub_08010F90
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r6, #0x20]
	movs r0, #0x84
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x83
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	orrs r4, r0
	str r4, [r6, #8]
	movs r0, #0x86
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x85
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	orrs r4, r0
	str r4, [r6, #0xc]
	movs r0, #0x88
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x87
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	orrs r4, r0
	str r4, [r6, #0x10]
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08071E54: .4byte 0x01000050
_08071E58: .4byte 0x000001E5

	thumb_func_start sub_08071E5C
sub_08071E5C: @ 0x08071E5C
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08071E84
	cmp r0, #1
	bgt _08071E78
	cmp r0, #0
	beq _08071E7E
	b _08071EAA
_08071E78:
	cmp r0, #2
	beq _08071E96
	b _08071EAA
_08071E7E:
	bl sub_08071EE0
	b _08071E88
_08071E84:
	bl sub_0807209C
_08071E88:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08071EAA
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08071EAA
_08071E96:
	bl sub_08073614
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08071EAA
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xa0
	bl sub_0806EFF0
_08071EAA:
	adds r4, r5, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08071EE0
sub_08071EE0: @ 0x08071EE0
	push {r4, r5, r6, lr}
	sub sp, #0x1c
	bl sub_0806F020
	adds r6, r0, #0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _08071EF4
	b _08072048
_08071EF4:
	cmp r0, #1
	bgt _08071EFE
	cmp r0, #0
	beq _08071F0C
	b _08072090
_08071EFE:
	cmp r0, #2
	bne _08071F04
	b _0807207C
_08071F04:
	cmp r0, #3
	bne _08071F0A
	b _0807208C
_08071F0A:
	b _08072090
_08071F0C:
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	adds r4, r0, #0
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08071F26
	adds r0, r4, #0
	movs r1, #0
	b _08071F2A
_08071F26:
	adds r0, r4, #0
	movs r1, #0x14
_08071F2A:
	bl sub_08001D78
	adds r5, r0, #0
	ldr r1, _08072034 @ =0x000001F1
	adds r0, r4, #0
	bl sub_08001D78
	adds r4, r0, #0
	adds r0, r5, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #2
	mov r1, sp
	movs r2, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	movs r0, #2
	movs r1, #2
	adds r2, r4, #0
	bl sub_0800A630
	adds r4, r6, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _08072038 @ =0x06013000
	movs r5, #0x80
	lsls r5, r5, #3
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	ldr r1, _0807203C @ =gUnk_08BCB044
	movs r2, #0x1c
	ldrsh r0, [r6, r2]
	adds r0, r0, r1
	ldrb r2, [r0]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0x50
	movs r2, #0x64
	bl sub_0800A678
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _08072040 @ =0x06013400
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	ldr r1, _08072044 @ =gUnk_08BCB046
	movs r2, #0x1c
	ldrsh r0, [r6, r2]
	adds r0, r0, r1
	ldrb r2, [r0]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0x80
	movs r2, #0x64
	bl sub_0800A678
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0x30
	movs r2, #0x14
	bl sub_0800A678
	bl sub_08072978
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0807208E
	.align 2, 0
_08072034: .4byte 0x000001F1
_08072038: .4byte 0x06013000
_0807203C: .4byte gUnk_08BCB044
_08072040: .4byte 0x06013400
_08072044: .4byte gUnk_08BCB046
_08072048:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0807208E
_0807207C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08072090
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0807208E
_0807208C:
	movs r0, #0
_0807208E:
	strh r0, [r6, #2]
_08072090:
	movs r1, #2
	ldrsh r0, [r6, r1]
	add sp, #0x1c
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0807209C
sub_0807209C: @ 0x0807209C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #2
	ldrsh r4, [r7, r1]
	cmp r4, #3
	bgt _080720C6
	cmp r4, #1
	blt _080720BE
	bl _080728E6
_080720BE:
	cmp r4, #0
	beq _080720D2
	bl _080728E6
_080720C6:
	cmp r4, #0xa
	bne _080720CE
	bl sub_080728D4
_080720CE:
	bl _080728E6
_080720D2:
	ldr r0, _08072118 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _08072144
	ldrh r1, [r7, #0x22]
	subs r0, r1, #1
	strh r0, [r7, #0x22]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080720F0
	strh r4, [r7, #0x22]
_080720F0:
	movs r2, #0x22
	ldrsh r0, [r7, r2]
	cmp r1, r0
	beq _08072100
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_08072100:
	strh r4, [r7, #0x24]
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	cmp r0, #4
	bne _08072120
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _0807211C @ =gUnk_08BCB053
	movs r4, #0x1c
	ldrsh r1, [r7, r4]
	b _0807254A
	.align 2, 0
_08072118: .4byte gCurrentKeyPress
_0807211C: .4byte gUnk_08BCB053
_08072120:
	cmp r0, #5
	bne _080721A4
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _0807213C @ =gUnk_08BCB050
	movs r3, #0x1e
	ldrsh r1, [r7, r3]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x13
	ldr r4, _08072140 @ =0xFFF80000
	adds r1, r1, r4
	asrs r1, r1, #0x10
	b _080721AE
	.align 2, 0
_0807213C: .4byte gUnk_08BCB050
_08072140: .4byte 0xFFF80000
_08072144:
	movs r0, #0x80
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _080721D4
	ldrh r1, [r7, #0x22]
	adds r0, r1, #1
	strh r0, [r7, #0x22]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _08072162
	movs r0, #7
	strh r0, [r7, #0x22]
_08072162:
	movs r4, #0x22
	ldrsh r0, [r7, r4]
	cmp r1, r0
	beq _08072172
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_08072172:
	strh r5, [r7, #0x24]
	movs r1, #0x22
	ldrsh r0, [r7, r1]
	cmp r0, #4
	bne _0807217E
	b _08072540
_0807217E:
	cmp r0, #5
	bne _080721A4
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _0807219C @ =gUnk_08BCB050
	movs r3, #0x1e
	ldrsh r1, [r7, r3]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x13
	ldr r4, _080721A0 @ =0xFFF80000
	adds r1, r1, r4
	asrs r1, r1, #0x10
	b _080721AE
	.align 2, 0
_0807219C: .4byte gUnk_08BCB050
_080721A0: .4byte 0xFFF80000
_080721A4:
	adds r0, r7, #0
	adds r0, #0x78
	ldr r1, _080721C8 @ =gUnk_08BCB050
	ldrb r1, [r1]
	lsls r1, r1, #3
_080721AE:
	ldr r3, _080721CC @ =gUnk_08BCB048
	movs r4, #0x22
	ldrsh r2, [r7, r4]
	adds r2, r2, r3
	ldrb r2, [r2]
	lsls r2, r2, #0x13
	ldr r3, _080721D0 @ =0xFFFC0000
	adds r2, r2, r3
	asrs r2, r2, #0x10
	bl sub_0800A678
	b _080728E6
	.align 2, 0
_080721C8: .4byte gUnk_08BCB050
_080721CC: .4byte gUnk_08BCB048
_080721D0: .4byte 0xFFFC0000
_080721D4:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _080721DE
	b _080723DC
_080721DE:
	movs r4, #0x22
	ldrsh r0, [r7, r4]
	cmp r0, #0
	bne _08072200
	ldr r1, _080721FC @ =0xFFFFFE66
	adds r0, r1, #0
	ldrh r3, [r7, #0x14]
	adds r0, r0, r3
	strh r0, [r7, #0x14]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080721F8
	b _08072408
_080721F8:
	strh r2, [r7, #0x14]
	b _08072408
	.align 2, 0
_080721FC: .4byte 0xFFFFFE66
_08072200:
	cmp r0, #1
	bne _08072240
	ldr r4, _0807223C @ =0xFFFFFE66
	adds r0, r4, #0
	ldrh r1, [r7, #0x16]
	adds r0, r0, r1
	strh r0, [r7, #0x16]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08072216
	strh r2, [r7, #0x16]
_08072216:
	ldrh r0, [r7, #0x16]
	bl sub_08014814
	bl sub_08014820
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0x81
	bl sub_08012F0C
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	b _080724AC
	.align 2, 0
_0807223C: .4byte 0xFFFFFE66
_08072240:
	cmp r0, #2
	bne _08072284
	ldr r3, _08072280 @ =0xFFFFFE66
	adds r0, r3, #0
	ldrh r4, [r7, #0x18]
	adds r0, r0, r4
	strh r0, [r7, #0x18]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08072256
	strh r2, [r7, #0x18]
_08072256:
	ldrh r0, [r7, #0x18]
	bl sub_0801482C
	movs r0, #0x18
	ldrsh r1, [r7, r0]
	movs r0, #0x82
	bl sub_08012F0C
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #5
	b _080724AC
	.align 2, 0
_08072280: .4byte 0xFFFFFE66
_08072284:
	cmp r0, #3
	bne _0807229A
	ldrh r0, [r7, #0x1a]
	subs r0, #1
	strh r0, [r7, #0x1a]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08072296
	b _080724CE
_08072296:
	strh r2, [r7, #0x1a]
	b _080724CE
_0807229A:
	cmp r0, #4
	bne _080722B0
	ldrh r4, [r7, #0x1c]
	subs r0, r4, #1
	strh r0, [r7, #0x1c]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080722AC
	b _080724F6
_080722AC:
	strh r2, [r7, #0x1c]
	b _080724F6
_080722B0:
	cmp r0, #5
	beq _080722B6
	b _080723C0
_080722B6:
	ldrh r1, [r7, #0x1e]
	subs r0, r1, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080722C4
	strh r2, [r7, #0x1e]
_080722C4:
	movs r2, #0x1e
	ldrsh r0, [r7, r2]
	cmp r1, r0
	beq _080722D4
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_080722D4:
	movs r0, #0xe0
	lsls r0, r0, #1
	movs r3, #0x1e
	ldrsh r1, [r7, r3]
	bl sub_08012F0C
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _080723AC @ =gUnk_08BCB050
	movs r4, #0x1e
	ldrsh r1, [r7, r4]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x13
	ldr r2, _080723B0 @ =0xFFF80000
	adds r1, r1, r2
	asrs r1, r1, #0x10
	ldr r3, _080723B4 @ =gUnk_08BCB048
	movs r4, #0x22
	ldrsh r2, [r7, r4]
	adds r2, r2, r3
	ldrb r2, [r2]
	lsls r2, r2, #0x13
	ldr r3, _080723B8 @ =0xFFFC0000
	adds r2, r2, r3
	asrs r2, r2, #0x10
	bl sub_0800A678
	ldr r4, _080723BC @ =gUnk_08BCB020
	movs r0, #0x1e
	ldrsh r1, [r7, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r1, [r0]
	str r1, [r7, #8]
	movs r3, #0x1e
	ldrsh r2, [r7, r3]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r2, r4, #4
	adds r0, r0, r2
	ldr r2, [r0]
	str r2, [r7, #0xc]
	movs r0, #0x1e
	ldrsh r3, [r7, r0]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r4, #8
	adds r0, r0, r4
	ldr r3, [r0]
	str r3, [r7, #0x10]
	movs r0, #0
	bl sub_08010ED0
	bl sub_08010F14
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x84
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x83
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F38
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x86
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x85
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F5C
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F5C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x88
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x87
	adds r1, r4, #0
	b _080728B4
	.align 2, 0
_080723AC: .4byte gUnk_08BCB050
_080723B0: .4byte 0xFFF80000
_080723B4: .4byte gUnk_08BCB048
_080723B8: .4byte 0xFFFC0000
_080723BC: .4byte gUnk_08BCB020
_080723C0:
	cmp r0, #6
	beq _080723C6
	b _080728E6
_080723C6:
	ldrh r0, [r7, #0x20]
	subs r0, #1
	strh r0, [r7, #0x20]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080723D4
	strh r2, [r7, #0x20]
_080723D4:
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _080728A8
_080723DC:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _080723E6
	b _080726AC
_080723E6:
	movs r1, #0x22
	ldrsh r0, [r7, r1]
	cmp r0, #0
	bne _0807242C
	movs r2, #0xcd
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r3, [r7, #0x14]
	adds r0, r0, r3
	strh r0, [r7, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #5
	cmp r0, r1
	ble _08072408
	strh r1, [r7, #0x14]
_08072408:
	ldrh r0, [r7, #0x14]
	bl sub_080144B4
	bl sub_080144C0
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0x80
	bl sub_08012F0C
	movs r0, #0x80
	lsls r0, r0, #1
	bl sub_0801444C
	bl sub_08072978
	b _080728E6
_0807242C:
	cmp r0, #1
	bne _08072470
	movs r4, #0xcd
	lsls r4, r4, #1
	adds r0, r4, #0
	ldrh r1, [r7, #0x16]
	adds r0, r0, r1
	strh r0, [r7, #0x16]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #5
	cmp r0, r1
	ble _0807244A
	strh r1, [r7, #0x16]
_0807244A:
	ldrh r0, [r7, #0x16]
	bl sub_08014814
	bl sub_08014820
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0x81
	bl sub_08012F0C
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	b _080724AC
_08072470:
	cmp r0, #2
	bne _080724B8
	movs r2, #0xcd
	lsls r2, r2, #1
	adds r0, r2, #0
	ldrh r3, [r7, #0x18]
	adds r0, r0, r3
	strh r0, [r7, #0x18]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #5
	cmp r0, r1
	ble _0807248E
	strh r1, [r7, #0x18]
_0807248E:
	ldrh r0, [r7, #0x18]
	bl sub_0801482C
	movs r4, #0x18
	ldrsh r1, [r7, r4]
	movs r0, #0x82
	bl sub_08012F0C
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
_080724AC:
	adds r1, r4, #0
	bl sub_080138D4
	bl sub_08072978
	b _080728E6
_080724B8:
	cmp r0, #3
	bne _080724E0
	ldrh r0, [r7, #0x1a]
	adds r0, #1
	strh r0, [r7, #0x1a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _080724CE
	movs r0, #7
	strh r0, [r7, #0x1a]
_080724CE:
	movs r0, #0xe1
	lsls r0, r0, #1
	movs r2, #0x1a
	ldrsh r1, [r7, r2]
	bl sub_08012F0C
	bl sub_08072978
	b _080728E6
_080724E0:
	cmp r0, #4
	bne _08072578
	ldrh r4, [r7, #0x1c]
	adds r0, r4, #1
	strh r0, [r7, #0x1c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _080724F6
	movs r0, #1
	strh r0, [r7, #0x1c]
_080724F6:
	ldr r0, _08072564 @ =0x000001E5
	movs r3, #0x1c
	ldrsh r1, [r7, r3]
	bl sub_08012F0C
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	movs r4, #0x1c
	ldrsh r1, [r7, r4]
	cmp r0, r1
	beq _08072540
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	adds r0, r7, #0
	adds r0, #0x28
	ldr r2, _08072568 @ =gUnk_08BCB044
	movs r3, #0x1c
	ldrsh r1, [r7, r3]
	adds r1, r1, r2
	ldrb r2, [r1]
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	adds r0, #0x50
	ldr r2, _0807256C @ =gUnk_08BCB046
	movs r4, #0x1c
	ldrsh r1, [r7, r4]
	adds r1, r1, r2
	ldrb r2, [r1]
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
_08072540:
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _08072570 @ =gUnk_08BCB053
	movs r3, #0x1c
	ldrsh r1, [r7, r3]
_0807254A:
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #3
	ldr r3, _08072574 @ =gUnk_08BCB048
	movs r4, #0x22
	ldrsh r2, [r7, r4]
	adds r2, r2, r3
	ldrb r2, [r2]
	lsls r2, r2, #3
	bl sub_0800A678
	b _080728E6
	.align 2, 0
_08072564: .4byte 0x000001E5
_08072568: .4byte gUnk_08BCB044
_0807256C: .4byte gUnk_08BCB046
_08072570: .4byte gUnk_08BCB053
_08072574: .4byte gUnk_08BCB048
_08072578:
	cmp r0, #5
	beq _0807257E
	b _0807268C
_0807257E:
	ldrh r1, [r7, #0x1e]
	adds r0, r1, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _08072590
	movs r0, #2
	strh r0, [r7, #0x1e]
_08072590:
	movs r2, #0x1e
	ldrsh r0, [r7, r2]
	cmp r1, r0
	beq _080725A0
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_080725A0:
	movs r0, #0xe0
	lsls r0, r0, #1
	movs r3, #0x1e
	ldrsh r1, [r7, r3]
	bl sub_08012F0C
	adds r0, r7, #0
	adds r0, #0x78
	ldr r2, _08072678 @ =gUnk_08BCB050
	movs r4, #0x1e
	ldrsh r1, [r7, r4]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x13
	ldr r2, _0807267C @ =0xFFF80000
	adds r1, r1, r2
	asrs r1, r1, #0x10
	ldr r3, _08072680 @ =gUnk_08BCB048
	movs r4, #0x22
	ldrsh r2, [r7, r4]
	adds r2, r2, r3
	ldrb r2, [r2]
	lsls r2, r2, #0x13
	ldr r3, _08072684 @ =0xFFFC0000
	adds r2, r2, r3
	asrs r2, r2, #0x10
	bl sub_0800A678
	ldr r4, _08072688 @ =gUnk_08BCB020
	movs r0, #0x1e
	ldrsh r1, [r7, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r1, [r0]
	str r1, [r7, #8]
	movs r3, #0x1e
	ldrsh r2, [r7, r3]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r2, r4, #4
	adds r0, r0, r2
	ldr r2, [r0]
	str r2, [r7, #0xc]
	movs r0, #0x1e
	ldrsh r3, [r7, r0]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r4, #8
	adds r0, r0, r4
	ldr r3, [r0]
	str r3, [r7, #0x10]
	movs r0, #0
	bl sub_08010ED0
	bl sub_08010F14
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x84
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x83
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F38
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x86
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x85
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F5C
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F5C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x88
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x87
	adds r1, r4, #0
	b _080728B4
	.align 2, 0
_08072678: .4byte gUnk_08BCB050
_0807267C: .4byte 0xFFF80000
_08072680: .4byte gUnk_08BCB048
_08072684: .4byte 0xFFFC0000
_08072688: .4byte gUnk_08BCB020
_0807268C:
	cmp r0, #6
	beq _08072692
	b _080728E6
_08072692:
	ldrh r0, [r7, #0x20]
	adds r0, #1
	strh r0, [r7, #0x20]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #8
	ble _080726A4
	movs r0, #8
	strh r0, [r7, #0x20]
_080726A4:
	ldrh r0, [r7, #0x20]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	b _080728A8
_080726AC:
	ldr r0, _080726E8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	beq _080726EC
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #6
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r1, #0
	mov sb, r1
	mov r2, sb
	strh r2, [r7, #2]
	b _080728E6
	.align 2, 0
_080726E8: .4byte gKeyNewPress
_080726EC:
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	bne _080726F6
	b _080728E6
_080726F6:
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bne _08072700
	b _080728E6
_08072700:
	cmp r0, #1
	bne _08072706
	b _080728E6
_08072706:
	cmp r0, #2
	bne _0807270C
	b _080728E6
_0807270C:
	cmp r0, #3
	bne _08072712
	b _080728E6
_08072712:
	cmp r0, #5
	bne _0807271C
	movs r0, #0xa
	strh r0, [r7, #2]
	b _080728E6
_0807271C:
	cmp r0, #7
	beq _08072722
	b _080728E6
_08072722:
	movs r0, #0x80
	lsls r0, r0, #5
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x16]
	strh r0, [r7, #0x18]
	bl sub_080144B4
	bl sub_080144C0
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0x80
	bl sub_08012F0C
	ldrh r0, [r7, #0x16]
	bl sub_08014814
	bl sub_08014820
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0x81
	bl sub_08012F0C
	ldrh r0, [r7, #0x18]
	bl sub_0801482C
	movs r4, #0x18
	ldrsh r1, [r7, r4]
	movs r0, #0x82
	bl sub_08012F0C
	movs r4, #0x80
	lsls r4, r4, #1
	adds r0, r4, #0
	bl sub_0801444C
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	strh r0, [r7, #0x1a]
	movs r0, #0xe1
	lsls r0, r0, #1
	movs r1, #4
	bl sub_08012F0C
	mov r0, r8
	strh r0, [r7, #0x1c]
	adds r0, r7, #0
	adds r0, #0x28
	ldr r1, _080728C4 @ =gUnk_08BCB044
	ldrb r2, [r1]
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	adds r0, #0x50
	ldr r2, _080728C8 @ =gUnk_08BCB046
	movs r3, #0x1c
	ldrsh r1, [r7, r3]
	adds r1, r1, r2
	ldrb r2, [r1]
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	ldr r4, _080728CC @ =gUnk_08BCB020
	movs r0, #0x1e
	ldrsh r1, [r7, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r0, [r0]
	str r0, [r7, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r6, r4, #4
	adds r0, r0, r6
	ldr r0, [r0]
	str r0, [r7, #0xc]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r5, r4, #0
	adds r5, #8
	adds r0, r0, r5
	ldr r0, [r0]
	str r0, [r7, #0x10]
	mov r0, r8
	strh r0, [r7, #0x1e]
	movs r0, #0xe0
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	movs r2, #0x1e
	ldrsh r1, [r7, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r1, [r0]
	str r1, [r7, #8]
	movs r3, #0x1e
	ldrsh r2, [r7, r3]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, r0, r6
	ldr r2, [r0]
	str r2, [r7, #0xc]
	movs r4, #0x1e
	ldrsh r3, [r7, r4]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r5
	ldr r3, [r0]
	str r3, [r7, #0x10]
	movs r0, #0
	bl sub_08010ED0
	bl sub_08010F14
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x84
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x83
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F38
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x86
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x85
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F5C
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F5C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x88
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x87
	adds r1, r4, #0
	bl sub_08012F0C
	mov r0, r8
	strh r0, [r7, #0x20]
	movs r0, #0
_080728A8:
	bl sub_08010F80
	ldr r0, _080728D0 @ =0x000001C1
	ldrh r1, [r7, #0x20]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
_080728B4:
	bl sub_08012F0C
	bl sub_08072978
	bl sub_080728F4
	b _080728E6
	.align 2, 0
_080728C4: .4byte gUnk_08BCB044
_080728C8: .4byte gUnk_08BCB046
_080728CC: .4byte gUnk_08BCB020
_080728D0: .4byte 0x000001C1

	thumb_func_start sub_080728D4
sub_080728D4: @ 0x080728D4
	bl sub_08072BE4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080728E6
	bl sub_08072978
	strh r4, [r7, #2]
_080728E6:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080728F4
sub_080728F4: @ 0x080728F4
	push {r4, lr}
	sub sp, #0x1c
	movs r0, #0
	bl sub_0801B9EC
	movs r0, #3
	movs r1, #3
	bl sub_08001D3C
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	ldr r0, _08072950 @ =gUnk_02012400
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	adds r4, r0, #0
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08072954
	adds r0, r4, #0
	movs r1, #0
	bl sub_08001D78
	b _0807295C
	.align 2, 0
_08072950: .4byte gUnk_02012400
_08072954:
	adds r0, r4, #0
	movs r1, #0x14
	bl sub_08001D78
_0807295C:
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	add sp, #0x1c
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_08072978
sub_08072978: @ 0x08072978
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	bl sub_0806F020
	mov sb, r0
	ldr r5, _08072BAC @ =gUnk_02010800
	ldr r3, _08072BB0 @ =gUnk_080BB86C
	adds r0, r5, #0
	movs r1, #5
	movs r2, #2
	bl sub_08001284
	ldr r3, _08072BB4 @ =gUnk_080BB874
	adds r0, r5, #0
	movs r1, #8
	movs r2, #3
	bl sub_08001284
	ldr r3, _08072BB8 @ =gUnk_080BB878
	adds r0, r5, #0
	movs r1, #8
	movs r2, #4
	bl sub_08001284
	ldr r3, _08072BBC @ =gUnk_080BB87C
	adds r0, r5, #0
	movs r1, #8
	movs r2, #5
	bl sub_08001284
	movs r0, #3
	mov sl, r0
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0x68
	movs r2, #7
	movs r3, #0xd
	bl sub_0806F0E0
	movs r1, #4
	str r1, [sp]
	adds r0, r5, #0
	movs r1, #0x68
	movs r2, #7
	movs r3, #0xd
	bl sub_0806F0E0
	movs r2, #5
	str r2, [sp]
	adds r0, r5, #0
	movs r1, #0x68
	movs r2, #7
	movs r3, #0xd
	bl sub_0806F0E0
	ldr r3, _08072BC0 @ =gUnk_02010000
	mov r8, r3
	movs r6, #0x80
	lsls r6, r6, #5
	mov r1, sb
	ldrh r0, [r1, #0x14]
	str r0, [sp]
	movs r4, #0xe
	str r4, [sp, #4]
	mov r2, sl
	str r2, [sp, #8]
	movs r7, #1
	str r7, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x38
	adds r3, r6, #0
	bl sub_0806F174
	mov r3, sb
	ldrh r0, [r3, #0x16]
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x38
	adds r3, r6, #0
	bl sub_0806F174
	mov r1, sb
	ldrh r0, [r1, #0x18]
	str r0, [sp]
	str r4, [sp, #4]
	movs r2, #5
	str r2, [sp, #8]
	str r7, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x38
	adds r3, r6, #0
	bl sub_0806F174
	mov r3, sl
	str r3, [sp]
	mov r1, sb
	movs r2, #0x14
	ldrsh r0, [r1, r2]
	movs r6, #0xcb
	lsls r6, r6, #1
	adds r1, r6, #0
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r4, #2
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r3, #4
	str r3, [sp]
	mov r1, sb
	movs r2, #0x16
	ldrsh r0, [r1, r2]
	adds r1, r6, #0
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r3, #5
	str r3, [sp]
	mov r1, sb
	movs r2, #0x18
	ldrsh r0, [r1, r2]
	adds r1, r6, #0
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	ldr r3, _08072BC4 @ =gUnk_080BB884
	adds r0, r5, #0
	movs r1, #5
	movs r2, #6
	bl sub_08001284
	movs r4, #7
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #0x68
	movs r2, #7
	movs r3, #8
	bl sub_0806F0E0
	mov r3, sb
	ldrh r0, [r3, #0x1a]
	str r0, [sp]
	movs r6, #9
	str r6, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x38
	movs r3, #7
	bl sub_0806F174
	str r4, [sp]
	mov r1, sb
	movs r2, #0x1a
	ldrsh r0, [r1, r2]
	str r0, [sp, #4]
	str r7, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x11
	bl sub_0806F2D0
	ldr r3, _08072BC8 @ =gUnk_080BB894
	adds r0, r5, #0
	movs r1, #5
	movs r2, #8
	bl sub_08001284
	ldr r3, _08072BCC @ =gUnk_080BB89C
	adds r0, r5, #0
	movs r1, #5
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _08072BD0 @ =gUnk_080BB8A4
	adds r0, r5, #0
	movs r1, #7
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _08072BD4 @ =gUnk_080BB8B4
	adds r0, r5, #0
	movs r1, #5
	movs r2, #0xf
	bl sub_08001284
	ldr r1, _08072BD8 @ =gUnk_08BCB050
	mov r3, sb
	movs r2, #0x1e
	ldrsh r0, [r3, r2]
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r1, #1
	ldr r3, _08072BDC @ =gUnk_080BB8C0
	adds r0, r5, #0
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _08072BE0 @ =gUnk_080BB8C4
	adds r0, r5, #0
	movs r1, #9
	movs r2, #0x12
	bl sub_08001284
	movs r4, #0x10
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #0x68
	movs r2, #7
	movs r3, #8
	bl sub_0806F0E0
	mov r3, sb
	ldrh r0, [r3, #0x20]
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x38
	movs r3, #8
	bl sub_0806F174
	str r4, [sp]
	mov r1, sb
	movs r2, #0x20
	ldrsh r0, [r1, r2]
	str r0, [sp, #4]
	str r7, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x11
	bl sub_0806F2D0
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08072BAC: .4byte gUnk_02010800
_08072BB0: .4byte gUnk_080BB86C
_08072BB4: .4byte gUnk_080BB874
_08072BB8: .4byte gUnk_080BB878
_08072BBC: .4byte gUnk_080BB87C
_08072BC0: .4byte gUnk_02010000
_08072BC4: .4byte gUnk_080BB884
_08072BC8: .4byte gUnk_080BB894
_08072BCC: .4byte gUnk_080BB89C
_08072BD0: .4byte gUnk_080BB8A4
_08072BD4: .4byte gUnk_080BB8B4
_08072BD8: .4byte gUnk_08BCB050
_08072BDC: .4byte gUnk_080BB8C0
_08072BE0: .4byte gUnk_080BB8C4

	thumb_func_start sub_08072BE4
sub_08072BE4: @ 0x08072BE4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	bl sub_0806F020
	adds r7, r0, #0
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #5
	bls _08072C00
	b _08073328
_08072C00:
	lsls r0, r0, #2
	ldr r1, _08072C0C @ =_08072C10
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08072C0C: .4byte _08072C10
_08072C10: @ jump table
	.4byte _08072C28 @ case 0
	.4byte _08072C70 @ case 1
	.4byte _08072C94 @ case 2
	.4byte _08072DF4 @ case 3
	.4byte _080731DC @ case 4
	.4byte _080732A4 @ case 5
_08072C28:
	movs r4, #0
	movs r2, #0
	strh r2, [r7, #6]
	add r0, sp, #0x10
	strb r4, [r0]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	adds r0, r1, #0
	movs r3, #5
	strb r3, [r0, #8]
	movs r0, #1
	strb r0, [r1, #6]
	adds r0, r1, #0
	strb r4, [r0, #1]
	movs r0, #7
	strb r0, [r1, #2]
	adds r0, r1, #0
	strb r3, [r0, #3]
	movs r0, #0x11
	strb r0, [r1, #4]
	movs r0, #9
	strb r0, [r1, #5]
	str r2, [sp, #0x1c]
	str r2, [sp, #0x20]
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	adds r0, r7, #6
	add r1, sp, #0x10
	bl sub_08019944
	ldrh r0, [r7, #4]
	adds r0, #1
	b _08073326
_08072C70:
	adds r4, r7, #6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08072C82
	b _08073328
_08072C82:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	movs r0, #0
	strh r0, [r7, #0x26]
	ldrh r0, [r7, #4]
	adds r0, #1
	b _08073326
_08072C94:
	ldr r2, _08072DD4 @ =gUnk_0200F800
	mov r8, r2
	ldr r3, _08072DD8 @ =gUnk_080BB8CC
	mov r0, r8
	movs r1, #9
	movs r2, #8
	bl sub_08001284
	ldr r3, _08072DDC @ =gUnk_080BB8D0
	mov r0, r8
	movs r1, #9
	movs r2, #9
	bl sub_08001284
	ldr r3, _08072DE0 @ =gUnk_080BB8D4
	mov r0, r8
	movs r1, #9
	movs r2, #0xa
	bl sub_08001284
	ldr r4, _08072DE4 @ =gUnk_02010000
	movs r3, #8
	mov sl, r3
	str r3, [sp]
	adds r0, r4, #0
	movs r1, #0x65
	movs r2, #8
	movs r3, #0xa
	bl sub_0806F0E0
	movs r0, #9
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0x65
	movs r2, #8
	movs r3, #0xa
	bl sub_0806F0E0
	movs r1, #0xa
	str r1, [sp]
	adds r0, r4, #0
	movs r1, #0x65
	movs r2, #8
	movs r3, #0xa
	bl sub_0806F0E0
	mov r2, sl
	str r2, [sp]
	ldr r0, [r7, #8]
	ldr r5, _08072DE8 @ =0xFFFFF000
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r3, #9
	str r3, [sp]
	ldr r0, [r7, #0xc]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r0, #0xa
	str r0, [sp]
	ldr r0, [r7, #0x10]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r1, _08072DEC @ =0x00000666
	mov sb, r1
	ldr r0, [r7, #8]
	ldr r2, _08072DF0 @ =0xFFFFF334
	adds r6, r2, #0
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r5, #0xb
	str r5, [sp, #4]
	mov r3, sl
	str r3, [sp, #8]
	movs r4, #1
	str r4, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x40
	mov r3, sb
	bl sub_0806F174
	ldr r0, [r7, #0xc]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	movs r0, #9
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x40
	mov r3, sb
	bl sub_0806F174
	ldr r0, [r7, #0x10]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	movs r1, #0xa
	str r1, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, r8
	movs r1, #0x58
	movs r2, #0x40
	mov r3, sb
	bl sub_0806F174
	adds r4, r7, #0
	adds r4, #0x78
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0x38
	movs r2, #0x3c
	bl sub_0800A678
	ldrh r0, [r7, #4]
	adds r0, #1
	b _08073326
	.align 2, 0
_08072DD4: .4byte gUnk_0200F800
_08072DD8: .4byte gUnk_080BB8CC
_08072DDC: .4byte gUnk_080BB8D0
_08072DE0: .4byte gUnk_080BB8D4
_08072DE4: .4byte gUnk_02010000
_08072DE8: .4byte 0xFFFFF000
_08072DEC: .4byte 0x00000666
_08072DF0: .4byte 0xFFFFF334
_08072DF4:
	ldr r0, _08072E14 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08072E18
	ldrh r0, [r7, #0x26]
	adds r1, r0, #0
	subs r0, r1, #1
	strh r0, [r7, #0x26]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08072E32
	movs r0, #0
	b _08072E30
	.align 2, 0
_08072E14: .4byte gCurrentKeyPress
_08072E18:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08072E5C
	ldrh r1, [r7, #0x26]
	adds r0, r1, #1
	strh r0, [r7, #0x26]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _08072E32
	movs r0, #2
_08072E30:
	strh r0, [r7, #0x26]
_08072E32:
	movs r2, #0x26
	ldrsh r0, [r7, r2]
	cmp r1, r0
	beq _08072E42
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_08072E42:
	adds r0, r7, #0
	adds r0, #0x78
	movs r3, #0x26
	ldrsh r2, [r7, r3]
	lsls r2, r2, #0x13
	movs r1, #0xf0
	lsls r1, r1, #0xe
	adds r2, r2, r1
	asrs r2, r2, #0x10
	movs r1, #0x38
	bl sub_0800A678
	b _080731A6
_08072E5C:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _08072E66
	b _08073014
_08072E66:
	movs r2, #0x26
	ldrsh r0, [r7, r2]
	cmp r0, #0
	bne _08072E88
	ldr r0, [r7, #8]
	subs r0, #0x29
	str r0, [r7, #8]
	ldr r1, _08072E80 @ =0x00000CCB
	cmp r0, r1
	bhi _08072EBC
	ldr r0, _08072E84 @ =0x00000CCC
	str r0, [r7, #8]
	b _08072EBC
	.align 2, 0
_08072E80: .4byte 0x00000CCB
_08072E84: .4byte 0x00000CCC
_08072E88:
	cmp r0, #1
	bne _08072EA8
	ldr r0, [r7, #0xc]
	subs r0, #0x29
	str r0, [r7, #0xc]
	ldr r1, _08072EA0 @ =0x00000CCB
	cmp r0, r1
	bhi _08072EBC
	ldr r0, _08072EA4 @ =0x00000CCC
	str r0, [r7, #0xc]
	b _08072EBC
	.align 2, 0
_08072EA0: .4byte 0x00000CCB
_08072EA4: .4byte 0x00000CCC
_08072EA8:
	cmp r0, #2
	bne _08072EBC
	ldr r0, [r7, #0x10]
	subs r0, #0x29
	str r0, [r7, #0x10]
	ldr r1, _08072FFC @ =0x00000CCB
	cmp r0, r1
	bhi _08072EBC
	ldr r0, _08073000 @ =0x00000CCC
	str r0, [r7, #0x10]
_08072EBC:
	ldr r1, [r7, #8]
	ldr r2, [r7, #0xc]
	ldr r3, [r7, #0x10]
	movs r0, #0
	bl sub_08010ED0
	bl sub_08010F14
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x84
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x83
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F38
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x86
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x85
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F5C
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F5C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x88
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x87
	adds r1, r4, #0
	bl sub_08012F0C
	ldr r3, _08073004 @ =gUnk_0200F800
	mov sb, r3
	movs r0, #8
	str r0, [sp]
	ldr r0, [r7, #8]
	ldr r5, _08073008 @ =0xFFFFF000
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r1, #9
	str r1, [sp]
	ldr r0, [r7, #0xc]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r2, #0xa
	mov sl, r2
	str r2, [sp]
	ldr r0, [r7, #0x10]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r3, _0807300C @ =0x00000666
	mov r8, r3
	ldr r0, [r7, #8]
	ldr r1, _08073010 @ =0xFFFFF334
	adds r6, r1, #0
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r5, #0xb
	str r5, [sp, #4]
	movs r2, #8
	str r2, [sp, #8]
	movs r4, #1
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	bl sub_0806F174
	ldr r0, [r7, #0xc]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	movs r3, #9
	str r3, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	mov r3, r8
	bl sub_0806F174
	ldr r0, [r7, #0x10]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	mov r3, r8
	bl sub_0806F174
	bl sub_080728F4
	b _080731A6
	.align 2, 0
_08072FFC: .4byte 0x00000CCB
_08073000: .4byte 0x00000CCC
_08073004: .4byte gUnk_0200F800
_08073008: .4byte 0xFFFFF000
_0807300C: .4byte 0x00000666
_08073010: .4byte 0xFFFFF334
_08073014:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0807301E
	b _080731A6
_0807301E:
	movs r1, #0x26
	ldrsh r0, [r7, r1]
	cmp r0, #0
	bne _0807303C
	ldr r0, [r7, #8]
	adds r0, #0x29
	str r0, [r7, #8]
	ldr r1, _08073038 @ =0x00001334
	cmp r0, r1
	bls _08073066
	str r1, [r7, #8]
	b _08073066
	.align 2, 0
_08073038: .4byte 0x00001334
_0807303C:
	cmp r0, #1
	bne _08073054
	ldr r0, [r7, #0xc]
	adds r0, #0x29
	str r0, [r7, #0xc]
	ldr r1, _08073050 @ =0x00001334
	cmp r0, r1
	bls _08073066
	str r1, [r7, #0xc]
	b _08073066
	.align 2, 0
_08073050: .4byte 0x00001334
_08073054:
	cmp r0, #2
	bne _08073066
	ldr r0, [r7, #0x10]
	adds r0, #0x29
	str r0, [r7, #0x10]
	ldr r1, _080731C4 @ =0x00001334
	cmp r0, r1
	bls _08073066
	str r1, [r7, #0x10]
_08073066:
	ldr r1, [r7, #8]
	ldr r2, [r7, #0xc]
	ldr r3, [r7, #0x10]
	movs r0, #0
	bl sub_08010ED0
	bl sub_08010F14
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x84
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x83
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F38
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F38
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x86
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x85
	adds r1, r4, #0
	bl sub_08012F0C
	bl sub_08010F5C
	adds r5, r0, #0
	lsrs r5, r5, #0x10
	bl sub_08010F5C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x88
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x87
	adds r1, r4, #0
	bl sub_08012F0C
	ldr r2, _080731C8 @ =gUnk_0200F800
	mov sb, r2
	movs r3, #8
	str r3, [sp]
	ldr r0, [r7, #8]
	ldr r5, _080731CC @ =0xFFFFF000
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	ldr r0, [r7, #0xc]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r1, #0xa
	mov sl, r1
	str r1, [sp]
	ldr r0, [r7, #0x10]
	adds r0, r0, r5
	movs r1, #0x29
	bl __divsi3
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #1
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r2, _080731D0 @ =0x00000666
	mov r8, r2
	ldr r0, [r7, #8]
	ldr r3, _080731D4 @ =0xFFFFF334
	adds r6, r3, #0
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r5, #0xb
	str r5, [sp, #4]
	movs r0, #8
	str r0, [sp, #8]
	movs r4, #1
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	mov r3, r8
	bl sub_0806F174
	ldr r0, [r7, #0xc]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	movs r1, #9
	str r1, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	mov r3, r8
	bl sub_0806F174
	ldr r0, [r7, #0x10]
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	str r5, [sp, #4]
	mov r2, sl
	str r2, [sp, #8]
	str r4, [sp, #0xc]
	mov r0, sb
	movs r1, #0x58
	movs r2, #0x40
	mov r3, r8
	bl sub_0806F174
	bl sub_080728F4
_080731A6:
	ldr r0, _080731D8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080731BC
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080731BC
	b _08073328
_080731BC:
	ldrh r0, [r7, #4]
	adds r0, #1
	b _08073326
	.align 2, 0
_080731C4: .4byte 0x00001334
_080731C8: .4byte gUnk_0200F800
_080731CC: .4byte 0xFFFFF000
_080731D0: .4byte 0x00000666
_080731D4: .4byte 0xFFFFF334
_080731D8: .4byte gKeyNewPress
_080731DC:
	adds r4, r7, #0
	adds r4, #0x78
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	cmp r0, #4
	bne _08073214
	ldr r1, _0807320C @ =gUnk_08BCB053
	movs r2, #0x1c
	ldrsh r0, [r7, r2]
	adds r0, r0, r1
	ldrb r1, [r0]
	lsls r1, r1, #3
	ldr r2, _08073210 @ =gUnk_08BCB048
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	adds r0, r0, r2
	ldrb r2, [r0]
	lsls r2, r2, #3
	b _0807323C
	.align 2, 0
_0807320C: .4byte gUnk_08BCB053
_08073210: .4byte gUnk_08BCB048
_08073214:
	cmp r0, #5
	bne _08073254
	ldr r1, _08073244 @ =gUnk_08BCB050
	movs r2, #0x1e
	ldrsh r0, [r7, r2]
	adds r0, r0, r1
	ldrb r1, [r0]
	lsls r1, r1, #0x13
	ldr r3, _08073248 @ =0xFFF80000
	adds r1, r1, r3
	asrs r1, r1, #0x10
	ldr r2, _0807324C @ =gUnk_08BCB048
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	adds r0, r0, r2
	ldrb r2, [r0]
	lsls r2, r2, #0x13
	ldr r0, _08073250 @ =0xFFFC0000
	adds r2, r2, r0
	asrs r2, r2, #0x10
_0807323C:
	adds r0, r4, #0
	bl sub_0800A678
	b _08073278
	.align 2, 0
_08073244: .4byte gUnk_08BCB050
_08073248: .4byte 0xFFF80000
_0807324C: .4byte gUnk_08BCB048
_08073250: .4byte 0xFFFC0000
_08073254:
	ldr r1, _08073298 @ =gUnk_08BCB050
	movs r2, #0x24
	ldrsh r0, [r7, r2]
	adds r0, r0, r1
	ldrb r1, [r0]
	lsls r1, r1, #3
	ldr r2, _0807329C @ =gUnk_08BCB048
	movs r3, #0x22
	ldrsh r0, [r7, r3]
	adds r0, r0, r2
	ldrb r2, [r0]
	lsls r2, r2, #0x13
	ldr r0, _080732A0 @ =0xFFFC0000
	adds r2, r2, r0
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
_08073278:
	movs r0, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	adds r0, r7, #6
	bl sub_0801BA7C
	ldrh r0, [r7, #4]
	adds r0, #1
	b _08073326
	.align 2, 0
_08073298: .4byte gUnk_08BCB050
_0807329C: .4byte gUnk_08BCB048
_080732A0: .4byte 0xFFFC0000
_080732A4:
	ldr r5, _0807333C @ =gUnk_02010000
	movs r3, #0x80
	lsls r3, r3, #5
	ldrh r0, [r7, #0x18]
	str r0, [sp]
	movs r0, #0xe
	str r0, [sp, #4]
	movs r4, #5
	str r4, [sp, #8]
	movs r6, #1
	str r6, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0x58
	movs r2, #0x38
	bl sub_0806F174
	str r4, [sp]
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	movs r1, #0xcb
	lsls r1, r1, #1
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	ldrh r0, [r7, #0x1a]
	str r0, [sp]
	movs r0, #9
	str r0, [sp, #4]
	movs r4, #7
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0x58
	movs r2, #0x38
	movs r3, #7
	bl sub_0806F174
	str r4, [sp]
	movs r2, #0x1a
	ldrsh r0, [r7, r2]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x11
	bl sub_0806F2D0
	adds r0, r7, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08073328
_08073326:
	strh r0, [r7, #4]
_08073328:
	movs r3, #4
	ldrsh r0, [r7, r3]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807333C: .4byte gUnk_02010000

	thumb_func_start sub_08073340
sub_08073340: @ 0x08073340
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0x40
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _080733E8 @ =0x01000020
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov r8, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080733E8: .4byte 0x01000020

	thumb_func_start sub_080733EC
sub_080733EC: @ 0x080733EC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0x90
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08073494 @ =0x01000048
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov r8, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	movs r0, #2
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08073494: .4byte 0x01000048

	thumb_func_start sub_08073498
sub_08073498: @ 0x08073498
	push {r4, r5, lr}
	sub sp, #0xc
	movs r0, #0x60
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08073524 @ =0x01000030
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r5, #0
	strh r5, [r4, #4]
	movs r0, #0xc
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08073524: .4byte 0x01000030

	thumb_func_start sub_08073528
sub_08073528: @ 0x08073528
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	mov sl, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r4, r4, #0x10
	lsls r5, r5, #0x10
	mov r0, sl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldr r7, _0807360C @ =gUnk_02010800
	lsrs r6, r4, #0x10
	movs r0, #0x80
	lsls r0, r0, #0xa
	adds r4, r4, r0
	lsrs r4, r4, #0x10
	lsrs r0, r5, #0x10
	mov sb, r0
	ldr r0, _08073610 @ =0xFFFE0000
	adds r5, r5, r0
	lsrs r5, r5, #0x10
	mov r0, sl
	str r0, [sp]
	adds r0, r7, #0
	mov r1, r8
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08069DA8
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r6, #0
	bl GetForgeLevel
	mov r8, r0
	mov r0, r8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	adds r0, r6, #0
	bl sub_08018500
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018EE8
	adds r5, r0, #0
	mov r0, r8
	bl sub_08018EE8
	subs r5, r5, r0
	subs r4, r4, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	mov r0, sb
	adds r0, #9
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r7, #0
	movs r1, #0x58
	movs r2, #0x40
	adds r3, r5, #0
	bl sub_0806F174
	movs r0, #7
	add sb, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r7, #0
	mov r1, r8
	movs r2, #1
	movs r3, #0
	bl sub_08069E74
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807360C: .4byte gUnk_02010800
_08073610: .4byte 0xFFFE0000

	thumb_func_start sub_08073614
sub_08073614: @ 0x08073614
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08073640
	cmp r0, #1
	bgt _08073630
	cmp r0, #0
	beq _08073636
	b _08073656
_08073630:
	cmp r0, #2
	beq _08073652
	b _08073656
_08073636:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0807364A
_08073640:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08073656
_0807364A:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08073656
_08073652:
	movs r5, #0
	strh r5, [r4, #2]
_08073656:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08073660
sub_08073660: @ 0x08073660
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	adds r5, r0, #0
	adds r6, r1, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r4, _08073894 @ =0x00000B48
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov r8, r0
	strh r5, [r7, #4]
	strh r6, [r7, #8]
	movs r0, #9
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	bl sub_0800E764
	ldr r0, _08073898 @ =gUnk_0200E000
	movs r1, #0x80
	lsls r1, r1, #6
	bl sub_0800E6B0
	movs r0, #3
	movs r1, #0x13
	bl sub_08001D3C
	adds r5, r0, #0
	movs r0, #3
	movs r1, #0x14
	bl sub_08001D3C
	adds r6, r0, #0
	add r4, sp, #0xc
	adds r1, r4, #0
	bl sub_08001CBC
	ldr r0, [r4, #0x14]
	ldrh r2, [r4, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	movs r0, #2
	adds r1, r4, #0
	movs r2, #0
	adds r3, r6, #0
	bl sub_08009334
	movs r0, #2
	movs r1, #2
	adds r2, r5, #0
	bl sub_0800A630
	movs r0, #0
	mov sl, r0
	movs r1, #0xb8
	lsls r1, r1, #0x10
	str r1, [sp, #0x28]
	ldr r0, _0807389C @ =0x06012800
	mov sb, r0
	ldr r1, _080738A0 @ =0x00000A04
	adds r7, r7, r1
_0807376A:
	adds r0, r7, #0
	bl sub_08009F0C
	mov r0, sl
	lsls r2, r0, #0x18
	lsrs r2, r2, #0x18
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #1
	mov r2, sb
	movs r3, #0x20
	bl sub_0800A6F0
	adds r0, r7, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [sp, #0x28]
	asrs r1, r0, #0x10
	adds r0, r7, #0
	movs r2, #0x6e
	bl sub_0800A678
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldr r1, [sp, #0x28]
	movs r0, #0x80
	lsls r0, r0, #0xc
	adds r6, r1, r0
	movs r1, #0x80
	add r1, sb
	mov r8, r1
	adds r5, r7, #0
	adds r5, #0x28
	mov r4, sl
	adds r4, #1
	adds r0, r5, #0
	bl sub_08009F0C
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r5, #0
	movs r1, #2
	adds r2, r4, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #1
	mov r2, r8
	movs r3, #0x20
	bl sub_0800A6F0
	adds r0, r5, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	asrs r6, r6, #0x10
	adds r0, r5, #0
	adds r1, r6, #0
	movs r2, #0x6e
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldr r0, [sp, #0x28]
	movs r1, #0x80
	lsls r1, r1, #0xd
	adds r0, r0, r1
	str r0, [sp, #0x28]
	movs r0, #0x80
	lsls r0, r0, #1
	add sb, r0
	adds r7, #0x50
	movs r1, #2
	add sl, r1
	mov r0, sl
	cmp r0, #5
	bls _0807376A
	movs r0, #0
	movs r1, #1
	bl sub_08001D3C
	adds r6, r0, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r4, _080738A4 @ =0x06012A00
	ldr r2, [sp, #0x10]
	adds r1, r4, #0
	bl sub_08006BA4
	movs r0, #5
	add r1, sp, #0xc
	adds r2, r4, #0
	movs r3, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	mov r1, sp
	ldrh r2, [r1, #0x1a]
	lsrs r2, r2, #4
	movs r1, #0x1a
	bl sub_08010D40
	ldr r0, _080738A8 @ =0x0000216E
	movs r1, #0x1a
	movs r2, #0xf
	bl sub_0800F224
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073894: .4byte 0x00000B48
_08073898: .4byte gUnk_0200E000
_0807389C: .4byte 0x06012800
_080738A0: .4byte 0x00000A04
_080738A4: .4byte 0x06012A00
_080738A8: .4byte 0x0000216E

	thumb_func_start sub_080738AC
sub_080738AC: @ 0x080738AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _080738DE
	cmp r0, #1
	bgt _080738D2
	cmp r0, #0
	beq _080738D8
	b _08073914
_080738D2:
	cmp r0, #2
	beq _080738F0
	b _08073914
_080738D8:
	bl sub_08073AD0
	b _080738E2
_080738DE:
	bl sub_08073BBC
_080738E2:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08073914
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	b _08073914
_080738F0:
	bl sub_08073DDC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08073914
	movs r7, #0
	strh r7, [r6]
	ldr r0, _08073ABC @ =0x00000B48
	bl sub_0806EFF0
	movs r0, #0
	bl sub_0800E74C
	ldr r0, _08073AC0 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #5
	bl sub_0800E6B0
_08073914:
	movs r2, #0xb2
	lsls r2, r2, #4
	adds r4, r6, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r3, _08073AC4 @ =0x00000AF8
	adds r4, r6, r3
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r5, #0
	lsls r0, r7, #0x10
	str r0, [sp, #0x24]
_0807393C:
	lsls r4, r5, #2
	adds r4, r4, r5
	lsls r4, r4, #3
	ldr r1, _08073AC8 @ =0x00000A04
	adds r4, r4, r1
	adds r4, r6, r4
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #5
	bls _0807393C
	movs r2, #0xa0
	lsls r2, r2, #4
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _08073970
	b _08073AA6
_08073970:
	ldr r3, _08073ACC @ =0x0000097C
	adds r7, r6, r3
	adds r0, r7, #0
	bl sub_08009FF8
	adds r0, r7, #0
	bl sub_0800A778
	adds r0, r7, #0
	bl sub_0800A814
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807398E
	b _08073AA6
_0807398E:
	ldrh r1, [r6, #8]
	lsls r1, r1, #1
	movs r2, #0x9c
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r0, [r0]
	mov r3, sp
	adds r3, #0xe
	str r3, [sp, #0x1c]
	add r1, sp, #0x10
	mov sl, r1
	mov r2, sp
	adds r2, #0x12
	str r2, [sp, #0x20]
	str r2, [sp]
	add r3, sp, #0x14
	mov r8, r3
	str r3, [sp, #4]
	movs r1, #0x16
	add r1, sp
	mov sb, r1
	str r1, [sp, #8]
	add r1, sp, #0xc
	ldr r2, [sp, #0x1c]
	mov r3, sl
	bl sub_0802BFF4
	movs r2, #0xce
	lsls r2, r2, #3
	adds r0, r6, r2
	bl sub_08046CE8
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	add r5, sp, #0x18
	mov r2, sp
	adds r2, #0x1a
	adds r0, r7, #0
	adds r1, r5, #0
	bl sub_0800A824
	movs r3, #0xff
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	movs r2, #0
	ldrsh r1, [r5, r2]
	adds r5, r0, r1
	cmp r4, #0
	beq _08073AA6
	movs r3, #0xcf
	lsls r3, r3, #3
	adds r0, r6, r3
	ldr r0, [r0]
	movs r1, #0x84
	lsls r1, r1, #0x18
	ands r0, r1
	cmp r0, #0
	bne _08073AA6
	movs r0, #0x85
	lsls r0, r0, #4
	adds r4, r6, r0
	mov r1, sb
	ldrb r2, [r1]
	adds r0, r4, #0
	movs r1, #5
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_08009448
	mov r2, sl
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r1, r5, r1
	adds r0, r4, #0
	movs r2, #0x64
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	movs r0, #0x86
	lsls r0, r0, #4
	adds r4, r6, r0
	ldr r1, [sp, #0x20]
	ldrb r2, [r1]
	adds r0, r4, #0
	movs r1, #5
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_08009448
	add r0, sp, #0xc
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r1, r5, r1
	adds r0, r4, #0
	movs r2, #0x64
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	mov r3, r8
	ldrh r2, [r3]
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	beq _08073AA6
	movs r3, #0x87
	lsls r3, r3, #4
	adds r4, r6, r3
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #5
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_08009448
	ldr r0, [sp, #0x1c]
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r1, r5, r1
	adds r0, r4, #0
	movs r2, #0x64
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
_08073AA6:
	ldr r3, [sp, #0x24]
	asrs r0, r3, #0x10
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08073ABC: .4byte 0x00000B48
_08073AC0: .4byte gUnk_0200E000
_08073AC4: .4byte 0x00000AF8
_08073AC8: .4byte 0x00000A04
_08073ACC: .4byte 0x0000097C

	thumb_func_start sub_08073AD0
sub_08073AD0: @ 0x08073AD0
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08073B6C
	cmp r0, #1
	bgt _08073AEC
	cmp r0, #0
	beq _08073AF6
	b _08073BB4
_08073AEC:
	cmp r0, #2
	beq _08073B9C
	cmp r0, #3
	beq _08073BAE
	b _08073BB4
_08073AF6:
	bl sub_08073EB8
	adds r0, r6, #0
	adds r0, #0xe
	movs r2, #0xc9
	lsls r2, r2, #3
	adds r1, r6, r2
	bl sub_080072F8
	movs r0, #0
	bl sub_08073FE0
	ldr r0, _08073B68 @ =0x00000AF8
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xb2
	lsls r1, r1, #4
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08073BA6
	.align 2, 0
_08073B68: .4byte 0x00000AF8
_08073B6C:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08073BA6
_08073B9C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08073BB4
_08073BA6:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08073BB4
_08073BAE:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_08073BB4:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08073BBC
sub_08073BBC: @ 0x08073BBC
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08073BD6
	cmp r0, #0xa
	bne _08073BD4
	b _08073D84
_08073BD4:
	b _08073DD4
_08073BD6:
	adds r6, r5, #0
	adds r6, #0xe
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08073BEA
	b _08073DD4
_08073BEA:
	ldr r0, _08073C30 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08073C34
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #8]
	adds r0, r6, #0
	bl sub_08008D50
	strh r0, [r5, #0xa]
	ldrh r0, [r5, #8]
	cmp r0, r4
	beq _08073D02
	movs r0, #0
	bl sub_08073FE0
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _08073D02
	.align 2, 0
_08073C30: .4byte gCurrentKeyPress
_08073C34:
	ldr r0, _08073C50 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r4, #0xc0
	lsls r4, r4, #2
	ands r4, r1
	cmp r4, #0
	beq _08073C54
	bl sub_08074A5C
	movs r0, #1
	bl sub_08073FE0
	b _08073D02
	.align 2, 0
_08073C50: .4byte gKeyNewPress
_08073C54:
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _08073C90
	ldrh r0, [r5, #4]
	cmp r0, #1
	bne _08073D02
	ldrh r1, [r5, #8]
	lsls r1, r1, #1
	movs r2, #0x9c
	lsls r2, r2, #2
	adds r0, r5, r2
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, _08073C8C @ =0x0000FFFF
	cmp r1, r0
	bne _08073C78
	b _08073DD4
_08073C78:
	adds r0, r6, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	strh r4, [r5, #0x10]
	movs r0, #0xa
	strh r0, [r5, #2]
	b _08073D02
	.align 2, 0
_08073C8C: .4byte 0x0000FFFF
_08073C90:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08073D02
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08073CD0
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08073CFC
_08073CD0:
	cmp r0, #1
	bne _08073CFC
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_08073CFC:
	movs r0, #0
	strh r0, [r5, #2]
	movs r7, #0
_08073D02:
	ldrh r0, [r5, #8]
	lsls r0, r0, #1
	movs r2, #0x9c
	lsls r2, r2, #2
	adds r1, r5, r2
	adds r2, r1, r0
	ldrh r1, [r2]
	ldr r0, _08073D70 @ =0x0000FFFF
	cmp r1, r0
	beq _08073DD4
	adds r6, r1, #0
	ldr r0, _08073D74 @ =0x00000A01
	adds r4, r5, r0
	movs r0, #0
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _08073D48
	ldr r0, _08073D78 @ =gUnk_03003364
	ldrh r0, [r0]
	bl sub_0800180C
	ldr r1, _08073D7C @ =0x00001770
	bl __modsi3
	cmp r0, #0
	bne _08073D48
	ldr r2, _08073D80 @ =0x0000097C
	adds r1, r5, r2
	adds r0, r6, #0
	movs r2, #9
	movs r3, #1
	bl sub_0802BF50
	movs r0, #1
	strb r0, [r4]
_08073D48:
	ldr r0, _08073D80 @ =0x0000097C
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08073DD4
	adds r0, r6, #0
	adds r1, r4, #0
	movs r2, #0
	movs r3, #1
	bl sub_0802BF50
	ldr r2, _08073D74 @ =0x00000A01
	adds r1, r5, r2
	movs r0, #0
	strb r0, [r1]
	b _08073DD4
	.align 2, 0
_08073D70: .4byte 0x0000FFFF
_08073D74: .4byte 0x00000A01
_08073D78: .4byte gUnk_03003364
_08073D7C: .4byte 0x00001770
_08073D80: .4byte 0x0000097C
_08073D84:
	ldrh r0, [r5, #0x10]
	adds r0, #1
	strh r0, [r5, #0x10]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _08073D9C
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	b _08073DD4
_08073D9C:
	cmp r0, #0x1e
	bne _08073DD4
	ldrh r1, [r5, #8]
	movs r0, #0x99
	bl sub_08012F0C
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r7, #0
	strh r7, [r5, #2]
_08073DD4:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08073DDC
sub_08073DDC: @ 0x08073DDC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08073E0C
	cmp r0, #1
	bgt _08073DF8
	cmp r0, #0
	beq _08073E02
	b _08073EB0
_08073DF8:
	cmp r0, #2
	beq _08073E18
	cmp r0, #3
	beq _08073EAC
	b _08073EB0
_08073E02:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08073EA4
_08073E0C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08073EB0
	b _08073EA4
_08073E18:
	adds r0, r5, #0
	adds r0, #0xe
	bl sub_08008C14
	adds r4, r5, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073E36
	adds r0, r4, #0
	bl sub_0800B4E4
_08073E36:
	adds r4, r5, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073E4C
	adds r0, r4, #0
	bl sub_0800B4E4
_08073E4C:
	adds r4, r5, #0
	adds r4, #0x16
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073E62
	adds r0, r4, #0
	bl sub_0800B4E4
_08073E62:
	adds r4, r5, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073E78
	adds r0, r4, #0
	bl sub_0800B4E4
_08073E78:
	adds r4, r5, #0
	adds r4, #0x1a
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073E8E
	adds r0, r4, #0
	bl sub_0800B4E4
_08073E8E:
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08073EA4
	adds r0, r4, #0
	bl sub_0800B4E4
_08073EA4:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08073EB0
_08073EAC:
	movs r6, #0
	strh r6, [r5, #2]
_08073EB0:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08073EB8
sub_08073EB8: @ 0x08073EB8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #0xc9
	lsls r0, r0, #3
	adds r5, r6, r0
	movs r1, #0
	movs r0, #5
	strb r0, [r5]
	movs r0, #4
	strb r0, [r5, #1]
	movs r0, #2
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r0, [r5, #0x11]
	strb r0, [r5, #0x12]
	strh r1, [r5, #2]
	strh r1, [r5, #4]
	movs r0, #0xd8
	strb r0, [r5, #0xd]
	movs r0, #0xec
	strb r0, [r5, #0xc]
	adds r1, r6, #0
	adds r1, #0x54
	str r1, [r5, #0x14]
	ldr r2, _08073F54 @ =0x0000037E
	adds r0, r6, r2
	str r0, [r5, #0x18]
	movs r7, #0
	movs r2, #0
	mov sb, r1
_08073F00:
	movs r3, #0x64
	adds r3, r3, r2
	mov r8, r3
	lsls r0, r3, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	str r2, [sp]
	bl sub_08018B10
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r2, [sp]
	cmp r0, #1
	bne _08073F58
	adds r0, r4, #0
	bl sub_08018FA0
	mov r1, sb
	adds r1, #4
	mov sb, r1
	subs r1, #4
	stm r1!, {r0}
	ldr r3, _08073F54 @ =0x0000037E
	adds r0, r6, r3
	adds r0, r0, r7
	movs r1, #0
	strb r1, [r0]
	lsls r1, r7, #1
	movs r3, #0x9c
	lsls r3, r3, #2
	adds r0, r6, r3
	adds r0, r0, r1
	mov r1, r8
	strh r1, [r0]
	adds r7, #1
	ldrh r0, [r6, #0xc]
	adds r0, #1
	strh r0, [r6, #0xc]
	adds r1, r6, #0
	adds r1, #0x54
	ldr r2, [sp]
	b _08073F82
	.align 2, 0
_08073F54: .4byte 0x0000037E
_08073F58:
	ldr r0, _08073F9C @ =gUnk_080BB8D8
	mov r3, sb
	adds r3, #4
	mov sb, r3
	subs r3, #4
	stm r3!, {r0}
	ldr r1, _08073FA0 @ =0x0000037E
	adds r0, r6, r1
	adds r0, r0, r7
	movs r1, #1
	strb r1, [r0]
	lsls r1, r7, #1
	movs r3, #0x9c
	lsls r3, r3, #2
	adds r0, r6, r3
	adds r0, r0, r1
	ldr r1, _08073FA4 @ =0x0000FFFF
	strh r1, [r0]
	adds r7, #1
	adds r1, r6, #0
	adds r1, #0x54
_08073F82:
	adds r2, #1
	cmp r2, #0x85
	bls _08073F00
	lsls r0, r7, #2
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	cmp r7, #7
	bls _08073FA8
	movs r0, #7
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	b _08073FAC
	.align 2, 0
_08073F9C: .4byte gUnk_080BB8D8
_08073FA0: .4byte 0x0000037E
_08073FA4: .4byte 0x0000FFFF
_08073FA8:
	strb r7, [r5, #0xa]
	movs r0, #0x1a
_08073FAC:
	strh r0, [r5, #8]
	movs r1, #0
	movs r0, #0x54
	strb r0, [r5, #0xe]
	movs r0, #1
	strb r0, [r5, #0xf]
	movs r2, #0x81
	lsls r2, r2, #3
	adds r0, r6, r2
	str r0, [r5, #0x20]
	ldr r0, _08073FD8 @ =0x06012400
	str r0, [r5, #0x1c]
	ldr r0, _08073FDC @ =sub_08074A24
	str r0, [r5, #0x24]
	strb r1, [r5, #0x10]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08073FD8: .4byte 0x06012400
_08073FDC: .4byte sub_08074A24

	thumb_func_start sub_08073FE0
sub_08073FE0: @ 0x08073FE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	bl sub_0806F020
	adds r6, r0, #0
	ldrh r1, [r6, #8]
	lsls r1, r1, #1
	movs r2, #0x9c
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [sp, #0x1c]
	ldr r4, _08074154 @ =gUnk_02010800
	movs r7, #3
	str r7, [sp]
	ldrh r0, [r6, #0xc]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #9
	bl sub_0806F2D0
	ldr r3, _08074158 @ =gUnk_080BB8E8
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #3
	bl sub_08001284
	str r7, [sp]
	movs r0, #0x86
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xd
	bl sub_0806F2D0
	ldr r5, _0807415C @ =gUnk_02010000
	ldr r3, _08074160 @ =gUnk_080BB8EC
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #2
	bl sub_08001284
	movs r0, #0x1a
	str r0, [sp]
	movs r0, #2
	mov r8, r0
	str r0, [sp, #4]
	ldrh r0, [r6, #8]
	adds r0, #1
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_0806F304
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08074164 @ =gUnk_080BB8F0
	adds r0, r5, #0
	movs r1, #0x12
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _08074168 @ =gUnk_080BB8F4
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _0807416C @ =gUnk_080BB8F8
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #0x10
	bl sub_08001284
	ldr r3, _08074170 @ =gUnk_080BB8FC
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #0x11
	bl sub_08001284
	ldr r3, _08074174 @ =gUnk_080BB900
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #0x12
	bl sub_08001284
	ldr r0, _08074178 @ =0x0000FFFF
	ldr r1, [sp, #0x1c]
	cmp r1, r0
	beq _0807419C
	adds r0, r1, #0
	bl sub_08018FB8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r4, #0xf
	str r4, [sp]
	str r0, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r0, [sp, #0x1c]
	bl sub_08018FD0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r4, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	ldr r0, [sp, #0x1c]
	bl sub_08018FE8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	ldr r0, [sp, #0x1c]
	bl sub_08019000
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	ldr r0, [sp, #0x1c]
	bl sub_08019030
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0807417C
	ldr r0, [sp, #0x1c]
	bl sub_08019030
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x12
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #1
	b _08074192
	.align 2, 0
_08074154: .4byte gUnk_02010800
_08074158: .4byte gUnk_080BB8E8
_0807415C: .4byte gUnk_02010000
_08074160: .4byte gUnk_080BB8EC
_08074164: .4byte gUnk_080BB8F0
_08074168: .4byte gUnk_080BB8F4
_0807416C: .4byte gUnk_080BB8F8
_08074170: .4byte gUnk_080BB8FC
_08074174: .4byte gUnk_080BB900
_08074178: .4byte 0x0000FFFF
_0807417C:
	ldr r0, [sp, #0x1c]
	bl sub_08019030
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x12
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
_08074192:
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	b _080741E6
_0807419C:
	movs r0, #1
	bl sub_080012D4
	ldr r3, _0807431C @ =gUnk_080BB904
	adds r0, r5, #0
	movs r1, #0x14
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _08074320 @ =gUnk_080BB908
	adds r0, r5, #0
	movs r1, #0x19
	movs r2, #0xf
	bl sub_08001284
	ldr r4, _08074324 @ =gUnk_080BB910
	adds r0, r5, #0
	movs r1, #0x1a
	movs r2, #0x10
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0x1a
	movs r2, #0x11
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0x1a
	movs r2, #0x12
	adds r3, r4, #0
	bl sub_08001284
	movs r0, #0
	bl sub_080012D4
_080741E6:
	adds r5, r6, #0
	adds r5, #0x12
	str r5, [sp, #0x20]
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080741FE
	adds r0, r5, #0
	bl sub_0800B4E4
_080741FE:
	adds r5, r6, #0
	adds r5, #0x14
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08074214
	adds r0, r5, #0
	bl sub_0800B4E4
_08074214:
	adds r5, r6, #0
	adds r5, #0x16
	adds r4, r5, #0
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807422C
	adds r0, r4, #0
	bl sub_0800B4E4
_0807422C:
	adds r4, r6, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08074242
	adds r0, r4, #0
	bl sub_0800B4E4
_08074242:
	adds r4, r6, #0
	adds r4, #0x1a
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08074258
	adds r0, r4, #0
	bl sub_0800B4E4
_08074258:
	adds r4, r6, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807426E
	adds r0, r4, #0
	bl sub_0800B4E4
_0807426E:
	movs r0, #4
	mov sl, r0
	movs r0, #6
	str r0, [sp]
	movs r1, #0
	mov r8, r1
	str r1, [sp, #4]
	movs r0, #1
	movs r1, #1
	movs r2, #3
	movs r3, #0xe
	bl sub_0801BBB8
	ldrh r7, [r6, #6]
	cmp r7, #1
	beq _08074290
	b _08074614
_08074290:
	ldr r0, _08074328 @ =gUnk_08BCA06C
	ldr r2, [r0]
	movs r0, #0xa
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #1
	movs r3, #1
	bl sub_0800B1AC
	ldr r2, _0807432C @ =gUnk_02010000
	mov sb, r2
	ldr r3, _08074330 @ =gUnk_080BB914
	mov r0, sb
	movs r1, #1
	movs r2, #3
	bl sub_08001284
	ldr r3, _08074334 @ =gUnk_080BB91C
	mov r0, sb
	movs r1, #1
	movs r2, #6
	bl sub_08001284
	ldr r0, _08074338 @ =0x0000FFFF
	ldr r1, [sp, #0x1c]
	cmp r1, r0
	bne _080742D4
	b _08074558
_080742D4:
	adds r0, r1, #0
	bl sub_08019118
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x1c]
	bl sub_08019130
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08074340
	mov r2, sl
	str r2, [sp]
	mov r0, sb
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	ldr r0, _0807433C @ =gUnk_08BCA070
	ldr r2, [r0]
	mov r0, sl
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x20]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	b _080743F4
	.align 2, 0
_0807431C: .4byte gUnk_080BB904
_08074320: .4byte gUnk_080BB908
_08074324: .4byte gUnk_080BB910
_08074328: .4byte gUnk_08BCA06C
_0807432C: .4byte gUnk_02010000
_08074330: .4byte gUnk_080BB914
_08074334: .4byte gUnk_080BB91C
_08074338: .4byte 0x0000FFFF
_0807433C: .4byte gUnk_08BCA070
_08074340:
	ldr r0, _08074370 @ =0x0000012B
	cmp r4, r0
	bhi _08074374
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_080639BC
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r1, sl
	str r1, [sp]
	mov r2, r8
	str r2, [sp, #4]
	str r2, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r2, [sp, #0x10]
	b _080743A4
	.align 2, 0
_08074370: .4byte 0x0000012B
_08074374:
	ldr r0, _080743B4 @ =0x000003E7
	cmp r4, r0
	bhi _080743BC
	ldr r1, _080743B8 @ =0xFFFFFED4
	adds r4, r4, r1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_0806380C
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	mov r2, sl
	str r2, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
_080743A4:
	ldr r0, [sp, #0x20]
	movs r1, #1
	adds r2, r5, #0
	movs r3, #3
	bl sub_0800B1AC
	b _080743E4
	.align 2, 0
_080743B4: .4byte 0x000003E7
_080743B8: .4byte 0xFFFFFED4
_080743BC:
	movs r7, #0x6f
	ldr r2, _0807443C @ =0xFFFFFC18
	adds r1, r4, r2
	movs r0, #3
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	mov r0, sb
	movs r2, #5
	movs r3, #1
	bl sub_08069E74
	ldr r1, _08074440 @ =gUnk_02010110
	movs r0, #0x6b
	strh r0, [r1]
	adds r1, #0x40
	movs r0, #0x6c
	strh r0, [r1]
_080743E4:
	ldr r0, _08074444 @ =gUnk_02010000
	movs r1, #4
	str r1, [sp]
	movs r1, #0
	adds r2, r7, #0
	movs r3, #1
	bl sub_08069DA8
_080743F4:
	ldr r0, [sp, #0x1c]
	bl sub_08019148
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r0, [sp, #0x1c]
	bl sub_08019160
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0
	bne _0807444C
	ldr r0, _08074444 @ =gUnk_02010000
	movs r4, #7
	str r4, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	adds r0, r6, #0
	adds r0, #0x14
	ldr r1, _08074448 @ =gUnk_08BCA070
	ldr r2, [r1]
	str r4, [sp]
	str r5, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	b _080744EC
	.align 2, 0
_0807443C: .4byte 0xFFFFFC18
_08074440: .4byte gUnk_02010110
_08074444: .4byte gUnk_02010000
_08074448: .4byte gUnk_08BCA070
_0807444C:
	ldr r0, _08074468 @ =0x0000012B
	cmp r4, r0
	bhi _0807446C
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_080639BC
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_080639E8
	b _08074488
	.align 2, 0
_08074468: .4byte 0x0000012B
_0807446C:
	ldr r0, _080744AC @ =0x000003E7
	cmp r4, r0
	bhi _080744B4
	ldr r0, _080744B0 @ =0xFFFFFED4
	adds r4, r4, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_0806380C
	adds r5, r0, #0
	adds r0, r4, #0
	bl sub_08063850
_08074488:
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #7
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	str r2, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r2, [sp, #0x10]
	movs r1, #1
	adds r2, r5, #0
	movs r3, #3
	bl sub_0800B1AC
	b _080744DC
	.align 2, 0
_080744AC: .4byte 0x000003E7
_080744B0: .4byte 0xFFFFFED4
_080744B4:
	movs r7, #0x6f
	ldr r0, _0807454C @ =gUnk_02010000
	ldr r2, _08074550 @ =0xFFFFFC18
	adds r1, r4, r2
	movs r2, #3
	str r2, [sp]
	movs r2, #7
	str r2, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r2, #5
	movs r3, #1
	bl sub_08069E74
	ldr r1, _08074554 @ =gUnk_020101D0
	movs r0, #0x6b
	strh r0, [r1]
	adds r1, #0x40
	movs r0, #0x6c
	strh r0, [r1]
_080744DC:
	ldr r0, _0807454C @ =gUnk_02010000
	movs r1, #7
	str r1, [sp]
	movs r1, #1
	adds r2, r7, #0
	movs r3, #1
	bl sub_08069DA8
_080744EC:
	bl sub_0807486C
	adds r0, r6, #0
	adds r0, #0x18
	adds r2, r6, #0
	adds r2, #0x1e
	movs r1, #0xc
	str r1, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x1a
	adds r2, r6, #0
	adds r2, #0x30
	movs r1, #0xe
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x1c
	adds r2, r6, #0
	adds r2, #0x42
	movs r1, #0x10
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	b _08074614
	.align 2, 0
_0807454C: .4byte gUnk_02010000
_08074550: .4byte 0xFFFFFC18
_08074554: .4byte gUnk_020101D0
_08074558:
	mov r0, sl
	str r0, [sp]
	mov r0, sb
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	movs r5, #7
	str r5, [sp]
	mov r0, sb
	movs r1, #1
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	ldr r4, _0807463C @ =gUnk_08BCA070
	ldr r2, [r4]
	mov r1, sl
	str r1, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x20]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x14
	ldr r2, [r4]
	str r5, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x18
	ldr r2, [r4]
	movs r1, #0xc
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x1a
	ldr r2, [r4]
	movs r1, #0xe
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r6, #0
	adds r0, #0x1c
	ldr r2, [r4]
	movs r1, #0x10
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r7, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	movs r1, #1
	movs r3, #3
	bl sub_0800B1AC
_08074614:
	ldr r0, _08074640 @ =0x0000FFFF
	ldr r2, [sp, #0x1c]
	cmp r2, r0
	bne _0807461E
	b _08074740
_0807461E:
	adds r0, r2, #0
	bl sub_08019178
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	bne _08074648
	ldr r1, _08074644 @ =0x00000A04
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	b _08074656
	.align 2, 0
_0807463C: .4byte gUnk_08BCA070
_08074640: .4byte 0x0000FFFF
_08074644: .4byte 0x00000A04
_08074648:
	ldr r2, _08074674 @ =0x00000A04
	adds r0, r6, r2
	movs r1, #2
	adds r2, r4, #0
	movs r3, #0
	bl sub_08009F50
_08074656:
	ldr r0, [sp, #0x1c]
	bl sub_08019194
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0
	bne _0807467C
	ldr r1, _08074678 @ =0x00000A2C
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	b _0807468E
	.align 2, 0
_08074674: .4byte 0x00000A04
_08074678: .4byte 0x00000A2C
_0807467C:
	ldr r2, _0807472C @ =0x00000A2C
	adds r0, r6, r2
	adds r2, r4, #4
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #2
	movs r3, #0
	bl sub_08009F50
_0807468E:
	ldr r0, [sp, #0x1c]
	bl sub_080191B0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r1, _08074730 @ =0x00000A54
	adds r0, r6, r1
	adds r5, r0, #0
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _08074734 @ =0x00000A7C
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r1, _08074738 @ =0x00000AA4
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _0807473C @ =0x00000ACC
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	movs r7, #4
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _080746E8
	adds r0, r5, #0
	movs r1, #2
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
_080746E8:
	movs r0, #2
	ands r0, r4
	cmp r0, #0
	beq _080746FE
	ldr r1, _08074734 @ =0x00000A7C
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
_080746FE:
	adds r0, r4, #0
	ands r0, r7
	cmp r0, #0
	beq _08074714
	ldr r2, _08074738 @ =0x00000AA4
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0xb
	movs r3, #0
	bl sub_08009F50
_08074714:
	movs r0, #8
	ands r4, r0
	cmp r4, #0
	beq _08074794
	ldr r1, _0807473C @ =0x00000ACC
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	b _08074794
	.align 2, 0
_0807472C: .4byte 0x00000A2C
_08074730: .4byte 0x00000A54
_08074734: .4byte 0x00000A7C
_08074738: .4byte 0x00000AA4
_0807473C: .4byte 0x00000ACC
_08074740:
	ldr r2, _08074820 @ =0x00000A04
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r1, _08074824 @ =0x00000A2C
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _08074828 @ =0x00000A54
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r1, _0807482C @ =0x00000A7C
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _08074830 @ =0x00000AA4
	adds r0, r6, r2
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r1, _08074834 @ =0x00000ACC
	adds r0, r6, r1
	movs r1, #2
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
_08074794:
	ldr r0, _08074838 @ =0x0000FFFF
	ldr r2, [sp, #0x1c]
	cmp r2, r0
	beq _08074850
	ldr r0, [sp, #0x18]
	cmp r0, #0
	bne _0807485A
	movs r1, #0xce
	lsls r1, r1, #3
	adds r0, r6, r1
	adds r1, r2, #0
	movs r2, #0
	bl sub_0803E48C
	ldr r2, _0807483C @ =0x0000097C
	adds r4, r6, r2
	ldr r2, _08074840 @ =gUnk_02019400
	ldr r3, _08074844 @ =0x06014200
	movs r0, #4
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	ldr r0, [sp, #0x18]
	str r0, [sp, #0xc]
	movs r0, #0xff
	str r0, [sp, #0x10]
	str r0, [sp, #0x14]
	ldr r0, [sp, #0x1c]
	adds r1, r4, #0
	bl sub_0802BC98
	ldr r0, [sp, #0x1c]
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_0802BF50
	movs r2, #0xff
	lsls r2, r2, #3
	adds r1, r6, r2
	movs r0, #0xbc
	lsls r0, r0, #8
	str r0, [r1]
	ldr r0, _08074848 @ =0x000007FC
	adds r1, r6, r0
	movs r0, #0xc8
	lsls r0, r0, #7
	str r0, [r1]
	ldr r0, [sp, #0x1c]
	bl sub_0802BF88
	movs r2, #0x68
	subs r2, r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0xbc
	bl sub_0800A678
	movs r2, #0xa0
	lsls r2, r2, #4
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	ldr r1, _0807484C @ =0x00000A01
	adds r0, r6, r1
	mov r2, sp
	ldrb r2, [r2, #0x18]
	strb r2, [r0]
	b _0807485A
	.align 2, 0
_08074820: .4byte 0x00000A04
_08074824: .4byte 0x00000A2C
_08074828: .4byte 0x00000A54
_0807482C: .4byte 0x00000A7C
_08074830: .4byte 0x00000AA4
_08074834: .4byte 0x00000ACC
_08074838: .4byte 0x0000FFFF
_0807483C: .4byte 0x0000097C
_08074840: .4byte gUnk_02019400
_08074844: .4byte 0x06014200
_08074848: .4byte 0x000007FC
_0807484C: .4byte 0x00000A01
_08074850:
	movs r0, #0xa0
	lsls r0, r0, #4
	adds r1, r6, r0
	movs r0, #0
	strb r0, [r1]
_0807485A:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0807486C
sub_0807486C: @ 0x0807486C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl sub_0806F020
	mov sb, r0
	ldrh r1, [r0, #8]
	lsls r1, r1, #1
	movs r0, #0x9c
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldrh r7, [r0]
	movs r0, #0
	mov r8, r0
_08074890:
	adds r0, r7, #0
	bl sub_080191CC
	mov r1, r8
	lsls r4, r1, #1
	mov r1, sb
	adds r1, #0x1e
	adds r5, r1, r4
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r5]
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldr r1, _08074904 @ =gUnk_080BB924
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _08074908
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _0807490A
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #8
	bls _08074890
_080748D4:
	movs r0, #0
	mov r2, sb
	strh r0, [r2, #0x2e]
	adds r0, r7, #0
	bl sub_080191CC
	mov r2, r8
	lsls r1, r2, #1
	adds r1, r1, r0
	ldrh r1, [r1]
	cmp r1, #0
	bne _08074914
	mov r6, r8
	ldr r0, _08074904 @ =gUnk_080BB924
	ldrh r0, [r0]
	mov r2, sb
	strh r0, [r2, #0x30]
	strh r1, [r2, #0x32]
	adds r2, #0x40
	str r2, [sp, #4]
	mov r0, sb
	adds r0, #0x52
	str r0, [sp]
	b _08074978
	.align 2, 0
_08074904: .4byte gUnk_080BB924
_08074908:
	movs r0, #0
_0807490A:
	strh r0, [r5]
	b _080748D4
_0807490E:
	movs r0, #0
_08074910:
	strh r0, [r5]
	b _08074978
_08074914:
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r1, #0xa
	add r1, r8
	mov sl, r1
	mov r2, sb
	adds r2, #0x40
	str r2, [sp, #4]
	mov r0, sb
	adds r0, #0x52
	str r0, [sp]
	cmp r6, sl
	bge _08074978
_08074932:
	adds r0, r7, #0
	bl sub_080191CC
	subs r1, r6, #1
	mov r2, r8
	subs r1, r1, r2
	lsls r1, r1, #1
	mov r2, sb
	adds r2, #0x30
	adds r5, r2, r1
	lsls r4, r6, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r5]
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldr r1, _080749A0 @ =gUnk_080BB924
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _0807490E
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08074910
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, sl
	blt _08074932
_08074978:
	movs r0, #0
	ldr r1, [sp, #4]
	strh r0, [r1]
	adds r0, r7, #0
	bl sub_080191CC
	lsls r1, r6, #1
	adds r1, r1, r0
	ldrh r2, [r1]
	cmp r2, #0
	bne _080749B2
	ldr r0, _080749A0 @ =gUnk_080BB924
	ldrh r0, [r0]
	mov r1, sb
	adds r1, #0x42
	strh r0, [r1]
	mov r0, sb
	adds r0, #0x44
	strh r2, [r0]
	b _08074A08
	.align 2, 0
_080749A0: .4byte gUnk_080BB924
_080749A4:
	movs r0, #0
	mov r2, r8
	strh r0, [r2]
	b _08074A08
_080749AC:
	mov r1, r8
	strh r0, [r1]
	b _08074A08
_080749B2:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r2, #0xa
	adds r2, r2, r6
	mov sl, r2
	cmp r5, sl
	bge _08074A08
_080749C2:
	adds r0, r7, #0
	bl sub_080191CC
	subs r1, r5, #1
	subs r1, r1, r6
	lsls r1, r1, #1
	mov r2, sb
	adds r2, #0x42
	adds r2, r2, r1
	mov r8, r2
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r2]
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldr r1, _08074A20 @ =gUnk_080BB924
	ldrh r0, [r0]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080749A4
	adds r0, r7, #0
	bl sub_080191CC
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _080749AC
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, sl
	blt _080749C2
_08074A08:
	movs r0, #0
	ldr r1, [sp]
	strh r0, [r1]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08074A20: .4byte gUnk_080BB924

	thumb_func_start sub_08074A24
sub_08074A24: @ 0x08074A24
	push {r4, lr}
	sub sp, #0xc
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _08074A54 @ =gUnk_02010800
	adds r1, #1
	ldr r4, _08074A58 @ =0xFFFD0000
	adds r2, r2, r4
	lsrs r2, r2, #0x10
	str r2, [sp]
	str r3, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r2, #3
	movs r3, #0
	bl sub_08069E74
	add sp, #0xc
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08074A54: .4byte gUnk_02010800
_08074A58: .4byte 0xFFFD0000

	thumb_func_start sub_08074A5C
sub_08074A5C: @ 0x08074A5C
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	ldrh r0, [r4, #6]
	cmp r0, #0
	bne _08074A92
	movs r0, #1
	strh r0, [r4, #6]
	adds r4, #0xe
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E64
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E7C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	b _08074ABC
_08074A92:
	cmp r0, #1
	bne _08074ABC
	movs r0, #0
	strh r0, [r4, #6]
	adds r4, #0xe
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E64
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E7C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
_08074ABC:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08074AC4
sub_08074AC4: @ 0x08074AC4
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08074AEC
	cmp r0, #1
	bgt _08074AE0
	cmp r0, #0
	beq _08074AE6
	b _08074B12
_08074AE0:
	cmp r0, #2
	beq _08074AFE
	b _08074B12
_08074AE6:
	bl sub_08074B58
	b _08074AF0
_08074AEC:
	bl sub_08074CF8
_08074AF0:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08074B12
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08074B12
_08074AFE:
	bl sub_08075238
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08074B12
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xf8
	bl sub_0806EFF0
_08074B12:
	adds r4, r5, #0
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08074B50
	ldrh r0, [r5, #6]
	cmp r0, #3
	beq _08074B50
	subs r4, #0x50
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08074B50:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08074B58
sub_08074B58: @ 0x08074B58
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x1c
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #1
	bne _08074B74
	b _08074CA0
_08074B74:
	cmp r0, #1
	bgt _08074B7E
	cmp r0, #0
	beq _08074B8C
	b _08074CE8
_08074B7E:
	cmp r0, #2
	bne _08074B84
	b _08074CD0
_08074B84:
	cmp r0, #3
	bne _08074B8A
	b _08074CE2
_08074B8A:
	b _08074CE8
_08074B8C:
	strh r0, [r7, #0x10]
	bl sub_08075298
	adds r0, r7, #0
	adds r0, #0x10
	adds r1, r7, #0
	adds r1, #0x30
	bl sub_080072F8
	ldrh r0, [r7, #4]
	bl sub_080754E8
	adds r4, r7, #0
	adds r4, #0x58
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r7, #0
	adds r5, #0x80
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r4, r0, #0
	orrs r4, r0
	lsrs r4, r4, #0x1f
	movs r0, #1
	movs r1, #4
	bl sub_08001D3C
	adds r6, r0, #0
	adds r1, r4, #0
	bl sub_08001D78
	ldr r5, _08074C98 @ =gUnk_02017400
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #1
	mov r1, sp
	movs r2, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	adds r4, #0x32
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #1
	movs r1, #1
	bl sub_0800A630
	adds r4, r7, #0
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _08074C9C @ =0x06011000
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x3a
	bl sub_0800A678
	b _08074CDA
	.align 2, 0
_08074C98: .4byte gUnk_02017400
_08074C9C: .4byte 0x06011000
_08074CA0:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08074CDA
_08074CD0:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08074CE8
_08074CDA:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _08074CE8
_08074CE2:
	movs r0, #0
	strh r0, [r7, #2]
	mov r8, r0
_08074CE8:
	mov r0, r8
	add sp, #0x1c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08074CF8
sub_08074CF8: @ 0x08074CF8
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x15
	bls _08074D0E
	b _0807522E
_08074D0E:
	lsls r0, r0, #2
	ldr r1, _08074D18 @ =_08074D1C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08074D18: .4byte _08074D1C
_08074D1C: @ jump table
	.4byte _08074D74 @ case 0
	.4byte _0807522E @ case 1
	.4byte _0807522E @ case 2
	.4byte _0807522E @ case 3
	.4byte _0807522E @ case 4
	.4byte _0807522E @ case 5
	.4byte _0807522E @ case 6
	.4byte _0807522E @ case 7
	.4byte _0807522E @ case 8
	.4byte _0807522E @ case 9
	.4byte _08075034 @ case 10
	.4byte _08075088 @ case 11
	.4byte _0807522E @ case 12
	.4byte _0807522E @ case 13
	.4byte _0807522E @ case 14
	.4byte _0807522E @ case 15
	.4byte _0807522E @ case 16
	.4byte _0807522E @ case 17
	.4byte _0807522E @ case 18
	.4byte _0807522E @ case 19
	.4byte _080751EC @ case 20
	.4byte _0807520C @ case 21
_08074D74:
	adds r6, r5, #0
	adds r6, #0x10
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08074D88
	b _0807522E
_08074D88:
	ldr r0, _08074DC8 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08074DCC
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _08074DB8
	b _0807522E
_08074DB8:
	ldrh r0, [r5, #4]
	bl sub_080754E8
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0807522E
	.align 2, 0
_08074DC8: .4byte gCurrentKeyPress
_08074DCC:
	ldr r0, _08074E30 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08074EC8
	ldrh r0, [r5, #4]
	cmp r0, #2
	bhi _08074E52
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08074EC2
	bl sub_08018598
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08074DFA
	b _08075172
_08074DFA:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _08074E34
	movs r0, #4
	movs r1, #1
	b _08075164
	.align 2, 0
_08074E30: .4byte gKeyNewPress
_08074E34:
	cmp r0, #2
	bne _08074E3E
	movs r0, #4
	movs r1, #2
	b _08075164
_08074E3E:
	cmp r0, #3
	bne _08074E48
	movs r0, #4
	movs r1, #3
	b _08075164
_08074E48:
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08075168
_08074E52:
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08074EB4
	bl sub_08018CE8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08074E6A
	b _08075172
_08074E6A:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x12
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _08074E8A
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08074EAE
_08074E8A:
	cmp r0, #2
	bne _08074E98
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	b _08074EAE
_08074E98:
	cmp r0, #3
	bne _08074EA6
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	b _08074EAE
_08074EA6:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
_08074EAE:
	movs r0, #2
	movs r1, #0
	b _0807515C
_08074EB4:
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x63
	bne _08074EC2
	b _08075172
_08074EC2:
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0807522E
_08074EC8:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08074F66
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08074EF4
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	b _0807515C
_08074EF4:
	cmp r0, #1
	bne _08074F0E
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	b _0807515C
_08074F0E:
	cmp r0, #2
	bne _08074F36
	movs r0, #0
	movs r1, #0x21
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	b _08075162
_08074F36:
	cmp r0, #3
	beq _08074F3C
	b _08075168
_08074F3C:
	movs r0, #0
	movs r1, #0x21
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08075168
_08074F66:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08074FCC
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08074F7E
	b _0807522E
_08074F7E:
	ldrh r0, [r5, #6]
	cmp r0, #3
	bne _08074F86
	b _0807522E
_08074F86:
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08074F9E
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _08074FB8
_08074F9E:
	cmp r0, #1
	bne _08074FAC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08074FB8
_08074FAC:
	cmp r0, #2
	bne _08074FB8
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_08074FB8:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #7
	b _0807516A
_08074FCC:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08074FD8
	b _0807522E
_08074FD8:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08074FE6
	b _0807522E
_08074FE6:
	ldrh r0, [r5, #6]
	cmp r0, #3
	bne _08074FEE
	b _0807522E
_08074FEE:
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08075006
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _08075020
_08075006:
	cmp r0, #1
	bne _08075014
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08075020
_08075014:
	cmp r0, #2
	bne _08075020
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_08075020:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #9
	b _0807516A
_08075034:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xc5
	bl sub_0800EC64
	adds r4, r5, #0
	adds r4, #0xa8
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldr r0, _08075080 @ =gUnk_08BCB058
	bl sub_0800ED08
	ldr r1, _08075084 @ =gUnk_08BC9E80
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E34
	b _08075204
	.align 2, 0
_08075080: .4byte gUnk_08BCB058
_08075084: .4byte gUnk_08BC9E80
_08075088:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _08075096
	b _0807522E
_08075096:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r6, #1
	rsbs r6, r6, #0
	cmp r0, r6
	bne _080750B4
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E34
	strh r4, [r5, #2]
	b _0807522E
_080750B4:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08075184
	ldrh r0, [r5, #4]
	cmp r0, #2
	bhi _08075110
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #2
	adds r1, r6, #0
	bl sub_0806F0CC
	movs r0, #3
	adds r1, r6, #0
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _080750F2
	movs r0, #4
	movs r1, #1
	b _08075164
_080750F2:
	cmp r0, #2
	bne _080750FC
	movs r0, #4
	movs r1, #2
	b _08075164
_080750FC:
	cmp r0, #3
	bne _08075106
	movs r0, #4
	movs r1, #3
	b _08075164
_08075106:
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08075168
_08075110:
	bl sub_08018CE8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08075172
	movs r0, #0
	movs r1, #0x12
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _08075132
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08075156
_08075132:
	cmp r0, #2
	bne _08075140
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	b _08075156
_08075140:
	cmp r0, #3
	bne _0807514E
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	b _08075156
_0807514E:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
_08075156:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
_0807515C:
	bl sub_0806F0CC
	movs r0, #3
_08075162:
	movs r1, #0
_08075164:
	bl sub_0806F0CC
_08075168:
	movs r0, #1
_0807516A:
	strh r0, [r5, #8]
	movs r7, #0
	strh r7, [r5, #2]
	b _0807522E
_08075172:
	ldr r0, _08075180 @ =gUnk_08BC9EA8
	ldr r0, [r0]
	str r0, [r5, #0xc]
	movs r0, #0x14
	strh r0, [r5, #2]
	b _0807522E
	.align 2, 0
_08075180: .4byte gUnk_08BC9EA8
_08075184:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807522E
	ldrh r0, [r5, #4]
	cmp r0, #2
	bhi _080751A2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
	b _080751CC
_080751A2:
	bl GetEquipItem
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	movs r0, #0xff
	bl SetPlayerEquipItemType
_080751CC:
	bl sub_0801644C
	ldrh r0, [r5, #4]
	bl sub_080754E8
	bl sub_08075298
	adds r0, r5, #0
	adds r0, #0x10
	adds r1, r5, #0
	adds r1, #0x30
	bl sub_080076B0
	movs r0, #0
	strh r0, [r5, #2]
	b _0807522E
_080751EC:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r5, #0xc]
	bl sub_0806A040
_08075204:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807522E
_0807520C:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _0807522E
	adds r4, r5, #0
	adds r4, #0x10
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E4C
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	strh r6, [r5, #2]
_0807522E:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08075238
sub_08075238: @ 0x08075238
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08075268
	cmp r0, #1
	bgt _08075254
	cmp r0, #0
	beq _0807525E
	b _08075290
_08075254:
	cmp r0, #2
	beq _08075274
	cmp r0, #3
	beq _0807528C
	b _08075290
_0807525E:
	ldrh r0, [r4, #8]
	movs r1, #8
	bl sub_0806AC78
	b _08075284
_08075268:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08075290
	b _08075284
_08075274:
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_08075284:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08075290
_0807528C:
	movs r5, #0
	strh r5, [r4, #2]
_08075290:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08075298
sub_08075298: @ 0x08075298
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	bl sub_0806F020
	adds r6, r0, #0
	adds r7, r6, #0
	adds r7, #0x30
	movs r1, #0
	movs r0, #0xe
	strb r0, [r7]
	movs r0, #0xa
	strb r0, [r7, #1]
	movs r0, #2
	strb r0, [r7, #6]
	strb r1, [r7, #7]
	strb r1, [r7, #0x11]
	strb r0, [r7, #0x12]
	ldrh r0, [r6, #4]
	strh r0, [r7, #2]
	strh r1, [r7, #4]
	movs r0, #0xd8
	strb r0, [r7, #0xd]
	movs r0, #0
	str r0, [sp]
	adds r5, r6, #0
	adds r5, #0x14
	adds r4, r6, #0
	adds r4, #0x28
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080752FA
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	str r0, [r6, #0x14]
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r4]
	b _08075304
_080752FA:
	ldr r0, _08075340 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r6, #0x14]
	movs r0, #1
	strb r0, [r4]
_08075304:
	mov sl, r5
	mov sb, r4
	adds r5, #4
	adds r4, #1
	ldr r0, [sp]
	adds r0, #1
	str r0, [sp]
	cmp r0, #2
	bhi _080753A4
	mov r8, r4
_08075318:
	ldr r1, [sp]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08075344
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	str r0, [r5]
	movs r0, #0
	mov r1, r8
	strb r0, [r1]
	b _0807534E
	.align 2, 0
_08075340: .4byte gUnk_08BCA070
_08075344:
	ldr r0, _08075378 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r5]
	movs r0, #1
	strb r0, [r4]
_0807534E:
	ldr r0, [sp]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807537C
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	str r0, [r5, #4]
	movs r0, #0
	mov r1, r8
	strb r0, [r1, #1]
	b _08075386
	.align 2, 0
_08075378: .4byte gUnk_08BCA070
_0807537C:
	ldr r0, _080753C0 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r5, #4]
	movs r0, #1
	strb r0, [r4, #1]
_08075386:
	movs r0, #0x14
	adds r0, r0, r6
	mov sl, r0
	movs r1, #0x28
	adds r1, r1, r6
	mov sb, r1
	adds r5, #8
	adds r4, #2
	movs r0, #2
	add r8, r0
	ldr r1, [sp]
	adds r1, #2
	str r1, [sp]
	cmp r1, #2
	bls _08075318
_080753A4:
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080753C4
	bl sub_0806380C
	str r0, [r6, #0x20]
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #0
	b _080753D0
	.align 2, 0
_080753C0: .4byte gUnk_08BCA070
_080753C4:
	ldr r0, _08075400 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r6, #0x20]
	adds r1, r6, #0
	adds r1, #0x2b
	movs r0, #1
_080753D0:
	strb r0, [r1]
	movs r0, #0
	str r0, [r6, #0x24]
	movs r0, #4
	strb r0, [r7, #0xa]
	mov r0, sl
	str r0, [r7, #0x14]
	mov r1, sb
	str r1, [r7, #0x18]
	movs r1, #0
	movs r0, #0x18
	strh r0, [r7, #8]
	ldr r0, _08075404 @ =sub_08075408
	str r0, [r7, #0x24]
	strb r1, [r7, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08075400: .4byte gUnk_08BCA070
_08075404: .4byte sub_08075408

	thumb_func_start sub_08075408
sub_08075408: @ 0x08075408
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	cmp r6, #2
	bhi _08075488
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _08075464
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08075466
	adds r0, r5, #0
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	b _08075466
_08075464:
	movs r5, #0
_08075466:
	ldr r0, _08075484 @ =gUnk_02010800
	adds r1, r6, #1
	subs r2, r7, #3
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	mov r2, r8
	str r2, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	b _080754B8
	.align 2, 0
_08075484: .4byte gUnk_02010800
_08075488:
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807549E
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	b _080754A0
_0807549E:
	movs r5, #0
_080754A0:
	mov r0, r8
	lsls r1, r0, #6
	lsls r0, r7, #1
	adds r1, r1, r0
	ldr r0, _080754DC @ =gUnk_020107FA
	adds r2, r1, r0
	movs r0, #0x56
	strh r0, [r2]
	ldr r2, _080754E0 @ =gUnk_0201083A
	adds r1, r1, r2
	movs r0, #0x57
	strh r0, [r1]
_080754B8:
	ldr r0, _080754E4 @ =gUnk_02010800
	subs r3, r7, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r1, r8
	str r1, [sp]
	mov r1, sb
	adds r2, r5, #0
	bl sub_08069DA8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080754DC: .4byte gUnk_020107FA
_080754E0: .4byte gUnk_0201083A
_080754E4: .4byte gUnk_02010800

	thumb_func_start sub_080754E8
sub_080754E8: @ 0x080754E8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	bl sub_0806F020
	adds r4, r0, #0
	ldrh r0, [r4, #0x12]
	cmp r0, #0
	beq _0807550E
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_0807550E:
	bl GetSavedPlayerName
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0x12
	movs r7, #2
	str r7, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldr r4, _08075690 @ =gUnk_02010800
	ldr r3, _08075694 @ =gUnk_080BB928
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #4
	bl sub_08001284
	ldr r3, _08075698 @ =gUnk_080BB92C
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #5
	bl sub_08001284
	ldr r3, _0807569C @ =gUnk_080BB930
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #6
	bl sub_08001284
	ldr r3, _080756A0 @ =gUnk_080BB934
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #7
	bl sub_08001284
	ldr r3, _080756A4 @ =gUnk_080BB938
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #8
	bl sub_08001284
	movs r5, #3
	ldr r1, [sp, #0x14]
	eors r1, r5
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov sb, r0
	ldr r3, _080756A8 @ =gUnk_0201089C
	lsls r1, r0, #0xc
	movs r2, #0x56
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3]
	ldr r2, _080756AC @ =gUnk_020108DC
	movs r0, #0x57
	orrs r1, r0
	strh r1, [r2]
	str r7, [sp]
	adds r0, r4, #0
	movs r1, #4
	movs r2, #1
	movs r3, #0xf
	bl sub_08069DA8
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	movs r0, #0
	str r0, [sp, #0x1c]
	mov r0, sb
	bl sub_080012D4
	movs r0, #4
	str r0, [sp]
	str r7, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #5
	str r0, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #6
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #7
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	movs r0, #0
	mov r8, r0
_0807563A:
	ldr r1, [sp, #0x14]
	mov r0, r8
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	lsrs r0, r0, #0x1f
	mov sb, r0
	mov r5, r8
	adds r5, #1
	mov r0, r8
	lsls r0, r0, #2
	str r0, [sp, #0x20]
	adds r0, #0x12
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	mov r0, sb
	str r0, [sp, #8]
	ldr r0, _08075690 @ =gUnk_02010800
	adds r1, r5, #0
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	mov r0, r8
	lsls r4, r0, #0x18
	lsrs r0, r4, #0x18
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r6, r7, #0
	str r5, [sp, #0x24]
	ldr r0, [sp, #0x20]
	str r0, [sp, #0x28]
	cmp r7, #0xff
	bne _080756B0
	movs r5, #0
	movs r0, #0
	str r0, [sp, #0x18]
	b _080756E8
	.align 2, 0
_08075690: .4byte gUnk_02010800
_08075694: .4byte gUnk_080BB928
_08075698: .4byte gUnk_080BB92C
_0807569C: .4byte gUnk_080BB930
_080756A0: .4byte gUnk_080BB934
_080756A4: .4byte gUnk_080BB938
_080756A8: .4byte gUnk_0201089C
_080756AC: .4byte gUnk_020108DC
_080756B0:
	adds r0, r7, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r7, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080756D2
	adds r5, #0x6f
_080756D2:
	adds r0, r6, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	adds r0, r6, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_080756E8:
	str r0, [sp, #0x1c]
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	mov r1, r8
	adds r1, #5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r2, r5, #0
	ldr r3, [sp, #0x28]
	adds r3, #0x13
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	movs r0, #2
	str r0, [sp]
	ldr r0, _080757CC @ =gUnk_02010800
	bl sub_08069DA8
	mov r0, sb
	bl sub_080012D4
	ldr r4, [sp, #0x28]
	adds r4, #0x12
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #4
	str r0, [sp]
	str r7, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, _080757CC @ =gUnk_02010800
	movs r1, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #5
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, _080757CC @ =gUnk_02010800
	movs r1, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #6
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, _080757CC @ =gUnk_02010800
	movs r1, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #7
	str r0, [sp]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, _080757CC @ =gUnk_02010800
	movs r1, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #8
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	ldr r0, _080757CC @ =gUnk_02010800
	movs r1, #0
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	ldr r0, [sp, #0x24]
	mov r8, r0
	cmp r0, #2
	bhi _080757BA
	b _0807563A
_080757BA:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080757CC: .4byte gUnk_02010800

	thumb_func_start sub_080757D0
sub_080757D0: @ 0x080757D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	mov sl, r3
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	mov r0, sl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldr r4, _080758A4 @ =0x00000464
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r7, #0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	mov r0, sl
	strh r0, [r5, #0xa]
	movs r0, #0xa
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r7, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r7, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r7, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080758A4: .4byte 0x00000464

	thumb_func_start sub_080758A8
sub_080758A8: @ 0x080758A8
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r4, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080758D0
	cmp r0, #1
	bgt _080758C4
	cmp r0, #0
	beq _080758CA
	b _080758F6
_080758C4:
	cmp r0, #2
	beq _080758E2
	b _080758F6
_080758CA:
	bl sub_080759BC
	b _080758D4
_080758D0:
	bl sub_08075B60
_080758D4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080758F6
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080758F6
_080758E2:
	bl sub_08075ED0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080758F6
	movs r4, #0
	strh r4, [r5]
	ldr r0, _080759A8 @ =0x00000464
	bl sub_0806EFF0
_080758F6:
	adds r0, r5, #0
	adds r0, #0x94
	ldrh r2, [r5, #6]
	adds r0, r0, r2
	ldrb r0, [r0]
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0xe3
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r2, #0x9e
	movs r3, #0x17
	bl sub_0806F544
	lsls r6, r4, #0x10
	movs r0, #0xef
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _080759AC @ =0x0000045C
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08075938
	adds r0, r4, #0
	bl sub_0800A778
_08075938:
	movs r2, #0xf9
	lsls r2, r2, #2
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _080759B0 @ =0x0000045D
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08075958
	adds r0, r4, #0
	bl sub_0800A778
_08075958:
	ldr r2, _080759B4 @ =0x0000040C
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _080759B8 @ =0x0000045E
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08075976
	adds r0, r4, #0
	bl sub_0800A778
_08075976:
	ldrh r0, [r5, #0xa]
	cmp r0, #3
	beq _080759A0
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r0, #0xcf
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_080759A0:
	asrs r0, r6, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080759A8: .4byte 0x00000464
_080759AC: .4byte 0x0000045C
_080759B0: .4byte 0x0000045D
_080759B4: .4byte 0x0000040C
_080759B8: .4byte 0x0000045E

	thumb_func_start sub_080759BC
sub_080759BC: @ 0x080759BC
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r0, #2
	ldrsh r5, [r6, r0]
	cmp r5, #1
	bne _080759D0
	b _08075B10
_080759D0:
	cmp r5, #1
	bgt _080759DA
	cmp r5, #0
	beq _080759E8
	b _08075B58
_080759DA:
	cmp r5, #2
	bne _080759E0
	b _08075B40
_080759E0:
	cmp r5, #3
	bne _080759E6
	b _08075B52
_080759E6:
	b _08075B58
_080759E8:
	strh r5, [r6, #0x10]
	bl sub_08075F34
	adds r4, r6, #0
	adds r4, #0x10
	movs r0, #0xc5
	lsls r0, r0, #2
	adds r1, r6, r0
	adds r0, r4, #0
	bl sub_080072F8
	adds r0, r4, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	ldrh r0, [r6, #6]
	bl sub_0807618C
	movs r1, #0xef
	lsls r1, r1, #2
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _08075B00 @ =0x0000045C
	adds r0, r6, r1
	strb r5, [r0]
	movs r0, #0xf9
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _08075B04 @ =0x0000045D
	adds r0, r6, r1
	strb r5, [r0]
	ldr r0, _08075B08 @ =0x0000040C
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _08075B0C @ =0x0000045E
	adds r0, r6, r1
	strb r5, [r0]
	adds r1, #2
	adds r0, r6, r1
	strb r7, [r0]
	movs r0, #0xcf
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08075B4A
	.align 2, 0
_08075B00: .4byte 0x0000045C
_08075B04: .4byte 0x0000045D
_08075B08: .4byte 0x0000040C
_08075B0C: .4byte 0x0000045E
_08075B10:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08075B4A
_08075B40:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08075B58
_08075B4A:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08075B58
_08075B52:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_08075B58:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08075B60
sub_08075B60: @ 0x08075B60
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x1f
	bls _08075B78
	b _08075EC2
_08075B78:
	lsls r0, r0, #2
	ldr r1, _08075B84 @ =_08075B88
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08075B84: .4byte _08075B88
_08075B88: @ jump table
	.4byte _08075C08 @ case 0
	.4byte _08075EC2 @ case 1
	.4byte _08075EC2 @ case 2
	.4byte _08075EC2 @ case 3
	.4byte _08075EC2 @ case 4
	.4byte _08075EC2 @ case 5
	.4byte _08075EC2 @ case 6
	.4byte _08075EC2 @ case 7
	.4byte _08075EC2 @ case 8
	.4byte _08075EC2 @ case 9
	.4byte _08075E1A @ case 10
	.4byte _08075EC2 @ case 11
	.4byte _08075EC2 @ case 12
	.4byte _08075EC2 @ case 13
	.4byte _08075EC2 @ case 14
	.4byte _08075EC2 @ case 15
	.4byte _08075EC2 @ case 16
	.4byte _08075EC2 @ case 17
	.4byte _08075EC2 @ case 18
	.4byte _08075EC2 @ case 19
	.4byte _08075EC2 @ case 20
	.4byte _08075EC2 @ case 21
	.4byte _08075EC2 @ case 22
	.4byte _08075EC2 @ case 23
	.4byte _08075EC2 @ case 24
	.4byte _08075EC2 @ case 25
	.4byte _08075EC2 @ case 26
	.4byte _08075EC2 @ case 27
	.4byte _08075EC2 @ case 28
	.4byte _08075EC2 @ case 29
	.4byte _08075E92 @ case 30
	.4byte _08075EAA @ case 31
_08075C08:
	adds r6, r5, #0
	adds r6, #0x10
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08075C1C
	b _08075EC2
_08075C1C:
	ldr r0, _08075C68 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r1, #0xf0
	mov r8, r1
	ands r1, r0
	mov r8, r1
	cmp r1, #0
	beq _08075C6C
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x8c
	lsls r0, r0, #3
	adds r1, r5, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #6]
	adds r0, r6, #0
	bl sub_08008D50
	strh r0, [r5, #8]
	ldrh r0, [r5, #6]
	cmp r0, r4
	bne _08075C60
	b _08075EC2
_08075C60:
	bl sub_0807618C
	movs r0, #0x64
	b _08075E2A
	.align 2, 0
_08075C68: .4byte gCurrentKeyPress
_08075C6C:
	ldr r1, _08075CA0 @ =gKeyNewPress
	ldrh r2, [r1]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08075D20
	ldrh r0, [r5, #6]
	adds r4, r5, #0
	adds r4, #0x94
	adds r0, r4, r0
	ldrb r0, [r0]
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08075CA8
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08075CA4 @ =gUnk_08BC9F04
	ldr r0, [r0]
	str r0, [r5, #0x14]
	movs r0, #0x1e
	strh r0, [r5, #2]
	b _08075EC2
	.align 2, 0
_08075CA0: .4byte gKeyNewPress
_08075CA4: .4byte gUnk_08BC9F04
_08075CA8:
	movs r0, #0
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08075CC4
	movs r0, #0
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08075CC4:
	movs r0, #1
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08075CE0
	movs r0, #1
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08075CE0:
	movs r0, #2
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08075CFC
	movs r0, #2
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08075CFC:
	ldrb r0, [r5, #4]
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	ldrb r1, [r1]
	bl SetPlayerEquipWeaponType
	bl sub_0801644C
	adds r0, r6, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	mov r1, r8
	strh r1, [r5, #0xe]
	movs r0, #0xa
	strh r0, [r5, #2]
	b _08075EC2
_08075D20:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08075D4E
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	bne _08075D40
	b _08075E44
_08075D40:
	cmp r0, #1
	bne _08075D46
	b _08075E52
_08075D46:
	cmp r0, #2
	bne _08075D4C
	b _08075E60
_08075D4C:
	b _08075E6A
_08075D4E:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r2
	cmp r0, #0
	beq _08075DB2
	ldrh r0, [r5, #0xa]
	cmp r0, #3
	beq _08075DB2
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	bne _08075D76
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08075D90
_08075D76:
	cmp r0, #1
	bne _08075D84
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
	b _08075D90
_08075D84:
	cmp r0, #2
	bne _08075D90
	movs r0, #1
	movs r1, #0xa
	bl sub_0806F0CC
_08075D90:
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #4
	bl sub_0806F0CC
	movs r0, #7
	b _08075E8A
_08075DB2:
	ldrh r1, [r1]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08075DC0
	b _08075EC2
_08075DC0:
	ldrh r0, [r5, #0xa]
	cmp r0, #3
	beq _08075EC2
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	bne _08075DDE
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08075DF8
_08075DDE:
	cmp r0, #1
	bne _08075DEC
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
	b _08075DF8
_08075DEC:
	cmp r0, #2
	bne _08075DF8
	movs r0, #1
	movs r1, #0xa
	bl sub_0806F0CC
_08075DF8:
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #4
	bl sub_0806F0CC
	movs r0, #9
	b _08075E8A
_08075E1A:
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _08075E32
	movs r0, #0x65
_08075E2A:
	movs r1, #0
	bl sub_080147B8
	b _08075EC2
_08075E32:
	cmp r0, #0x1e
	bne _08075EC2
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	bne _08075E4E
_08075E44:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _08075E76
_08075E4E:
	cmp r0, #1
	bne _08075E5C
_08075E52:
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08075E76
_08075E5C:
	cmp r0, #2
	bne _08075E6A
_08075E60:
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	b _08075E76
_08075E6A:
	cmp r0, #3
	bne _08075E76
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
_08075E76:
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
_08075E8A:
	strh r0, [r5, #0xc]
	movs r7, #0
	strh r7, [r5, #2]
	b _08075EC2
_08075E92:
	ldr r0, [r5, #0x14]
	bl sub_0806A040
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E4C
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08075EC2
_08075EAA:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08075EC2
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r5, #2]
_08075EC2:
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08075ED0
sub_08075ED0: @ 0x08075ED0
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08075F00
	cmp r0, #1
	bgt _08075EEC
	cmp r0, #0
	beq _08075EF6
	b _08075F2C
_08075EEC:
	cmp r0, #2
	beq _08075F0C
	cmp r0, #3
	beq _08075F28
	b _08075F2C
_08075EF6:
	ldrh r0, [r4, #0xc]
	movs r1, #8
	bl sub_0806AC78
	b _08075F20
_08075F00:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08075F2C
	b _08075F20
_08075F0C:
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_08008C14
	movs r0, #0
	bl sub_08010FC8
	movs r0, #2
	bl sub_08011104
_08075F20:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08075F2C
_08075F28:
	movs r5, #0
	strh r5, [r4, #2]
_08075F2C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08075F34
sub_08075F34: @ 0x08075F34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #0xc5
	lsls r0, r0, #2
	adds r5, r6, r0
	movs r1, #0
	movs r0, #4
	strb r0, [r5]
	movs r0, #3
	strb r0, [r5, #1]
	movs r0, #2
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r0, [r5, #0x11]
	strb r0, [r5, #0x12]
	ldrh r0, [r6, #6]
	strh r0, [r5, #2]
	ldrh r0, [r6, #8]
	strh r0, [r5, #4]
	movs r0, #0xe0
	strb r0, [r5, #0xd]
	movs r0, #0xf0
	strb r0, [r5, #0xc]
	adds r0, r6, #0
	adds r0, #0x18
	str r0, [r5, #0x14]
	adds r0, #0x9b
	str r0, [r5, #0x18]
	movs r7, #0
	mov sl, r1
_08075F7C:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	adds r0, r4, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	adds r4, r6, #0
	adds r4, #0x18
	cmp r1, #0
	bne _08076026
	mov r0, sb
	cmp r0, #0xff
	beq _08076026
	ldrh r1, [r6, #6]
	ldr r0, _0807600C @ =0x0000FFFF
	cmp r1, r0
	bne _08075FE4
	ldrh r0, [r6, #8]
	cmp r0, r1
	bne _08075FE4
	ldrb r0, [r6, #4]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r8
	bne _08075FE4
	strh r7, [r5, #2]
	subs r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _08075FDC
	movs r1, #0
_08075FDC:
	strh r1, [r5, #4]
	strh r7, [r6, #6]
	ldrh r0, [r5, #4]
	strh r0, [r6, #8]
_08075FE4:
	mov r0, sb
	bl sub_080639BC
	lsls r1, r7, #2
	adds r4, r6, #0
	adds r4, #0x18
	adds r1, r4, r1
	str r0, [r1]
	mov r0, r8
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076010
	adds r0, r6, #0
	adds r0, #0xb3
	adds r0, r0, r7
	movs r1, #1
	b _08076018
	.align 2, 0
_0807600C: .4byte 0x0000FFFF
_08076010:
	adds r0, r6, #0
	adds r0, #0xb3
	adds r0, r0, r7
	movs r1, #0
_08076018:
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0x94
	adds r0, r0, r7
	mov r1, r8
	strb r1, [r0]
	adds r7, #1
_08076026:
	movs r0, #1
	add sl, r0
	mov r1, sl
	cmp r1, #0x1d
	bls _08075F7C
	lsls r0, r7, #2
	adds r0, r4, r0
	movs r1, #0
	str r1, [r0]
	cmp r7, #4
	bls _08076044
	movs r0, #4
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	b _08076048
_08076044:
	strb r7, [r5, #0xa]
	movs r0, #0x1a
_08076048:
	strh r0, [r5, #8]
	movs r1, #0
	movs r0, #0x62
	strb r0, [r5, #0xe]
	movs r0, #1
	strb r0, [r5, #0xf]
	adds r0, r6, #0
	adds r0, #0xd4
	str r0, [r5, #0x20]
	ldr r0, _08076074 @ =0x06012400
	str r0, [r5, #0x1c]
	ldr r0, _08076078 @ =sub_0807607C
	str r0, [r5, #0x24]
	strb r1, [r5, #0x10]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076074: .4byte 0x06012400
_08076078: .4byte sub_0807607C

	thumb_func_start sub_0807607C
sub_0807607C: @ 0x0807607C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r1, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #8]
	bl sub_0806F020
	adds r6, r0, #0
	adds r0, #0x94
	adds r0, r0, r4
	ldrb r0, [r0]
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080760D0
	adds r7, #0x6f
_080760D0:
	movs r1, #0x8c
	lsls r1, r1, #3
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r5, #2
	str r5, [sp, #0xc]
	cmp r0, #1
	bne _08076104
	movs r5, #0
	ldr r2, _08076184 @ =0x0000045C
	adds r1, r6, r2
	movs r2, #0
_080760EC:
	adds r0, r1, r5
	strb r2, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #2
	bls _080760EC
	movs r3, #0x8c
	lsls r3, r3, #3
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
_08076104:
	movs r5, #0
	ldr r0, [sp, #0xc]
	lsls r0, r0, #0x13
	mov sl, r0
	ldr r1, [sp, #8]
	lsls r1, r1, #0x13
	mov sb, r1
_08076112:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08076156
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r8
	bne _08076156
	ldr r2, _08076184 @ =0x0000045C
	adds r0, r6, r2
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r0, r0, #3
	movs r3, #0xef
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r0, r6, r0
	mov r2, sl
	asrs r1, r2, #0x10
	mov r3, sb
	asrs r2, r3, #0x10
	bl sub_0800A678
_08076156:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #2
	bls _08076112
	ldr r0, _08076188 @ =gUnk_02010800
	ldr r1, [sp, #0xc]
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x10
	ldr r2, [sp, #8]
	str r2, [sp]
	ldr r1, [sp, #4]
	adds r2, r7, #0
	bl sub_08069DA8
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076184: .4byte 0x0000045C
_08076188: .4byte gUnk_02010800

	thumb_func_start sub_0807618C
sub_0807618C: @ 0x0807618C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x10]
	bl sub_0806F020
	adds r7, r0, #0
	adds r0, #0x94
	ldr r1, [sp, #0x10]
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl GetWeaponType
	movs r3, #0xe3
	lsls r3, r3, #2
	adds r1, r7, r3
	adds r0, r4, #0
	movs r2, #0x9e
	movs r3, #0x17
	bl sub_0806A670
	ldr r4, _080762D4 @ =gUnk_02010800
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xc
	ldr r3, _080762D8 @ =gUnk_080BB928
	bl sub_08001284
	ldr r0, _080762DC @ =gUnk_080BB92C
	mov sl, r0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xd
	mov r3, sl
	bl sub_08001284
	ldr r1, _080762E0 @ =gUnk_080BB930
	mov sb, r1
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xe
	mov r3, sb
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xf
	ldr r3, _080762E4 @ =gUnk_080BB934
	bl sub_08001284
	ldr r6, _080762E8 @ =gUnk_080BB938
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x11
	adds r3, r6, #0
	bl sub_08001284
	ldr r5, _080762EC @ =gUnk_080BB93C
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #0xf
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #0x11
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0xc
	ldr r3, _080762D8 @ =gUnk_080BB928
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0xd
	mov r3, sl
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0xe
	mov r3, sb
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0xf
	ldr r3, _080762E4 @ =gUnk_080BB934
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0x11
	adds r3, r6, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xf
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x11
	adds r3, r5, #0
	bl sub_08001284
	ldrb r0, [r7, #4]
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #0xff
	beq _080762F0
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080762AC
	adds r5, #0x6f
_080762AC:
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	b _080762F8
	.align 2, 0
_080762D4: .4byte gUnk_02010800
_080762D8: .4byte gUnk_080BB928
_080762DC: .4byte gUnk_080BB92C
_080762E0: .4byte gUnk_080BB930
_080762E4: .4byte gUnk_080BB934
_080762E8: .4byte gUnk_080BB938
_080762EC: .4byte gUnk_080BB93C
_080762F0:
	movs r5, #0
	mov sb, r5
	mov sl, r5
	mov r8, r5
_080762F8:
	ldr r6, _08076484 @ =gUnk_02010800
	adds r2, r5, #0
	movs r4, #0xc
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #4
	movs r3, #2
	bl sub_08069DA8
	ldrh r1, [r7, #4]
	adds r1, #1
	movs r3, #1
	str r3, [sp]
	str r4, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r6, #0
	movs r2, #1
	bl sub_08069E74
	ldrb r0, [r7, #4]
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	ldrb r0, [r7, #4]
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	ldrb r0, [r7, #4]
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	str r4, [sp]
	ldr r0, [sp, #0x14]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #0xe
	str r0, [sp]
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r5, #0xf
	str r5, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	str r5, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xc
	bl sub_0806F2D0
	movs r5, #0x11
	str r5, [sp]
	mov r3, sl
	str r3, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	str r5, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xc
	bl sub_0806F2D0
	mov r0, sb
	str r0, [sp]
	movs r4, #9
	str r4, [sp, #4]
	movs r0, #0x10
	str r0, [sp, #8]
	movs r1, #1
	str r1, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	mov r3, r8
	bl sub_0806F174
	mov r3, sl
	str r3, [sp]
	str r4, [sp, #4]
	movs r0, #0x12
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	movs r3, #0xff
	bl sub_0806F174
	adds r0, r7, #0
	adds r0, #0x94
	ldr r1, [sp, #0x10]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponType
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	bl GetWeaponAtk
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	adds r0, r4, #0
	bl GetWeaponDef
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	adds r0, r4, #0
	bl GetWeaponAgl
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	ldr r1, _08076488 @ =0x000003E7
	cmp r0, r1
	ble _0807648C
	adds r5, r1, #0
	b _08076492
	.align 2, 0
_08076484: .4byte gUnk_02010800
_08076488: .4byte 0x000003E7
_0807648C:
	cmp r0, #0
	bge _08076492
	movs r5, #0
_08076492:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080764A0 @ =0x000003E7
	cmp r0, r1
	ble _080764A4
	adds r6, r1, #0
	b _080764AA
	.align 2, 0
_080764A0: .4byte 0x000003E7
_080764A4:
	cmp r0, #0
	bge _080764AA
	movs r6, #0
_080764AA:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080764B8 @ =0x000003E7
	cmp r0, r1
	ble _080764BC
	adds r7, r1, #0
	b _080764C2
	.align 2, 0
_080764B8: .4byte 0x000003E7
_080764BC:
	cmp r0, #0
	bge _080764C2
	movs r7, #0
_080764C2:
	lsls r0, r5, #0x10
	asrs r1, r0, #0x10
	adds r5, r0, #0
	ldr r3, [sp, #0x14]
	cmp r1, r3
	ble _080764F0
	movs r0, #0
	bl sub_080012D4
	ldr r0, _080764E8 @ =gUnk_02010800
	ldr r3, _080764EC @ =gUnk_080BB940
	movs r1, #0x19
	movs r2, #0xc
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _0807652A
	.align 2, 0
_080764E8: .4byte gUnk_02010800
_080764EC: .4byte gUnk_080BB940
_080764F0:
	ldr r0, [sp, #0x14]
	cmp r1, r0
	bge _08076518
	movs r0, #0
	bl sub_080012D4
	ldr r0, _08076510 @ =gUnk_02010800
	ldr r3, _08076514 @ =gUnk_080BB944
	movs r1, #0x19
	movs r2, #0xc
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _0807652A
	.align 2, 0
_08076510: .4byte gUnk_02010800
_08076514: .4byte gUnk_080BB944
_08076518:
	movs r0, #0
	bl sub_080012D4
	ldr r0, _08076570 @ =gUnk_02010800
	ldr r3, _08076574 @ =gUnk_080BB948
	movs r1, #0x19
	movs r2, #0xc
	bl sub_08001284
_0807652A:
	ldr r4, _08076570 @ =gUnk_02010800
	movs r0, #0xc
	str r0, [sp]
	asrs r0, r5, #0x10
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	lsls r0, r6, #0x10
	asrs r1, r0, #0x10
	adds r5, r0, #0
	ldr r3, [sp, #0x18]
	cmp r1, r3
	ble _0807657C
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076578 @ =gUnk_080BB940
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xd
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _080765B2
	.align 2, 0
_08076570: .4byte gUnk_02010800
_08076574: .4byte gUnk_080BB948
_08076578: .4byte gUnk_080BB940
_0807657C:
	ldr r0, [sp, #0x18]
	cmp r1, r0
	bge _080765A0
	movs r0, #0
	bl sub_080012D4
	ldr r3, _0807659C @ =gUnk_080BB944
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xd
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _080765B2
	.align 2, 0
_0807659C: .4byte gUnk_080BB944
_080765A0:
	movs r0, #0
	bl sub_080012D4
	ldr r3, _080765FC @ =gUnk_080BB948
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xd
	bl sub_08001284
_080765B2:
	ldr r4, _08076600 @ =gUnk_02010800
	movs r0, #0xd
	str r0, [sp]
	asrs r0, r5, #0x10
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	lsls r1, r7, #0x10
	asrs r2, r1, #0x10
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r6, r1, #0
	cmp r2, r0
	ble _08076608
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076604 @ =gUnk_080BB940
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xe
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _0807663E
	.align 2, 0
_080765FC: .4byte gUnk_080BB948
_08076600: .4byte gUnk_02010800
_08076604: .4byte gUnk_080BB940
_08076608:
	cmp r2, r0
	bge _0807662C
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076628 @ =gUnk_080BB944
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xe
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _0807663E
	.align 2, 0
_08076628: .4byte gUnk_080BB944
_0807662C:
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076720 @ =gUnk_080BB948
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0xe
	bl sub_08001284
_0807663E:
	ldr r5, _08076724 @ =gUnk_02010800
	movs r0, #0xe
	str r0, [sp]
	asrs r0, r6, #0x10
	str r0, [sp, #4]
	movs r6, #3
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	movs r4, #0xf
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	str r4, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r4, #0x11
	str r4, [sp]
	mov r3, sl
	str r3, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	str r4, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	mov r0, sb
	str r0, [sp]
	movs r4, #0x17
	str r4, [sp, #4]
	movs r0, #0x10
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0x58
	movs r2, #0x28
	mov r3, r8
	bl sub_0806F174
	mov r1, sl
	str r1, [sp]
	str r4, [sp, #4]
	movs r0, #0x12
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r5, #0
	movs r1, #0x58
	movs r2, #0x28
	movs r3, #0xff
	bl sub_0806F174
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076720: .4byte gUnk_080BB948
_08076724: .4byte gUnk_02010800

	thumb_func_start sub_08076728
sub_08076728: @ 0x08076728
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08076750
	cmp r0, #1
	bgt _08076744
	cmp r0, #0
	beq _0807674A
	b _08076778
_08076744:
	cmp r0, #2
	beq _08076762
	b _08076778
_0807674A:
	bl sub_08076780
	b _08076754
_08076750:
	bl sub_0807681C
_08076754:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076778
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08076778
_08076762:
	bl sub_080769C8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076778
	movs r5, #0
	strh r5, [r4]
	movs r0, #0xeb
	lsls r0, r0, #2
	bl sub_0806EFF0
_08076778:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08076780
sub_08076780: @ 0x08076780
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080767CC
	cmp r0, #1
	bgt _0807679C
	cmp r0, #0
	beq _080767A6
	b _08076814
_0807679C:
	cmp r0, #2
	beq _080767FC
	cmp r0, #3
	beq _0807680E
	b _08076814
_080767A6:
	strh r0, [r5, #0xc]
	bl sub_08076A20
	adds r4, r5, #0
	adds r4, #0xc
	movs r0, #0xe1
	lsls r0, r0, #2
	adds r1, r5, r0
	adds r0, r4, #0
	bl sub_080072F8
	adds r0, r4, #0
	bl sub_08008D30
	strh r0, [r5, #6]
	ldrh r0, [r5, #6]
	bl sub_08076B34
	b _08076806
_080767CC:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08076806
_080767FC:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076814
_08076806:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08076814
_0807680E:
	movs r0, #0
	strh r0, [r5, #2]
	movs r6, #0
_08076814:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0807681C
sub_0807681C: @ 0x0807681C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08076844
	cmp r0, #0
	bge _0807683C
	b _080769B8
_0807683C:
	cmp r0, #0xa
	bne _08076842
	b _08076944
_08076842:
	b _080769B8
_08076844:
	adds r6, r5, #0
	adds r6, #0xc
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08076858
	b _080769B8
_08076858:
	ldr r0, _08076894 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r7, #0xf0
	ands r7, r0
	cmp r7, #0
	beq _08076898
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _08076888
	b _080769B8
_08076888:
	ldrh r0, [r5, #6]
	bl sub_08076B34
	movs r0, #0x64
	b _08076954
	.align 2, 0
_08076894: .4byte gCurrentKeyPress
_08076898:
	ldr r0, _08076918 @ =gKeyNewPress
	ldrh r1, [r0]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	beq _0807691C
	adds r0, r5, #0
	adds r0, #0xdc
	ldrh r1, [r5, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r8, r0
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080768E6
	bl GetEquipItem
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	movs r0, #0xff
	bl SetPlayerEquipItemType
_080768E6:
	mov r4, r8
	adds r0, r4, #0
	bl SetPlayerEquipItemType
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	bl sub_0801644C
	adds r0, r6, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	strh r7, [r5, #0xa]
	movs r0, #0xa
	strh r0, [r5, #2]
	b _080769B8
	.align 2, 0
_08076918: .4byte gKeyNewPress
_0807691C:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080769B8
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #4]
	cmp r0, #0
	beq _0807696E
	cmp r0, #1
	beq _0807697C
	cmp r0, #2
	beq _0807698A
	b _08076994
_08076944:
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0807695C
	movs r0, #0x65
_08076954:
	movs r1, #0
	bl sub_080147B8
	b _080769B8
_0807695C:
	cmp r0, #0x1e
	bne _080769B8
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08076978
_0807696E:
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _080769A0
_08076978:
	cmp r0, #1
	bne _08076986
_0807697C:
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _080769A0
_08076986:
	cmp r0, #2
	bne _08076994
_0807698A:
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	b _080769A0
_08076994:
	cmp r0, #3
	bne _080769A0
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
_080769A0:
	movs r0, #2
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r5, #2]
_080769B8:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080769C8
sub_080769C8: @ 0x080769C8
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080769F8
	cmp r0, #1
	bgt _080769E4
	cmp r0, #0
	beq _080769EE
	b _08076A18
_080769E4:
	cmp r0, #2
	beq _08076A04
	cmp r0, #3
	beq _08076A14
	b _08076A18
_080769EE:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08076A0C
_080769F8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076A18
	b _08076A0C
_08076A04:
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_08008C14
_08076A0C:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08076A18
_08076A14:
	movs r5, #0
	strh r5, [r4, #2]
_08076A18:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08076A20
sub_08076A20: @ 0x08076A20
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xe1
	lsls r0, r0, #2
	adds r4, r5, r0
	movs r1, #0
	movs r0, #4
	strb r0, [r4]
	movs r0, #3
	strb r0, [r4, #1]
	movs r0, #2
	strb r0, [r4, #6]
	strb r1, [r4, #7]
	strb r0, [r4, #0x11]
	strb r0, [r4, #0x12]
	ldrh r0, [r5, #6]
	strh r0, [r4, #2]
	ldrh r0, [r5, #8]
	strh r0, [r4, #4]
	movs r0, #0xe0
	strb r0, [r4, #0xd]
	movs r0, #0xf0
	strb r0, [r4, #0xc]
	adds r0, r5, #0
	adds r0, #0x10
	str r0, [r4, #0x14]
	ldr r1, _08076AF4 @ =0x0000010F
	adds r0, r5, r1
	str r0, [r4, #0x18]
	movs r6, #0
	movs r7, #0x96
	ldr r2, _08076AF8 @ =0x0000FFFF
	mov sb, r2
	movs r0, #0x96
	lsls r0, r0, #0x10
	mov r8, r0
_08076A72:
	mov r1, r8
	lsrs r0, r1, #0x10
	bl sub_08018B50
	lsls r0, r0, #0x18
	adds r2, r5, #0
	adds r2, #0x10
	cmp r0, #0
	beq _08076AD2
	ldrh r0, [r5, #6]
	cmp r0, sb
	bne _08076AAC
	bl GetEquipItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _08076AAC
	strh r6, [r4, #2]
	subs r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _08076AA4
	movs r1, #0
_08076AA4:
	strh r1, [r4, #4]
	strh r6, [r5, #6]
	ldrh r0, [r4, #4]
	strh r0, [r5, #8]
_08076AAC:
	mov r2, r8
	lsrs r0, r2, #0x10
	bl sub_0806380C
	lsls r1, r6, #2
	adds r2, r5, #0
	adds r2, #0x10
	adds r1, r2, r1
	str r0, [r1]
	ldr r1, _08076AF4 @ =0x0000010F
	adds r0, r5, r1
	adds r0, r0, r6
	movs r1, #0
	strb r1, [r0]
	adds r0, r5, #0
	adds r0, #0xdc
	adds r0, r0, r6
	strb r7, [r0]
	adds r6, #1
_08076AD2:
	movs r0, #0x80
	lsls r0, r0, #9
	add r8, r0
	adds r7, #1
	cmp r7, #0xc7
	bls _08076A72
	lsls r0, r6, #2
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	cmp r6, #5
	bls _08076AFC
	movs r0, #5
	strb r0, [r4, #0xa]
	movs r0, #0x1e
	b _08076B00
	.align 2, 0
_08076AF4: .4byte 0x0000010F
_08076AF8: .4byte 0x0000FFFF
_08076AFC:
	strb r6, [r4, #0xa]
	movs r0, #0x1a
_08076B00:
	strh r0, [r4, #8]
	movs r1, #0
	movs r0, #0x7a
	strb r0, [r4, #0xe]
	movs r0, #1
	strb r0, [r4, #0xf]
	movs r2, #0xa2
	lsls r2, r2, #1
	adds r0, r5, r2
	str r0, [r4, #0x20]
	ldr r0, _08076B2C @ =0x06012400
	str r0, [r4, #0x1c]
	ldr r0, _08076B30 @ =sub_08077B00
	str r0, [r4, #0x24]
	strb r1, [r4, #0x10]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076B2C: .4byte 0x06012400
_08076B30: .4byte sub_08077B00

	thumb_func_start sub_08076B34
sub_08076B34: @ 0x08076B34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r0, #0xdc
	adds r0, r0, r4
	ldrb r0, [r0]
	mov sb, r0
	ldr r4, _08076CE4 @ =gUnk_02010800
	ldr r0, _08076CE8 @ =gUnk_080BB928
	mov r8, r0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0xf
	mov r3, r8
	bl sub_08001284
	ldr r6, _08076CEC @ =gUnk_080BB92C
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_08001284
	ldr r5, _08076CF0 @ =gUnk_080BB930
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x11
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0xf
	mov r3, r8
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0x10
	adds r3, r6, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x12
	movs r2, #0x11
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x16
	movs r2, #3
	mov r3, r8
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x16
	movs r2, #5
	adds r3, r6, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0x16
	movs r2, #7
	adds r3, r5, #0
	bl sub_08001284
	mov r0, sb
	bl sub_08063968
	adds r5, r0, #0
	lsls r5, r5, #0x18
	asrs r5, r5, #8
	lsrs r5, r5, #0x10
	mov r0, sb
	bl sub_08063984
	adds r6, r0, #0
	lsls r6, r6, #0x18
	asrs r6, r6, #8
	lsrs r6, r6, #0x10
	mov r0, sb
	bl sub_080639A0
	mov r8, r0
	mov r1, r8
	lsls r1, r1, #0x18
	asrs r1, r1, #8
	lsrs r1, r1, #0x10
	mov r8, r1
	movs r0, #3
	str r0, [sp]
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	str r5, [sp, #4]
	movs r1, #4
	mov sb, r1
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #5
	str r0, [sp]
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	str r6, [sp, #4]
	mov r0, sb
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #7
	str r0, [sp]
	mov r1, r8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	mov r8, r1
	str r1, [sp, #4]
	mov r0, sb
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov sl, r0
	movs r0, #0xf
	str r0, [sp]
	str r7, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #0x10
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #0x11
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #4
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r7, r0, r5
	movs r0, #4
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r0, r0, r6
	mov sb, r0
	movs r0, #4
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	add r0, r8
	mov sl, r0
	ldr r0, _08076CF4 @ =0x000003E7
	cmp r7, r0
	ble _08076CF8
	adds r7, r0, #0
	b _08076CFE
	.align 2, 0
_08076CE4: .4byte gUnk_02010800
_08076CE8: .4byte gUnk_080BB928
_08076CEC: .4byte gUnk_080BB92C
_08076CF0: .4byte gUnk_080BB930
_08076CF4: .4byte 0x000003E7
_08076CF8:
	cmp r7, #0
	bge _08076CFE
	movs r7, #0
_08076CFE:
	ldr r0, _08076D08 @ =0x000003E7
	cmp sb, r0
	ble _08076D0C
	mov sb, r0
	b _08076D16
	.align 2, 0
_08076D08: .4byte 0x000003E7
_08076D0C:
	mov r0, sb
	cmp r0, #0
	bge _08076D16
	movs r1, #0
	mov sb, r1
_08076D16:
	ldr r0, _08076D20 @ =0x000003E7
	cmp sl, r0
	ble _08076D24
	mov sl, r0
	b _08076D2E
	.align 2, 0
_08076D20: .4byte 0x000003E7
_08076D24:
	mov r0, sl
	cmp r0, #0
	bge _08076D2E
	movs r1, #0
	mov sl, r1
_08076D2E:
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r7
	ble _08076D60
	movs r0, #0
	bl sub_080012D4
	ldr r0, _08076D58 @ =gUnk_02010800
	ldr r3, _08076D5C @ =gUnk_080BB944
	movs r1, #0x19
	movs r2, #0xf
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _08076DA2
	.align 2, 0
_08076D58: .4byte gUnk_02010800
_08076D5C: .4byte gUnk_080BB944
_08076D60:
	movs r0, #3
	bl GetPlayerAtk
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r7
	bge _08076D90
	movs r0, #0
	bl sub_080012D4
	ldr r0, _08076D88 @ =gUnk_02010800
	ldr r3, _08076D8C @ =gUnk_080BB940
	movs r1, #0x19
	movs r2, #0xf
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _08076DA2
	.align 2, 0
_08076D88: .4byte gUnk_02010800
_08076D8C: .4byte gUnk_080BB940
_08076D90:
	movs r0, #0
	bl sub_080012D4
	ldr r0, _08076DE8 @ =gUnk_02010800
	ldr r3, _08076DEC @ =gUnk_080BB948
	movs r1, #0x19
	movs r2, #0xf
	bl sub_08001284
_08076DA2:
	ldr r4, _08076DE8 @ =gUnk_02010800
	movs r0, #0xf
	str r0, [sp]
	str r7, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, sb
	ble _08076DF4
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076DF0 @ =gUnk_080BB944
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x10
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _08076E32
	.align 2, 0
_08076DE8: .4byte gUnk_02010800
_08076DEC: .4byte gUnk_080BB948
_08076DF0: .4byte gUnk_080BB944
_08076DF4:
	movs r0, #3
	bl GetPlayerDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, sb
	bge _08076E20
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076E1C @ =gUnk_080BB940
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x10
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _08076E32
	.align 2, 0
_08076E1C: .4byte gUnk_080BB940
_08076E20:
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076E7C @ =gUnk_080BB948
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x10
	bl sub_08001284
_08076E32:
	ldr r4, _08076E80 @ =gUnk_02010800
	movs r0, #0x10
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, sl
	ble _08076E88
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076E84 @ =gUnk_080BB944
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x11
	bl sub_08001284
	movs r0, #2
	bl sub_080012D4
	b _08076EC6
	.align 2, 0
_08076E7C: .4byte gUnk_080BB948
_08076E80: .4byte gUnk_02010800
_08076E84: .4byte gUnk_080BB944
_08076E88:
	movs r0, #3
	bl GetPlayerAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, sl
	bge _08076EB4
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076EB0 @ =gUnk_080BB940
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x11
	bl sub_08001284
	movs r0, #3
	bl sub_080012D4
	b _08076EC6
	.align 2, 0
_08076EB0: .4byte gUnk_080BB940
_08076EB4:
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08076EF4 @ =gUnk_080BB948
	adds r0, r4, #0
	movs r1, #0x19
	movs r2, #0x11
	bl sub_08001284
_08076EC6:
	ldr r0, _08076EF8 @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08076EF4: .4byte gUnk_080BB948
_08076EF8: .4byte gUnk_02010800

	thumb_func_start sub_08076EFC
sub_08076EFC: @ 0x08076EFC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08076F24
	cmp r0, #1
	bgt _08076F18
	cmp r0, #0
	beq _08076F1E
	b _08076F4A
_08076F18:
	cmp r0, #2
	beq _08076F36
	b _08076F4A
_08076F1E:
	bl sub_08076F80
	b _08076F28
_08076F24:
	bl sub_08077150
_08076F28:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076F4A
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08076F4A
_08076F36:
	bl sub_08077554
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08076F4A
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xf8
	bl sub_0806EFF0
_08076F4A:
	adds r4, r5, #0
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x50
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08076F80
sub_08076F80: @ 0x08076F80
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x1c
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _08076F9C
	b _080770F8
_08076F9C:
	cmp r0, #1
	bgt _08076FA6
	cmp r0, #0
	beq _08076FB4
	b _08077140
_08076FA6:
	cmp r0, #2
	bne _08076FAC
	b _08077128
_08076FAC:
	cmp r0, #3
	bne _08076FB2
	b _0807713A
_08076FB2:
	b _08077140
_08076FB4:
	strh r0, [r6, #0x10]
	bl sub_080775B4
	adds r0, r6, #0
	adds r0, #0x10
	adds r1, r6, #0
	adds r1, #0x30
	bl sub_080072F8
	ldrh r0, [r6, #4]
	bl sub_080777A8
	adds r4, r6, #0
	adds r4, #0x58
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x80
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	movs r7, #0
	bl sub_08018914
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08077030
	movs r7, #2
	b _0807705E
_08077030:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08077040
	movs r7, #3
	b _0807705E
_08077040:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _08077050
	movs r7, #4
	b _0807705E
_08077050:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0807705E
	movs r7, #5
_0807705E:
	movs r0, #1
	movs r1, #4
	bl sub_08001D3C
	adds r5, r0, #0
	adds r1, r7, #0
	bl sub_08001D78
	ldr r4, _080770F0 @ =gUnk_02017400
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #1
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	adds r1, r7, #0
	adds r1, #0x32
	adds r0, r5, #0
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #1
	movs r1, #1
	bl sub_0800A630
	adds r4, r6, #0
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldr r2, _080770F4 @ =0x06011000
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0x3a
	bl sub_0800A678
	b _08077132
	.align 2, 0
_080770F0: .4byte gUnk_02017400
_080770F4: .4byte 0x06011000
_080770F8:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08077132
_08077128:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08077140
_08077132:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08077140
_0807713A:
	movs r0, #0
	strh r0, [r6, #2]
	mov r8, r0
_08077140:
	mov r0, r8
	add sp, #0x1c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08077150
sub_08077150: @ 0x08077150
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x15
	bls _08077166
	b _0807754A
_08077166:
	lsls r0, r0, #2
	ldr r1, _08077170 @ =_08077174
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08077170: .4byte _08077174
_08077174: @ jump table
	.4byte _080771CC @ case 0
	.4byte _0807754A @ case 1
	.4byte _0807754A @ case 2
	.4byte _0807754A @ case 3
	.4byte _0807754A @ case 4
	.4byte _0807754A @ case 5
	.4byte _0807754A @ case 6
	.4byte _0807754A @ case 7
	.4byte _0807754A @ case 8
	.4byte _0807754A @ case 9
	.4byte _0807735C @ case 10
	.4byte _080773DC @ case 11
	.4byte _0807754A @ case 12
	.4byte _0807754A @ case 13
	.4byte _0807754A @ case 14
	.4byte _0807754A @ case 15
	.4byte _0807754A @ case 16
	.4byte _0807754A @ case 17
	.4byte _0807754A @ case 18
	.4byte _0807754A @ case 19
	.4byte _08077510 @ case 20
	.4byte _08077528 @ case 21
_080771CC:
	adds r6, r5, #0
	adds r6, #0x10
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _080771E0
	b _0807754A
_080771E0:
	ldr r0, _08077220 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08077224
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _08077210
	b _0807754A
_08077210:
	ldrh r0, [r5, #4]
	bl sub_080777A8
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0807754A
	.align 2, 0
_08077220: .4byte gCurrentKeyPress
_08077224:
	ldr r0, _08077238 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807723C
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0807754A
	.align 2, 0
_08077238: .4byte gKeyNewPress
_0807723C:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080772BA
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08077268
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	b _08077280
_08077268:
	cmp r0, #1
	bne _0807728A
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
_08077280:
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	b _080774DA
_0807728A:
	cmp r0, #2
	beq _08077290
	b _080774DE
_08077290:
	movs r0, #0
	movs r1, #0x21
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _080774DE
_080772BA:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807730A
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _080772DC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _080772F6
_080772DC:
	cmp r0, #1
	bne _080772EA
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _080772F6
_080772EA:
	cmp r0, #2
	bne _080772F6
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_080772F6:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #7
	b _080774E0
_0807730A:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08077316
	b _0807754A
_08077316:
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _0807732E
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _08077348
_0807732E:
	cmp r0, #1
	bne _0807733C
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08077348
_0807733C:
	cmp r0, #2
	bne _08077348
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_08077348:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #9
	b _080774E0
_0807735C:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xc5
	bl sub_0800EC64
	adds r4, r5, #0
	adds r4, #0xa8
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldrb r0, [r5, #4]
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080773AC
	ldr r0, _080773A4 @ =gUnk_08BCB05C
	bl sub_0800ED08
	ldr r1, _080773A8 @ =gUnk_08BC9E8C
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	b _080773BC
	.align 2, 0
_080773A4: .4byte gUnk_08BCB05C
_080773A8: .4byte gUnk_08BC9E8C
_080773AC:
	ldr r0, _080773D4 @ =gUnk_08BCB060
	bl sub_0800ED08
	ldr r1, _080773D8 @ =gUnk_08BC9E98
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
_080773BC:
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E34
	b _08077520
	.align 2, 0
_080773D4: .4byte gUnk_08BCB060
_080773D8: .4byte gUnk_08BC9E98
_080773DC:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080773EA
	b _0807754A
_080773EA:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08077408
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E34
	strh r4, [r5, #2]
	b _0807754A
_08077408:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08077454
	ldrb r0, [r5, #4]
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _0807743C
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	b _08077448
_0807743C:
	cmp r0, #2
	bne _08077448
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
_08077448:
	cmp r4, #0xff
	beq _080774B8
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _080774B8
	b _080774C2
_08077454:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080774E8
	bl sub_08018D5C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807747C
	ldr r0, _08077478 @ =gUnk_08BC9EA8
	ldr r0, [r0]
	str r0, [r5, #0xc]
	movs r0, #0x14
	strh r0, [r5, #2]
	b _0807754A
	.align 2, 0
_08077478: .4byte gUnk_08BC9EA8
_0807747C:
	ldrb r0, [r5, #4]
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	ldrh r0, [r5, #6]
	cmp r0, #1
	bne _080774A6
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	b _080774B2
_080774A6:
	cmp r0, #2
	bne _080774B2
	movs r0, #1
	movs r1, #6
	bl sub_0806F0CC
_080774B2:
	lsls r0, r4, #0x18
	cmp r0, #0
	bge _080774C2
_080774B8:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	b _080774CC
_080774C2:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	bl sub_0806F0CC
_080774CC:
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #4
_080774DA:
	bl sub_0806F0CC
_080774DE:
	movs r0, #1
_080774E0:
	strh r0, [r5, #8]
	movs r7, #0
	strh r7, [r5, #2]
	b _0807754A
_080774E8:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #2
	bne _0807754A
	ldrb r0, [r5, #4]
	movs r1, #0xff
	bl SetBattleAidItem
	bl sub_080775B4
	adds r0, r5, #0
	adds r0, #0x10
	adds r1, r5, #0
	adds r1, #0x30
	bl sub_080076B0
	strh r4, [r5, #2]
	b _0807754A
_08077510:
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r5, #0xc]
	bl sub_0806A040
_08077520:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807754A
_08077528:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _0807754A
	adds r4, r5, #0
	adds r4, #0x10
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E4C
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	strh r6, [r5, #2]
_0807754A:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08077554
sub_08077554: @ 0x08077554
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08077584
	cmp r0, #1
	bgt _08077570
	cmp r0, #0
	beq _0807757A
	b _080775AC
_08077570:
	cmp r0, #2
	beq _08077590
	cmp r0, #3
	beq _080775A8
	b _080775AC
_0807757A:
	ldrh r0, [r4, #8]
	movs r1, #8
	bl sub_0806AC78
	b _080775A0
_08077584:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080775AC
	b _080775A0
_08077590:
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_080775A0:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080775AC
_080775A8:
	movs r5, #0
	strh r5, [r4, #2]
_080775AC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080775B4
sub_080775B4: @ 0x080775B4
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r5, r0, #0
	adds r4, r5, #0
	adds r4, #0x30
	movs r1, #0
	movs r0, #0xe
	strb r0, [r4]
	movs r0, #0xa
	strb r0, [r4, #1]
	movs r0, #2
	strb r0, [r4, #6]
	strb r1, [r4, #7]
	strb r1, [r4, #0x11]
	strb r0, [r4, #0x12]
	ldrh r0, [r5, #4]
	strh r0, [r4, #2]
	strh r1, [r4, #4]
	movs r0, #0xd8
	strb r0, [r4, #0xd]
	movs r7, #0
	adds r6, r5, #0
	adds r6, #0x14
_080775E4:
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r2, r1, #0
	cmp r1, #0xff
	beq _0807762A
	lsls r0, r1, #0x18
	cmp r0, #0
	bge _08077612
	adds r0, r1, #0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063C70
	b _08077618
_08077612:
	adds r0, r2, #0
	bl sub_0806380C
_08077618:
	str r0, [r6]
	adds r3, r5, #0
	adds r3, #0x14
	adds r2, r5, #0
	adds r2, #0x28
	adds r1, r2, r7
	movs r0, #0
	strb r0, [r1]
	b _0807763E
_0807762A:
	ldr r0, _08077664 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r6]
	adds r2, r5, #0
	adds r2, #0x28
	adds r1, r2, r7
	movs r0, #1
	strb r0, [r1]
	adds r3, r5, #0
	adds r3, #0x14
_0807763E:
	adds r6, #4
	adds r7, #1
	cmp r7, #3
	bls _080775E4
	movs r0, #0
	str r0, [r5, #0x24]
	movs r0, #4
	strb r0, [r4, #0xa]
	str r3, [r4, #0x14]
	str r2, [r4, #0x18]
	movs r1, #0
	movs r0, #0x18
	strh r0, [r4, #8]
	ldr r0, _08077668 @ =sub_0807766C
	str r0, [r4, #0x24]
	strb r1, [r4, #0x10]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08077664: .4byte gUnk_08BCA070
_08077668: .4byte sub_0807766C

	thumb_func_start sub_0807766C
sub_0807766C: @ 0x0807766C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xff
	beq _080776E6
	lsls r0, r6, #0x18
	cmp r0, #0
	bge _080776D0
	adds r4, r6, #0
	adds r4, #0x80
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_08018994
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	adds r0, r4, #0
	bl sub_080189A8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	bl sub_08063C98
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _080776EA
_080776D0:
	adds r0, r6, #0
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _080776EA
_080776E6:
	movs r7, #0
	movs r4, #0
_080776EA:
	ldr r5, _0807775C @ =gUnk_02010800
	mov r3, r8
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r0, sb
	str r0, [sp]
	adds r0, r5, #0
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	bl sub_08069DA8
	mov r1, sl
	adds r1, #1
	mov r0, r8
	subs r0, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r2, #1
	movs r3, #1
	bl sub_08069E74
	cmp r6, #0xff
	beq _08077764
	mov r1, r8
	adds r1, #0xc
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r4, sb
	adds r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r3, _08077760 @ =gUnk_080BB94C
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08001284
	mov r3, r8
	adds r3, #0xd
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r4, [sp]
	str r7, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	bl sub_0806F2D0
	b _08077790
	.align 2, 0
_0807775C: .4byte gUnk_02010800
_08077760: .4byte gUnk_080BB94C
_08077764:
	mov r1, r8
	adds r1, #0xc
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r4, sb
	adds r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r3, _080777A0 @ =gUnk_080BB948
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08001284
	mov r1, r8
	adds r1, #0xd
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080777A4 @ =gUnk_080BB950
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08001284
_08077790:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080777A0: .4byte gUnk_080BB948
_080777A4: .4byte gUnk_080BB950

	thumb_func_start sub_080777A8
sub_080777A8: @ 0x080777A8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	bl sub_0806F020
	adds r4, r0, #0
	ldrh r0, [r4, #0x12]
	cmp r0, #0
	beq _080777C4
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_080777C4:
	bl sub_08018908
	adds r2, r0, #0
	adds r0, r4, #0
	adds r0, #0x12
	movs r3, #2
	str r3, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r3, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldr r7, _08077888 @ =gUnk_02010800
	ldr r3, _0807788C @ =gUnk_080BB928
	adds r0, r7, #0
	movs r1, #0xa
	movs r2, #4
	bl sub_08001284
	ldr r3, _08077890 @ =gUnk_080BB92C
	adds r0, r7, #0
	movs r1, #0xa
	movs r2, #5
	bl sub_08001284
	ldr r3, _08077894 @ =gUnk_080BB930
	adds r0, r7, #0
	movs r1, #0xa
	movs r2, #6
	bl sub_08001284
	ldr r3, _08077898 @ =gUnk_080BB954
	adds r0, r7, #0
	movs r1, #0xa
	movs r2, #7
	bl sub_08001284
	bl sub_08018964
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08018974
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08018984
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08018954
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #4
	str r0, [sp]
	str r5, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #5
	str r0, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0
	blt _0807789C
	movs r0, #6
	str r0, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	b _080778B0
	.align 2, 0
_08077888: .4byte gUnk_02010800
_0807788C: .4byte gUnk_080BB928
_08077890: .4byte gUnk_080BB92C
_08077894: .4byte gUnk_080BB930
_08077898: .4byte gUnk_080BB954
_0807789C:
	movs r0, #6
	str r0, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
_080778B0:
	ldr r0, _080778D4 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080778D4: .4byte gUnk_02010800

	thumb_func_start sub_080778D8
sub_080778D8: @ 0x080778D8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0xf8
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08077980 @ =0x0100007C
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov r8, r0
	strh r5, [r4, #6]
	strh r6, [r4, #4]
	movs r0, #1
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08077980: .4byte 0x0100007C

	thumb_func_start sub_08077984
sub_08077984: @ 0x08077984
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xeb
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #0xb
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08077A54
sub_08077A54: @ 0x08077A54
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0xf8
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08077AFC @ =0x0100007C
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov r8, r0
	strh r5, [r4, #6]
	strh r6, [r4, #4]
	movs r0, #1
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08077AFC: .4byte 0x0100007C

	thumb_func_start sub_08077B00
sub_08077B00: @ 0x08077B00
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	mov r8, r0
	adds r4, r1, #0
	adds r6, r2, #0
	adds r5, r3, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_0806F020
	adds r0, #0xdc
	adds r0, r0, r4
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08018B50
	mov sb, r0
	mov r0, sb
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	adds r0, r4, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, _08077BA0 @ =gUnk_02010800
	subs r3, r6, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	adds r0, r4, #0
	mov r1, r8
	bl sub_08069DA8
	adds r1, r6, #0
	adds r1, #0xc
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r5, #1
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r3, _08077BA4 @ =gUnk_080BB94C
	adds r0, r4, #0
	adds r2, r5, #0
	bl sub_08001284
	adds r6, #0xd
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	str r5, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	adds r3, r6, #0
	bl sub_0806F2D0
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08077BA0: .4byte gUnk_02010800
_08077BA4: .4byte gUnk_080BB94C

	thumb_func_start sub_08077BA8
sub_08077BA8: @ 0x08077BA8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	adds r6, r1, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r4, _08077CBC @ =0x00001B88
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0x1d
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	mov r0, r8
	strh r0, [r7, #0x12]
	str r6, [r7, #0x18]
	bl sub_080935BC
	str r0, [r7, #0x34]
	mov r0, r8
	cmp r0, #8
	beq _08077C58
	cmp r0, #0x11
	bne _08077C62
_08077C58:
	add r0, sp, #0xc
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0x1c]
_08077C62:
	adds r5, r7, #0
	adds r5, #0x20
	adds r0, r5, #0
	bl sub_08093528
	movs r0, #0x98
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _08077C90
	movs r0, #0xa
	bl sub_08012F60
	adds r2, r0, #0
	subs r0, r4, #1
	lsls r0, r0, #2
	adds r1, r5, r0
	ldr r0, [r1]
	cmp r0, r2
	bls _08077C90
	str r2, [r1]
_08077C90:
	bl sub_08014700
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08077CA6
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x1e
	bl sub_08014544
_08077CA6:
	ldr r0, _08077CC0 @ =gUnk_02012400
	movs r1, #0x80
	lsls r1, r1, #6
	bl sub_0800E6B0
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08077CBC: .4byte 0x00001B88
_08077CC0: .4byte gUnk_02012400

	thumb_func_start sub_08077CC4
sub_08077CC4: @ 0x08077CC4
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08077CEC
	cmp r0, #1
	bgt _08077CE0
	cmp r0, #0
	beq _08077CE6
	b _08077D12
_08077CE0:
	cmp r0, #2
	beq _08077CFE
	b _08077D12
_08077CE6:
	bl sub_08077D20
	b _08077CF0
_08077CEC:
	bl sub_08077E24
_08077CF0:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08077D12
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08077D12
_08077CFE:
	bl sub_0807878C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08077D12
	ldr r0, _08077D1C @ =0x00001B88
	bl sub_0806EFF0
	movs r5, #0
	strh r5, [r4]
_08077D12:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08077D1C: .4byte 0x00001B88

	thumb_func_start sub_08077D20
sub_08077D20: @ 0x08077D20
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	bl sub_0806F020
	adds r4, r0, #0
	movs r7, #1
	movs r0, #2
	ldrsh r6, [r4, r0]
	cmp r6, #1
	beq _08077DD0
	cmp r6, #1
	bgt _08077D3E
	cmp r6, #0
	beq _08077D48
	b _08077E18
_08077D3E:
	cmp r6, #2
	beq _08077E00
	cmp r6, #3
	beq _08077E12
	b _08077E18
_08077D48:
	bl sub_08078838
	adds r0, r4, #4
	ldr r2, _08077D68 @ =0x00001B1C
	adds r1, r4, r2
	bl sub_080072F8
	bl sub_08079340
	movs r1, #0x12
	ldrsh r0, [r4, r1]
	cmp r0, #1
	bne _08077D6C
	bl sub_08079204
	b _08077E0A
	.align 2, 0
_08077D68: .4byte 0x00001B1C
_08077D6C:
	adds r5, r4, #0
	adds r5, #8
	ldrh r0, [r4, #8]
	cmp r0, #0
	beq _08077D7C
	adds r0, r5, #0
	bl sub_0800B4E4
_08077D7C:
	adds r1, r4, #0
	adds r1, #0xa
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	beq _08077D8C
	adds r0, r1, #0
	bl sub_0800B4E4
_08077D8C:
	adds r1, r4, #0
	adds r1, #0xc
	ldrh r0, [r4, #0xc]
	cmp r0, #0
	beq _08077D9C
	adds r0, r1, #0
	bl sub_0800B4E4
_08077D9C:
	adds r1, r4, #0
	adds r1, #0xe
	ldrh r0, [r4, #0xe]
	cmp r0, #0
	beq _08077DAC
	adds r0, r1, #0
	bl sub_0800B4E4
_08077DAC:
	adds r1, r5, #0
	adds r1, #8
	ldrh r0, [r5, #8]
	cmp r0, #0
	beq _08077DBC
	adds r0, r1, #0
	bl sub_0800B4E4
_08077DBC:
	movs r0, #0x14
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	b _08077E0A
_08077DD0:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08077E0A
_08077E00:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08077E18
_08077E0A:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08077E18
_08077E12:
	movs r0, #0
	strh r0, [r4, #2]
	movs r7, #0
_08077E18:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08077E24
sub_08077E24: @ 0x08077E24
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x39
	bls _08077E42
	bl _0807877E
_08077E42:
	lsls r0, r0, #2
	ldr r1, _08077E4C @ =_08077E50
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08077E4C: .4byte _08077E50
_08077E50: @ jump table
	.4byte _08077F38 @ case 0
	.4byte _0807877E @ case 1
	.4byte _0807877E @ case 2
	.4byte _0807877E @ case 3
	.4byte _0807877E @ case 4
	.4byte _0807877E @ case 5
	.4byte _0807877E @ case 6
	.4byte _0807877E @ case 7
	.4byte _0807877E @ case 8
	.4byte _0807877E @ case 9
	.4byte _080785AC @ case 10
	.4byte _0807862C @ case 11
	.4byte _0807863A @ case 12
	.4byte _08078660 @ case 13
	.4byte _08078680 @ case 14
	.4byte _0807877E @ case 15
	.4byte _0807877E @ case 16
	.4byte _0807877E @ case 17
	.4byte _0807877E @ case 18
	.4byte _0807877E @ case 19
	.4byte _0807877E @ case 20
	.4byte _0807877E @ case 21
	.4byte _0807877E @ case 22
	.4byte _0807877E @ case 23
	.4byte _0807877E @ case 24
	.4byte _0807877E @ case 25
	.4byte _0807877E @ case 26
	.4byte _0807877E @ case 27
	.4byte _0807877E @ case 28
	.4byte _0807877E @ case 29
	.4byte _0807877E @ case 30
	.4byte _0807877E @ case 31
	.4byte _0807877E @ case 32
	.4byte _0807877E @ case 33
	.4byte _0807877E @ case 34
	.4byte _0807877E @ case 35
	.4byte _0807877E @ case 36
	.4byte _0807877E @ case 37
	.4byte _0807877E @ case 38
	.4byte _0807877E @ case 39
	.4byte _0807877E @ case 40
	.4byte _0807877E @ case 41
	.4byte _0807877E @ case 42
	.4byte _0807877E @ case 43
	.4byte _0807877E @ case 44
	.4byte _0807877E @ case 45
	.4byte _0807877E @ case 46
	.4byte _0807877E @ case 47
	.4byte _0807877E @ case 48
	.4byte _0807877E @ case 49
	.4byte _08078698 @ case 50
	.4byte _080786B8 @ case 51
	.4byte _080786D2 @ case 52
	.4byte _080786F0 @ case 53
	.4byte _0807870C @ case 54
	.4byte _08078728 @ case 55
	.4byte _08078744 @ case 56
	.4byte _08078768 @ case 57
_08077F38:
	adds r4, r5, #4
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r7, r4, #0
	cmp r0, #3
	beq _08077F4E
	bl _0807877E
_08077F4E:
	movs r2, #0x12
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _08077F72
	bl sub_080790EC
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08077F72
	adds r0, r7, #0
	movs r1, #0
	bl sub_08008E4C
	movs r0, #0x32
	strh r0, [r5, #2]
	bl _0807877E
_08077F72:
	ldr r0, _08077FC0 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _08077FC4
	adds r0, r7, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r7, #0
	bl sub_080079E0
	adds r0, r7, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [r5, #0x18]
	adds r0, r7, #0
	bl sub_08008D50
	strh r0, [r5, #0x14]
	ldr r0, [r5, #0x18]
	cmp r0, r4
	bne _08077FAE
	bl _0807877E
_08077FAE:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	bl sub_08079340
	bl _0807877E
	.align 2, 0
_08077FC0: .4byte gCurrentKeyPress
_08077FC4:
	ldr r0, _08078014 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r6, #1
	ands r6, r1
	cmp r6, #0
	bne _08077FD2
	b _0807844C
_08077FD2:
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #0x17
	beq _08077FF2
	cmp r0, #0x14
	beq _08077FF2
	cmp r0, #0x15
	beq _08077FF2
	cmp r0, #0x16
	beq _08077FF2
	cmp r0, #0x13
	beq _08077FF2
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_08077FF2:
	ldrh r1, [r5, #0x12]
	adds r0, r1, #0
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080780A8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0807801C
	bl sub_08014614
	ldr r0, [r5, #0x18]
	ldr r2, _08078018 @ =0x00000385
	adds r0, r0, r2
	b _0807803C
	.align 2, 0
_08078014: .4byte gKeyNewPress
_08078018: .4byte 0x00000385
_0807801C:
	cmp r0, #0x15
	bne _08078030
	bl sub_08014614
	ldr r0, [r5, #0x18]
	ldr r1, _0807802C @ =0x000003B7
	adds r0, r0, r1
	b _0807803C
	.align 2, 0
_0807802C: .4byte 0x000003B7
_08078030:
	cmp r0, #0x16
	bne _0807804A
	bl sub_08014614
	ldr r0, [r5, #0x18]
	adds r0, #1
_0807803C:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_08014544
	b _0807877E
_0807804A:
	cmp r0, #0x17
	beq _08078050
	b _0807877E
_08078050:
	ldr r0, _08078080 @ =gUnk_08BCC598
	ldr r1, [r5, #0x18]
	lsls r1, r1, #1
	adds r1, r1, r0
	ldrh r4, [r1]
	bl sub_080135C0
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r0, #5
	bl sub_08014848
	ldr r0, _08078084 @ =0x000007CF
	cmp r4, r0
	bhi _08078088
	adds r0, r4, #0
	movs r1, #0
	bl sub_080147B8
	b _0807877E
	.align 2, 0
_08078080: .4byte gUnk_08BCC598
_08078084: .4byte 0x000007CF
_08078088:
	bl sub_080135C0
	ldr r2, _080780A4 @ =0xFFFFF830
	adds r0, r4, r2
	movs r1, #0xc0
	lsls r1, r1, #7
	bl sub_080135E8
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_08013644
	b _0807877E
	.align 2, 0
_080780A4: .4byte 0xFFFFF830
_080780A8:
	subs r0, r1, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080780E8
	ldr r2, _080780E0 @ =gUnk_08BCB088
	ldr r1, _080780E4 @ =0x00000FDC
	adds r0, r5, r1
	ldr r1, [r5, #0x18]
	adds r0, r0, r1
	ldrb r0, [r0]
	subs r0, #0xa
	adds r0, r0, r2
	ldrb r0, [r0]
	strh r0, [r5, #0x1e]
	movs r2, #0x12
	ldrsh r1, [r5, r2]
	subs r1, #2
	lsls r1, r1, #2
	adds r0, r5, #0
	adds r0, #0x20
	adds r0, r0, r1
	ldr r1, [r0]
	movs r0, #0xb
	bl sub_08012F0C
	b _0807812E
	.align 2, 0
_080780E0: .4byte gUnk_08BCB088
_080780E4: .4byte 0x00000FDC
_080780E8:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #6
	bne _0807810C
	ldr r1, _08078104 @ =0x00000FDC
	adds r0, r5, r1
	ldr r1, [r5, #0x18]
	adds r0, r0, r1
	ldr r2, _08078108 @ =0x0000FFC5
	adds r1, r2, #0
	ldrb r0, [r0]
	adds r1, r1, r0
	strh r1, [r5, #0x1c]
	b _0807812E
	.align 2, 0
_08078104: .4byte 0x00000FDC
_08078108: .4byte 0x0000FFC5
_0807810C:
	cmp r0, #7
	bne _0807812E
	ldr r2, _08078150 @ =gUnk_08BCB096
	ldr r1, _08078154 @ =0x00000FDC
	adds r0, r5, r1
	ldr r1, [r5, #0x18]
	adds r0, r0, r1
	ldrb r0, [r0]
	subs r0, #0x1c
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
	strh r0, [r5, #0x1e]
	ldr r1, [r5, #0x30]
	movs r0, #0xb
	bl sub_08012F0C
_0807812E:
	movs r2, #0x12
	ldrsh r1, [r5, r2]
	cmp r1, #0x13
	bne _08078138
	b _0807877E
_08078138:
	ldr r2, _08078158 @ =0x000017AE
	adds r0, r5, r2
	ldr r2, [r5, #0x18]
	adds r0, r0, r2
	ldrb r4, [r0]
	cmp r1, #1
	bne _08078160
	cmp r4, #0x18
	bne _0807815C
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0807877E
	.align 2, 0
_08078150: .4byte gUnk_08BCB096
_08078154: .4byte 0x00000FDC
_08078158: .4byte 0x000017AE
_0807815C:
	strh r4, [r5, #0x1c]
	b _08078172
_08078160:
	cmp r1, #8
	bne _08078172
	ldr r1, _08078208 @ =0x000013C5
	adds r0, r5, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _08078172
	b _0807877E
_08078172:
	cmp r4, #0x10
	bne _08078268
	movs r0, #0xc8
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807819A
	movs r0, #0xc9
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807819A
	movs r0, #0xca
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080781D6
_0807819A:
	movs r0, #0x24
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078268
	movs r0, #0x25
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078268
	movs r0, #0x26
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078268
	movs r0, #0x27
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078268
	movs r0, #0x28
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078268
_080781D6:
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	movs r0, #0xc8
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078210
	movs r0, #0xc9
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078210
	movs r0, #0xca
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078210
	ldr r0, _0807820C @ =gUnk_080BF52C
	b _08078258
	.align 2, 0
_08078208: .4byte 0x000013C5
_0807820C: .4byte gUnk_080BF52C
_08078210:
	movs r0, #0x24
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807821E
	b _0807877E
_0807821E:
	movs r0, #0x25
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807822C
	b _0807877E
_0807822C:
	movs r0, #0x26
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807823A
	b _0807877E
_0807823A:
	movs r0, #0x27
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078248
	b _0807877E
_08078248:
	movs r0, #0x28
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08078256
	b _0807877E
_08078256:
	ldr r0, _08078264 @ =gUnk_080BF548
_08078258:
	bl sub_0800EE5C
	movs r0, #0xe
	strh r0, [r5, #2]
	b _0807877E
	.align 2, 0
_08078264: .4byte gUnk_080BF548
_08078268:
	cmp r4, #0x19
	bne _080782A8
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	b _08078378
_080782A8:
	cmp r4, #0x80
	bne _0807830A
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_08017C9C
	ldrh r1, [r5, #0x1c]
	movs r0, #0x9a
	bl sub_08012F0C
	ldrh r0, [r5, #0x1e]
	cmp r0, #0
	bne _08078300
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r2, [r5, #0x1e]
	adds r0, r0, r2
	strh r0, [r5, #0x1e]
_08078300:
	ldrh r1, [r5, #0x1e]
	movs r0, #0x99
	bl sub_08012F0C
	b _08078378
_0807830A:
	cmp r4, #0x81
	bne _08078324
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	b _08078356
_08078324:
	cmp r4, #0x82
	bne _0807833E
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	b _08078356
_0807833E:
	cmp r4, #0x84
	bne _08078380
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
_08078356:
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r5, #0x1c]
	bl sub_0806F038
_08078378:
	movs r0, #0
	strh r0, [r5, #2]
	mov r8, r0
	b _0807877E
_08078380:
	cmp r4, #0x83
	bne _080783AE
	ldrh r0, [r5, #0x1c]
	cmp r0, #2
	bne _0807838E
	movs r4, #2
	b _080783BA
_0807838E:
	cmp r0, #3
	bne _08078396
	movs r4, #3
	b _080783BA
_08078396:
	cmp r0, #4
	bne _0807839E
	movs r4, #4
	b _080783BA
_0807839E:
	cmp r0, #5
	bne _080783A6
	movs r4, #5
	b _080783BA
_080783A6:
	cmp r0, #5
	bls _080783BA
	movs r4, #7
	b _080783BA
_080783AE:
	adds r0, r4, #0
	subs r0, #0x10
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080783BC
_080783BA:
	strh r4, [r5, #0x1c]
_080783BC:
	movs r6, #0
	strh r4, [r5, #0x12]
	str r6, [r5, #0x18]
	strh r6, [r5, #0x14]
	bl sub_08078838
	ldr r0, _080783E4 @ =0x00001B1C
	adds r1, r5, r0
	adds r0, r7, #0
	bl sub_080076B0
	bl sub_08079340
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _080783E8
	bl sub_08079204
	b _0807865A
	.align 2, 0
_080783E4: .4byte 0x00001B1C
_080783E8:
	adds r4, r5, #0
	adds r4, #8
	ldrh r0, [r5, #8]
	cmp r0, #0
	beq _080783F8
	adds r0, r4, #0
	bl sub_0800B4E4
_080783F8:
	adds r1, r5, #0
	adds r1, #0xa
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _08078408
	adds r0, r1, #0
	bl sub_0800B4E4
_08078408:
	adds r1, r5, #0
	adds r1, #0xc
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	beq _08078418
	adds r0, r1, #0
	bl sub_0800B4E4
_08078418:
	adds r1, r5, #0
	adds r1, #0xe
	ldrh r0, [r5, #0xe]
	cmp r0, #0
	beq _08078428
	adds r0, r1, #0
	bl sub_0800B4E4
_08078428:
	adds r1, r4, #0
	adds r1, #8
	ldrh r0, [r4, #8]
	cmp r0, #0
	beq _08078438
	adds r0, r1, #0
	bl sub_0800B4E4
_08078438:
	movs r0, #0x14
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	b _0807865A
_0807844C:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08078456
	b _0807877E
_08078456:
	ldr r2, _080784B4 @ =gUnk_08BCCD68
	movs r0, #0x12
	ldrsh r1, [r5, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r2
	ldrb r4, [r0]
	cmp r4, #0xff
	bne _0807846C
	b _0807877E
_0807846C:
	cmp r4, #0x19
	bne _080784B8
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	strh r6, [r5, #2]
	movs r1, #0
	mov r8, r1
	b _0807877E
	.align 2, 0
_080784B4: .4byte gUnk_08BCCD68
_080784B8:
	cmp r4, #0x83
	bne _080784E4
	ldrh r0, [r5, #0x1c]
	cmp r0, #2
	bne _080784C6
	movs r4, #2
	b _080784E4
_080784C6:
	cmp r0, #3
	bne _080784CE
	movs r4, #3
	b _080784E4
_080784CE:
	cmp r0, #4
	bne _080784D6
	movs r4, #4
	b _080784E4
_080784D6:
	cmp r0, #5
	bne _080784DE
	movs r4, #5
	b _080784E4
_080784DE:
	cmp r0, #5
	bls _080784E4
	movs r4, #7
_080784E4:
	ldrh r0, [r5, #0x12]
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _08078514
	bl sub_08014614
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x1e
	bl sub_08014544
	bl sub_080135C0
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r0, #5
	bl sub_08014848
_08078514:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r6, #0
	strh r4, [r5, #0x12]
	str r6, [r5, #0x18]
	strh r6, [r5, #0x14]
	bl sub_08078838
	ldr r2, _08078544 @ =0x00001B1C
	adds r1, r5, r2
	adds r0, r7, #0
	bl sub_080076B0
	bl sub_08079340
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _08078548
	bl sub_08079204
	b _0807865A
	.align 2, 0
_08078544: .4byte 0x00001B1C
_08078548:
	adds r4, r5, #0
	adds r4, #8
	ldrh r0, [r5, #8]
	cmp r0, #0
	beq _08078558
	adds r0, r4, #0
	bl sub_0800B4E4
_08078558:
	adds r1, r5, #0
	adds r1, #0xa
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _08078568
	adds r0, r1, #0
	bl sub_0800B4E4
_08078568:
	adds r1, r5, #0
	adds r1, #0xc
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	beq _08078578
	adds r0, r1, #0
	bl sub_0800B4E4
_08078578:
	adds r1, r5, #0
	adds r1, #0xe
	ldrh r0, [r5, #0xe]
	cmp r0, #0
	beq _08078588
	adds r0, r1, #0
	bl sub_0800B4E4
_08078588:
	adds r1, r4, #0
	adds r1, #8
	ldrh r0, [r4, #8]
	cmp r0, #0
	beq _08078598
	adds r0, r1, #0
	bl sub_0800B4E4
_08078598:
	movs r0, #0x14
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	b _0807865A
_080785AC:
	bl sub_0800EC34
	ldr r2, _08078618 @ =0x00001B44
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _0807861C @ =gUnk_08BCB068
	bl sub_0800ED08
	ldr r0, _08078620 @ =gUnk_08BCB06C
	bl sub_0800ECFC
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	movs r0, #0x18
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	ldr r0, _08078624 @ =gUnk_08BC9F20
	ldr r0, [r0]
	ldr r1, _08078628 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	adds r0, r5, #4
	movs r1, #0
	bl sub_08008E34
	b _0807875C
	.align 2, 0
_08078618: .4byte 0x00001B44
_0807861C: .4byte gUnk_08BCB068
_08078620: .4byte gUnk_08BCB06C
_08078624: .4byte gUnk_08BC9F20
_08078628: .4byte gUnk_08BC9F6C
_0807862C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08078638
	b _0807877E
_08078638:
	b _0807875C
_0807863A:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08078652
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	bl sub_08093510
	b _0807875C
_08078652:
	adds r0, r5, #4
	movs r1, #1
	bl sub_08008E34
_0807865A:
	movs r0, #0
	strh r0, [r5, #2]
	b _0807877E
_08078660:
	bl sub_08092F1C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807866C
	b _0807877E
_0807866C:
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0807867C @ =gUnk_08BC9F54
	ldr r0, [r0]
	b _08078758
	.align 2, 0
_0807867C: .4byte gUnk_08BC9F54
_08078680:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807868E
	b _0807877E
_0807868E:
	adds r0, r5, #4
	movs r1, #1
	bl sub_08008E34
	b _0807877C
_08078698:
	movs r0, #0x80
	bl sub_0801444C
	bl sub_080135C0
	movs r1, #0xc0
	lsls r1, r1, #7
	movs r0, #0x2d
	bl sub_080135E8
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	bl sub_08013644
	b _0807875C
_080786B8:
	bl sub_080136BC
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	bne _0807877E
	movs r0, #0x80
	lsls r0, r0, #1
	bl sub_0801444C
	bl sub_080135C0
	b _0807875C
_080786D2:
	adds r0, r5, #0
	adds r0, #0x20
	bl sub_08093564
	ldr r0, [r5, #0x34]
	ldr r1, _080786EC @ =0x00040040
	orrs r0, r1
	str r0, [r5, #0x34]
	bl sub_080935E0
	bl sub_08093510
	b _0807875C
	.align 2, 0
_080786EC: .4byte 0x00040040
_080786F0:
	bl sub_08092F1C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807877E
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08078708 @ =gUnk_08BC9F54
	ldr r0, [r0]
	b _08078758
	.align 2, 0
_08078708: .4byte gUnk_08BC9F54
_0807870C:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807877E
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08078724 @ =gUnk_080BF560
	b _08078758
	.align 2, 0
_08078724: .4byte gUnk_080BF560
_08078728:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807877E
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08078740 @ =gUnk_080BF580
	b _08078758
	.align 2, 0
_08078740: .4byte gUnk_080BF580
_08078744:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807877E
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08078764 @ =gUnk_080BF5A4
_08078758:
	bl sub_0800EE5C
_0807875C:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807877E
	.align 2, 0
_08078764: .4byte gUnk_080BF5A4
_08078768:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0807877E
	adds r0, r5, #4
	movs r1, #1
	bl sub_08008E4C
_0807877C:
	strh r4, [r5, #2]
_0807877E:
	mov r0, r8
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807878C
sub_0807878C: @ 0x0807878C
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080787BC
	cmp r0, #1
	bgt _080787A8
	cmp r0, #0
	beq _080787B2
	b _08078830
_080787A8:
	cmp r0, #2
	beq _080787C8
	cmp r0, #3
	beq _0807882C
	b _08078830
_080787B2:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08078824
_080787BC:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08078830
	b _08078824
_080787C8:
	adds r0, r4, #4
	bl sub_08008C14
	adds r0, r4, #6
	bl sub_0800B4E4
	adds r5, r4, #0
	adds r5, #8
	ldrh r0, [r4, #8]
	cmp r0, #0
	beq _080787E4
	adds r0, r5, #0
	bl sub_0800B4E4
_080787E4:
	adds r1, r4, #0
	adds r1, #0xa
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	beq _080787F4
	adds r0, r1, #0
	bl sub_0800B4E4
_080787F4:
	adds r1, r4, #0
	adds r1, #0xc
	ldrh r0, [r4, #0xc]
	cmp r0, #0
	beq _08078804
	adds r0, r1, #0
	bl sub_0800B4E4
_08078804:
	adds r1, r4, #0
	adds r1, #0xe
	ldrh r0, [r4, #0xe]
	cmp r0, #0
	beq _08078814
	adds r0, r1, #0
	bl sub_0800B4E4
_08078814:
	adds r1, r5, #0
	adds r1, #8
	ldrh r0, [r5, #8]
	cmp r0, #0
	beq _08078824
	adds r0, r1, #0
	bl sub_0800B4E4
_08078824:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08078830
_0807882C:
	movs r6, #0
	strh r6, [r4, #2]
_08078830:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08078838
sub_08078838: @ 0x08078838
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl sub_0806F020
	adds r6, r0, #0
	ldr r0, _08078864 @ =0x00001B1C
	adds r0, r0, r6
	mov sb, r0
	movs r1, #3
	strb r1, [r0]
	movs r2, #0x12
	ldrsh r0, [r6, r2]
	cmp r0, #0x17
	bne _0807886E
	movs r0, #4
	mov r1, sb
	strb r0, [r1, #1]
	b _08078872
	.align 2, 0
_08078864: .4byte 0x00001B1C
_08078868:
	bl sub_08014614
	b _08079028
_0807886E:
	mov r2, sb
	strb r1, [r2, #1]
_08078872:
	movs r1, #0
	movs r0, #2
	mov r2, sb
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	ldr r0, [r6, #0x18]
	strh r0, [r2, #2]
	ldrh r0, [r6, #0x14]
	strh r0, [r2, #4]
	movs r0, #0xf0
	strb r0, [r2, #0xd]
	movs r0, #0xfe
	strb r0, [r2, #0xc]
	adds r1, r6, #0
	adds r1, #0x38
	str r1, [r2, #0x14]
	ldr r2, _080788F0 @ =0x000013C5
	adds r0, r6, r2
	mov r2, sb
	str r0, [r2, #0x18]
	movs r0, #0
	mov sl, r0
	movs r2, #0
	str r2, [sp]
	ldrh r0, [r6, #0x12]
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r1, [sp, #4]
	cmp r0, #2
	bhi _080788FC
	ldr r4, _080788F4 @ =gUnk_08BCB2D8
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	subs r0, #0x14
	movs r1, #0xc8
	muls r0, r1, r0
	adds r0, r0, r4
	ldr r0, [r0]
	cmp r0, #0
	bne _080788CA
	b _08079028
_080788CA:
	mov r2, sl
	lsls r3, r2, #2
	ldr r0, [sp, #4]
	adds r3, r0, r3
	ldr r1, [sp]
	lsls r2, r1, #2
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	subs r0, #0x14
	movs r1, #0xc8
	muls r0, r1, r0
	adds r2, r2, r0
	adds r2, r2, r4
	ldr r0, [r2]
	str r0, [r3]
	ldr r2, _080788F8 @ =0x00000FDC
	adds r0, r6, r2
	b _08078924
	.align 2, 0
_080788F0: .4byte 0x000013C5
_080788F4: .4byte gUnk_08BCB2D8
_080788F8: .4byte 0x00000FDC
_080788FC:
	ldrh r0, [r6, #0x12]
	mov ip, r0
	movs r1, #0x12
	ldrsh r4, [r6, r1]
	cmp r4, #0x17
	bne _08078940
	ldr r1, _08078934 @ =gUnk_08BCB5F8
	ldr r2, [sp]
	lsls r0, r2, #2
	adds r0, r0, r1
	ldr r1, [r0]
	cmp r1, #0
	beq _08078868
	mov r2, sl
	lsls r0, r2, #2
	ldr r2, [sp, #4]
	adds r0, r2, r0
	str r1, [r0]
	ldr r1, _08078938 @ =0x00000FDC
	adds r0, r6, r1
_08078924:
	add r0, sl
	movs r1, #0
	strb r1, [r0]
	ldr r2, _0807893C @ =0x000013C5
	adds r0, r6, r2
	add r0, sl
	strb r1, [r0]
	b _08078FF0
	.align 2, 0
_08078934: .4byte gUnk_08BCB5F8
_08078938: .4byte 0x00000FDC
_0807893C: .4byte 0x000013C5
_08078940:
	ldr r2, _0807898C @ =gUnk_08BCCD68
	ldr r0, [sp]
	lsls r3, r0, #1
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r3, r0
	adds r1, r2, #2
	adds r0, r0, r1
	ldrh r5, [r0]
	mov r8, r2
	adds r7, r3, #0
	cmp r5, #0xff
	bne _08078962
	b _08079028
_08078962:
	cmp r4, #0
	bne _08078990
	ldr r1, [r6, #0x34]
	movs r0, #0xfc
	lsls r0, r0, #0xb
	ands r0, r1
	cmp r0, #0
	bne _08078978
	cmp r5, #0
	bne _08078978
	b _08078FF4
_08078978:
	movs r0, #0xc0
	lsls r0, r0, #0xf
	ands r1, r0
	cmp r1, #0
	beq _08078984
	b _08078F8A
_08078984:
	cmp r5, #2
	bne _0807898A
	b _08078FF4
_0807898A:
	b _08078F8A
	.align 2, 0
_0807898C: .4byte gUnk_08BCCD68
_08078990:
	cmp r4, #1
	bne _080789EA
	ldr r1, [r6, #0x34]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080789A6
	cmp r5, #5
	bne _080789A6
	b _08078FF4
_080789A6:
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	bne _080789B6
	cmp r5, #6
	bne _080789B6
	b _08078FF4
_080789B6:
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080789C6
	cmp r5, #7
	bne _080789C6
	b _08078FF4
_080789C6:
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	bne _080789D6
	cmp r5, #8
	bne _080789D6
	b _08078FF4
_080789D6:
	movs r0, #0xc0
	lsls r0, r0, #0xb
	ands r1, r0
	cmp r1, #0
	beq _080789E2
	b _08078F8A
_080789E2:
	cmp r5, #9
	bne _080789E8
	b _08078FF4
_080789E8:
	b _08078F8A
_080789EA:
	mov r0, ip
	subs r0, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bls _080789F8
	b _08078B38
_080789F8:
	ldr r1, [r6, #0x34]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	bne _08078A0A
	cmp r5, #0xb
	bne _08078A0A
	b _08078FF4
_08078A0A:
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	bne _08078A18
	cmp r5, #0xc
	bne _08078A18
	b _08078FF4
_08078A18:
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	bne _08078A26
	cmp r5, #0xd
	bne _08078A26
	b _08078FF4
_08078A26:
	movs r0, #8
	ands r0, r3
	cmp r0, #0
	bne _08078A34
	cmp r5, #0xe
	bne _08078A34
	b _08078FF4
_08078A34:
	movs r0, #0x10
	ands r0, r3
	cmp r0, #0
	bne _08078A42
	cmp r5, #0xf
	bne _08078A42
	b _08078FF4
_08078A42:
	movs r0, #0x20
	ands r0, r3
	cmp r0, #0
	bne _08078A50
	cmp r5, #0x10
	bne _08078A50
	b _08078FF4
_08078A50:
	movs r0, #0x40
	ands r0, r3
	cmp r0, #0
	bne _08078A5E
	cmp r5, #0x11
	bne _08078A5E
	b _08078FF4
_08078A5E:
	movs r0, #0x80
	ands r0, r3
	cmp r0, #0
	bne _08078A80
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x12
	bne _08078A80
	b _08078FF4
_08078A80:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	bne _08078AA4
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x13
	bne _08078AA4
	b _08078FF4
_08078AA4:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r3
	cmp r0, #0
	bne _08078AC8
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x14
	bne _08078AC8
	b _08078FF4
_08078AC8:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _08078AEC
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x15
	bne _08078AEC
	b _08078FF4
_08078AEC:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r3
	cmp r0, #0
	bne _08078B10
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x16
	bne _08078B10
	b _08078FF4
_08078B10:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r3
	cmp r0, #0
	beq _08078B1C
	b _08078F8A
_08078B1C:
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x17
	bne _08078B36
	b _08078FF4
_08078B36:
	b _08078F8A
_08078B38:
	cmp r4, #6
	bne _08078B74
	ldr r1, [r6, #0x34]
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r1
	cmp r0, #0
	bne _08078B54
	cmp r5, #0x41
	bne _08078B4E
	b _08078FF4
_08078B4E:
	cmp r5, #0x42
	bne _08078B54
	b _08078FF4
_08078B54:
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r1, r0
	cmp r1, #0
	beq _08078B60
	b _08078F8A
_08078B60:
	cmp r5, #0x43
	bne _08078B66
	b _08078FF4
_08078B66:
	cmp r5, #0x44
	bne _08078B6C
	b _08078FF4
_08078B6C:
	cmp r5, #0x45
	bne _08078B72
	b _08078FF4
_08078B72:
	b _08078F8A
_08078B74:
	cmp r4, #7
	bne _08078BB0
	ldr r1, [r6, #0x34]
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r1
	cmp r0, #0
	bne _08078B90
	cmp r5, #0x1c
	bne _08078B8A
	b _08078FF4
_08078B8A:
	cmp r5, #0x1d
	bne _08078B90
	b _08078FF4
_08078B90:
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r1, r0
	cmp r1, #0
	beq _08078B9C
	b _08078F8A
_08078B9C:
	cmp r5, #0x1e
	bne _08078BA2
	b _08078FF4
_08078BA2:
	cmp r5, #0x1f
	bne _08078BA8
	b _08078FF4
_08078BA8:
	cmp r5, #0x20
	bne _08078BAE
	b _08078FF4
_08078BAE:
	b _08078F8A
_08078BB0:
	cmp r4, #0xf
	bne _08078BDA
	ldr r1, [r6, #0x34]
	movs r0, #0x80
	lsls r0, r0, #0xe
	ands r0, r1
	cmp r0, #0
	bne _08078BC6
	cmp r5, #0x21
	bne _08078BC6
	b _08078FF4
_08078BC6:
	movs r0, #0x80
	lsls r0, r0, #0xf
	ands r1, r0
	cmp r1, #0
	beq _08078BD2
	b _08078F8A
_08078BD2:
	cmp r5, #0x22
	bne _08078BD8
	b _08078FF4
_08078BD8:
	b _08078F8A
_08078BDA:
	cmp r4, #0x12
	bne _08078C04
	ldr r1, [r6, #0x34]
	movs r0, #0x80
	lsls r0, r0, #0xc
	ands r0, r1
	cmp r0, #0
	bne _08078BF0
	cmp r5, #0x25
	bne _08078BF0
	b _08078FF4
_08078BF0:
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r1, r0
	cmp r1, #0
	beq _08078BFC
	b _08078F8A
_08078BFC:
	cmp r5, #0x27
	bne _08078C02
	b _08078FF4
_08078C02:
	b _08078F8A
_08078C04:
	cmp r4, #0x13
	beq _08078C0A
	b _08078F8A
_08078C0A:
	mov r1, sl
	cmp r1, #0
	bne _08078C4C
	ldr r0, [r6, #0x34]
	cmp r0, #0
	bne _08078C4C
	ldr r0, _08078F74 @ =gUnk_08BCB0A0
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r6, #0x38]
	ldr r0, _08078F78 @ =0x00000FDC
	adds r1, r6, r0
	movs r0, #0x46
	strb r0, [r1]
	ldr r1, _08078F7C @ =0x000017AE
	adds r2, r6, r1
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	add r0, r8
	adds r0, #0x40
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r1, _08078F80 @ =0x000013C5
	adds r0, r6, r1
	mov r2, sl
	strb r2, [r0]
	movs r0, #1
	mov sl, r0
_08078C4C:
	ldr r1, [r6, #0x34]
	movs r0, #1
	ands r0, r1
	adds r3, r1, #0
	cmp r0, #0
	bne _08078C72
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x28
	bne _08078C72
	b _08078FF4
_08078C72:
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	bne _08078C94
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x29
	bne _08078C94
	b _08078FF4
_08078C94:
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	bne _08078CB6
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2a
	bne _08078CB6
	b _08078FF4
_08078CB6:
	movs r0, #8
	ands r0, r3
	cmp r0, #0
	bne _08078CD8
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2b
	bne _08078CD8
	b _08078FF4
_08078CD8:
	movs r0, #0x10
	ands r0, r3
	cmp r0, #0
	bne _08078CFA
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2c
	bne _08078CFA
	b _08078FF4
_08078CFA:
	movs r0, #0x20
	ands r0, r3
	cmp r0, #0
	bne _08078D1C
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2d
	bne _08078D1C
	b _08078FF4
_08078D1C:
	movs r0, #0x40
	ands r0, r3
	cmp r0, #0
	bne _08078D3E
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2e
	bne _08078D3E
	b _08078FF4
_08078D3E:
	movs r0, #0x80
	ands r0, r3
	cmp r0, #0
	bne _08078D60
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x2f
	bne _08078D60
	b _08078FF4
_08078D60:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	bne _08078D84
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x30
	bne _08078D84
	b _08078FF4
_08078D84:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r3
	cmp r0, #0
	bne _08078DA8
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x31
	bne _08078DA8
	b _08078FF4
_08078DA8:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r3
	cmp r0, #0
	bne _08078DCC
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x32
	bne _08078DCC
	b _08078FF4
_08078DCC:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r3
	cmp r0, #0
	bne _08078DF0
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x33
	bne _08078DF0
	b _08078FF4
_08078DF0:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r3
	cmp r0, #0
	bne _08078E14
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x34
	bne _08078E14
	b _08078FF4
_08078E14:
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r3
	cmp r0, #0
	bne _08078E38
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x35
	bne _08078E38
	b _08078FF4
_08078E38:
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r3
	cmp r0, #0
	bne _08078E5C
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x36
	bne _08078E5C
	b _08078FF4
_08078E5C:
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r3
	cmp r0, #0
	bne _08078E80
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x37
	bne _08078E80
	b _08078FF4
_08078E80:
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r3
	cmp r0, #0
	bne _08078EA4
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x38
	bne _08078EA4
	b _08078FF4
_08078EA4:
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r3
	cmp r0, #0
	bne _08078EC8
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x3a
	bne _08078EC8
	b _08078FF4
_08078EC8:
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r3
	cmp r0, #0
	bne _08078EEC
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x3b
	bne _08078EEC
	b _08078FF4
_08078EEC:
	movs r0, #0x80
	lsls r0, r0, #0xc
	ands r0, r3
	cmp r0, #0
	bne _08078F0E
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x3c
	beq _08078FF4
_08078F0E:
	adds r2, r3, #0
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r0, r2
	cmp r0, #0
	bne _08078F32
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x3d
	beq _08078FF4
_08078F32:
	movs r0, #0x80
	lsls r0, r0, #0xe
	ands r2, r0
	cmp r2, #0
	bne _08078F54
	movs r2, #0x12
	ldrsh r1, [r6, r2]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0x3e
	beq _08078FF4
_08078F54:
	movs r0, #0x80
	lsls r0, r0, #0xf
	ands r0, r3
	cmp r0, #0
	bne _08078F8A
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r1, r8
	adds r1, #2
	adds r0, r0, r1
	b _08078F84
	.align 2, 0
_08078F74: .4byte gUnk_08BCB0A0
_08078F78: .4byte 0x00000FDC
_08078F7C: .4byte 0x000017AE
_08078F80: .4byte 0x000013C5
_08078F84:
	ldrh r0, [r0]
	cmp r0, #0x3f
	beq _08078FF4
_08078F8A:
	mov r1, sl
	lsls r2, r1, #2
	ldr r0, [sp, #4]
	adds r2, r0, r2
	ldr r4, _08079064 @ =gUnk_08BCB0A0
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	mov r3, r8
	adds r3, #2
	adds r0, r0, r3
	ldrh r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r0, [r0]
	str r0, [r2]
	ldr r1, _08079068 @ =0x00000FDC
	adds r2, r6, r1
	add r2, sl
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r7, r0
	adds r0, r0, r3
	ldrh r0, [r0]
	movs r3, #0
	strb r0, [r2]
	ldr r1, _0807906C @ =0x000017AE
	adds r2, r6, r1
	add r2, sl
	movs r0, #0x12
	ldrsh r1, [r6, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #5
	ldr r1, [sp]
	adds r0, r1, r0
	mov r1, r8
	adds r1, #0x40
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r2, _08079070 @ =0x000013C5
	adds r0, r6, r2
	add r0, sl
	strb r3, [r0]
_08078FF0:
	movs r0, #1
	add sl, r0
_08078FF4:
	ldr r1, [sp]
	adds r1, #1
	str r1, [sp]
	ldr r0, _08079074 @ =0x000007CF
	cmp r1, r0
	bhi _08079028
	ldrh r0, [r6, #0x12]
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bls _0807900E
	b _080788FC
_0807900E:
	ldr r4, _08079078 @ =gUnk_08BCB2D8
	lsls r2, r1, #2
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	subs r0, #0x14
	movs r1, #0xc8
	muls r0, r1, r0
	adds r2, r2, r0
	adds r2, r2, r4
	ldr r0, [r2]
	cmp r0, #0
	beq _08079028
	b _080788CA
_08079028:
	mov r2, sl
	lsls r0, r2, #2
	ldr r1, [sp, #4]
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	movs r2, #0x12
	ldrsh r0, [r6, r2]
	cmp r0, #8
	bne _08079050
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08079050
	ldr r0, _0807907C @ =0x000013C7
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
_08079050:
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	cmp r0, #0x17
	bne _08079080
	movs r0, #5
	mov r2, sb
	strb r0, [r2, #0xa]
	movs r0, #0x1e
	b _0807909A
	.align 2, 0
_08079064: .4byte gUnk_08BCB0A0
_08079068: .4byte 0x00000FDC
_0807906C: .4byte 0x000017AE
_08079070: .4byte 0x000013C5
_08079074: .4byte 0x000007CF
_08079078: .4byte gUnk_08BCB2D8
_0807907C: .4byte 0x000013C7
_08079080:
	mov r0, sl
	cmp r0, #6
	bls _08079092
	movs r0, #6
	mov r1, sb
	strb r0, [r1, #0xa]
	movs r0, #0x1e
	strh r0, [r1, #8]
	b _0807909C
_08079092:
	mov r0, sl
	mov r2, sb
	strb r0, [r2, #0xa]
	movs r0, #0x1a
_0807909A:
	strh r0, [r2, #8]
_0807909C:
	ldrh r0, [r6, #0x12]
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080790B2
	mov r2, sb
	ldrh r1, [r2, #8]
	ldr r0, _080790E0 @ =0x0000FFFB
	ands r0, r1
	strh r0, [r2, #8]
_080790B2:
	movs r1, #0
	movs r0, #0x8a
	mov r2, sb
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	ldr r2, _080790E4 @ =0x000018DC
	adds r0, r6, r2
	mov r2, sb
	str r0, [r2, #0x20]
	ldr r0, _080790E8 @ =0x06012400
	str r0, [r2, #0x1c]
	str r1, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080790E0: .4byte 0x0000FFFB
_080790E4: .4byte 0x000018DC
_080790E8: .4byte 0x06012400

	thumb_func_start sub_080790EC
sub_080790EC: @ 0x080790EC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r2, r0, #0
	movs r4, #0
	ldr r0, _0807911C @ =gKeyNewPress
	ldrh r5, [r0]
	cmp r5, #0
	beq _080791D6
	ldr r0, _08079120 @ =0x00001B6C
	adds r3, r2, r0
	ldrh r0, [r3]
	cmp r0, #0xb
	bhi _08079128
	lsls r0, r0, #1
	ldr r4, _08079124 @ =0x00001B6E
	adds r1, r2, r4
	adds r1, r1, r0
	strh r5, [r1]
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
	b _08079186
	.align 2, 0
_0807911C: .4byte gKeyNewPress
_08079120: .4byte 0x00001B6C
_08079124: .4byte 0x00001B6E
_08079128:
	ldr r0, _080791E0 @ =0x00001B6E
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r4, _080791E4 @ =0x00001B70
	adds r1, r2, r4
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r0, _080791E8 @ =0x00001B72
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	adds r4, #4
	adds r1, r2, r4
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r0, _080791EC @ =0x00001B76
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	adds r4, #4
	adds r1, r2, r4
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r0, _080791F0 @ =0x00001B7A
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	adds r4, #4
	adds r1, r2, r4
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r0, _080791F4 @ =0x00001B7E
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	adds r4, #4
	adds r1, r2, r4
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r0, _080791F8 @ =0x00001B82
	adds r1, r2, r0
	ldrh r0, [r1, #2]
	strh r0, [r1]
	ldr r1, _080791FC @ =0x00001B84
	adds r0, r2, r1
	strh r5, [r0]
_08079186:
	movs r4, #1
	ldr r3, _08079200 @ =gUnk_08BCB070
	ldr r5, _080791E0 @ =0x00001B6E
	adds r1, r2, r5
	movs r2, #0xb
_08079190:
	ldrh r0, [r1]
	ldrh r5, [r3]
	cmp r0, r5
	beq _0807919A
	movs r4, #0
_0807919A:
	ldrh r0, [r1, #2]
	ldrh r5, [r3, #2]
	cmp r0, r5
	beq _080791A4
	movs r4, #0
_080791A4:
	ldrh r0, [r1, #4]
	ldrh r5, [r3, #4]
	cmp r0, r5
	beq _080791AE
	movs r4, #0
_080791AE:
	ldrh r0, [r1, #6]
	ldrh r5, [r3, #6]
	cmp r0, r5
	beq _080791B8
	movs r4, #0
_080791B8:
	ldrh r0, [r1, #8]
	ldrh r5, [r3, #8]
	cmp r0, r5
	beq _080791C2
	movs r4, #0
_080791C2:
	ldrh r0, [r1, #0xa]
	ldrh r5, [r3, #0xa]
	cmp r0, r5
	beq _080791CC
	movs r4, #0
_080791CC:
	adds r3, #0xc
	adds r1, #0xc
	subs r2, #6
	cmp r2, #0
	bge _08079190
_080791D6:
	adds r0, r4, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080791E0: .4byte 0x00001B6E
_080791E4: .4byte 0x00001B70
_080791E8: .4byte 0x00001B72
_080791EC: .4byte 0x00001B76
_080791F0: .4byte 0x00001B7A
_080791F4: .4byte 0x00001B7E
_080791F8: .4byte 0x00001B82
_080791FC: .4byte 0x00001B84
_08079200: .4byte gUnk_08BCB070

	thumb_func_start sub_08079204
sub_08079204: @ 0x08079204
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	bl sub_0806F020
	mov r8, r0
	movs r6, #0
	ldr r0, _08079338 @ =gUnk_02010000
	mov sl, r0
	mov r7, r8
	adds r7, #8
	movs r1, #0xc0
	lsls r1, r1, #0xa
	mov sb, r1
_08079226:
	lsls r0, r6, #1
	mov r1, r8
	adds r1, #8
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	beq _0807923A
	adds r0, r7, #0
	bl sub_0800B4E4
_0807923A:
	mov r0, r8
	ldr r1, [r0, #0x34]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0807924C
	cmp r6, #0
	beq _0807931E
_0807924C:
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r1
	cmp r0, #0
	bne _0807925A
	cmp r6, #1
	beq _0807931E
_0807925A:
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08079268
	cmp r6, #2
	beq _0807931E
_08079268:
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r1
	cmp r0, #0
	bne _08079276
	cmp r6, #3
	beq _0807931E
_08079276:
	movs r0, #0xc0
	lsls r0, r0, #0xb
	ands r1, r0
	cmp r1, #0
	bne _08079284
	cmp r6, #4
	beq _0807931E
_08079284:
	mov r1, sb
	asrs r0, r1, #0x10
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	ldr r2, _0807933C @ =gUnk_080BF5C8
	movs r3, #0x10
	bl sub_0800B1AC
	lsls r1, r6, #2
	mov r0, r8
	adds r0, #0x20
	adds r0, r0, r1
	ldr r0, [r0]
	add r1, sp, #0x20
	str r1, [sp]
	add r1, sp, #0x14
	add r2, sp, #0x18
	add r3, sp, #0x1c
	bl sub_08001624
	ldr r0, [sp, #0x14]
	cmp r0, #0
	beq _080792CA
	str r5, [sp, #0x14]
	movs r0, #0x3c
	str r0, [sp, #0x18]
	str r5, [sp, #0x1c]
	str r5, [sp, #0x20]
_080792CA:
	ldr r1, [sp, #0x20]
	movs r0, #0x64
	muls r0, r1, r0
	movs r1, #0x3c
	bl __udivsi3
	str r0, [sp, #0x20]
	ldr r1, [sp, #0x18]
	movs r0, #0x11
	str r0, [sp]
	mov r0, sb
	lsrs r4, r0, #0x10
	str r4, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	ldr r1, [sp, #0x1c]
	movs r0, #0x14
	str r0, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	ldr r1, [sp, #0x20]
	movs r0, #0x17
	str r0, [sp]
	str r4, [sp, #4]
	str r5, [sp, #8]
	mov r0, sl
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	movs r1, #0x80
	lsls r1, r1, #0xa
	add sb, r1
_0807931E:
	adds r7, #2
	adds r6, #1
	cmp r6, #4
	bgt _08079328
	b _08079226
_08079328:
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08079338: .4byte gUnk_02010000
_0807933C: .4byte gUnk_080BF5C8

	thumb_func_start sub_08079340
sub_08079340: @ 0x08079340
	push {r4, lr}
	sub sp, #0x14
	bl sub_0806F020
	adds r4, r0, #0
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _08079356
	adds r0, r4, #6
	bl sub_0800B4E4
_08079356:
	ldrh r0, [r4, #0x12]
	subs r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _0807936C
	ldr r3, _08079368 @ =gUnk_080BF5C4
	b _0807937E
	.align 2, 0
_08079368: .4byte gUnk_080BF5C4
_0807936C:
	ldr r2, _080793A4 @ =gUnk_08BCB1BC
	ldr r1, _080793A8 @ =0x00000FDC
	adds r0, r4, r1
	ldr r1, [r4, #0x18]
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r3, [r0]
_0807937E:
	adds r0, r4, #6
	movs r1, #0x11
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	str r2, [sp, #8]
	movs r1, #4
	str r1, [sp, #0xc]
	str r2, [sp, #0x10]
	movs r1, #2
	adds r2, r3, #0
	movs r3, #1
	bl sub_0800B1AC
	add sp, #0x14
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080793A4: .4byte gUnk_08BCB1BC
_080793A8: .4byte 0x00000FDC

	thumb_func_start sub_080793AC
sub_080793AC: @ 0x080793AC
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r4, #0x86
	lsls r4, r4, #3
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	mov sb, r0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	mov r1, sb
	adds r2, r4, #0
	bl CpuSet
	movs r1, #0
	mov sl, r1
	mov r0, sb
	strh r5, [r0, #0xa]
	strh r6, [r0, #0xc]
	mov r1, r8
	strh r1, [r0, #0xe]
	movs r0, #0x1c
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	bl sub_08001B14
	movs r0, #0
	bl sub_08014440
	bl sub_080935BC
	movs r1, #0x86
	lsls r1, r1, #1
	add sb, r1
	mov r1, sb
	str r0, [r1]
	movs r0, #1
	bl sub_08006C10
	bl sub_08014700
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0807949E
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0xa
	bl sub_08014544
_0807949E:
	bl sub_08015134
	bl sub_080150C4
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080794B8
sub_080794B8: @ 0x080794B8
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080794E0
	cmp r0, #1
	bgt _080794D4
	cmp r0, #0
	beq _080794DA
	b _0807950E
_080794D4:
	cmp r0, #2
	beq _080794F2
	b _0807950E
_080794DA:
	bl sub_08079518
	b _080794E4
_080794E0:
	bl sub_080795D8
_080794E4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807950E
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0807950E
_080794F2:
	bl sub_0807A3D8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807950E
	movs r5, #0
	strh r5, [r4]
	movs r0, #0
	bl sub_08006C10
	movs r0, #0x86
	lsls r0, r0, #3
	bl sub_0806EFF0
_0807950E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08079518
sub_08079518: @ 0x08079518
	push {r4, r5, r6, lr}
	sub sp, #0x14
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r0, #2
	ldrsh r4, [r5, r0]
	cmp r4, #1
	beq _08079584
	cmp r4, #1
	bgt _08079536
	cmp r4, #0
	beq _08079540
	b _080795CC
_08079536:
	cmp r4, #2
	beq _080795B4
	cmp r4, #3
	beq _080795C6
	b _080795CC
_08079540:
	bl sub_0807A438
	adds r0, r5, #6
	movs r2, #0xde
	lsls r2, r2, #2
	adds r1, r5, r2
	bl sub_080072F8
	adds r0, r5, #0
	adds r0, #8
	ldr r3, _08079580 @ =gUnk_08BCD828
	movs r1, #0xc
	ldrsh r2, [r5, r1]
	adds r1, r5, #0
	adds r1, #0xac
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #2
	adds r1, r1, r3
	ldr r2, [r1]
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
	b _080795BE
	.align 2, 0
_08079580: .4byte gUnk_08BCD828
_08079584:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _080795BE
_080795B4:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080795CC
_080795BE:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _080795CC
_080795C6:
	movs r0, #0
	strh r0, [r5, #2]
	movs r6, #0
_080795CC:
	adds r0, r6, #0
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080795D8
sub_080795D8: @ 0x080795D8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r7, r5, r0
	movs r1, #1
	mov sb, r1
	movs r2, #2
	ldrsh r0, [r5, r2]
	cmp r0, #0x6f
	bls _080795FE
	bl _0807A3C8
_080795FE:
	lsls r0, r0, #2
	ldr r1, _08079608 @ =_0807960C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08079608: .4byte _0807960C
_0807960C: @ jump table
	.4byte _080797CC @ case 0
	.4byte _08079812 @ case 1
	.4byte _0807A3C8 @ case 2
	.4byte _0807A3C8 @ case 3
	.4byte _0807A3C8 @ case 4
	.4byte _0807A3C8 @ case 5
	.4byte _0807A3C8 @ case 6
	.4byte _0807A3C8 @ case 7
	.4byte _0807A3C8 @ case 8
	.4byte _0807A3C8 @ case 9
	.4byte _0807989A @ case 10
	.4byte _08079C0C @ case 11
	.4byte _0807A3C8 @ case 12
	.4byte _0807A3C8 @ case 13
	.4byte _0807A3C8 @ case 14
	.4byte _0807A3C8 @ case 15
	.4byte _0807A3C8 @ case 16
	.4byte _0807A3C8 @ case 17
	.4byte _0807A3C8 @ case 18
	.4byte _0807A3C8 @ case 19
	.4byte _08079C72 @ case 20
	.4byte _0807A3C8 @ case 21
	.4byte _0807A3C8 @ case 22
	.4byte _0807A3C8 @ case 23
	.4byte _0807A3C8 @ case 24
	.4byte _0807A3C8 @ case 25
	.4byte _0807A3C8 @ case 26
	.4byte _0807A3C8 @ case 27
	.4byte _0807A3C8 @ case 28
	.4byte _0807A3C8 @ case 29
	.4byte _08079EB6 @ case 30
	.4byte _08079ED0 @ case 31
	.4byte _08079EDE @ case 32
	.4byte _08079F0C @ case 33
	.4byte _08079F60 @ case 34
	.4byte _08079F7C @ case 35
	.4byte _08079F94 @ case 36
	.4byte _08079FE4 @ case 37
	.4byte _0807A2F0 @ case 38
	.4byte _0807A3C8 @ case 39
	.4byte _08079FF2 @ case 40
	.4byte _0807A3C8 @ case 41
	.4byte _0807A3C8 @ case 42
	.4byte _0807A3C8 @ case 43
	.4byte _0807A3C8 @ case 44
	.4byte _0807A3C8 @ case 45
	.4byte _0807A3C8 @ case 46
	.4byte _0807A3C8 @ case 47
	.4byte _0807A3C8 @ case 48
	.4byte _0807A3C8 @ case 49
	.4byte _0807A074 @ case 50
	.4byte _0807A082 @ case 51
	.4byte _0807A09C @ case 52
	.4byte _0807A0BA @ case 53
	.4byte _0807A3C8 @ case 54
	.4byte _0807A0E8 @ case 55
	.4byte _0807A26C @ case 56
	.4byte _0807A284 @ case 57
	.4byte _0807A2B4 @ case 58
	.4byte _0807A2D8 @ case 59
	.4byte _0807A2F0 @ case 60
	.4byte _0807A3C8 @ case 61
	.4byte _0807A3C8 @ case 62
	.4byte _0807A3C8 @ case 63
	.4byte _0807A3C8 @ case 64
	.4byte _0807A3C8 @ case 65
	.4byte _0807A3C8 @ case 66
	.4byte _0807A3C8 @ case 67
	.4byte _0807A3C8 @ case 68
	.4byte _0807A3C8 @ case 69
	.4byte _0807A3C8 @ case 70
	.4byte _0807A3C8 @ case 71
	.4byte _0807A3C8 @ case 72
	.4byte _0807A3C8 @ case 73
	.4byte _0807A3C8 @ case 74
	.4byte _0807A3C8 @ case 75
	.4byte _0807A3C8 @ case 76
	.4byte _0807A3C8 @ case 77
	.4byte _0807A3C8 @ case 78
	.4byte _0807A3C8 @ case 79
	.4byte _0807A3C8 @ case 80
	.4byte _0807A3C8 @ case 81
	.4byte _0807A3C8 @ case 82
	.4byte _0807A3C8 @ case 83
	.4byte _0807A3C8 @ case 84
	.4byte _0807A3C8 @ case 85
	.4byte _0807A3C8 @ case 86
	.4byte _0807A3C8 @ case 87
	.4byte _0807A3C8 @ case 88
	.4byte _0807A3C8 @ case 89
	.4byte _0807A3C8 @ case 90
	.4byte _0807A3C8 @ case 91
	.4byte _0807A3C8 @ case 92
	.4byte _0807A3C8 @ case 93
	.4byte _0807A3C8 @ case 94
	.4byte _0807A3C8 @ case 95
	.4byte _0807A3C8 @ case 96
	.4byte _0807A3C8 @ case 97
	.4byte _0807A3C8 @ case 98
	.4byte _0807A3C8 @ case 99
	.4byte _0807A350 @ case 100
	.4byte _0807A354 @ case 101
	.4byte _0807A3C8 @ case 102
	.4byte _0807A3C8 @ case 103
	.4byte _0807A3C8 @ case 104
	.4byte _0807A3C8 @ case 105
	.4byte _0807A3C8 @ case 106
	.4byte _0807A3C8 @ case 107
	.4byte _0807A3C8 @ case 108
	.4byte _0807A3C8 @ case 109
	.4byte _0807A364 @ case 110
	.4byte _0807A378 @ case 111
_080797CC:
	ldr r6, _080797F8 @ =gUnk_08BCD910
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	movs r4, #0x64
	muls r0, r4, r0
	adds r0, r0, r6
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _080797E6
	bl _0807A35E
_080797E6:
	ldr r0, _080797FC @ =0x000001A9
	bl sub_08012F60
	cmp r0, #4
	bne _08079800
	movs r0, #0x6e
	strh r0, [r5, #2]
	bl _0807A3C8
	.align 2, 0
_080797F8: .4byte gUnk_08BCD910
_080797FC: .4byte 0x000001A9
_08079800:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	muls r0, r4, r0
	adds r0, r0, r6
	ldrh r0, [r0, #2]
	bl sub_0807B9E4
	bl _0807A36C
_08079812:
	bl sub_0807AEDC
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _08079822
	bl _0807A3C8
_08079822:
	movs r2, #0xe8
	lsls r2, r2, #2
	adds r1, r5, r2
	ldrh r0, [r1]
	cmp r0, #0x7f
	beq _08079832
	cmp r0, #0x3f
	bne _0807987A
_08079832:
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
	strh r4, [r5, #2]
	movs r3, #0
	mov sb, r3
	bl _0807A3C8
_0807987A:
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #0x11
	bne _08079884
	b _08079C8C
_08079884:
	cmp r0, #1
	bne _08079890
	movs r0, #0x28
	strh r0, [r5, #2]
	bl _0807A3C8
_08079890:
	ldrh r0, [r1, #8]
	adds r0, #1
	strh r0, [r1, #8]
	bl _0807A35E
_0807989A:
	adds r4, r5, #6
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r6, r4, #0
	cmp r0, #3
	beq _080798B0
	bl _0807A3C8
_080798B0:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080798BC
	cmp r0, #0xc
	bne _08079916
_080798BC:
	bl sub_0807B034
	ldr r1, _08079994 @ =gCurrentKeyPress
	ldrh r0, [r5, #0x12]
	strh r0, [r1]
	ldr r1, _08079998 @ =gKeyNewPress
	ldrh r0, [r5, #0x14]
	strh r0, [r1]
	ldrh r0, [r7]
	cmp r0, #0x7f
	bne _08079916
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	movs r0, #0
	strh r0, [r5, #2]
	mov sb, r0
_08079916:
	ldr r0, _08079994 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _080799A0
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	movs r7, #0
	strh r0, [r5, #0xc]
	movs r2, #0xc
	ldrsh r0, [r5, r2]
	cmp r0, r4
	bne _0807994A
	bl _0807A3C8
_0807994A:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #8
	cmp r0, #0
	beq _08079962
	adds r0, r6, #0
	bl sub_0800B4E4
_08079962:
	ldr r2, _0807999C @ =gUnk_08BCD828
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x11
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r7, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	bl _0807A3C8
	.align 2, 0
_08079994: .4byte gCurrentKeyPress
_08079998: .4byte gKeyNewPress
_0807999C: .4byte gUnk_08BCD828
_080799A0:
	ldr r0, _080799C4 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r4, #1
	ands r4, r1
	cmp r4, #0
	bne _080799AE
	b _08079AA8
_080799AE:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #1
	bne _080799C8
	ldrh r0, [r5, #0xc]
	strh r0, [r5, #0x1c]
	b _08079A42
	.align 2, 0
_080799C4: .4byte gKeyNewPress
_080799C8:
	cmp r0, #3
	bne _080799D6
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _08079A0E
_080799D6:
	cmp r0, #4
	bne _080799E8
	ldr r2, _080799E4 @ =gUnk_08BCD758
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	b _08079A00
	.align 2, 0
_080799E4: .4byte gUnk_08BCD758
_080799E8:
	cmp r0, #6
	bne _080799F6
	movs r0, #0x99
	bl sub_08012F60
	adds r0, #0x64
	b _08079A0E
_080799F6:
	cmp r0, #7
	bne _08079A20
	ldr r2, _08079A1C @ =gUnk_08BCD758
	movs r3, #0xc
	ldrsh r1, [r5, r3]
_08079A00:
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #1
	adds r0, r0, r2
	ldrh r0, [r0]
_08079A0E:
	strh r0, [r5, #0x1e]
	ldrh r1, [r5, #0x1e]
	movs r0, #0x99
	bl sub_08012F0C
	b _08079A42
	.align 2, 0
_08079A1C: .4byte gUnk_08BCD758
_08079A20:
	cmp r0, #0x10
	bne _08079A42
	movs r4, #0x8a
	lsls r4, r4, #1
	adds r3, r5, r4
	ldr r2, _08079A74 @ =gUnk_08BCD7CC
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	subs r0, #0x20
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r0, [r0]
	str r0, [r3]
_08079A42:
	ldr r3, _08079A78 @ =gUnk_08BCD910
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	movs r1, #0x64
	muls r1, r0, r1
	adds r2, r1, r3
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #2
	bne _08079A7C
	movs r4, #0xc
	ldrsh r0, [r5, r4]
	adds r0, r0, r1
	adds r1, r3, #0
	adds r1, #0x44
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0x80
	bne _08079A7C
	ldrh r0, [r2, #2]
	bl sub_0807B9E4
	bl _0807A36C
	.align 2, 0
_08079A74: .4byte gUnk_08BCD7CC
_08079A78: .4byte gUnk_08BCD910
_08079A7C:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08079A92
	cmp r0, #0xc
	beq _08079A92
	cmp r0, #2
	beq _08079A92
	cmp r0, #3
	beq _08079A92
	b _08079C6C
_08079A92:
	movs r2, #0xc
	ldrsh r0, [r5, r2]
	adds r1, r5, #0
	adds r1, #0xcb
	adds r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _08079AA6
	bl _0807A3C8
_08079AA6:
	b _08079C6C
_08079AA8:
	movs r7, #2
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	bne _08079AB6
	bl _0807A3C8
_08079AB6:
	ldr r2, _08079B14 @ =gUnk_08BCD910
	movs r3, #0xa
	ldrsh r1, [r5, r3]
	movs r0, #0x64
	muls r0, r1, r0
	adds r0, r0, r2
	ldrb r0, [r0, #4]
	cmp r0, #0xff
	bne _08079ACC
	bl _0807A3C8
_08079ACC:
	cmp r0, #0x14
	bne _08079B18
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	bl _0807A3C2
	.align 2, 0
_08079B14: .4byte gUnk_08BCD910
_08079B18:
	cmp r0, #0x81
	bne _08079B4E
	movs r0, #0
	movs r1, #0x1f
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r5, #2]
	movs r0, #0
	mov sb, r0
	bl _0807A3C8
_08079B4E:
	cmp r0, #0x84
	bne _08079B84
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r5, #2]
	movs r1, #0
	mov sb, r1
	bl _0807A3C8
_08079B84:
	cmp r0, #0x85
	bne _08079BB2
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08079C64
_08079BB2:
	strh r0, [r5, #0xa]
	strh r4, [r5, #0xc]
	strh r4, [r5, #0xe]
	bl sub_0807A438
	movs r3, #0xde
	lsls r3, r3, #2
	adds r1, r5, r3
	adds r0, r6, #0
	bl sub_080076B0
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0x11
	bne _08079BD8
	adds r0, r6, #0
	movs r1, #0
	bl sub_08008E34
_08079BD8:
	ldrh r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #8
	cmp r0, #0
	beq _08079BE8
	adds r0, r6, #0
	bl sub_0800B4E4
_08079BE8:
	ldr r2, _08079C08 @ =gUnk_08BCD828
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x11
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r7, [sp, #0xc]
	b _0807A33A
	.align 2, 0
_08079C08: .4byte gUnk_08BCD828
_08079C0C:
	bl sub_0807AEDC
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _08079C1A
	b _0807A3C8
_08079C1A:
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrh r0, [r0]
	cmp r0, #0x7f
	bne _08079C6C
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
_08079C64:
	strh r4, [r5, #2]
	movs r2, #0
	mov sb, r2
	b _0807A3C8
_08079C6C:
	movs r0, #0x14
	strh r0, [r5, #2]
	b _0807A3C8
_08079C72:
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	adds r0, r5, #0
	adds r0, #0xea
	adds r0, r0, r1
	ldrb r1, [r0]
	cmp r1, #0x80
	bne _08079CA4
	ldrh r2, [r5, #0xa]
	movs r4, #0xa
	ldrsh r0, [r5, r4]
	cmp r0, #0x12
	bne _08079C92
_08079C8C:
	movs r0, #0x1e
	strh r0, [r5, #2]
	b _0807A3C8
_08079C92:
	adds r0, r2, #0
	subs r0, #0xd
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _08079CA4
	movs r0, #0x32
	strh r0, [r5, #2]
	b _0807A3C8
_08079CA4:
	cmp r1, #0x14
	bne _08079CE8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
	b _08079E28
_08079CE8:
	cmp r1, #0x80
	bne _08079D86
	ldrh r0, [r5, #0x1c]
	cmp r0, #1
	bhi _08079D86
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r1, [r5, #0x1c]
	movs r0, #0x98
	bl sub_08012F0C
	ldrh r1, [r5, #0x1e]
	movs r0, #0x99
	bl sub_08012F0C
	movs r0, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x94
	bne _08079D42
	movs r0, #0
	movs r1, #0xff
	bl SetBattleAidItem
_08079D42:
	movs r0, #1
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x94
	bne _08079D58
	movs r0, #1
	movs r1, #0xff
	bl SetBattleAidItem
_08079D58:
	movs r0, #2
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x94
	bne _08079D6E
	movs r0, #2
	movs r1, #0xff
	bl SetBattleAidItem
_08079D6E:
	movs r0, #3
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x94
	bne _08079E28
	movs r0, #3
	movs r1, #0xff
	bl SetBattleAidItem
	b _08079E28
_08079D86:
	cmp r1, #0x82
	bne _08079D98
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	b _08079E0C
_08079D98:
	cmp r1, #0x83
	bne _08079DAA
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	b _08079E0C
_08079DAA:
	cmp r1, #0x81
	bne _08079DBC
	movs r0, #0
	movs r1, #0x1f
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	b _08079E0C
_08079DBC:
	cmp r1, #0x84
	bne _08079DE2
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08079DD4
	ldr r0, _08079DD0 @ =gUnk_080BFD38
	b _08079DF2
	.align 2, 0
_08079DD0: .4byte gUnk_080BFD38
_08079DD4:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	b _08079E0C
_08079DE2:
	cmp r1, #0x85
	bne _08079E30
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08079E00
	ldr r0, _08079DFC @ =gUnk_080BFD50
_08079DF2:
	str r0, [r5, #0x18]
	movs r0, #0x64
	strh r0, [r5, #2]
	b _0807A3C8
	.align 2, 0
_08079DFC: .4byte gUnk_080BFD50
_08079E00:
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
_08079E0C:
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_08079E28:
	movs r0, #0
	strh r0, [r5, #2]
	mov sb, r0
	b _0807A3C8
_08079E30:
	cmp r1, #0xf
	bne _08079EB0
	ldrh r4, [r5, #0x20]
	cmp r4, #0
	bne _08079E3E
	movs r0, #0x10
	b _0807A2F4
_08079E3E:
	cmp r4, #0x10
	beq _08079E44
	b _0807A3C8
_08079E44:
	movs r7, #0
	movs r4, #0x11
	mov r8, r4
	mov r0, r8
	strh r0, [r5, #0xa]
	strh r7, [r5, #0xc]
	strh r7, [r5, #0xe]
	bl sub_0807A438
	adds r4, r5, #6
	movs r2, #0xde
	lsls r2, r2, #2
	adds r1, r5, r2
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	ldrh r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #8
	cmp r0, #0
	beq _08079E7C
	adds r0, r6, #0
	bl sub_0800B4E4
_08079E7C:
	ldr r2, _08079EAC @ =gUnk_08BCD828
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	mov r4, r8
	str r4, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r7, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	strh r7, [r5, #2]
	b _0807A3C8
	.align 2, 0
_08079EAC: .4byte gUnk_08BCD828
_08079EB0:
	movs r4, #0
	strh r1, [r5, #0xa]
	b _0807A2F6
_08079EB6:
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	beq _08079EC4
	b _0807A36C
_08079EC4:
	movs r4, #0x8a
	lsls r4, r4, #1
	adds r1, r5, r4
	movs r0, #0
	str r0, [r1]
	b _0807A36C
_08079ED0:
	bl sub_0807B254
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079EDC
	b _0807A3C8
_08079EDC:
	b _0807A36C
_08079EDE:
	bl sub_08015120
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08079EF0
	ldr r0, _08079EEC @ =gUnk_080BFD6C
	b _0807A368
	.align 2, 0
_08079EEC: .4byte gUnk_080BFD6C
_08079EF0:
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	beq _08079EFE
	b _0807A36C
_08079EFE:
	ldr r0, _08079F08 @ =gUnk_080BFD80
	bl sub_0806A040
	b _0807A36C
	.align 2, 0
_08079F08: .4byte gUnk_080BFD80
_08079F0C:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079F18
	b _0807A3C8
_08079F18:
	bl sub_08015120
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08079F28
	movs r0, #0x26
	strh r0, [r5, #2]
	b _0807A3C8
_08079F28:
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	beq _08079F36
	b _0807A3C8
_08079F36:
	movs r0, #0x86
	lsls r0, r0, #1
	adds r2, r5, r0
	movs r3, #0x88
	lsls r3, r3, #1
	adds r1, r5, r3
	ldr r0, [r2]
	ldr r1, [r1]
	orrs r0, r1
	str r0, [r2]
	bl sub_080935E0
	ldr r0, _08079F5C @ =gUnk_080BFD94
	bl sub_0806A040
	bl sub_08093510
	b _0807A36C
	.align 2, 0
_08079F5C: .4byte gUnk_080BFD94
_08079F60:
	ldr r1, _08079F78 @ =gKeyNewPress
	movs r0, #0
	strh r0, [r1]
	bl sub_0806A0D4
	bl sub_08092F1C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079F76
	b _0807A3C8
_08079F76:
	b _0807A36C
	.align 2, 0
_08079F78: .4byte gKeyNewPress
_08079F7C:
	ldr r1, _08079F90 @ =gKeyNewPress
	movs r0, #1
	strh r0, [r1]
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079F8E
	b _0807A3C8
_08079F8E:
	b _0807A36C
	.align 2, 0
_08079F90: .4byte gKeyNewPress
_08079F94:
	movs r3, #0
	movs r4, #0x88
	lsls r4, r4, #1
	adds r2, r5, r4
	ldr r6, _08079FD4 @ =gUnk_08BCD7CC
	ldr r1, [r2]
	ldr r0, [r6]
	ldr r7, _08079FD8 @ =gUnk_08BCD670
	cmp r1, r0
	beq _08079FBC
	adds r4, r2, #0
	adds r2, r6, #0
_08079FAC:
	adds r2, #4
	adds r3, #1
	cmp r3, #0x16
	bgt _08079FBC
	ldr r1, [r4]
	ldr r0, [r2]
	cmp r1, r0
	bne _08079FAC
_08079FBC:
	adds r0, r3, #0
	adds r0, #0x20
	lsls r0, r0, #2
	adds r0, r0, r7
	ldr r1, [r0]
	str r1, [r5, #0x18]
	ldr r0, _08079FDC @ =0x0000C483
	bl sub_0800E77C
	ldr r0, _08079FE0 @ =gUnk_080BFDA0
	b _0807A368
	.align 2, 0
_08079FD4: .4byte gUnk_08BCD7CC
_08079FD8: .4byte gUnk_08BCD670
_08079FDC: .4byte 0x0000C483
_08079FE0: .4byte gUnk_080BFDA0
_08079FE4:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079FF0
	b _0807A3C8
_08079FF0:
	b _0807A36C
_08079FF2:
	bl sub_0807B354
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08079FFE
	b _0807A3C8
_08079FFE:
	bl sub_08018B6C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, #0
	bne _0807A018
	cmp r0, #0
	beq _0807A024
_0807A018:
	ldrh r0, [r5, #0x22]
	cmp r0, #0
	bne _0807A03A
	ldrh r0, [r5, #0x24]
	cmp r0, #0
	bne _0807A03A
_0807A024:
	adds r0, r5, #6
	movs r1, #2
	bl sub_08008EB4
	movs r1, #1
	bl sub_0800B31C
	adds r1, r5, #0
	adds r1, #0xcd
	movs r0, #1
	strb r0, [r1]
_0807A03A:
	movs r4, #0x86
	lsls r4, r4, #1
	adds r0, r5, r4
	ldr r0, [r0]
	movs r1, #0xc0
	lsls r1, r1, #0xb
	ands r0, r1
	cmp r0, #0
	beq _0807A05C
	movs r2, #0x88
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r0, [r0]
	ands r0, r1
	cmp r0, #0
	beq _0807A05C
	b _0807A35E
_0807A05C:
	adds r0, r5, #6
	movs r1, #1
	bl sub_08008EB4
	movs r1, #1
	bl sub_0800B31C
	adds r1, r5, #0
	adds r1, #0xcc
	movs r0, #1
	strb r0, [r1]
	b _0807A35E
_0807A074:
	bl sub_0807B458
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807A080
	b _0807A3C8
_0807A080:
	b _0807A36C
_0807A082:
	bl sub_0807AA48
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807A08E
	b _0807A3C8
_0807A08E:
	ldr r0, _0807A098 @ =0x00000ACC
	bl sub_0807B9E4
	b _0807A36C
	.align 2, 0
_0807A098: .4byte 0x00000ACC
_0807A09C:
	bl sub_0807AEDC
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807A0AA
	b _0807A3C8
_0807A0AA:
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #0x7f
	bne _0807A0B8
	b _0807A384
_0807A0B8:
	b _0807A36C
_0807A0BA:
	bl sub_0807B5A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807A0C6
	b _0807A3C8
_0807A0C6:
	ldrh r0, [r5, #0x2e]
	cmp r0, #0
	beq _0807A0CE
	b _0807A35E
_0807A0CE:
	ldr r1, _0807A0E4 @ =0x000003F2
	adds r0, r5, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #0
	beq _0807A0DC
	b _0807A35E
_0807A0DC:
	movs r0, #0x37
	strh r0, [r5, #2]
	b _0807A3C8
	.align 2, 0
_0807A0E4: .4byte 0x000003F2
_0807A0E8:
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	cmp r0, #0xd
	bne _0807A138
	movs r0, #0x9b
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	bl sub_080159E0
	bl sub_08015A28
	bl sub_08015788
	bl sub_080156C4
	movs r6, #0
	b _0807A114
_0807A112:
	adds r6, #1
_0807A114:
	cmp r6, #2
	bhi _0807A132
	lsls r0, r6, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _0807A112
	adds r0, r4, #0
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_0807A132:
	bl sub_0801644C
	b _0807A1A0
_0807A138:
	cmp r0, #0xe
	bne _0807A1A0
	movs r0, #0x9c
	bl sub_08012F60
	ldr r4, _0807A170 @ =0xFFFFFED4
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #0x9d
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r7, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, r1, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	bl SetItemQuantity
	movs r6, #0
	b _0807A176
	.align 2, 0
_0807A170: .4byte 0xFFFFFED4
_0807A174:
	adds r6, #1
_0807A176:
	cmp r6, #3
	bhi _0807A1A0
	lsls r0, r6, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _0807A174
	adds r0, r7, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807A174
	adds r0, r4, #0
	movs r1, #0xff
	bl SetBattleAidItem
_0807A1A0:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0xd
	bne _0807A22C
	ldrh r0, [r5, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	ldr r1, _0807A20C @ =gUnk_03005170
	str r0, [r1]
	ldr r0, _0807A210 @ =gUnk_080BFDB8
	str r0, [r1, #4]
	ldr r4, _0807A214 @ =gUnk_03006B1C
	ldrh r0, [r5, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r4]
	ldrh r0, [r5, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08015854
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080188EC
	adds r1, r0, #0
	movs r2, #0x8c
	lsls r2, r2, #1
	adds r0, r5, r2
	movs r2, #0xe
	bl CpuSet
	bl sub_08015A28
	ldr r1, _0807A218 @ =gUnk_03006B18
	movs r0, #1
	strh r0, [r1]
	ldr r0, _0807A21C @ =gUnk_03005578
	movs r1, #0
	strh r1, [r0]
	ldr r0, _0807A220 @ =gUnk_03005888
	strh r1, [r0]
	ldr r0, _0807A224 @ =gUnk_030056B8
	strh r1, [r0]
	ldr r0, _0807A228 @ =gUnk_03006B08
	strh r1, [r0]
	b _0807A238
	.align 2, 0
_0807A20C: .4byte gUnk_03005170
_0807A210: .4byte gUnk_080BFDB8
_0807A214: .4byte gUnk_03006B1C
_0807A218: .4byte gUnk_03006B18
_0807A21C: .4byte gUnk_03005578
_0807A220: .4byte gUnk_03005888
_0807A224: .4byte gUnk_030056B8
_0807A228: .4byte gUnk_03006B08
_0807A22C:
	cmp r0, #0xe
	bne _0807A24A
	ldrh r0, [r5, #0x2a]
	ldrh r1, [r5, #0x2c]
	bl sub_0806D054
_0807A238:
	ldr r1, _0807A254 @ =gUnk_03006B14
	movs r0, #8
	strh r0, [r1]
	ldr r1, _0807A258 @ =gUnk_03006B10
	ldr r0, _0807A25C @ =gUnk_0200F800
	str r0, [r1]
	ldr r1, _0807A260 @ =gUnk_03006AFC
	ldr r0, _0807A264 @ =0x06006800
	str r0, [r1]
_0807A24A:
	ldr r1, _0807A268 @ =gUnk_03006B0C
	movs r0, #0
	strh r0, [r1]
	b _0807A36C
	.align 2, 0
_0807A254: .4byte gUnk_03006B14
_0807A258: .4byte gUnk_03006B10
_0807A25C: .4byte gUnk_0200F800
_0807A260: .4byte gUnk_03006AFC
_0807A264: .4byte 0x06006800
_0807A268: .4byte gUnk_03006B0C
_0807A26C:
	bl sub_0806D314
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807A278
	b _0807A3C8
_0807A278:
	ldr r0, _0807A280 @ =0x000009CC
	bl sub_0807B9E4
	b _0807A36C
	.align 2, 0
_0807A280: .4byte 0x000009CC
_0807A284:
	bl sub_0807AEDC
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807A292
	b _0807A3C8
_0807A292:
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r0, r5, r3
	ldrh r0, [r0]
	cmp r0, #0x7f
	beq _0807A384
	ldr r0, _0807A2AC @ =gUnk_080BFD94
	bl sub_0806A040
	ldr r0, _0807A2B0 @ =gUnk_02020000
	bl sub_080934C8
	b _0807A36C
	.align 2, 0
_0807A2AC: .4byte gUnk_080BFD94
_0807A2B0: .4byte gUnk_02020000
_0807A2B4:
	ldr r1, _0807A2D0 @ =gKeyNewPress
	movs r0, #0
	strh r0, [r1]
	bl sub_0806A0D4
	ldr r0, _0807A2D4 @ =gUnk_02020000
	bl sub_08092DFC
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807A2CC
	b _0807A3C8
_0807A2CC:
	b _0807A36C
	.align 2, 0
_0807A2D0: .4byte gKeyNewPress
_0807A2D4: .4byte gUnk_02020000
_0807A2D8:
	ldr r1, _0807A2EC @ =gKeyNewPress
	movs r0, #1
	strh r0, [r1]
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807A3C8
	b _0807A36C
	.align 2, 0
_0807A2EC: .4byte gKeyNewPress
_0807A2F0:
	movs r4, #0
	movs r0, #1
_0807A2F4:
	strh r0, [r5, #0xa]
_0807A2F6:
	strh r4, [r5, #0xc]
	strh r4, [r5, #0xe]
	bl sub_0807A438
	adds r0, r5, #6
	movs r2, #0xde
	lsls r2, r2, #2
	adds r1, r5, r2
	bl sub_080076B0
	ldrh r0, [r5, #8]
	adds r6, r5, #0
	adds r6, #8
	cmp r0, #0
	beq _0807A31A
	adds r0, r6, #0
	bl sub_0800B4E4
_0807A31A:
	ldr r2, _0807A34C @ =gUnk_08BCD828
	movs r3, #0xc
	ldrsh r1, [r5, r3]
	adds r0, r5, #0
	adds r0, #0xac
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x11
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
_0807A33A:
	str r4, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	strh r4, [r5, #2]
	b _0807A3C8
	.align 2, 0
_0807A34C: .4byte gUnk_08BCD828
_0807A350:
	ldr r0, [r5, #0x18]
	b _0807A368
_0807A354:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807A3C8
_0807A35E:
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0807A3C8
_0807A364:
	ldr r0, _0807A374 @ =gUnk_08BCD66C
	ldr r0, [r0]
_0807A368:
	bl sub_0806A040
_0807A36C:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807A3C8
	.align 2, 0
_0807A374: .4byte gUnk_08BCD66C
_0807A378:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0807A3C8
_0807A384:
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	bl sub_08001B14
	movs r0, #1
	bl sub_08014440
_0807A3C2:
	strh r4, [r5, #2]
	movs r4, #0
	mov sb, r4
_0807A3C8:
	mov r0, sb
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807A3D8
sub_0807A3D8: @ 0x0807A3D8
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807A408
	cmp r0, #1
	bgt _0807A3F4
	cmp r0, #0
	beq _0807A3FE
	b _0807A42E
_0807A3F4:
	cmp r0, #2
	beq _0807A414
	cmp r0, #3
	beq _0807A42A
	b _0807A42E
_0807A3FE:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0807A422
_0807A408:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807A42E
	b _0807A422
_0807A414:
	adds r0, r4, #6
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #8
	bl sub_0800B4E4
_0807A422:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807A42E
_0807A42A:
	movs r5, #0
	strh r5, [r4, #2]
_0807A42E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807A438
sub_0807A438: @ 0x0807A438
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xde
	lsls r0, r0, #2
	adds r0, r0, r5
	mov r8, r0
	movs r1, #0
	movs r0, #3
	mov r2, r8
	strb r0, [r2]
	strb r0, [r2, #1]
	movs r0, #2
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	ldrh r0, [r5, #0xc]
	strh r0, [r2, #2]
	ldrh r0, [r5, #0xe]
	strh r0, [r2, #4]
	movs r0, #0xf0
	strb r0, [r2, #0xd]
	movs r0, #0xfe
	strb r0, [r2, #0xc]
	adds r0, r5, #0
	adds r0, #0x30
	str r0, [r2, #0x14]
	adds r0, #0x9b
	str r0, [r2, #0x18]
	mov sb, r1
	mov ip, r1
	ldr r2, _0807A500 @ =gUnk_08BCD910
	movs r0, #0xa
	ldrsh r3, [r5, r0]
	movs r0, #0x64
	muls r0, r3, r0
	adds r1, r2, #6
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0xff
	bne _0807A49A
	b _0807A976
_0807A49A:
	movs r6, #0x64
	adds r7, r1, #0
	adds r2, #0x44
	mov sl, r2
	movs r4, #0
_0807A4A4:
	movs r1, #0xa
	ldrsh r2, [r5, r1]
	cmp r2, #7
	bne _0807A504
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r1
	cmp r0, #0
	bne _0807A4D4
	adds r0, r3, #0
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0xa
	bne _0807A4CE
	b _0807A956
_0807A4CE:
	cmp r0, #0xb
	bne _0807A4D4
	b _0807A956
_0807A4D4:
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r1, r0
	cmp r1, #0
	beq _0807A4E0
	b _0807A900
_0807A4E0:
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #8
	bne _0807A4F2
	b _0807A956
_0807A4F2:
	cmp r0, #9
	bne _0807A4F8
	b _0807A956
_0807A4F8:
	cmp r0, #0x38
	bne _0807A4FE
	b _0807A956
_0807A4FE:
	b _0807A900
	.align 2, 0
_0807A500: .4byte gUnk_08BCD910
_0807A504:
	cmp r2, #4
	beq _0807A50A
	b _0807A67C
_0807A50A:
	movs r1, #0x86
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807A52E
	movs r0, #0xa
	ldrsh r3, [r5, r0]
	adds r0, r3, #0
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x13
	bne _0807A52E
	b _0807A956
_0807A52E:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807A54A
	movs r0, #0xa
	ldrsh r3, [r5, r0]
	adds r0, r3, #0
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x14
	bne _0807A54A
	b _0807A956
_0807A54A:
	ands r2, r1
	cmp r2, #0
	bne _0807A562
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x15
	bne _0807A562
	b _0807A956
_0807A562:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0807A57C
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x16
	bne _0807A57C
	b _0807A956
_0807A57C:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0807A596
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x17
	bne _0807A596
	b _0807A956
_0807A596:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0807A5B0
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x18
	bne _0807A5B0
	b _0807A956
_0807A5B0:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _0807A5CA
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x19
	bne _0807A5CA
	b _0807A956
_0807A5CA:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0807A5E4
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1a
	bne _0807A5E4
	b _0807A956
_0807A5E4:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r1, r0
	cmp r1, #0
	bne _0807A600
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1b
	bne _0807A600
	b _0807A956
_0807A600:
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r5, r2
	ldr r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807A624
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1c
	bne _0807A624
	b _0807A956
_0807A624:
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0807A640
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1d
	bne _0807A640
	b _0807A956
_0807A640:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0807A65C
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1e
	bne _0807A65C
	b _0807A956
_0807A65C:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r1, r0
	cmp r1, #0
	beq _0807A668
	b _0807A900
_0807A668:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x1f
	bne _0807A67A
	b _0807A956
_0807A67A:
	b _0807A900
_0807A67C:
	cmp r2, #0x10
	beq _0807A682
	b _0807A900
_0807A682:
	movs r3, #0x86
	lsls r3, r3, #1
	adds r0, r5, r3
	ldr r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807A6A6
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	adds r3, r0, #0
	muls r3, r6, r3
	adds r0, r4, r3
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x20
	bne _0807A6A6
	b _0807A956
_0807A6A6:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807A6C2
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	adds r3, r0, #0
	muls r3, r6, r3
	adds r0, r4, r3
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x21
	bne _0807A6C2
	b _0807A956
_0807A6C2:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0807A6DE
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	adds r3, r0, #0
	muls r3, r6, r3
	adds r0, r4, r3
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x22
	bne _0807A6DE
	b _0807A956
_0807A6DE:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _0807A6FA
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	adds r3, r0, #0
	muls r3, r6, r3
	adds r0, r4, r3
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x23
	bne _0807A6FA
	b _0807A956
_0807A6FA:
	ands r2, r1
	cmp r2, #0
	bne _0807A712
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x24
	bne _0807A712
	b _0807A956
_0807A712:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	bne _0807A72C
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x25
	bne _0807A72C
	b _0807A956
_0807A72C:
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _0807A746
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x26
	bne _0807A746
	b _0807A956
_0807A746:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0807A760
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x27
	bne _0807A760
	b _0807A956
_0807A760:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807A77C
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x28
	bne _0807A77C
	b _0807A956
_0807A77C:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r1, r0
	cmp r1, #0
	bne _0807A798
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x29
	bne _0807A798
	b _0807A956
_0807A798:
	movs r0, #0x86
	lsls r0, r0, #1
	adds r1, r5, r0
	ldr r2, [r1]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r2
	cmp r0, #0
	bne _0807A7BC
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2a
	bne _0807A7BC
	b _0807A956
_0807A7BC:
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r2
	cmp r0, #0
	bne _0807A7D8
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2b
	bne _0807A7D8
	b _0807A956
_0807A7D8:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r2
	cmp r0, #0
	bne _0807A7F4
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2c
	bne _0807A7F4
	b _0807A956
_0807A7F4:
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r2
	cmp r0, #0
	bne _0807A810
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2d
	bne _0807A810
	b _0807A956
_0807A810:
	movs r0, #0x80
	lsls r0, r0, #7
	ands r0, r2
	cmp r0, #0
	bne _0807A82C
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2e
	bne _0807A82C
	b _0807A956
_0807A82C:
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r2
	cmp r0, #0
	bne _0807A848
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x2f
	bne _0807A848
	b _0807A956
_0807A848:
	movs r0, #0x80
	lsls r0, r0, #9
	ands r0, r2
	cmp r0, #0
	bne _0807A862
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x30
	beq _0807A956
_0807A862:
	movs r0, #0x80
	lsls r0, r0, #0xa
	ands r0, r2
	cmp r0, #0
	bne _0807A87C
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x31
	beq _0807A956
_0807A87C:
	movs r0, #0x80
	lsls r0, r0, #0xb
	ands r0, r2
	cmp r0, #0
	bne _0807A896
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x32
	beq _0807A956
_0807A896:
	movs r0, #0x80
	lsls r0, r0, #0xc
	ands r2, r0
	cmp r2, #0
	bne _0807A8B0
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x33
	beq _0807A956
_0807A8B0:
	ldr r1, [r1]
	movs r0, #0x80
	lsls r0, r0, #0xd
	ands r0, r1
	cmp r0, #0
	bne _0807A8CC
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x34
	beq _0807A956
_0807A8CC:
	movs r0, #0x80
	lsls r0, r0, #0xe
	ands r0, r1
	cmp r0, #0
	bne _0807A8E6
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x35
	beq _0807A956
_0807A8E6:
	movs r0, #0x80
	lsls r0, r0, #0xf
	ands r1, r0
	cmp r1, #0
	bne _0807A900
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0x36
	beq _0807A956
_0807A900:
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r5, #0
	adds r1, #0x30
	adds r1, r1, r0
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	lsls r0, r0, #2
	ldr r3, _0807A9A4 @ =gUnk_08BCD670
	adds r0, r0, r3
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0xcb
	add r0, sb
	movs r1, #0
	strb r1, [r0]
	adds r1, r5, #0
	adds r1, #0xac
	add r1, sb
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	strb r0, [r1]
	adds r1, r5, #0
	adds r1, #0xea
	add r1, sb
	movs r3, #0xa
	ldrsh r0, [r5, r3]
	muls r0, r6, r0
	add r0, ip
	add r0, sl
	ldrb r0, [r0]
	strb r0, [r1]
	movs r0, #1
	add sb, r0
_0807A956:
	adds r4, #2
	movs r1, #1
	add ip, r1
	mov r2, ip
	cmp r2, #0x1d
	bhi _0807A976
	movs r0, #0xa
	ldrsh r3, [r5, r0]
	adds r0, r3, #0
	muls r0, r6, r0
	adds r0, r4, r0
	adds r0, r0, r7
	ldrh r0, [r0]
	cmp r0, #0xff
	beq _0807A976
	b _0807A4A4
_0807A976:
	mov r1, sb
	lsls r0, r1, #2
	adds r1, r5, #0
	adds r1, #0x30
	adds r1, r1, r0
	movs r0, #0
	str r0, [r1]
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #2
	bne _0807A9AC
	movs r3, #0x86
	lsls r3, r3, #1
	adds r0, r5, r3
	ldr r0, [r0]
	ldr r1, _0807A9A8 @ =0x00001FFF
	ands r0, r1
	cmp r0, #0
	bne _0807A9FC
	adds r1, r5, #0
	adds r1, #0xcc
	b _0807A9F8
	.align 2, 0
_0807A9A4: .4byte gUnk_08BCD670
_0807A9A8: .4byte 0x00001FFF
_0807A9AC:
	cmp r0, #0xc
	bne _0807A9E4
	bl GetPlayerWeaponQuantity
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08018B6C
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r4, #0
	beq _0807A9CC
	ldrh r0, [r5, #0x24]
	cmp r0, #0
	bne _0807A9D4
_0807A9CC:
	adds r1, r5, #0
	adds r1, #0xcb
	movs r0, #1
	strb r0, [r1]
_0807A9D4:
	cmp r2, #0
	beq _0807A9DE
	ldrh r0, [r5, #0x22]
	cmp r0, #0
	bne _0807A9FC
_0807A9DE:
	adds r1, r5, #0
	adds r1, #0xcc
	b _0807A9F8
_0807A9E4:
	cmp r0, #3
	bne _0807A9FC
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0807A9FC
	adds r1, r5, #0
	adds r1, #0xcd
_0807A9F8:
	movs r0, #1
	strb r0, [r1]
_0807A9FC:
	mov r0, sb
	cmp r0, #6
	bls _0807AA0E
	movs r0, #6
	mov r1, r8
	strb r0, [r1, #0xa]
	movs r0, #0x1e
	strh r0, [r1, #8]
	b _0807AA18
_0807AA0E:
	mov r3, sb
	mov r2, r8
	strb r3, [r2, #0xa]
	movs r0, #0x1a
	strh r0, [r2, #8]
_0807AA18:
	movs r1, #0
	movs r0, #0x8a
	mov r2, r8
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	movs r3, #0x9c
	lsls r3, r3, #1
	adds r0, r5, r3
	str r0, [r2, #0x20]
	ldr r0, _0807AA44 @ =0x06012400
	str r0, [r2, #0x1c]
	str r1, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807AA44: .4byte 0x06012400

	thumb_func_start sub_0807AA48
sub_0807AA48: @ 0x0807AA48
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	bl sub_0806F020
	mov sb, r0
	movs r7, #0xfc
	lsls r7, r7, #2
	add r7, sb
	ldrh r0, [r7]
	cmp r0, #0xb
	bls _0807AA68
	b _0807AEC6
_0807AA68:
	lsls r0, r0, #2
	ldr r1, _0807AA74 @ =_0807AA78
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807AA74: .4byte _0807AA78
_0807AA78: @ jump table
	.4byte _0807AAA8 @ case 0
	.4byte _0807AAC2 @ case 1
	.4byte _0807AB04 @ case 2
	.4byte _0807AD68 @ case 3
	.4byte _0807AE24 @ case 4
	.4byte _0807AEC6 @ case 5
	.4byte _0807AEC6 @ case 6
	.4byte _0807AEC6 @ case 7
	.4byte _0807AEC6 @ case 8
	.4byte _0807AEC6 @ case 9
	.4byte _0807AE6E @ case 10
	.4byte _0807AEB4 @ case 11
_0807AAA8:
	movs r0, #0
	strh r0, [r7, #2]
	strh r0, [r7, #8]
	strh r0, [r7, #0xa]
	strh r0, [r7, #0xc]
	strh r0, [r7, #0xe]
	strh r0, [r7, #0x10]
	strh r0, [r7, #0x12]
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x16]
	ldrh r0, [r7]
	adds r0, #1
	b _0807AEC4
_0807AAC2:
	add r0, sp, #0x14
	movs r2, #0
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, #0
	movs r0, #4
	strb r0, [r1, #2]
	movs r0, #3
	strb r0, [r1, #3]
	movs r0, #0x16
	strb r0, [r1, #4]
	movs r0, #0xd
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r2, [r0, #7]
	movs r0, #6
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r2, [r0, #6]
	str r2, [sp, #0x20]
	str r2, [sp, #0x24]
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	adds r0, r7, #0
	adds r0, #8
	add r1, sp, #0x14
	bl sub_08019944
	ldrh r0, [r7]
	adds r0, #1
	b _0807AEC4
_0807AB04:
	adds r0, r7, #0
	adds r0, #8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0807AB16
	b _0807AEC6
_0807AB16:
	movs r0, #0
	str r0, [sp, #0x28]
	movs r1, #0
	str r1, [sp, #0x2c]
	movs r5, #0
	movs r4, #0
	mov r2, sb
	movs r1, #0xa
	ldrsh r0, [r2, r1]
	cmp r0, #0xd
	bne _0807AB68
	ldrh r0, [r2, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	str r0, [sp, #0x28]
	movs r0, #0x9c
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	str r0, [sp, #0x2c]
	mov r2, sb
	ldrh r0, [r2, #0x2a]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #0x9c
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	b _0807ABB4
_0807AB68:
	cmp r0, #0xe
	bne _0807ABB8
	ldr r0, _0807AD44 @ =0xFFFFFED4
	adds r4, r0, #0
	mov r1, sb
	ldrh r1, [r1, #0x2a]
	adds r0, r4, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0806380C
	str r0, [sp, #0x28]
	movs r0, #0x9c
	bl sub_08012F60
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0806380C
	str r0, [sp, #0x2c]
	mov r2, sb
	ldrh r2, [r2, #0x2a]
	adds r0, r4, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #0x9c
	bl sub_08012F60
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063850
_0807ABB4:
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0807ABB8:
	ldr r0, _0807AD48 @ =gUnk_0200F800
	mov sl, r0
	movs r1, #4
	mov r8, r1
	str r1, [sp]
	movs r1, #0
	adds r2, r5, #0
	movs r3, #8
	bl sub_08069DA8
	movs r2, #6
	str r2, [sp]
	mov r0, sl
	movs r1, #1
	adds r2, r4, #0
	movs r3, #8
	bl sub_08069DA8
	adds r0, r7, #0
	adds r0, #0xa
	mov r1, r8
	str r1, [sp]
	ldr r2, _0807AD4C @ =0x44444444
	str r2, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r6, #2
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	ldr r2, [sp, #0x28]
	movs r3, #0xa
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #6
	str r1, [sp]
	ldr r2, _0807AD4C @ =0x44444444
	str r2, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	ldr r2, [sp, #0x2c]
	movs r3, #0xa
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0xe
	ldr r2, _0807AD50 @ =gUnk_080BFDC4
	movs r1, #9
	str r1, [sp]
	ldr r1, _0807AD4C @ =0x44444444
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #0xa
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x10
	ldr r2, _0807AD54 @ =gUnk_080BFDD4
	movs r1, #0xb
	str r1, [sp]
	ldr r1, _0807AD4C @ =0x44444444
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #0xd
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x12
	ldr r2, _0807AD58 @ =gUnk_080BFDDC
	movs r1, #0xd
	str r1, [sp]
	ldr r1, _0807AD4C @ =0x44444444
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #0xd
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x14
	ldr r2, _0807AD5C @ =gUnk_080BFDE4
	mov r1, r8
	str r1, [sp]
	ldr r1, _0807AD4C @ =0x44444444
	str r1, [sp, #4]
	movs r5, #1
	str r5, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #5
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x16
	ldr r2, _0807AD60 @ =gUnk_080BFDEC
	movs r1, #6
	str r1, [sp]
	ldr r1, _0807AD4C @ =0x44444444
	str r1, [sp, #4]
	str r5, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #5
	bl sub_0800B1AC
	mov r2, sb
	movs r1, #0xa
	ldrsh r0, [r2, r1]
	cmp r0, #0xe
	bne _0807ACFC
	ldr r4, _0807AD64 @ =gUnk_080BFDF4
	mov r0, sl
	movs r1, #0x16
	movs r2, #5
	adds r3, r4, #0
	bl sub_08001284
	movs r0, #5
	str r0, [sp]
	mov r2, sb
	ldrh r0, [r2, #0x2c]
	str r0, [sp, #4]
	str r6, [sp, #8]
	mov r0, sl
	movs r1, #0
	movs r2, #1
	movs r3, #0x17
	bl sub_0806F2D0
	mov r0, sl
	movs r1, #0x16
	movs r2, #7
	adds r3, r4, #0
	bl sub_08001284
	movs r0, #0x9d
	bl sub_08012F60
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	mov r0, sl
	movs r1, #0
	movs r2, #1
	movs r3, #0x17
	bl sub_0806F2D0
_0807ACFC:
	mov r0, sl
	movs r1, #6
	movs r2, #8
	movs r3, #0x12
	bl sub_0806F500
	adds r4, r7, #0
	adds r4, #0x18
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	movs r0, #2
	ldrsh r2, [r7, r0]
	lsls r2, r2, #0x14
	movs r1, #0xb0
	lsls r1, r1, #0xf
	adds r2, r2, r1
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0x58
	bl sub_0800A678
	ldrh r0, [r7]
	adds r0, #1
	b _0807AEC4
	.align 2, 0
_0807AD44: .4byte 0xFFFFFED4
_0807AD48: .4byte gUnk_0200F800
_0807AD4C: .4byte 0x44444444
_0807AD50: .4byte gUnk_080BFDC4
_0807AD54: .4byte gUnk_080BFDD4
_0807AD58: .4byte gUnk_080BFDDC
_0807AD5C: .4byte gUnk_080BFDE4
_0807AD60: .4byte gUnk_080BFDEC
_0807AD64: .4byte gUnk_080BFDF4
_0807AD68:
	ldr r0, _0807AD88 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0807AD8C
	ldrh r0, [r7, #2]
	adds r1, r0, #0
	subs r0, r1, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0807ADA6
	movs r0, #0
	b _0807ADA4
	.align 2, 0
_0807AD88: .4byte gCurrentKeyPress
_0807AD8C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0807ADB8
	ldrh r1, [r7, #2]
	adds r0, r1, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _0807ADA6
	movs r0, #1
_0807ADA4:
	strh r0, [r7, #2]
_0807ADA6:
	movs r2, #2
	ldrsh r0, [r7, r2]
	cmp r1, r0
	beq _0807AE08
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0807AE08
_0807ADB8:
	ldr r0, _0807ADD8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807ADEA
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0
	bne _0807ADDC
	strh r0, [r7, #6]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	b _0807AE08
	.align 2, 0
_0807ADD8: .4byte gKeyNewPress
_0807ADDC:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0xa
	strh r0, [r7]
	b _0807AE08
_0807ADEA:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807AE08
	ldr r0, _0807AE04 @ =0x0000FFFF
	strh r0, [r7, #2]
	movs r0, #0xa
	strh r0, [r7]
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	b _0807AEC6
	.align 2, 0
_0807AE04: .4byte 0x0000FFFF
_0807AE08:
	adds r4, r7, #0
	adds r4, #0x18
	movs r0, #2
	ldrsh r2, [r7, r0]
	lsls r2, r2, #0x14
	movs r1, #0xb0
	lsls r1, r1, #0xf
	adds r2, r2, r1
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0x58
	bl sub_0800A678
	b _0807AE60
_0807AE24:
	ldrh r0, [r7, #6]
	cmp r0, #0
	bne _0807AE3C
	adds r4, r7, #0
	adds r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	b _0807AE5A
_0807AE3C:
	cmp r0, #0x14
	bne _0807AE4E
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	adds r4, r7, #0
	adds r4, #0x18
	b _0807AE5A
_0807AE4E:
	adds r4, r7, #0
	adds r4, #0x18
	cmp r0, #0x23
	bne _0807AE5A
	movs r0, #0xa
	strh r0, [r7]
_0807AE5A:
	ldrh r0, [r7, #6]
	adds r0, #1
	strh r0, [r7, #6]
_0807AE60:
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _0807AEC6
_0807AE6E:
	adds r0, r7, #0
	adds r0, #8
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x14
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x16
	bl sub_0800B4E4
	ldrh r0, [r7]
	adds r0, #1
	b _0807AEC4
_0807AEB4:
	adds r0, r7, #0
	adds r0, #8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0807AEC6
_0807AEC4:
	strh r0, [r7]
_0807AEC6:
	movs r2, #0
	ldrsh r0, [r7, r2]
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807AEDC
sub_0807AEDC: @ 0x0807AEDC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	movs r6, #1
	movs r1, #4
	ldrsh r0, [r4, r1]
	cmp r0, #0x14
	bls _0807AEF6
	b _0807B026
_0807AEF6:
	lsls r0, r0, #2
	ldr r1, _0807AF00 @ =_0807AF04
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807AF00: .4byte _0807AF04
_0807AF04: @ jump table
	.4byte _0807AF58 @ case 0
	.4byte _0807AF6C @ case 1
	.4byte _0807AF9E @ case 2
	.4byte _0807AFEC @ case 3
	.4byte _0807B026 @ case 4
	.4byte _0807B026 @ case 5
	.4byte _0807B026 @ case 6
	.4byte _0807B026 @ case 7
	.4byte _0807B026 @ case 8
	.4byte _0807B026 @ case 9
	.4byte _0807AFFC @ case 10
	.4byte _0807B026 @ case 11
	.4byte _0807B026 @ case 12
	.4byte _0807B026 @ case 13
	.4byte _0807B026 @ case 14
	.4byte _0807B026 @ case 15
	.4byte _0807B026 @ case 16
	.4byte _0807B026 @ case 17
	.4byte _0807B026 @ case 18
	.4byte _0807B026 @ case 19
	.4byte _0807B00C @ case 20
_0807AF58:
	ldr r0, _0807AF68 @ =gUnk_08BCD668
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0
	strh r0, [r5, #8]
	b _0807AFE0
	.align 2, 0
_0807AF68: .4byte gUnk_08BCD668
_0807AF6C:
	ldrh r0, [r4, #0x10]
	ldr r2, _0807AF84 @ =gKeyNewPress
	cmp r0, #0xcc
	bne _0807AF88
	ldrh r1, [r2]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807AF88
	movs r0, #0x14
	strh r0, [r4, #4]
	b _0807B026
	.align 2, 0
_0807AF84: .4byte gKeyNewPress
_0807AF88:
	movs r0, #0
	strh r0, [r2]
	bl sub_0806A0D4
	ldrh r0, [r4, #0x10]
	bl sub_0807B668
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B026
	b _0807AFE0
_0807AF9E:
	ldr r1, _0807AFD0 @ =gKeyNewPress
	movs r0, #1
	strh r0, [r1]
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _0807B026
	ldrh r0, [r5]
	cmp r0, #1
	bne _0807AFD4
	ldrh r0, [r4, #0x10]
	cmp r0, #0xcc
	bne _0807B022
	movs r2, #0x8a
	lsls r2, r2, #1
	adds r1, r4, r2
	subs r2, #8
	adds r0, r4, r2
	ldr r0, [r0]
	str r0, [r1]
	movs r0, #0xa
	strh r0, [r4, #4]
	b _0807B026
	.align 2, 0
_0807AFD0: .4byte gKeyNewPress
_0807AFD4:
	cmp r0, #0x7f
	bne _0807B026
	ldr r0, _0807AFE8 @ =gUnk_08BCD66C
	ldr r0, [r0]
	bl sub_0806A040
_0807AFE0:
	ldrh r0, [r4, #4]
	adds r0, #1
	strh r0, [r4, #4]
	b _0807B026
	.align 2, 0
_0807AFE8: .4byte gUnk_08BCD66C
_0807AFEC:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _0807B026
	strh r0, [r4, #4]
	b _0807B024
_0807AFFC:
	bl sub_0807B254
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _0807B026
	strh r0, [r4, #4]
	b _0807B024
_0807B00C:
	ldr r1, _0807B030 @ =gKeyNewPress
	movs r0, #1
	strh r0, [r1]
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _0807B026
	movs r0, #0x3f
	strh r0, [r5]
_0807B022:
	strh r1, [r4, #4]
_0807B024:
	movs r6, #0
_0807B026:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807B030: .4byte gKeyNewPress

	thumb_func_start sub_0807B034
sub_0807B034: @ 0x0807B034
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r4, r5, r0
	movs r1, #1
	mov sb, r1
	ldrh r0, [r4, #2]
	cmp r0, #0xa
	bls _0807B056
	b _0807B242
_0807B056:
	lsls r0, r0, #2
	ldr r1, _0807B060 @ =_0807B064
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B060: .4byte _0807B064
_0807B064: @ jump table
	.4byte _0807B090 @ case 0
	.4byte _0807B0C8 @ case 1
	.4byte _0807B13A @ case 2
	.4byte _0807B164 @ case 3
	.4byte _0807B242 @ case 4
	.4byte _0807B242 @ case 5
	.4byte _0807B1AE @ case 6
	.4byte _0807B1D4 @ case 7
	.4byte _0807B242 @ case 8
	.4byte _0807B242 @ case 9
	.4byte _0807B21C @ case 10
_0807B090:
	movs r0, #0
	strh r0, [r5, #0x12]
	strh r0, [r5, #0x14]
	strh r0, [r4, #6]
	mov r1, sp
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x30
	ldr r2, _0807B0C4 @ =0x01000010
	mov r0, sp
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	movs r0, #1
	strh r0, [r4]
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807B242
	.align 2, 0
_0807B0C4: .4byte 0x01000010
_0807B0C8:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #2
	bne _0807B0F8
	bl sub_08015120
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B0E4
	strh r5, [r4, #2]
_0807B0E4:
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	beq _0807B0F2
	b _0807B242
_0807B0F2:
	movs r0, #6
	strh r0, [r4, #2]
	b _0807B242
_0807B0F8:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B120
	ldrh r0, [r4, #8]
	adds r0, #1
	movs r1, #0
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _0807B11C
	strh r1, [r4, #6]
	movs r0, #0x7f
	strh r0, [r4]
	b _0807B210
_0807B11C:
	strh r1, [r4, #2]
	b _0807B242
_0807B120:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	beq _0807B130
	b _0807B242
_0807B130:
	movs r0, #0
	strh r0, [r4, #6]
	movs r0, #0x7f
	strh r0, [r4]
	b _0807B210
_0807B13A:
	bl sub_08015334
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0807B148
	b _0807B242
_0807B148:
	mov r0, sp
	adds r0, #2
	ldr r1, _0807B160 @ =0x0000CDEF
	strh r1, [r0]
	movs r1, #2
	bl sub_0807BA04
	strh r5, [r4, #6]
	movs r0, #3
	strh r0, [r4, #2]
	b _0807B242
	.align 2, 0
_0807B160: .4byte 0x0000CDEF
_0807B164:
	ldrh r0, [r4, #6]
	adds r0, #1
	movs r6, #0
	strh r0, [r4, #6]
	ldr r0, _0807B1A0 @ =gCurrentKeyPress
	mov r8, r0
	ldrh r0, [r0]
	strh r0, [r4, #0x10]
	ldr r7, _0807B1A4 @ =gKeyNewPress
	ldrh r0, [r7]
	strh r0, [r4, #0x12]
	bl sub_08015334
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1b
	bhi _0807B1A8
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #4
	bl sub_0807BA04
	mov r1, r8
	ldrh r0, [r1]
	strh r0, [r5, #0x12]
	ldrh r0, [r7]
	strh r0, [r5, #0x14]
	strh r6, [r4, #6]
	b _0807B1F6
	.align 2, 0
_0807B1A0: .4byte gCurrentKeyPress
_0807B1A4: .4byte gKeyNewPress
_0807B1A8:
	strh r6, [r5, #0x12]
	strh r6, [r5, #0x14]
	b _0807B1F6
_0807B1AE:
	adds r0, r4, #0
	adds r0, #0x30
	movs r1, #2
	bl sub_0807BA24
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _0807B242
	ldrh r1, [r4, #0x30]
	ldr r0, _0807B1D0 @ =0x0000CDEF
	cmp r1, r0
	bne _0807B242
	movs r0, #7
	strh r0, [r4, #2]
	strh r2, [r4, #6]
	b _0807B242
	.align 2, 0
_0807B1D0: .4byte 0x0000CDEF
_0807B1D4:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	adds r0, r4, #0
	adds r0, #0x30
	movs r1, #4
	bl sub_0807BA24
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _0807B1F6
	ldrh r0, [r4, #0x30]
	strh r0, [r5, #0x12]
	ldrh r0, [r4, #0x32]
	strh r0, [r5, #0x14]
	strh r1, [r4, #6]
_0807B1F6:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0807B208
	ldrh r0, [r4, #6]
	cmp r0, #0x1e
	bls _0807B242
_0807B208:
	ldr r0, _0807B218 @ =gUnk_08BCD66C
	ldr r0, [r0]
	bl sub_0806A040
_0807B210:
	movs r0, #0xa
	strh r0, [r4, #2]
	b _0807B242
	.align 2, 0
_0807B218: .4byte gUnk_08BCD66C
_0807B21C:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _0807B242
	movs r0, #0x7f
	strh r0, [r4]
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	strh r5, [r4, #2]
	movs r0, #0
	mov sb, r0
_0807B242:
	mov r0, sb
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807B254
sub_0807B254: @ 0x0807B254
	push {r4, r5, r6, lr}
	sub sp, #4
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r4, r5, r0
	movs r6, #1
	ldrh r0, [r4, #2]
	cmp r0, #4
	bhi _0807B34A
	lsls r0, r0, #2
	ldr r1, _0807B278 @ =_0807B27C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B278: .4byte _0807B27C
_0807B27C: @ jump table
	.4byte _0807B290 @ case 0
	.4byte _0807B2C0 @ case 1
	.4byte _0807B2FA @ case 2
	.4byte _0807B31C @ case 3
	.4byte _0807B33C @ case 4
_0807B290:
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x30
	ldr r2, _0807B2BC @ =0x01000010
	mov r0, sp
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807B34A
	.align 2, 0
_0807B2BC: .4byte 0x01000010
_0807B2C0:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0807B2D4
	strh r0, [r4, #2]
	b _0807B34A
_0807B2D4:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B2E6
	movs r0, #0x7f
	strh r0, [r4]
	b _0807B336
_0807B2E6:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bne _0807B34A
	movs r0, #0x7f
	strh r0, [r4]
	b _0807B336
_0807B2FA:
	ldr r0, _0807B318 @ =0x0000CFCF
	strh r0, [r4, #0x10]
	movs r1, #0x8a
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r0, [r0]
	str r0, [r4, #0x14]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #8
	bl sub_0807BA04
	movs r0, #3
	strh r0, [r4, #2]
	b _0807B34A
	.align 2, 0
_0807B318: .4byte 0x0000CFCF
_0807B31C:
	adds r0, r4, #0
	adds r0, #0x30
	movs r1, #8
	bl sub_0807BA24
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B34A
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r5, r1
	ldr r1, [r4, #0x34]
	str r1, [r0]
_0807B336:
	movs r0, #4
	strh r0, [r4, #2]
	b _0807B34A
_0807B33C:
	bl sub_08015134
	bl sub_08014D08
	movs r0, #0
	strh r0, [r4, #2]
	movs r6, #0
_0807B34A:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0807B354
sub_0807B354: @ 0x0807B354
	push {r4, r5, r6, lr}
	sub sp, #4
	bl sub_0806F020
	adds r4, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	movs r6, #1
	ldrh r0, [r5, #2]
	cmp r0, #4
	bhi _0807B44C
	lsls r0, r0, #2
	ldr r1, _0807B378 @ =_0807B37C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B378: .4byte _0807B37C
_0807B37C: @ jump table
	.4byte _0807B390 @ case 0
	.4byte _0807B3C4 @ case 1
	.4byte _0807B3FE @ case 2
	.4byte _0807B424 @ case 3
	.4byte _0807B442 @ case 4
_0807B390:
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	ldr r2, _0807B3C0 @ =0x01000010
	mov r0, sp
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	movs r0, #0
	strh r0, [r5, #6]
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807B44C
	.align 2, 0
_0807B3C0: .4byte 0x01000010
_0807B3C4:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0807B3D8
	strh r0, [r5, #2]
	b _0807B44C
_0807B3D8:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B3EA
	movs r0, #0x7f
	strh r0, [r5]
	b _0807B43C
_0807B3EA:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bne _0807B44C
	movs r0, #0x7f
	strh r0, [r5]
	b _0807B43C
_0807B3FE:
	bl sub_08018B6C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r4, [r5, #0x10]
	strh r0, [r5, #0x12]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #4
	bl sub_0807BA04
	movs r0, #3
	strh r0, [r5, #2]
	b _0807B44C
_0807B424:
	adds r0, r5, #0
	adds r0, #0x30
	movs r1, #4
	bl sub_0807BA24
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B44C
	ldrh r0, [r5, #0x30]
	strh r0, [r4, #0x22]
	ldrh r0, [r5, #0x32]
	strh r0, [r4, #0x24]
_0807B43C:
	movs r0, #4
	strh r0, [r5, #2]
	b _0807B44C
_0807B442:
	bl sub_08015134
	movs r0, #0
	strh r0, [r5, #2]
	movs r6, #0
_0807B44C:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807B458
sub_0807B458: @ 0x0807B458
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	bl sub_0806F020
	adds r4, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	movs r7, #1
	ldrh r0, [r5, #2]
	cmp r0, #0xa
	bls _0807B472
	b _0807B594
_0807B472:
	lsls r0, r0, #2
	ldr r1, _0807B47C @ =_0807B480
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B47C: .4byte _0807B480
_0807B480: @ jump table
	.4byte _0807B4AC @ case 0
	.4byte _0807B4D4 @ case 1
	.4byte _0807B4E8 @ case 2
	.4byte _0807B50E @ case 3
	.4byte _0807B53A @ case 4
	.4byte _0807B564 @ case 5
	.4byte _0807B594 @ case 6
	.4byte _0807B594 @ case 7
	.4byte _0807B594 @ case 8
	.4byte _0807B594 @ case 9
	.4byte _0807B58A @ case 10
_0807B4AC:
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	adds r1, r5, #0
	adds r1, #0x30
	ldr r2, _0807B4D0 @ =0x01000010
	mov r0, sp
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	b _0807B55C
	.align 2, 0
_0807B4D0: .4byte 0x01000010
_0807B4D4:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0807B594
	strh r0, [r5, #2]
	b _0807B594
_0807B4E8:
	movs r0, #0x9c
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x9d
	bl sub_08012F60
	strh r4, [r5, #0x10]
	strh r0, [r5, #0x12]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #4
	bl sub_0807BA04
	movs r0, #3
	strh r0, [r5, #2]
	b _0807B594
_0807B50E:
	adds r0, r5, #0
	adds r0, #0x30
	movs r1, #4
	bl sub_0807BA24
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B594
	ldrh r0, [r5, #0x30]
	strh r0, [r4, #0x2a]
	ldrh r0, [r5, #0x32]
	strh r0, [r4, #0x2c]
	movs r1, #0xa
	ldrsh r0, [r4, r1]
	cmp r0, #0xd
	bne _0807B534
	movs r0, #4
	strh r0, [r5, #2]
	b _0807B594
_0807B534:
	cmp r0, #0xe
	bne _0807B594
	b _0807B584
_0807B53A:
	movs r0, #0x9b
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080188EC
	adds r4, r5, #0
	adds r4, #0x10
	adds r1, r4, #0
	movs r2, #0xe
	bl CpuSet
	adds r0, r4, #0
	movs r1, #0x1c
	bl sub_0807BA04
_0807B55C:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807B594
_0807B564:
	adds r6, r5, #0
	adds r6, #0x30
	adds r0, r6, #0
	movs r1, #0x1c
	bl sub_0807BA24
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B594
	movs r0, #0x8c
	lsls r0, r0, #1
	adds r1, r4, r0
	adds r0, r6, #0
	movs r2, #0xe
	bl CpuSet
_0807B584:
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0807B594
_0807B58A:
	bl sub_08015134
	movs r0, #0
	strh r0, [r5, #2]
	movs r7, #0
_0807B594:
	adds r0, r7, #0
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807B5A0
sub_0807B5A0: @ 0x0807B5A0
	push {r4, r5, r6, lr}
	sub sp, #4
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, #0x50
	adds r2, r5, r0
	movs r6, #1
	ldrh r0, [r4, #2]
	cmp r0, #4
	bhi _0807B65C
	lsls r0, r0, #2
	ldr r1, _0807B5C8 @ =_0807B5CC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B5C8: .4byte _0807B5CC
_0807B5CC: @ jump table
	.4byte _0807B5E0 @ case 0
	.4byte _0807B610 @ case 1
	.4byte _0807B624 @ case 2
	.4byte _0807B638 @ case 3
	.4byte _0807B652 @ case 4
_0807B5E0:
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	adds r1, r4, #0
	adds r1, #0x30
	ldr r2, _0807B60C @ =0x01000010
	mov r0, sp
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807B65C
	.align 2, 0
_0807B60C: .4byte 0x01000010
_0807B610:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0807B65C
	strh r0, [r4, #2]
	b _0807B65C
_0807B624:
	ldrh r0, [r2, #2]
	strh r0, [r4, #0x10]
	adds r0, r4, #0
	adds r0, #0x10
	movs r1, #2
	bl sub_0807BA04
	movs r0, #3
	strh r0, [r4, #2]
	b _0807B65C
_0807B638:
	adds r0, r4, #0
	adds r0, #0x30
	movs r1, #2
	bl sub_0807BA24
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B65C
	ldrh r0, [r4, #0x30]
	strh r0, [r5, #0x2e]
	movs r0, #4
	strh r0, [r4, #2]
	b _0807B65C
_0807B652:
	bl sub_08015134
	movs r0, #0
	strh r0, [r4, #2]
	movs r6, #0
_0807B65C:
	adds r0, r6, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807B668
sub_0807B668: @ 0x0807B668
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #8
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	bl sub_0806F020
	adds r4, r0, #0
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	movs r1, #1
	mov sb, r1
	ldrh r0, [r5, #2]
	cmp r0, #0x3c
	bls _0807B68E
	b _0807B9D4
_0807B68E:
	lsls r0, r0, #2
	ldr r1, _0807B698 @ =_0807B69C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807B698: .4byte _0807B69C
_0807B69C: @ jump table
	.4byte _0807B790 @ case 0
	.4byte _0807B7C4 @ case 1
	.4byte _0807B9D4 @ case 2
	.4byte _0807B9D4 @ case 3
	.4byte _0807B9D4 @ case 4
	.4byte _0807B9D4 @ case 5
	.4byte _0807B9D4 @ case 6
	.4byte _0807B9D4 @ case 7
	.4byte _0807B9D4 @ case 8
	.4byte _0807B9D4 @ case 9
	.4byte _0807B7DC @ case 10
	.4byte _0807B84C @ case 11
	.4byte _0807B9D4 @ case 12
	.4byte _0807B9D4 @ case 13
	.4byte _0807B9D4 @ case 14
	.4byte _0807B9D4 @ case 15
	.4byte _0807B866 @ case 16
	.4byte _0807B9D4 @ case 17
	.4byte _0807B9D4 @ case 18
	.4byte _0807B9D4 @ case 19
	.4byte _0807B9D4 @ case 20
	.4byte _0807B9D4 @ case 21
	.4byte _0807B9D4 @ case 22
	.4byte _0807B9D4 @ case 23
	.4byte _0807B9D4 @ case 24
	.4byte _0807B9D4 @ case 25
	.4byte _0807B9D4 @ case 26
	.4byte _0807B9D4 @ case 27
	.4byte _0807B9D4 @ case 28
	.4byte _0807B9D4 @ case 29
	.4byte _0807B8EC @ case 30
	.4byte _0807B9D4 @ case 31
	.4byte _0807B9D4 @ case 32
	.4byte _0807B9D4 @ case 33
	.4byte _0807B9D4 @ case 34
	.4byte _0807B904 @ case 35
	.4byte _0807B9D4 @ case 36
	.4byte _0807B9D4 @ case 37
	.4byte _0807B9D4 @ case 38
	.4byte _0807B9D4 @ case 39
	.4byte _0807B9D4 @ case 40
	.4byte _0807B9D4 @ case 41
	.4byte _0807B9D4 @ case 42
	.4byte _0807B9D4 @ case 43
	.4byte _0807B9D4 @ case 44
	.4byte _0807B9D4 @ case 45
	.4byte _0807B9D4 @ case 46
	.4byte _0807B9D4 @ case 47
	.4byte _0807B9D4 @ case 48
	.4byte _0807B9D4 @ case 49
	.4byte _0807B9D4 @ case 50
	.4byte _0807B9D4 @ case 51
	.4byte _0807B9D4 @ case 52
	.4byte _0807B9D4 @ case 53
	.4byte _0807B9D4 @ case 54
	.4byte _0807B9D4 @ case 55
	.4byte _0807B9D4 @ case 56
	.4byte _0807B9D4 @ case 57
	.4byte _0807B9D4 @ case 58
	.4byte _0807B9D4 @ case 59
	.4byte _0807B9C4 @ case 60
_0807B790:
	movs r1, #0
	strh r6, [r5, #0xa]
	strh r1, [r4, #0x12]
	strh r1, [r4, #0x14]
	strh r1, [r5, #6]
	mov r0, sp
	strh r1, [r0]
	adds r1, r5, #0
	adds r1, #0x30
	ldr r2, _0807B7C0 @ =0x01000010
	bl CpuSet
	bl sub_08015134
	bl sub_08014D08
	bl sub_08015460
	bl sub_08015348
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0807B9D4
	.align 2, 0
_0807B7C0: .4byte 0x01000010
_0807B7C4:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0xa
	beq _0807B7D4
	b _0807B9D4
_0807B7D4:
	movs r0, #0
	strh r0, [r5, #6]
	strh r1, [r5, #2]
	b _0807B9D4
_0807B7DC:
	bl sub_08014D34
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _0807B812
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _0807B7FA
	strh r0, [r4, #0x20]
_0807B7FA:
	bl sub_08015120
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x10
	bne _0807B808
	strh r0, [r4, #0x20]
_0807B808:
	movs r0, #0
	strh r0, [r5, #6]
	movs r0, #0xb
	strh r0, [r5, #2]
	b _0807B9D4
_0807B812:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B834
	ldrh r0, [r5, #8]
	adds r0, #1
	strh r0, [r5, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _0807B82E
	b _0807B9BA
_0807B82E:
	movs r0, #0
	strh r0, [r5, #2]
	b _0807B9D4
_0807B834:
	ldrh r0, [r5, #6]
	adds r0, #1
	movs r1, #0
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	beq _0807B846
	b _0807B9D4
_0807B846:
	strh r1, [r5, #6]
	strh r1, [r5, #2]
	b _0807B9D4
_0807B84C:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	beq _0807B85C
	b _0807B9D4
_0807B85C:
	movs r0, #0
	strh r0, [r5, #6]
	movs r0, #0x10
	strh r0, [r5, #2]
	b _0807B9D4
_0807B866:
	bl sub_08015334
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B888
	mov r4, sp
	adds r4, #2
	ldr r0, _0807B8E8 @ =0x0000ABCD
	strh r0, [r4]
	bl sub_08015224
	adds r0, r4, #0
	movs r1, #2
	bl sub_08015278
	bl sub_08015204
_0807B888:
	adds r7, r5, #0
	adds r7, #0x30
	bl sub_0806F020
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r6, r0, r1
	movs r0, #1
	mov r8, r0
	ldrh r4, [r6, #4]
	cmp r4, #0
	bne _0807B8C2
	bl sub_0801544C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	blo _0807B8C2
	bl sub_08015224
	adds r0, r7, #0
	movs r1, #2
	bl sub_08015398
	bl sub_08015204
	strh r4, [r6, #4]
	movs r1, #0
	mov r8, r1
_0807B8C2:
	mov r2, r8
	cmp r2, #0
	bne _0807B8D6
	ldrh r1, [r5, #0x30]
	ldr r0, _0807B8E8 @ =0x0000ABCD
	cmp r1, r0
	bne _0807B8D6
	strh r2, [r5, #6]
	movs r0, #0x1e
	strh r0, [r5, #2]
_0807B8D6:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B9AC
	movs r0, #0
	b _0807B9AA
	.align 2, 0
_0807B8E8: .4byte 0x0000ABCD
_0807B8EC:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bne _0807B9D4
	movs r0, #0
	strh r0, [r5, #6]
	movs r0, #0x23
	strh r0, [r5, #2]
	b _0807B9D4
_0807B904:
	bl sub_08015334
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807B938
	add r4, sp, #4
	ldr r0, _0807B98C @ =0x0000EFAB
	strh r0, [r4]
	bl sub_08015224
	adds r0, r4, #0
	movs r1, #2
	bl sub_08015278
	bl sub_08015204
	adds r4, r5, #0
	adds r4, #0xa
	bl sub_08015224
	adds r0, r4, #0
	movs r1, #2
	bl sub_08015278
	bl sub_08015204
_0807B938:
	adds r7, r5, #0
	adds r7, #0x30
	bl sub_0806F020
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r6, r0, r1
	movs r0, #1
	mov r8, r0
	ldrh r4, [r6, #4]
	cmp r4, #0
	bne _0807B972
	bl sub_0801544C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	blo _0807B972
	bl sub_08015224
	adds r0, r7, #0
	movs r1, #4
	bl sub_08015398
	bl sub_08015204
	strh r4, [r6, #4]
	movs r1, #0
	mov r8, r1
_0807B972:
	mov r0, r8
	cmp r0, #0
	bne _0807B998
	ldrh r1, [r5, #0x30]
	ldr r0, _0807B98C @ =0x0000EFAB
	cmp r1, r0
	bne _0807B998
	ldrh r0, [r5, #0xa]
	ldrh r1, [r5, #0x32]
	cmp r0, r1
	bne _0807B990
	movs r0, #1
	b _0807B992
	.align 2, 0
_0807B98C: .4byte 0x0000EFAB
_0807B990:
	movs r0, #0x7f
_0807B992:
	strh r0, [r5]
	movs r0, #0x3c
	strh r0, [r5, #2]
_0807B998:
	bl sub_080151E4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807B9AC
	movs r0, #0x7f
	strh r0, [r5]
	movs r0, #0x3c
_0807B9AA:
	strh r0, [r5, #2]
_0807B9AC:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bne _0807B9D4
_0807B9BA:
	movs r0, #0x7f
	strh r0, [r5]
	movs r0, #0x3c
	strh r0, [r5, #2]
	b _0807B9D4
_0807B9C4:
	bl sub_08015134
	bl sub_08014D08
	movs r0, #0
	strh r0, [r5, #6]
	strh r0, [r5, #2]
	mov sb, r0
_0807B9D4:
	mov r0, sb
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807B9E4
sub_0807B9E4: @ 0x0807B9E4
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r2, r0, r1
	movs r1, #0
	strh r1, [r2, #2]
	strh r1, [r0, #4]
	strh r4, [r0, #0x10]
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0807BA04
sub_0807BA04: @ 0x0807BA04
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r4, r1, #0x18
	lsrs r4, r4, #0x18
	bl sub_08015224
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08015278
	bl sub_08015204
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0807BA24
sub_0807BA24: @ 0x0807BA24
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	mov r8, r0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	bl sub_0806F020
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r5, r0, r1
	movs r7, #1
	ldrh r4, [r5, #4]
	cmp r4, #0
	bne _0807BA62
	bl sub_0801544C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r6
	blo _0807BA62
	bl sub_08015224
	mov r0, r8
	adds r1, r6, #0
	bl sub_08015398
	bl sub_08015204
	strh r4, [r5, #4]
	movs r7, #0
_0807BA62:
	adds r0, r7, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807BA70
sub_0807BA70: @ 0x0807BA70
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	ldr r4, _0807BAD8 @ =0x0000090C
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	strh r5, [r7, #4]
	strh r6, [r7, #6]
	mov r2, r8
	strh r2, [r7, #8]
	cmp r5, #1
	beq _0807BAD0
	cmp r5, #4
	beq _0807BAD0
	cmp r5, #6
	bne _0807BADC
_0807BAD0:
	mov r0, sb
	strh r0, [r7, #0xa]
	b _0807BB48
	.align 2, 0
_0807BAD8: .4byte 0x0000090C
_0807BADC:
	cmp r5, #2
	bne _0807BB08
	add r4, sp, #0xc
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #8]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #6]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0xc]
	ldr r0, [sp, #0xc]
	bl sub_0806F038
	b _0807BB48
_0807BB08:
	cmp r5, #3
	bne _0807BB48
	add r4, sp, #0x10
	adds r0, r4, #0
	bl sub_0806F054
	ldr r1, [sp, #0x10]
	ldr r2, _0807BBB8 @ =0x00000742
	adds r0, r7, r2
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r1, [sp, #0x10]
	movs r2, #0xe8
	lsls r2, r2, #3
	adds r0, r7, r2
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r1, [sp, #0x10]
	ldr r2, _0807BBBC @ =0x0000073E
	adds r0, r7, r2
	strh r1, [r0]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r1, [sp, #0x10]
	ldr r2, _0807BBC0 @ =0x0000073C
	adds r0, r7, r2
	strh r1, [r0]
_0807BB48:
	movs r0, #3
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807BBB8: .4byte 0x00000742
_0807BBBC: .4byte 0x0000073E
_0807BBC0: .4byte 0x0000073C

	thumb_func_start sub_0807BBC4
sub_0807BBC4: @ 0x0807BBC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	adds r7, r0, #0
	movs r4, #1
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _0807BBF4
	cmp r0, #1
	bgt _0807BBE8
	cmp r0, #0
	beq _0807BBEE
	b _0807BC1A
_0807BBE8:
	cmp r0, #2
	beq _0807BC06
	b _0807BC1A
_0807BBEE:
	bl sub_0807BDC0
	b _0807BBF8
_0807BBF4:
	bl sub_0807BFD0
_0807BBF8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807BC1A
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	b _0807BC1A
_0807BC06:
	bl sub_0807C9FC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807BC1A
	movs r4, #0
	strh r4, [r7]
	ldr r0, _0807BD80 @ =0x0000090C
	bl sub_0806EFF0
_0807BC1A:
	lsls r4, r4, #0x10
	mov sl, r4
	ldr r0, _0807BD84 @ =0x00000864
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807BD88 @ =0x00000904
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807BC3C
	adds r0, r4, #0
	bl sub_0800A778
_0807BC3C:
	ldr r0, _0807BD8C @ =0x0000088C
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807BD90 @ =0x00000905
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807BC5A
	adds r0, r4, #0
	bl sub_0800A778
_0807BC5A:
	ldr r0, _0807BD94 @ =0x000008B4
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807BD98 @ =0x00000906
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807BC78
	adds r0, r4, #0
	bl sub_0800A778
_0807BC78:
	ldr r0, _0807BD9C @ =0x000008DC
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807BDA0 @ =0x00000907
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807BC96
	adds r0, r4, #0
	bl sub_0800A778
_0807BC96:
	ldrh r0, [r7, #4]
	cmp r0, #2
	bne _0807BD6C
	ldr r0, _0807BDA4 @ =0x00000744
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_08009FF8
	ldr r1, _0807BDA8 @ =0x0000085C
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BCB6
	adds r0, r5, #0
	bl sub_0800A778
_0807BCB6:
	ldr r0, _0807BDAC @ =0x0000076C
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_08009FF8
	ldr r1, _0807BDB0 @ =0x0000085D
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BCD0
	adds r0, r5, #0
	bl sub_0800A778
_0807BCD0:
	ldr r0, _0807BDB4 @ =0x00000794
	adds r5, r7, r0
	adds r0, r5, #0
	bl sub_08009FF8
	ldr r1, _0807BDB8 @ =0x0000085E
	adds r0, r7, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BCEA
	adds r0, r5, #0
	bl sub_0800A778
_0807BCEA:
	ldr r0, _0807BDBC @ =0x000007BC
	adds r5, r7, r0
	movs r1, #3
	mov sb, r1
_0807BCF2:
	adds r0, r5, #0
	bl sub_08009FF8
	ldr r0, _0807BDA8 @ =0x0000085C
	adds r0, r0, r7
	mov r8, r0
	add r0, sb
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807BD0C
	adds r0, r5, #0
	bl sub_0800A778
_0807BD0C:
	adds r6, r5, #0
	adds r6, #0x28
	mov r4, sb
	adds r4, #1
	adds r0, r6, #0
	bl sub_08009FF8
	add r4, r8
	ldrb r0, [r4]
	cmp r0, #1
	bne _0807BD28
	adds r0, r6, #0
	bl sub_0800A778
_0807BD28:
	adds r6, r5, #0
	adds r6, #0x50
	mov r4, sb
	adds r4, #2
	adds r0, r6, #0
	bl sub_08009FF8
	add r4, r8
	ldrb r0, [r4]
	cmp r0, #1
	bne _0807BD44
	adds r0, r6, #0
	bl sub_0800A778
_0807BD44:
	adds r6, r5, #0
	adds r6, #0x78
	mov r4, sb
	adds r4, #3
	adds r0, r6, #0
	bl sub_08009FF8
	add r4, r8
	ldrb r0, [r4]
	cmp r0, #1
	bne _0807BD60
	adds r0, r6, #0
	bl sub_0800A778
_0807BD60:
	adds r5, #0xa0
	movs r1, #4
	add sb, r1
	mov r0, sb
	cmp r0, #6
	bls _0807BCF2
_0807BD6C:
	mov r1, sl
	asrs r0, r1, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807BD80: .4byte 0x0000090C
_0807BD84: .4byte 0x00000864
_0807BD88: .4byte 0x00000904
_0807BD8C: .4byte 0x0000088C
_0807BD90: .4byte 0x00000905
_0807BD94: .4byte 0x000008B4
_0807BD98: .4byte 0x00000906
_0807BD9C: .4byte 0x000008DC
_0807BDA0: .4byte 0x00000907
_0807BDA4: .4byte 0x00000744
_0807BDA8: .4byte 0x0000085C
_0807BDAC: .4byte 0x0000076C
_0807BDB0: .4byte 0x0000085D
_0807BDB4: .4byte 0x00000794
_0807BDB8: .4byte 0x0000085E
_0807BDBC: .4byte 0x000007BC

	thumb_func_start sub_0807BDC0
sub_0807BDC0: @ 0x0807BDC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bne _0807BDDA
	b _0807BF6C
_0807BDDA:
	cmp r0, #1
	bgt _0807BDE4
	cmp r0, #0
	beq _0807BDF2
	b _0807BFBC
_0807BDE4:
	cmp r0, #2
	bne _0807BDEA
	b _0807BFA2
_0807BDEA:
	cmp r0, #3
	bne _0807BDF0
	b _0807BFB6
_0807BDF0:
	b _0807BFBC
_0807BDF2:
	mov r2, sb
	strh r0, [r2, #0x14]
	bl sub_0807CA64
	mov r0, sb
	adds r0, #0x14
	ldr r1, _0807BF4C @ =0x00000714
	add r1, sb
	bl sub_080072F8
	mov r1, sb
	ldrh r0, [r1, #6]
	bl sub_0807D0BC
	movs r2, #0
	mov sl, r2
	ldr r7, _0807BF50 @ =0x00000864
	add r7, sb
_0807BE16:
	adds r0, r7, #0
	bl sub_08009F0C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r5, _0807BF54 @ =0x00000904
	add r5, sb
	mov r1, sl
	adds r0, r5, r1
	movs r6, #0
	strb r6, [r0]
	adds r4, r7, #0
	adds r4, #0x28
	movs r2, #1
	add r2, sl
	mov r8, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	add r5, r8
	strb r6, [r5]
	adds r7, #0x50
	movs r0, #2
	add sl, r0
	mov r1, sl
	cmp r1, #3
	bls _0807BE16
	ldr r0, _0807BF58 @ =0x00000908
	add r0, sb
	movs r1, #1
	strb r1, [r0]
	movs r2, #0
	mov sl, r2
	ldr r7, _0807BF5C @ =0x00000744
	add r7, sb
	adds r0, r7, #0
	bl sub_08009F0C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r0, _0807BF60 @ =0x0000085C
	add r0, sb
	mov r1, sl
	strb r1, [r0]
	ldr r7, _0807BF64 @ =0x0000076C
	add r7, sb
	movs r2, #1
	mov sl, r2
_0807BECE:
	adds r0, r7, #0
	bl sub_08009F0C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r5, _0807BF60 @ =0x0000085C
	add r5, sb
	mov r1, sl
	adds r0, r5, r1
	movs r6, #0
	strb r6, [r0]
	adds r4, r7, #0
	adds r4, #0x28
	movs r2, #1
	add r2, sl
	mov r8, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x10
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	add r5, r8
	strb r6, [r5]
	adds r7, #0x50
	movs r0, #2
	add sl, r0
	mov r1, sl
	cmp r1, #6
	bls _0807BECE
	ldr r1, _0807BF68 @ =0x00000863
	add r1, sb
	movs r0, #1
	strb r0, [r1]
	b _0807BFAC
	.align 2, 0
_0807BF4C: .4byte 0x00000714
_0807BF50: .4byte 0x00000864
_0807BF54: .4byte 0x00000904
_0807BF58: .4byte 0x00000908
_0807BF5C: .4byte 0x00000744
_0807BF60: .4byte 0x0000085C
_0807BF64: .4byte 0x0000076C
_0807BF68: .4byte 0x00000863
_0807BF6C:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	mov r1, sb
	ldrh r0, [r1, #2]
	adds r0, #1
	b _0807BFBA
_0807BFA2:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807BFBC
_0807BFAC:
	mov r2, sb
	ldrh r0, [r2, #2]
	adds r0, #1
	strh r0, [r2, #2]
	b _0807BFBC
_0807BFB6:
	movs r0, #0
	mov r1, sb
_0807BFBA:
	strh r0, [r1, #2]
_0807BFBC:
	mov r2, sb
	movs r1, #2
	ldrsh r0, [r2, r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807BFD0
sub_0807BFD0: @ 0x0807BFD0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0x33
	bls _0807BFF0
	bl _0807C9EA
_0807BFF0:
	lsls r0, r0, #2
	ldr r1, _0807BFFC @ =_0807C000
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807BFFC: .4byte _0807C000
_0807C000: @ jump table
	.4byte _0807C0D0 @ case 0
	.4byte _0807C9EA @ case 1
	.4byte _0807C9EA @ case 2
	.4byte _0807C9EA @ case 3
	.4byte _0807C9EA @ case 4
	.4byte _0807C9EA @ case 5
	.4byte _0807C9EA @ case 6
	.4byte _0807C9EA @ case 7
	.4byte _0807C9EA @ case 8
	.4byte _0807C9EA @ case 9
	.4byte _0807C564 @ case 10
	.4byte _0807C9EA @ case 11
	.4byte _0807C9EA @ case 12
	.4byte _0807C9EA @ case 13
	.4byte _0807C9EA @ case 14
	.4byte _0807C9EA @ case 15
	.4byte _0807C9EA @ case 16
	.4byte _0807C9EA @ case 17
	.4byte _0807C9EA @ case 18
	.4byte _0807C9EA @ case 19
	.4byte _0807C5D2 @ case 20
	.4byte _0807C5E8 @ case 21
	.4byte _0807C9EA @ case 22
	.4byte _0807C9EA @ case 23
	.4byte _0807C9EA @ case 24
	.4byte _0807C662 @ case 25
	.4byte _0807C676 @ case 26
	.4byte _0807C9EA @ case 27
	.4byte _0807C77C @ case 28
	.4byte _0807C798 @ case 29
	.4byte _0807C7E0 @ case 30
	.4byte _0807C7F2 @ case 31
	.4byte _0807C9EA @ case 32
	.4byte _0807C9EA @ case 33
	.4byte _0807C9EA @ case 34
	.4byte _0807C9EA @ case 35
	.4byte _0807C9EA @ case 36
	.4byte _0807C9EA @ case 37
	.4byte _0807C9EA @ case 38
	.4byte _0807C9EA @ case 39
	.4byte _0807C846 @ case 40
	.4byte _0807C9EA @ case 41
	.4byte _0807C9EA @ case 42
	.4byte _0807C9EA @ case 43
	.4byte _0807C9EA @ case 44
	.4byte _0807C9EA @ case 45
	.4byte _0807C9EA @ case 46
	.4byte _0807C9EA @ case 47
	.4byte _0807C9EA @ case 48
	.4byte _0807C9EA @ case 49
	.4byte _0807C93C @ case 50
	.4byte _0807C970 @ case 51
_0807C0D0:
	adds r4, r7, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r4
	cmp r0, #3
	beq _0807C0E8
	bl _0807C9EA
_0807C0E8:
	ldr r0, _0807C138 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0807C140
	mov r0, r8
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r2, _0807C13C @ =0x00000908
	adds r0, r7, r2
	movs r1, #1
	strb r1, [r0]
	subs r2, #0xa5
	adds r0, r7, r2
	strb r1, [r0]
	mov r0, r8
	bl sub_080079E0
	mov r0, r8
	bl sub_08008D30
	strh r0, [r7, #6]
	mov r0, r8
	bl sub_08008D50
	strh r0, [r7, #8]
	ldrh r0, [r7, #6]
	cmp r0, r4
	bne _0807C12E
	bl _0807C9EA
_0807C12E:
	bl sub_0807D0BC
	movs r0, #0x64
	b _0807C574
	.align 2, 0
_0807C138: .4byte gCurrentKeyPress
_0807C13C: .4byte 0x00000908
_0807C140:
	ldr r0, _0807C194 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0807C14E
	b _0807C408
_0807C14E:
	mov r0, r8
	bl sub_08008D30
	strh r0, [r7, #6]
	mov r0, r8
	bl sub_08008D50
	strh r0, [r7, #8]
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0807C250
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0807C22C
	adds r0, r4, #0
	bl sub_080638C8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807C198
	movs r0, #0x14
	strh r0, [r7, #2]
	bl _0807C9EA
	.align 2, 0
_0807C194: .4byte gKeyNewPress
_0807C198:
	adds r0, r4, #0
	bl sub_080638E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807C1F0
	bl sub_08018598
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807C1C0
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0807C1BC @ =gUnk_08BC9EFC
	b _0807C88A
	.align 2, 0
_0807C1BC: .4byte gUnk_08BC9EFC
_0807C1C0:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r7, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r2, #8
	ldrsh r1, [r7, r2]
	movs r0, #3
	bl sub_0806F0CC
	adds r1, r4, #0
	b _0807C6C8
_0807C1F0:
	cmp r4, #0xa
	bne _0807C208
	ldr r0, _0807C204 @ =0x000001CB
	bl sub_08012F60
	cmp r0, #1
	beq _0807C202
	bl _0807C9EA
_0807C202:
	b _0807C226
	.align 2, 0
_0807C204: .4byte 0x000001CB
_0807C208:
	cmp r4, #0xb
	bne _0807C21C
	movs r0, #0xe4
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #1
	beq _0807C21A
	b _0807C9EA
_0807C21A:
	b _0807C226
_0807C21C:
	cmp r4, #0xc
	beq _0807C226
	cmp r4, #0xd
	beq _0807C226
	b _0807C9EA
_0807C226:
	movs r0, #0x19
	strh r0, [r7, #2]
	b _0807C9EA
_0807C22C:
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x63
	beq _0807C23C
	b _0807C9EA
_0807C23C:
	adds r0, r4, #0
	subs r0, #0x96
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x31
	bls _0807C24A
	b _0807C9EA
_0807C24A:
	movs r0, #0x1c
	strh r0, [r7, #2]
	b _0807C9EA
_0807C250:
	cmp r0, #1
	beq _0807C25C
	cmp r0, #4
	beq _0807C25C
	cmp r0, #6
	bne _0807C2AC
_0807C25C:
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r1, [r7, #6]
	adds r0, r0, r1
	ldrb r6, [r0]
	movs r5, #0
	b _0807C272
_0807C26C:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0807C272:
	cmp r5, #3
	bhi _0807C290
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r6
	bne _0807C26C
	adds r0, r4, #0
	movs r1, #0xff
	bl SetBattleAidItem
_0807C290:
	ldrb r0, [r7, #0xa]
	adds r1, r6, #0
	bl SetBattleAidItem
	mov r0, r8
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	movs r0, #0
	strh r0, [r7, #0xe]
	movs r0, #0xa
	strh r0, [r7, #2]
	b _0807C9EA
_0807C2AC:
	cmp r0, #2
	bne _0807C334
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r1, [r7, #6]
	adds r0, r0, r1
	ldrb r6, [r0]
	add r0, sp, #8
	bl sub_0806F054
	ldr r0, [sp, #8]
	lsls r5, r0, #0x18
	lsrs r5, r5, #0x18
	bl sub_0806F038
	adds r0, r5, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	adds r4, r0, #0
	subs r4, #2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	lsls r1, r4, #2
	adds r1, r1, r4
	lsls r1, r1, #3
	ldr r2, _0807C330 @ =0x0000FFCE
	adds r6, r6, r2
	adds r1, r1, r6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	adds r1, r5, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r7, #6]
	bl sub_0806F038
	ldrh r0, [r7, #8]
	bl sub_0806F038
	b _0807C6CE
	.align 2, 0
_0807C330: .4byte 0x0000FFCE
_0807C334:
	cmp r0, #3
	bne _0807C3FC
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r1, [r7, #6]
	adds r0, r0, r1
	ldrb r6, [r0]
	ldr r2, _0807C3EC @ =0x00000742
	adds r2, r2, r7
	mov sb, r2
	ldrh r0, [r2]
	lsls r0, r0, #1
	ldr r1, _0807C3F0 @ =0x0000073C
	adds r1, r1, r7
	mov r8, r1
	add r0, r8
	ldrh r5, [r0]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0807C3F4 @ =0x0000FFFF
	cmp r5, r0
	beq _0807C37E
	movs r4, #0xff
	ands r4, r5
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_0807C37E:
	adds r0, r6, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl SetItemQuantity
	mov r2, sb
	ldrh r0, [r2]
	lsls r0, r0, #1
	add r0, r8
	strh r6, [r0]
	movs r0, #0
	movs r1, #0x1c
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	mov r1, sb
	ldrh r0, [r1]
	bl sub_0806F038
	mov r2, r8
	ldrh r0, [r2]
	bl sub_0806F038
	ldr r1, _0807C3F8 @ =0x0000073E
	adds r0, r7, r1
	ldrh r0, [r0]
	bl sub_0806F038
	movs r2, #0xe8
	lsls r2, r2, #3
	adds r0, r7, r2
	ldrh r0, [r0]
	bl sub_0806F038
	b _0807C6CE
	.align 2, 0
_0807C3EC: .4byte 0x00000742
_0807C3F0: .4byte 0x0000073C
_0807C3F4: .4byte 0x0000FFFF
_0807C3F8: .4byte 0x0000073E
_0807C3FC:
	cmp r0, #5
	beq _0807C402
	b _0807C9EA
_0807C402:
	movs r0, #0x32
	strh r0, [r7, #2]
	b _0807C9EA
_0807C408:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807C412
	b _0807C9EA
_0807C412:
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0807C436
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	b _0807C70E
_0807C436:
	cmp r0, #1
	bne _0807C462
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	b _0807C6CA
_0807C462:
	cmp r0, #4
	bne _0807C48E
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	b _0807C6CA
_0807C48E:
	cmp r0, #6
	bne _0807C4BA
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	b _0807C6CA
_0807C4BA:
	cmp r0, #2
	bne _0807C4F6
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	add r0, sp, #0xc
	bl sub_0806F054
	b _0807C71A
_0807C4F6:
	cmp r0, #3
	beq _0807C4FC
	b _0807C9EA
_0807C4FC:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1c
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldr r1, _0807C558 @ =0x00000742
	adds r0, r7, r1
	ldrh r0, [r0]
	bl sub_0806F038
	ldr r2, _0807C55C @ =0x0000073C
	adds r0, r7, r2
	ldrh r0, [r0]
	bl sub_0806F038
	ldr r1, _0807C560 @ =0x0000073E
	adds r0, r7, r1
	ldrh r0, [r0]
	bl sub_0806F038
	movs r2, #0xe8
	lsls r2, r2, #3
	adds r0, r7, r2
	ldrh r0, [r0]
	bl sub_0806F038
	b _0807C6CE
	.align 2, 0
_0807C558: .4byte 0x00000742
_0807C55C: .4byte 0x0000073C
_0807C560: .4byte 0x0000073E
_0807C564:
	ldrh r0, [r7, #0xe]
	adds r0, #1
	strh r0, [r7, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0807C57C
	movs r0, #0x65
_0807C574:
	movs r1, #0
	bl sub_080147B8
	b _0807C9EA
_0807C57C:
	cmp r0, #0x1e
	beq _0807C582
	b _0807C9EA
_0807C582:
	ldrh r0, [r7, #4]
	cmp r0, #1
	beq _0807C592
	cmp r0, #4
	beq _0807C592
	cmp r0, #6
	beq _0807C592
	b _0807C6CE
_0807C592:
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r7, #4]
	cmp r0, #4
	bne _0807C5B2
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _0807C5BE
_0807C5B2:
	cmp r0, #6
	bne _0807C5BE
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_0807C5BE:
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	b _0807C6CE
_0807C5D2:
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrh r1, [r7, #6]
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_0806F620
	b _0807C95E
_0807C5E8:
	bl sub_0806C294
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807C5F6
	b _0807C9EA
_0807C5F6:
	bl sub_0806F678
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r2, [r7, #6]
	adds r1, r1, r2
	ldrb r6, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807C654
	adds r0, r6, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl SetItemQuantity
	movs r5, #0
	b _0807C626
_0807C624:
	adds r5, #1
_0807C626:
	cmp r5, #3
	bls _0807C62C
	b _0807C7DA
_0807C62C:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r6
	bne _0807C624
	adds r0, r6, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807C624
	adds r0, r4, #0
	movs r1, #0xff
	bl SetBattleAidItem
	b _0807C7DA
_0807C654:
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E34
	strh r4, [r7, #2]
	b _0807C9EA
_0807C662:
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	ldrb r1, [r0]
	movs r0, #1
	bl sub_0806BC24
	b _0807C95E
_0807C676:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	beq _0807C684
	b _0807C9EA
_0807C684:
	bl sub_0806F60C
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r2, [r7, #6]
	adds r1, r1, r2
	ldrb r1, [r1]
	adds r4, r1, #0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807C69E
	b _0807C9DE
_0807C69E:
	cmp r1, #0xa
	bne _0807C6D8
	movs r0, #0
	movs r1, #0x18
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r7, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r2, #8
	ldrsh r1, [r7, r2]
_0807C6C8:
	movs r0, #4
_0807C6CA:
	bl sub_0806F0CC
_0807C6CE:
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r7, #2]
	b _0807C9EA
_0807C6D8:
	cmp r1, #0xb
	bne _0807C728
	movs r0, #0xb
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0xb
	bl SetItemQuantity
	ldr r0, _0807C724 @ =0x000001C9
	movs r1, #2
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
_0807C70E:
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
_0807C71A:
	movs r2, #0
	mov sb, r2
	mov r0, sb
	strh r0, [r7, #2]
	b _0807C9EA
	.align 2, 0
_0807C724: .4byte 0x000001C9
_0807C728:
	cmp r1, #0xc
	bne _0807C74C
	movs r0, #0xc
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0xc
	bl SetItemQuantity
	movs r0, #0xf3
	lsls r0, r0, #1
	movs r1, #2
	bl sub_08012F0C
	b _0807C7DA
_0807C74C:
	cmp r1, #0xd
	bne _0807C770
	movs r0, #0xd
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0xd
	bl SetItemQuantity
	movs r0, #0xf3
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	b _0807C7DA
_0807C770:
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	b _0807C7D0
_0807C77C:
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08018B50
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	movs r0, #3
	b _0807C956
_0807C798:
	bl sub_0806B750
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	beq _0807C7A6
	b _0807C9EA
_0807C7A6:
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r2, [r7, #6]
	adds r1, r1, r2
	ldrb r4, [r1]
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0807C7C6
	b _0807C9DE
_0807C7C6:
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, r1, r6
_0807C7D0:
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_0807C7DA:
	movs r0, #0x28
	strh r0, [r7, #2]
	b _0807C9EA
_0807C7E0:
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r7, #0x18]
	bl sub_0806A040
	b _0807C968
_0807C7F2:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807C800
	b _0807C9EA
_0807C800:
	ldr r0, _0807C818 @ =gUnk_08BC9EFC
	ldr r1, [r7, #0x18]
	ldr r0, [r0]
	cmp r1, r0
	bne _0807C81C
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r7, #2]
	b _0807C9EA
	.align 2, 0
_0807C818: .4byte gUnk_08BC9EFC
_0807C81C:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r7, #2]
	movs r0, #0
	mov sb, r0
	b _0807C9EA
_0807C846:
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807C8A0
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	ldrb r0, [r0]
	bl sub_08063868
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0807C870
	movs r0, #0
	bl sub_080012D4
	b _0807C876
_0807C870:
	movs r0, #1
	bl sub_080012D4
_0807C876:
	ldr r0, _0807C894 @ =gUnk_02010800
	ldr r3, _0807C898 @ =gUnk_080BFDF8
	movs r1, #0x11
	movs r2, #3
	bl sub_08001284
	movs r0, #0
	bl sub_080012D4
	ldr r0, _0807C89C @ =gUnk_08BC9EF8
_0807C88A:
	ldr r0, [r0]
	str r0, [r7, #0x18]
	movs r0, #0x1e
	strh r0, [r7, #2]
	b _0807C9EA
	.align 2, 0
_0807C894: .4byte gUnk_02010800
_0807C898: .4byte gUnk_080BFDF8
_0807C89C: .4byte gUnk_08BC9EF8
_0807C8A0:
	adds r6, r7, #0
	adds r6, #0x14
	adds r0, r6, #0
	bl sub_08008D30
	movs r1, #0
	mov r8, r1
	strh r0, [r7, #6]
	adds r0, r6, #0
	bl sub_08008D50
	strh r0, [r7, #8]
	ldr r2, _0807C92C @ =0x0000071E
	adds r5, r7, r2
	ldrb r4, [r5]
	bl sub_0807CA64
	subs r4, #1
	ldrb r5, [r5]
	cmp r4, r5
	bne _0807C8FE
	lsls r4, r4, #1
	adds r2, r4, #2
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	movs r0, #2
	str r0, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #2
	movs r3, #2
	bl sub_0801BBB8
	adds r4, #3
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	movs r0, #1
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r0, #2
	movs r1, #0x10
	adds r2, r4, #0
	movs r3, #3
	bl sub_0801BBB8
_0807C8FE:
	ldr r2, _0807C930 @ =0x00000714
	adds r1, r7, r2
	adds r0, r6, #0
	bl sub_080076B0
	ldr r1, _0807C934 @ =0x00000908
	adds r0, r7, r1
	movs r1, #1
	strb r1, [r0]
	ldr r2, _0807C938 @ =0x00000863
	adds r0, r7, r2
	strb r1, [r0]
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r7, #6]
	ldrh r0, [r7, #6]
	bl sub_0807D0BC
	mov r0, r8
	strh r0, [r7, #2]
	b _0807C9EA
	.align 2, 0
_0807C92C: .4byte 0x0000071E
_0807C930: .4byte 0x00000714
_0807C934: .4byte 0x00000908
_0807C938: .4byte 0x00000863
_0807C93C:
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r2, [r7, #6]
	adds r0, r0, r2
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08018B50
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	movs r0, #6
_0807C956:
	adds r1, r4, #0
	movs r2, #0
	bl sub_0806B698
_0807C95E:
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E34
_0807C968:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _0807C9EA
_0807C970:
	bl sub_0806B750
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _0807C9EA
	bl sub_0806F5F8
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r2, [r7, #6]
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	beq _0807C9DE
	movs r0, #0x96
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r0, #0x9c
	bl sub_08012F0C
	movs r0, #0x9d
	adds r1, r4, #0
	bl sub_08012F0C
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0xe
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r1, #0
	mov sb, r1
	mov r2, sb
	strh r2, [r7, #2]
	b _0807C9EA
_0807C9DE:
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E34
	strh r5, [r7, #2]
_0807C9EA:
	mov r0, sb
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807C9FC
sub_0807C9FC: @ 0x0807C9FC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807CA2C
	cmp r0, #1
	bgt _0807CA18
	cmp r0, #0
	beq _0807CA22
	b _0807CA5C
_0807CA18:
	cmp r0, #2
	beq _0807CA38
	cmp r0, #3
	beq _0807CA58
	b _0807CA5C
_0807CA22:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0807CA50
_0807CA2C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807CA5C
	b _0807CA50
_0807CA38:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
_0807CA50:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807CA5C
_0807CA58:
	movs r5, #0
	strh r5, [r4, #2]
_0807CA5C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807CA64
sub_0807CA64: @ 0x0807CA64
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	bl sub_0806F020
	adds r7, r0, #0
	ldr r0, _0807CAFC @ =0x00000714
	adds r0, r0, r7
	mov sb, r0
	movs r1, #0
	movs r0, #4
	mov r2, sb
	strb r0, [r2]
	movs r0, #2
	strb r0, [r2, #1]
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	ldrh r0, [r7, #6]
	strh r0, [r2, #2]
	ldrh r0, [r7, #8]
	strh r0, [r2, #4]
	movs r0, #0xe0
	strb r0, [r2, #0xd]
	movs r0, #0xf0
	strb r0, [r2, #0xc]
	adds r1, r7, #0
	adds r1, #0x1c
	str r1, [r2, #0x14]
	ldr r0, _0807CB00 @ =0x00000409
	adds r2, r7, r0
	mov r0, sb
	str r2, [r0, #0x18]
	movs r0, #0
	mov r8, r0
	ldrh r0, [r7, #4]
	cmp r0, #0
	bne _0807CB4E
	movs r6, #0
	str r1, [sp, #0xc]
	adds r5, r2, #0
	mov sl, r1
_0807CAC0:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CB46
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sl
	str r0, [r1]
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0807CB2E
	cmp r6, #0xa
	bne _0807CB0E
	ldr r0, _0807CB04 @ =0x000001CB
	bl sub_08012F60
	cmp r0, #1
	bne _0807CB08
	movs r2, #0
	strb r2, [r5]
	b _0807CB32
	.align 2, 0
_0807CAFC: .4byte 0x00000714
_0807CB00: .4byte 0x00000409
_0807CB04: .4byte 0x000001CB
_0807CB08:
	movs r0, #1
	strb r0, [r5]
	b _0807CB32
_0807CB0E:
	cmp r6, #0xb
	bne _0807CB28
	movs r0, #0xe4
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #1
	bne _0807CB22
	movs r1, #0
	b _0807CB30
_0807CB22:
	movs r2, #1
	strb r2, [r5]
	b _0807CB32
_0807CB28:
	movs r0, #0
	strb r0, [r5]
	b _0807CB32
_0807CB2E:
	movs r1, #1
_0807CB30:
	strb r1, [r5]
_0807CB32:
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	add r0, r8
	strb r6, [r0]
	adds r5, #1
	movs r0, #4
	add sl, r0
	movs r1, #1
	add r8, r1
_0807CB46:
	adds r6, #1
	cmp r6, #0xc7
	bls _0807CAC0
	b _0807CD10
_0807CB4E:
	cmp r0, #5
	bne _0807CBE0
	movs r6, #0
	str r1, [sp, #0xc]
	movs r0, #0x1c
	adds r0, r0, r7
	mov sl, r0
_0807CB5C:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CB94
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sl
	adds r1, #4
	mov sl, r1
	subs r1, #4
	stm r1!, {r0}
	ldr r2, _0807CBDC @ =0x00000409
	adds r0, r7, r2
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	add r0, r8
	strb r6, [r0]
	movs r2, #1
	add r8, r2
_0807CB94:
	adds r5, r6, #1
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CBCE
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sl
	adds r1, #4
	mov sl, r1
	subs r1, #4
	stm r1!, {r0}
	ldr r2, _0807CBDC @ =0x00000409
	adds r0, r7, r2
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	add r0, r8
	strb r5, [r0]
	movs r2, #1
	add r8, r2
_0807CBCE:
	adds r6, #2
	cmp r6, #0xc7
	bls _0807CB5C
	mov r0, r8
	lsls r4, r0, #2
	b _0807CDD4
	.align 2, 0
_0807CBDC: .4byte 0x00000409
_0807CBE0:
	cmp r0, #1
	beq _0807CBEC
	cmp r0, #4
	beq _0807CBEC
	cmp r0, #6
	bne _0807CC80
_0807CBEC:
	movs r6, #0
	adds r1, r7, #0
	adds r1, #0x1c
	str r1, [sp, #0xc]
	ldr r5, _0807CC78 @ =0x0000FFFF
_0807CBF6:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0807CC70
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CC70
	adds r0, r4, #0
	bl sub_0806380C
	mov r2, r8
	lsls r1, r2, #2
	ldr r2, [sp, #0xc]
	adds r1, r2, r1
	str r0, [r1]
	ldr r1, _0807CC7C @ =0x00000409
	adds r0, r7, r1
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	add r0, r8
	strb r6, [r0]
	ldrh r0, [r7, #6]
	cmp r0, r5
	bne _0807CC6C
	ldrb r0, [r7, #0xa]
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r6
	bne _0807CC6C
	mov r1, r8
	mov r0, sb
	strh r1, [r0, #2]
	mov r0, r8
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0807CC60
	movs r1, #0
_0807CC60:
	mov r2, sb
	strh r1, [r2, #4]
	mov r0, r8
	strh r0, [r7, #6]
	ldrh r0, [r2, #4]
	strh r0, [r7, #8]
_0807CC6C:
	movs r1, #1
	add r8, r1
_0807CC70:
	adds r6, #1
	cmp r6, #0xc7
	bls _0807CBF6
	b _0807CD10
	.align 2, 0
_0807CC78: .4byte 0x0000FFFF
_0807CC7C: .4byte 0x00000409
_0807CC80:
	cmp r0, #2
	bne _0807CD1C
	movs r6, #0x32
	str r1, [sp, #0xc]
	movs r0, #0x1c
	adds r0, r0, r7
	mov sl, r0
_0807CC8E:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CCC6
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sl
	adds r1, #4
	mov sl, r1
	subs r1, #4
	stm r1!, {r0}
	ldr r2, _0807CD18 @ =0x00000409
	adds r0, r7, r2
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	add r0, r8
	strb r6, [r0]
	movs r2, #1
	add r8, r2
_0807CCC6:
	adds r5, r6, #1
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CD00
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sl
	adds r1, #4
	mov sl, r1
	subs r1, #4
	stm r1!, {r0}
	ldr r2, _0807CD18 @ =0x00000409
	adds r0, r7, r2
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	add r0, r8
	strb r5, [r0]
	movs r2, #1
	add r8, r2
_0807CD00:
	adds r6, #2
	cmp r6, #0x59
	bls _0807CC8E
	mov r1, sb
	ldrh r0, [r1, #2]
	strh r0, [r7, #6]
	ldrh r0, [r1, #4]
	strh r0, [r7, #8]
_0807CD10:
	mov r2, r8
	lsls r4, r2, #2
	b _0807CDD4
	.align 2, 0
_0807CD18: .4byte 0x00000409
_0807CD1C:
	str r1, [sp, #0xc]
	movs r4, #0
	cmp r0, #3
	bne _0807CDD4
	ldr r1, _0807CDEC @ =gUnk_080BFDFB
	mov r0, sp
	movs r2, #4
	bl memcpy
	movs r2, #0
	mov sl, r2
_0807CD32:
	mov r1, sp
	adds r0, r1, r2
	ldrb r6, [r0]
	adds r1, r6, #0
	adds r1, #0x32
	str r0, [sp, #8]
	adds r2, #1
	str r2, [sp, #4]
	cmp r6, r1
	bhs _0807CDCE
	lsls r5, r6, #0x10
	mov r3, sl
	ldr r2, [sp, #0xc]
	adds r2, r3, r2
	str r2, [sp, #0x10]
_0807CD50:
	lsrs r0, r5, #0x10
	str r3, [sp, #0x14]
	bl sub_08018B50
	lsls r0, r0, #0x18
	ldr r3, [sp, #0x14]
	cmp r0, #0
	beq _0807CDBA
	ldr r1, _0807CDF0 @ =0x00000742
	adds r0, r7, r1
	ldrh r1, [r0]
	lsls r1, r1, #1
	ldr r2, _0807CDF4 @ =0x0000073C
	adds r0, r7, r2
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, _0807CDF8 @ =0xFFFF0000
	lsrs r2, r0, #0x10
	cmp r1, r2
	beq _0807CD8C
	movs r0, #0xff
	ands r0, r1
	cmp r6, r0
	bne _0807CD8C
	mov r0, r8
	mov r1, sb
	strh r0, [r1, #2]
	mov r0, r8
	ands r0, r2
	strh r0, [r7, #6]
_0807CD8C:
	lsrs r0, r5, #0x10
	str r3, [sp, #0x14]
	bl sub_0806380C
	ldr r1, [sp, #0x10]
	stm r1!, {r0}
	str r1, [sp, #0x10]
	ldr r2, _0807CDFC @ =0x00000409
	adds r0, r7, r2
	add r0, r8
	movs r1, #0
	strb r1, [r0]
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	add r0, r8
	strb r6, [r0]
	ldr r3, [sp, #0x14]
	adds r3, #4
	movs r2, #4
	add sl, r2
	movs r0, #1
	add r8, r0
_0807CDBA:
	movs r1, #0x80
	lsls r1, r1, #9
	adds r5, r5, r1
	adds r6, #1
	ldr r2, [sp, #8]
	ldrb r0, [r2]
	adds r0, #0x32
	adds r4, r3, #0
	cmp r6, r0
	blo _0807CD50
_0807CDCE:
	ldr r2, [sp, #4]
	cmp r2, #3
	bls _0807CD32
_0807CDD4:
	ldr r0, [sp, #0xc]
	adds r1, r0, r4
	movs r0, #0
	str r0, [r1]
	mov r1, r8
	cmp r1, #7
	bls _0807CE00
	movs r0, #7
	mov r2, sb
	strb r0, [r2, #0xa]
	movs r0, #0x1e
	b _0807CE0A
	.align 2, 0
_0807CDEC: .4byte gUnk_080BFDFB
_0807CDF0: .4byte 0x00000742
_0807CDF4: .4byte 0x0000073C
_0807CDF8: .4byte 0xFFFF0000
_0807CDFC: .4byte 0x00000409
_0807CE00:
	mov r1, r8
	mov r0, sb
	strb r1, [r0, #0xa]
	movs r0, #0x1a
	mov r2, sb
_0807CE0A:
	strh r0, [r2, #8]
	movs r1, #0
	movs r0, #0x7a
	mov r2, sb
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	ldr r2, _0807CE3C @ =0x000004D4
	adds r0, r7, r2
	mov r2, sb
	str r0, [r2, #0x20]
	ldr r0, _0807CE40 @ =0x06012400
	str r0, [r2, #0x1c]
	ldr r0, _0807CE44 @ =sub_0807CE48
	str r0, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807CE3C: .4byte 0x000004D4
_0807CE40: .4byte 0x06012400
_0807CE44: .4byte sub_0807CE48

	thumb_func_start sub_0807CE48
sub_0807CE48: @ 0x0807CE48
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r4, r1, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0x10]
	bl sub_0806F020
	adds r6, r0, #0
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r6, r1
	adds r0, r0, r4
	ldrb r0, [r0]
	mov sb, r0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	ldr r2, _0807CF8C @ =0x00000908
	adds r0, r6, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807CEB2
	movs r5, #0
	ldr r3, _0807CF90 @ =0x00000904
	adds r1, r6, r3
	movs r2, #0
_0807CE9C:
	adds r0, r1, r5
	strb r2, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #3
	bls _0807CE9C
	ldr r0, _0807CF8C @ =0x00000908
	adds r1, r6, r0
	movs r0, #0
	strb r0, [r1]
_0807CEB2:
	movs r5, #0
	subs r1, r7, #2
	str r1, [sp, #0x18]
	adds r2, r7, #0
	adds r2, #0xc
	str r2, [sp, #0x20]
	ldr r3, [sp, #0x10]
	adds r3, #1
	str r3, [sp, #0x1c]
	adds r7, #0xd
	str r7, [sp, #0x24]
	lsls r1, r1, #0x13
	mov r8, r1
	ldr r0, [sp, #0x10]
	lsls r7, r0, #0x13
_0807CED0:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807CF1C
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _0807CF1C
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, sb
	bne _0807CF1C
	ldr r1, _0807CF90 @ =0x00000904
	adds r0, r6, r1
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r0, r0, #3
	ldr r2, _0807CF94 @ =0x00000864
	adds r0, r0, r2
	adds r0, r6, r0
	mov r3, r8
	asrs r1, r3, #0x10
	asrs r2, r7, #0x10
	bl sub_0800A678
_0807CF1C:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #3
	bls _0807CED0
	ldrh r0, [r6, #4]
	cmp r0, #2
	bne _0807D00C
	ldr r1, _0807CF98 @ =0x00000863
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _0807CF54
	movs r5, #0
	ldr r2, _0807CF9C @ =0x0000085C
	adds r1, r6, r2
	movs r2, #0
_0807CF3E:
	adds r0, r1, r5
	strb r2, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #6
	bls _0807CF3E
	ldr r3, _0807CF98 @ =0x00000863
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
_0807CF54:
	ldrb r0, [r6, #0xc]
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r0, #2
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #0x13
	lsrs r1, r1, #0x10
	mov sl, r1
	adds r0, r4, #0
	bl sub_08063A48
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0x14
	ldr r0, [sp, #0x18]
	lsls r0, r0, #0x13
	mov r8, r0
	b _0807CFEC
	.align 2, 0
_0807CF8C: .4byte 0x00000908
_0807CF90: .4byte 0x00000904
_0807CF94: .4byte 0x00000864
_0807CF98: .4byte 0x00000863
_0807CF9C: .4byte 0x0000085C
_0807CFA0:
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r6, r2
	adds r1, r1, r4
	ldr r0, _0807D048 @ =0x0000FFCE
	add r0, sl
	ldrb r1, [r1]
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807CFE6
	ldr r3, _0807D04C @ =0x0000085C
	adds r0, r6, r3
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r0, r0, #3
	ldr r1, _0807D050 @ =0x00000744
	adds r0, r0, r1
	adds r0, r6, r0
	lsls r2, r5, #0x14
	movs r3, #0x80
	lsls r3, r3, #0xd
	adds r2, r2, r3
	asrs r2, r2, #0x10
	mov r3, r8
	asrs r1, r3, #0x10
	bl sub_0800A678
_0807CFE6:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0807CFEC:
	cmp r5, #6
	bhi _0807D00C
	adds r0, r7, #0
	bl sub_08008D50
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r7, #0
	bl sub_08008E94
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r0, #1
	cmp r0, r4
	bge _0807CFA0
_0807D00C:
	mov r0, sb
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0807D054 @ =gUnk_02010800
	ldr r1, [sp, #0x18]
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x10
	ldr r1, [sp, #0x10]
	str r1, [sp]
	ldr r1, [sp, #0xc]
	bl sub_08069DA8
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807D060
	mov r0, sb
	bl sub_08063868
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	beq _0807D058
	movs r0, #0
	bl sub_080012D4
	b _0807D06A
	.align 2, 0
_0807D048: .4byte 0x0000FFCE
_0807D04C: .4byte 0x0000085C
_0807D050: .4byte 0x00000744
_0807D054: .4byte gUnk_02010800
_0807D058:
	movs r0, #1
	bl sub_080012D4
	b _0807D06A
_0807D060:
	cmp r0, #1
	bne _0807D06A
	movs r0, #0
	bl sub_080012D4
_0807D06A:
	ldr r5, _0807D0B4 @ =gUnk_02010800
	ldr r2, [sp, #0x20]
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	ldr r3, [sp, #0x1c]
	lsls r4, r3, #0x10
	lsrs r4, r4, #0x10
	ldr r3, _0807D0B8 @ =gUnk_080BFE00
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08001284
	ldr r0, [sp, #0x24]
	lsls r3, r0, #0x10
	lsrs r3, r3, #0x10
	str r4, [sp]
	ldr r1, [sp, #0x14]
	str r1, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807D0B4: .4byte gUnk_02010800
_0807D0B8: .4byte gUnk_080BFE00

	thumb_func_start sub_0807D0BC
sub_0807D0BC: @ 0x0807D0BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	bl sub_0806F020
	adds r7, r0, #0
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	ldrh r1, [r7, #6]
	adds r0, r0, r1
	ldrb r5, [r0]
	ldr r6, _0807D1C4 @ =gUnk_02010800
	ldr r3, _0807D1C8 @ =gUnk_080BFE04
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #3
	bl sub_08001284
	ldr r3, _0807D1CC @ =gUnk_080BFE0C
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #7
	bl sub_08001284
	ldr r3, _0807D1D0 @ =gUnk_080BFE10
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #8
	bl sub_08001284
	ldr r3, _0807D1D4 @ =gUnk_080BFE14
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _0807D1D8 @ =gUnk_080BFE18
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _0807D1DC @ =gUnk_080BFE1C
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _0807D1E0 @ =gUnk_080BFE20
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #7
	bl sub_08001284
	ldr r4, _0807D1E4 @ =gUnk_080BFE28
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #8
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0xa
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0xb
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0xc
	adds r3, r4, #0
	bl sub_08001284
	ldrh r0, [r7, #4]
	cmp r0, #3
	beq _0807D258
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807D18C
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	beq _0807D18C
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D1E8
_0807D18C:
	adds r0, r5, #0
	bl sub_080638C8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r4, _0807D1C4 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080638E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	b _0807D246
	.align 2, 0
_0807D1C4: .4byte gUnk_02010800
_0807D1C8: .4byte gUnk_080BFE04
_0807D1CC: .4byte gUnk_080BFE0C
_0807D1D0: .4byte gUnk_080BFE10
_0807D1D4: .4byte gUnk_080BFE14
_0807D1D8: .4byte gUnk_080BFE18
_0807D1DC: .4byte gUnk_080BFE1C
_0807D1E0: .4byte gUnk_080BFE20
_0807D1E4: .4byte gUnk_080BFE28
_0807D1E8:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0807D2E0
	adds r0, r5, #0
	bl sub_08063968
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xa
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063984
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080639A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xc
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
_0807D246:
	ldr r0, _0807D254 @ =gUnk_02010800
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	b _0807D2E0
	.align 2, 0
_0807D254: .4byte gUnk_02010800
_0807D258:
	adds r0, r5, #0
	bl sub_08018AD8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D2E0
	adds r0, r5, #0
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xa
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xc
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x19
	bl sub_0806F2D0
_0807D2E0:
	ldrh r0, [r7, #0x12]
	adds r4, r7, #0
	adds r4, #0x12
	cmp r0, #0
	beq _0807D2F0
	adds r0, r4, #0
	bl sub_0800B4E4
_0807D2F0:
	adds r0, r5, #0
	bl sub_08063820
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	movs r0, #2
	mov r8, r0
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldrh r0, [r7, #0x10]
	adds r7, #0x10
	cmp r0, #0
	beq _0807D322
	adds r0, r7, #0
	bl sub_0800B4E4
_0807D322:
	ldr r4, _0807D358 @ =gUnk_08BC9DD8
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #4
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0x16
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807D358: .4byte gUnk_08BC9DD8

	thumb_func_start sub_0807D35C
sub_0807D35C: @ 0x0807D35C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	adds r4, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	movs r5, #0xeb
	lsls r5, r5, #2
	adds r0, r5, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r5, r5, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r5, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r5, #0
	bl CpuSet
	movs r5, #0
	strh r4, [r7, #4]
	strh r6, [r7, #6]
	mov r0, r8
	strh r0, [r7, #8]
	subs r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	cmp r4, #2
	bhi _0807D3C2
	mov r0, sb
	strh r0, [r7, #0xa]
_0807D3C2:
	movs r0, #4
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0807D430
sub_0807D430: @ 0x0807D430
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r4, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0807D458
	cmp r0, #1
	bgt _0807D44C
	cmp r0, #0
	beq _0807D452
	b _0807D480
_0807D44C:
	cmp r0, #2
	beq _0807D46A
	b _0807D480
_0807D452:
	bl sub_0807D518
	b _0807D45C
_0807D458:
	bl sub_0807D64C
_0807D45C:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807D480
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0807D480
_0807D46A:
	bl sub_0807DA60
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807D480
	movs r4, #0
	strh r4, [r5]
	movs r0, #0xeb
	lsls r0, r0, #2
	bl sub_0806EFF0
_0807D480:
	lsls r6, r4, #0x10
	movs r0, #0xc1
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0xe9
	lsls r1, r1, #2
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D4A4
	adds r0, r4, #0
	bl sub_0800A778
_0807D4A4:
	movs r0, #0xcb
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807D50C @ =0x000003A5
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D4C4
	adds r0, r4, #0
	bl sub_0800A778
_0807D4C4:
	movs r0, #0xd5
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807D510 @ =0x000003A6
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D4E4
	adds r0, r4, #0
	bl sub_0800A778
_0807D4E4:
	movs r0, #0xdf
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807D514 @ =0x000003A7
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807D504
	adds r0, r4, #0
	bl sub_0800A778
_0807D504:
	asrs r0, r6, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807D50C: .4byte 0x000003A5
_0807D510: .4byte 0x000003A6
_0807D514: .4byte 0x000003A7

	thumb_func_start sub_0807D518
sub_0807D518: @ 0x0807D518
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r0, r1]
	cmp r0, #1
	beq _0807D5E8
	cmp r0, #1
	bgt _0807D53A
	cmp r0, #0
	beq _0807D544
	b _0807D638
_0807D53A:
	cmp r0, #2
	beq _0807D61E
	cmp r0, #3
	beq _0807D632
	b _0807D638
_0807D544:
	bl sub_0807DAD0
	mov r0, sb
	adds r0, #0x14
	movs r1, #0xb7
	lsls r1, r1, #2
	add r1, sb
	bl sub_080072F8
	mov r2, sb
	ldrh r0, [r2, #6]
	bl sub_0807DE88
	movs r0, #0
	mov sl, r0
	movs r7, #0xc1
	lsls r7, r7, #2
	add r7, sb
_0807D568:
	adds r0, r7, #0
	bl sub_08009F0C
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r7, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	movs r5, #0xe9
	lsls r5, r5, #2
	add r5, sb
	mov r1, sl
	adds r0, r5, r1
	movs r6, #0
	strb r6, [r0]
	adds r4, r7, #0
	adds r4, #0x28
	movs r2, #1
	add r2, sl
	mov r8, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	add r5, r8
	strb r6, [r5]
	adds r7, #0x50
	movs r0, #2
	add sl, r0
	mov r1, sl
	cmp r1, #3
	bls _0807D568
	movs r1, #0xea
	lsls r1, r1, #2
	add r1, sb
	movs r0, #1
	strb r0, [r1]
	b _0807D628
_0807D5E8:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	mov r1, sb
	ldrh r0, [r1, #2]
	adds r0, #1
	b _0807D636
_0807D61E:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807D638
_0807D628:
	mov r2, sb
	ldrh r0, [r2, #2]
	adds r0, #1
	strh r0, [r2, #2]
	b _0807D638
_0807D632:
	movs r0, #0
	mov r1, sb
_0807D636:
	strh r0, [r1, #2]
_0807D638:
	mov r2, sb
	movs r1, #2
	ldrsh r0, [r2, r1]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807D64C
sub_0807D64C: @ 0x0807D64C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	str r0, [sp]
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x1f
	bls _0807D66C
	b _0807DA4C
_0807D66C:
	lsls r0, r0, #2
	ldr r1, _0807D678 @ =_0807D67C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807D678: .4byte _0807D67C
_0807D67C: @ jump table
	.4byte _0807D6FC @ case 0
	.4byte _0807DA4C @ case 1
	.4byte _0807DA4C @ case 2
	.4byte _0807DA4C @ case 3
	.4byte _0807DA4C @ case 4
	.4byte _0807DA4C @ case 5
	.4byte _0807DA4C @ case 6
	.4byte _0807DA4C @ case 7
	.4byte _0807DA4C @ case 8
	.4byte _0807DA4C @ case 9
	.4byte _0807D8E2 @ case 10
	.4byte _0807DA4C @ case 11
	.4byte _0807DA4C @ case 12
	.4byte _0807DA4C @ case 13
	.4byte _0807DA4C @ case 14
	.4byte _0807DA4C @ case 15
	.4byte _0807DA4C @ case 16
	.4byte _0807DA4C @ case 17
	.4byte _0807DA4C @ case 18
	.4byte _0807DA4C @ case 19
	.4byte _0807D934 @ case 20
	.4byte _0807D95A @ case 21
	.4byte _0807DA4C @ case 22
	.4byte _0807DA4C @ case 23
	.4byte _0807DA4C @ case 24
	.4byte _0807DA4C @ case 25
	.4byte _0807DA4C @ case 26
	.4byte _0807DA4C @ case 27
	.4byte _0807DA4C @ case 28
	.4byte _0807DA4C @ case 29
	.4byte _0807D9A2 @ case 30
	.4byte _0807D9D6 @ case 31
_0807D6FC:
	adds r4, r6, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r4
	cmp r0, #3
	beq _0807D712
	b _0807DA4C
_0807D712:
	ldr r0, _0807D75C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0807D760
	mov r0, r8
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r2, #0xea
	lsls r2, r2, #2
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	mov r0, r8
	bl sub_080079E0
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	mov r0, r8
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	bne _0807D752
	b _0807DA4C
_0807D752:
	bl sub_0807DE88
	movs r0, #0x64
	b _0807D8F2
	.align 2, 0
_0807D75C: .4byte gCurrentKeyPress
_0807D760:
	ldr r0, _0807D7B0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0807D82A
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	mov r0, r8
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807D7C0
	adds r0, r6, #0
	adds r0, #0x70
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r0, r6, #0
	adds r0, #0x86
	ldrh r2, [r6, #6]
	adds r0, r0, r2
	ldrb r0, [r0]
	cmp r0, #0
	beq _0807D7A4
	b _0807DA4C
_0807D7A4:
	cmp r1, #0
	bne _0807D7B4
	movs r0, #0x14
	strh r0, [r6, #2]
	b _0807DA4C
	.align 2, 0
_0807D7B0: .4byte gKeyNewPress
_0807D7B4:
	cmp r1, #1
	beq _0807D7BA
	b _0807DA4C
_0807D7BA:
	movs r0, #0x1e
	strh r0, [r6, #2]
	b _0807DA4C
_0807D7C0:
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bls _0807D7CC
	b _0807DA4C
_0807D7CC:
	adds r0, r6, #0
	adds r0, #0x70
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r7, [r0]
	movs r5, #0
	movs r2, #0x80
	adds r2, r2, r7
	mov sb, r2
	b _0807D7E6
_0807D7E0:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0807D7E6:
	movs r0, #0x80
	adds r0, r0, r7
	mov sl, r0
	cmp r5, #3
	bhi _0807D80A
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, sb
	bne _0807D7E0
	adds r0, r4, #0
	movs r1, #0xff
	bl SetBattleAidItem
_0807D80A:
	ldrb r0, [r6, #0xa]
	mov r2, sl
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	bl SetBattleAidItem
	mov r0, r8
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	movs r0, #0
	strh r0, [r6, #0xc]
	movs r0, #0xa
	strh r0, [r6, #2]
	b _0807DA4C
_0807D82A:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807D834
	b _0807DA4C
_0807D834:
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807D858
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #3
	b _0807D89C
_0807D858:
	cmp r0, #1
	bne _0807D87A
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r6, r0]
	b _0807D89A
_0807D87A:
	cmp r0, #2
	bne _0807D8AA
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r2, #0xa
	ldrsh r1, [r6, r2]
_0807D89A:
	movs r0, #2
_0807D89C:
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	b _0807D8D8
_0807D8AA:
	cmp r0, #3
	bne _0807D8D8
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
_0807D8D8:
	movs r0, #0
	strh r0, [r6, #2]
	movs r1, #0
	str r1, [sp]
	b _0807DA4C
_0807D8E2:
	ldrh r0, [r6, #0xc]
	adds r0, #1
	strh r0, [r6, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0807D8FA
	movs r0, #0x65
_0807D8F2:
	movs r1, #0
	bl sub_080147B8
	b _0807DA4C
_0807D8FA:
	cmp r0, #0x1e
	beq _0807D900
	b _0807DA4C
_0807D900:
	movs r0, #0
	movs r1, #0x13
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r6, #4]
	cmp r0, #2
	bne _0807D920
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _0807D92C
_0807D920:
	cmp r0, #3
	bne _0807D92C
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_0807D92C:
	movs r2, #0xa
	ldrsh r1, [r6, r2]
	movs r0, #2
	b _0807DA28
_0807D934:
	adds r0, r6, #0
	adds r0, #0x70
	ldrh r2, [r6, #6]
	adds r0, r0, r2
	ldrb r0, [r0]
	bl sub_08018994
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #8
	movs r0, #0xc8
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsrs r1, r1, #0x10
	movs r0, #0
	movs r2, #0
	bl sub_0806F620
	b _0807D9C4
_0807D95A:
	bl sub_0806C294
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _0807DA4C
	bl sub_0806F678
	adds r1, r6, #0
	adds r1, #0x70
	ldrh r2, [r6, #6]
	adds r1, r1, r2
	ldrb r4, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807DA40
	adds r0, r4, #0
	bl sub_080189A8
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_08018298
	bl sub_0807DAD0
	adds r0, r6, #0
	adds r0, #0x14
	movs r2, #0xb7
	lsls r2, r2, #2
	adds r1, r6, r2
	bl sub_080076B0
	b _0807DA4A
_0807D9A2:
	adds r0, r6, #0
	adds r0, #0x70
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_08018994
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #8
	movs r2, #0x96
	lsls r2, r2, #0x11
	adds r1, r1, r2
	lsrs r1, r1, #0x10
	movs r0, #1
	bl sub_0806BC24
_0807D9C4:
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E34
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0807DA4C
_0807D9D6:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _0807DA4C
	bl sub_0806F60C
	adds r1, r6, #0
	adds r1, #0x70
	ldrh r2, [r6, #6]
	adds r1, r1, r2
	ldrb r4, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807DA40
	adds r0, r4, #0
	bl sub_080189A8
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_08018298
	ldr r0, _0807DA3C @ =0x000001C9
	movs r1, #1
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
_0807DA28:
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	str r0, [sp]
	strh r0, [r6, #2]
	b _0807DA4C
	.align 2, 0
_0807DA3C: .4byte 0x000001C9
_0807DA40:
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E34
_0807DA4A:
	strh r5, [r6, #2]
_0807DA4C:
	ldr r0, [sp]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807DA60
sub_0807DA60: @ 0x0807DA60
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807DA90
	cmp r0, #1
	bgt _0807DA7C
	cmp r0, #0
	beq _0807DA86
	b _0807DAC8
_0807DA7C:
	cmp r0, #2
	beq _0807DA9C
	cmp r0, #3
	beq _0807DAC4
	b _0807DAC8
_0807DA86:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0807DABC
_0807DA90:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807DAC8
	b _0807DABC
_0807DA9C:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
_0807DABC:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807DAC8
_0807DAC4:
	movs r5, #0
	strh r5, [r4, #2]
_0807DAC8:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807DAD0
sub_0807DAD0: @ 0x0807DAD0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	mov sb, r0
	movs r7, #0xb7
	lsls r7, r7, #2
	add r7, sb
	movs r1, #0
	movs r0, #4
	strb r0, [r7]
	movs r0, #2
	strb r0, [r7, #1]
	strb r0, [r7, #6]
	strb r1, [r7, #7]
	strb r0, [r7, #0x11]
	strb r0, [r7, #0x12]
	mov r1, sb
	ldrh r0, [r1, #6]
	strh r0, [r7, #2]
	ldrh r0, [r1, #8]
	strh r0, [r7, #4]
	movs r0, #0xe0
	strb r0, [r7, #0xd]
	movs r0, #0xf0
	strb r0, [r7, #0xc]
	adds r1, #0x18
	str r1, [r7, #0x14]
	mov r2, sb
	adds r2, #0x86
	str r2, [r7, #0x18]
	movs r3, #0
	mov sl, r3
	mov r3, sb
	ldrh r0, [r3, #4]
	cmp r0, #0
	bne _0807DBB6
	movs r0, #0
	str r0, [sp]
	str r1, [sp, #4]
	adds r3, #0x9c
	str r3, [sp, #8]
	adds r6, r2, #0
_0807DB2E:
	ldr r1, [sp]
	lsls r0, r1, #0x18
	lsrs r5, r0, #0x18
	adds r0, r5, #0
	bl sub_080189BC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807DBAA
	adds r0, r5, #0
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl sub_08063C70
	mov r2, sl
	lsls r1, r2, #2
	ldr r3, [sp, #4]
	adds r1, r3, r1
	str r0, [r1]
	adds r0, r4, #0
	bl sub_08063CC0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _0807DB94
	adds r0, r5, #0
	bl sub_080189A8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807DB94
	cmp r4, #1
	bne _0807DB90
	movs r0, #0xe4
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #1
	bne _0807DB8C
	movs r0, #0
	b _0807DB96
_0807DB8C:
	mov r0, r8
	b _0807DB96
_0807DB90:
	movs r0, #0
	b _0807DB96
_0807DB94:
	movs r0, #1
_0807DB96:
	strb r0, [r6]
	mov r0, sb
	adds r0, #0x70
	add r0, sl
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	adds r6, #1
	movs r2, #1
	add sl, r2
_0807DBAA:
	ldr r3, [sp]
	adds r3, #1
	str r3, [sp]
	cmp r3, #0x14
	bls _0807DB2E
	b _0807DC70
_0807DBB6:
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r1, [sp, #4]
	mov r1, sb
	adds r1, #0x9c
	str r1, [sp, #8]
	cmp r0, #2
	bhi _0807DC70
	movs r2, #0
	str r2, [sp]
	ldr r5, _0807DC8C @ =0x0000FFFF
_0807DBCE:
	ldr r3, [sp]
	lsls r0, r3, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189BC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0807DC66
	adds r0, r4, #0
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl sub_08063CC0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	beq _0807DC66
	adds r0, r4, #0
	bl sub_08063C70
	mov r2, sl
	lsls r1, r2, #2
	ldr r3, [sp, #4]
	adds r1, r3, r1
	str r0, [r1]
	mov r0, sb
	adds r0, #0x86
	add r0, sl
	movs r1, #0
	strb r1, [r0]
	mov r0, sb
	adds r0, #0x70
	add r0, sl
	mov r1, sp
	ldrb r1, [r1]
	strb r1, [r0]
	mov r2, sb
	ldrh r0, [r2, #6]
	cmp r0, r5
	bne _0807DC62
	ldrb r0, [r2, #0xa]
	bl sub_080189D0
	adds r0, #0x80
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r8
	bne _0807DC62
	mov r3, sl
	strh r3, [r7, #2]
	mov r0, sl
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r0, #0
	bge _0807DC54
	movs r1, #0
_0807DC54:
	strh r1, [r7, #4]
	mov r1, sl
	mov r0, sb
	strh r1, [r0, #6]
	ldrh r0, [r7, #4]
	mov r2, sb
	strh r0, [r2, #8]
_0807DC62:
	movs r3, #1
	add sl, r3
_0807DC66:
	ldr r0, [sp]
	adds r0, #1
	str r0, [sp]
	cmp r0, #0x14
	bls _0807DBCE
_0807DC70:
	mov r1, sl
	lsls r0, r1, #2
	ldr r2, [sp, #4]
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	mov r3, sl
	cmp r3, #7
	bls _0807DC90
	movs r0, #7
	strb r0, [r7, #0xa]
	movs r0, #0x1e
	b _0807DC96
	.align 2, 0
_0807DC8C: .4byte 0x0000FFFF
_0807DC90:
	mov r0, sl
	strb r0, [r7, #0xa]
	movs r0, #0x1a
_0807DC96:
	strh r0, [r7, #8]
	movs r1, #0
	movs r0, #0x8a
	strb r0, [r7, #0xe]
	movs r0, #1
	strb r0, [r7, #0xf]
	ldr r2, [sp, #8]
	str r2, [r7, #0x20]
	ldr r0, _0807DCC0 @ =0x06012400
	str r0, [r7, #0x1c]
	ldr r0, _0807DCC4 @ =sub_0807DCC8
	str r0, [r7, #0x24]
	strb r1, [r7, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DCC0: .4byte 0x06012400
_0807DCC4: .4byte sub_0807DCC8

	thumb_func_start sub_0807DCC8
sub_0807DCC8: @ 0x0807DCC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x10]
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	bl sub_0806F020
	adds r7, r0, #0
	adds r0, #0x70
	ldr r1, [sp, #0x10]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r0, r4, #0
	bl sub_080189A8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	adds r0, r4, #0
	bl sub_080189BC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	movs r2, #0xea
	lsls r2, r2, #2
	adds r0, r7, r2
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807DD52
	movs r6, #0
	movs r0, #0xe9
	lsls r0, r0, #2
	adds r1, r7, r0
	movs r2, #0
_0807DD3A:
	adds r0, r1, r6
	strb r2, [r0]
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _0807DD3A
	movs r2, #0xea
	lsls r2, r2, #2
	adds r1, r7, r2
	movs r0, #0
	strb r0, [r1]
_0807DD52:
	movs r6, #0
	subs r0, r5, #2
	str r0, [sp, #0x1c]
	mov r1, sl
	lsls r1, r1, #0x18
	str r1, [sp, #0x30]
	adds r2, r7, #0
	adds r2, #0x86
	str r2, [sp, #0x34]
	adds r0, #0xe
	str r0, [sp, #0x24]
	mov r1, sb
	adds r1, #1
	str r1, [sp, #0x20]
	adds r2, r5, #0
	adds r2, #0xe
	str r2, [sp, #0x28]
	adds r5, #0xf
	str r5, [sp, #0x2c]
	ldr r0, [sp, #0x1c]
	lsls r0, r0, #0x13
	mov sl, r0
	mov r1, sb
	lsls r4, r1, #0x13
_0807DD82:
	lsls r0, r6, #0x18
	lsrs r5, r0, #0x18
	adds r0, r5, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807DDD4
	adds r0, r5, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _0807DDD4
	adds r0, r5, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r0, #0x80
	cmp r0, r8
	bne _0807DDD4
	movs r2, #0xe9
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r0, r0, r6
	movs r1, #1
	strb r1, [r0]
	lsls r0, r6, #2
	adds r0, r0, r6
	lsls r0, r0, #3
	movs r1, #0xc1
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, r7, r0
	mov r2, sl
	asrs r1, r2, #0x10
	asrs r2, r4, #0x10
	bl sub_0800A678
_0807DDD4:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _0807DD82
	ldr r1, [sp, #0x30]
	lsrs r0, r1, #0x18
	bl sub_08063C98
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0807DE14 @ =gUnk_02010800
	ldr r1, [sp, #0x1c]
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x10
	mov r1, sb
	str r1, [sp]
	ldr r1, [sp, #0xc]
	bl sub_08069DA8
	ldr r2, [sp, #0x34]
	ldr r1, [sp, #0x10]
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807DE18
	movs r0, #0
	bl sub_080012D4
	b _0807DE1E
	.align 2, 0
_0807DE14: .4byte gUnk_02010800
_0807DE18:
	movs r0, #1
	bl sub_080012D4
_0807DE1E:
	ldr r5, _0807DE80 @ =gUnk_02010800
	ldr r2, [sp, #0x24]
	lsls r3, r2, #0x10
	lsrs r3, r3, #0x10
	ldr r0, [sp, #0x20]
	lsls r4, r0, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	movs r6, #2
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	bl sub_0806F2D0
	ldr r2, [sp, #0x28]
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _0807DE84 @ =gUnk_080BFE30
	adds r0, r5, #0
	adds r2, r4, #0
	bl sub_08001284
	ldr r0, [sp, #0x2c]
	lsls r3, r0, #0x10
	lsrs r3, r3, #0x10
	str r4, [sp]
	ldr r1, [sp, #0x14]
	str r1, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DE80: .4byte gUnk_02010800
_0807DE84: .4byte gUnk_080BFE30

	thumb_func_start sub_0807DE88
sub_0807DE88: @ 0x0807DE88
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	adds r0, #0x70
	adds r0, r0, r4
	ldrb r0, [r0]
	bl sub_08018994
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r4, _0807DF7C @ =gUnk_02010800
	ldr r3, _0807DF80 @ =gUnk_080BFE34
	adds r0, r4, #0
	movs r1, #0x17
	movs r2, #3
	bl sub_08001284
	ldr r3, _0807DF84 @ =gUnk_080BFE04
	adds r0, r4, #0
	movs r1, #0x18
	movs r2, #4
	bl sub_08001284
	ldrh r0, [r5, #0x10]
	cmp r0, #0
	beq _0807DED4
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_0800B4E4
_0807DED4:
	ldr r4, _0807DF88 @ =gUnk_08BC9E60
	mov r8, r6
	mov r0, r8
	bl sub_08063CC0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	adds r1, r5, #0
	adds r1, #0x10
	ldr r2, [r0]
	movs r0, #5
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	movs r0, #2
	mov sb, r0
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r1, #0
	movs r1, #2
	movs r3, #0x18
	bl sub_0800B1AC
	ldrh r0, [r5, #0x12]
	adds r7, r5, #0
	adds r7, #0x12
	cmp r0, #0
	beq _0807DF16
	adds r0, r7, #0
	bl sub_0800B4E4
_0807DF16:
	ldr r4, _0807DF8C @ =gUnk_08BC9E6C
	mov r0, r8
	bl sub_08063CD4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #7
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r0, sb
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0x18
	bl sub_0800B1AC
	ldrh r0, [r5, #0xe]
	adds r4, r5, #0
	adds r4, #0xe
	cmp r0, #0
	beq _0807DF4E
	adds r0, r4, #0
	bl sub_0800B4E4
_0807DF4E:
	mov r0, r8
	bl sub_08063C84
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r0, sb
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807DF7C: .4byte gUnk_02010800
_0807DF80: .4byte gUnk_080BFE34
_0807DF84: .4byte gUnk_080BFE04
_0807DF88: .4byte gUnk_08BC9E60
_0807DF8C: .4byte gUnk_08BC9E6C

	thumb_func_start sub_0807DF90
sub_0807DF90: @ 0x0807DF90
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov sb, r3
	movs r4, #0x8c
	lsls r4, r4, #3
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	mov r0, r8
	strh r0, [r7, #4]
	strh r5, [r7, #6]
	strh r6, [r7, #8]
	mov r0, r8
	cmp r0, #1
	bne _0807DFEE
	mov r0, sb
	strh r0, [r7, #0xa]
	b _0807E010
_0807DFEE:
	mov r0, r8
	subs r0, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _0807E010
	add r4, sp, #0xc
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #8]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #6]
_0807E010:
	movs r0, #5
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0807E080
sub_0807E080: @ 0x0807E080
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r4, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0807E0A8
	cmp r0, #1
	bgt _0807E09C
	cmp r0, #0
	beq _0807E0A2
	b _0807E0D0
_0807E09C:
	cmp r0, #2
	beq _0807E0BA
	b _0807E0D0
_0807E0A2:
	bl sub_0807E1B8
	b _0807E0AC
_0807E0A8:
	bl sub_0807E390
_0807E0AC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807E0D0
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0807E0D0
_0807E0BA:
	bl sub_0807F12C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807E0D0
	movs r4, #0
	strh r4, [r5]
	movs r0, #0x8c
	lsls r0, r0, #3
	bl sub_0806EFF0
_0807E0D0:
	adds r0, r5, #0
	adds r0, #0x12
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r5, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r0, [r1]
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0xed
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r2, #0x9a
	movs r3, #7
	bl sub_0806F544
	lsls r6, r4, #0x10
	movs r0, #0xf9
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807E1A4 @ =0x0000045C
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807E11C
	adds r0, r4, #0
	bl sub_0800A778
_0807E11C:
	ldr r2, _0807E1A8 @ =0x0000040C
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807E1AC @ =0x0000045D
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807E13A
	adds r0, r4, #0
	bl sub_0800A778
_0807E13A:
	ldr r2, _0807E1B0 @ =0x00000434
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0807E1B4 @ =0x0000045E
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0807E158
	adds r0, r4, #0
	bl sub_0800A778
_0807E158:
	ldrh r0, [r5, #4]
	cmp r0, #0
	beq _0807E176
	cmp r0, #2
	beq _0807E176
	cmp r0, #3
	beq _0807E176
	cmp r0, #4
	beq _0807E176
	cmp r0, #5
	beq _0807E176
	cmp r0, #6
	beq _0807E176
	cmp r0, #7
	bne _0807E19A
_0807E176:
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r0, #0xcf
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0807E19A:
	asrs r0, r6, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0807E1A4: .4byte 0x0000045C
_0807E1A8: .4byte 0x0000040C
_0807E1AC: .4byte 0x0000045D
_0807E1B0: .4byte 0x00000434
_0807E1B4: .4byte 0x0000045E

	thumb_func_start sub_0807E1B8
sub_0807E1B8: @ 0x0807E1B8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #1
	bne _0807E1D2
	b _0807E33C
_0807E1D2:
	cmp r0, #1
	bgt _0807E1DC
	cmp r0, #0
	beq _0807E1EA
	b _0807E384
_0807E1DC:
	cmp r0, #2
	bne _0807E1E2
	b _0807E36C
_0807E1E2:
	cmp r0, #3
	bne _0807E1E8
	b _0807E37E
_0807E1E8:
	b _0807E384
_0807E1EA:
	strh r0, [r7, #0x12]
	bl sub_0807F198
	adds r0, r7, #0
	adds r0, #0x12
	movs r2, #0xc5
	lsls r2, r2, #2
	adds r1, r7, r2
	bl sub_080072F8
	ldrh r0, [r7, #4]
	cmp r0, #0
	beq _0807E21C
	cmp r0, #2
	beq _0807E21C
	cmp r0, #3
	beq _0807E21C
	cmp r0, #4
	beq _0807E21C
	cmp r0, #5
	beq _0807E21C
	cmp r0, #6
	beq _0807E21C
	cmp r0, #7
	bne _0807E224
_0807E21C:
	ldrh r0, [r7, #6]
	bl sub_0807F4A0
	b _0807E22A
_0807E224:
	movs r0, #0
	bl sub_0807F4A0
_0807E22A:
	movs r5, #0
	movs r0, #0xf9
	lsls r0, r0, #2
	adds r6, r7, r0
	adds r0, r6, #0
	bl sub_08009F0C
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r6, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0807E324 @ =0x0000045C
	adds r0, r7, r1
	movs r4, #0
	strb r5, [r0]
	ldr r2, _0807E328 @ =0x0000040C
	adds r6, r7, r2
	adds r0, r6, #0
	bl sub_08009F0C
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r6, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0807E32C @ =0x0000045D
	adds r0, r7, r1
	strb r4, [r0]
	ldr r2, _0807E330 @ =0x00000434
	adds r6, r7, r2
	adds r0, r6, #0
	bl sub_08009F0C
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r6, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0807E334 @ =0x0000045E
	adds r0, r7, r1
	strb r4, [r0]
	ldr r2, _0807E338 @ =0x0000045F
	adds r1, r7, r2
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xcf
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xd9
	lsls r1, r1, #2
	adds r5, r7, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _0807E376
	.align 2, 0
_0807E324: .4byte 0x0000045C
_0807E328: .4byte 0x0000040C
_0807E32C: .4byte 0x0000045D
_0807E330: .4byte 0x00000434
_0807E334: .4byte 0x0000045E
_0807E338: .4byte 0x0000045F
_0807E33C:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0807E376
_0807E36C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807E384
_0807E376:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _0807E384
_0807E37E:
	movs r0, #0
	strh r0, [r7, #2]
	mov r8, r0
_0807E384:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807E390
sub_0807E390: @ 0x0807E390
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	mov sl, r0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x3c
	bls _0807E3B2
	bl _0807F118
_0807E3B2:
	lsls r0, r0, #2
	ldr r1, _0807E3BC @ =_0807E3C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0807E3BC: .4byte _0807E3C0
_0807E3C0: @ jump table
	.4byte _0807E4B4 @ case 0
	.4byte _0807F118 @ case 1
	.4byte _0807F118 @ case 2
	.4byte _0807F118 @ case 3
	.4byte _0807F118 @ case 4
	.4byte _0807F118 @ case 5
	.4byte _0807F118 @ case 6
	.4byte _0807F118 @ case 7
	.4byte _0807F118 @ case 8
	.4byte _0807F118 @ case 9
	.4byte _0807F118 @ case 10
	.4byte _0807F118 @ case 11
	.4byte _0807F118 @ case 12
	.4byte _0807F118 @ case 13
	.4byte _0807F118 @ case 14
	.4byte _0807F118 @ case 15
	.4byte _0807F118 @ case 16
	.4byte _0807F118 @ case 17
	.4byte _0807F118 @ case 18
	.4byte _0807F118 @ case 19
	.4byte _0807EB0C @ case 20
	.4byte _0807EB34 @ case 21
	.4byte _0807F118 @ case 22
	.4byte _0807F118 @ case 23
	.4byte _0807F118 @ case 24
	.4byte _0807EBA8 @ case 25
	.4byte _0807EBCE @ case 26
	.4byte _0807F118 @ case 27
	.4byte _0807EC84 @ case 28
	.4byte _0807ECAA @ case 29
	.4byte _0807ED0E @ case 30
	.4byte _0807ED34 @ case 31
	.4byte _0807F118 @ case 32
	.4byte _0807F118 @ case 33
	.4byte _0807F118 @ case 34
	.4byte _0807F118 @ case 35
	.4byte _0807F118 @ case 36
	.4byte _0807F118 @ case 37
	.4byte _0807F118 @ case 38
	.4byte _0807F118 @ case 39
	.4byte _0807ED90 @ case 40
	.4byte _0807EDE8 @ case 41
	.4byte _0807EF14 @ case 42
	.4byte _0807EF70 @ case 43
	.4byte _0807F118 @ case 44
	.4byte _0807F118 @ case 45
	.4byte _0807F118 @ case 46
	.4byte _0807F118 @ case 47
	.4byte _0807F118 @ case 48
	.4byte _0807F118 @ case 49
	.4byte _0807EFEC @ case 50
	.4byte _0807F004 @ case 51
	.4byte _0807F118 @ case 52
	.4byte _0807F118 @ case 53
	.4byte _0807F118 @ case 54
	.4byte _0807F118 @ case 55
	.4byte _0807F118 @ case 56
	.4byte _0807F118 @ case 57
	.4byte _0807F118 @ case 58
	.4byte _0807F118 @ case 59
	.4byte _0807F094 @ case 60
_0807E4B4:
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0807E4CA
	bl _0807F118
_0807E4CA:
	ldr r0, _0807E540 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r2, #0xf0
	mov sb, r2
	mov r1, sb
	ands r1, r0
	mov sb, r1
	cmp r1, #0
	beq _0807E548
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r2, _0807E544 @ =0x0000045F
	adds r1, r6, r2
	movs r0, #1
	strb r0, [r1]
	adds r0, r4, #0
	bl sub_080079E0
	ldrh r0, [r6, #4]
	cmp r0, #0
	beq _0807E512
	cmp r0, #2
	beq _0807E512
	cmp r0, #3
	beq _0807E512
	cmp r0, #4
	beq _0807E512
	cmp r0, #5
	beq _0807E512
	cmp r0, #6
	beq _0807E512
	cmp r0, #7
	bne _0807E522
_0807E512:
	adds r0, r4, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	adds r0, r4, #0
	bl sub_08008D30
	strh r0, [r6, #6]
_0807E522:
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r5
	bne _0807E534
	bl _0807F118
_0807E534:
	bl sub_0807F4A0
	movs r0, #0x64
	bl _0807F0A4
	.align 2, 0
_0807E540: .4byte gCurrentKeyPress
_0807E544: .4byte 0x0000045F
_0807E548:
	ldr r0, _0807E584 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	mov r8, r0
	ands r0, r1
	cmp r0, #0
	bne _0807E558
	b _0807E806
_0807E558:
	ldrh r0, [r6, #4]
	cmp r0, #1
	bne _0807E598
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r0, [r1]
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807E588
	movs r0, #0x14
	strh r0, [r6, #2]
	bl _0807F118
	.align 2, 0
_0807E584: .4byte gKeyNewPress
_0807E588:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0807E594 @ =gUnk_08BC9F00
	b _0807EB84
	.align 2, 0
_0807E594: .4byte gUnk_08BC9F00
_0807E598:
	cmp r0, #2
	bne _0807E5FE
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	mov r2, r8
	strh r2, [r6, #0xc]
	mov r0, sb
	strh r0, [r6, #2]
	bl _0807F080
_0807E5FE:
	cmp r0, #3
	bne _0807E60A
	movs r0, #0x1e
	strh r0, [r6, #2]
	bl _0807F118
_0807E60A:
	cmp r0, #4
	beq _0807E610
	b _0807E734
_0807E610:
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r2, [r6, #6]
	adds r0, r0, r2
	ldrb r5, [r0]
	adds r4, r5, #0
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r7, #0
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bls _0807E684
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0807E684
	adds r0, r4, #0
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0807E67C
	adds r0, r4, #0
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0807E67C
	adds r0, r4, #0
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807E684
_0807E67C:
	movs r0, #0x28
	strh r0, [r6, #2]
	bl _0807F118
_0807E684:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1c
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	adds r0, r7, #0
	bl sub_0806F038
	adds r0, r5, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	lsls r4, r5, #0x18
	lsrs r0, r4, #0x18
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807E6EE
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	b _0807E6F0
_0807E6EE:
	ldr r1, _0807E710 @ =0x0000FFFF
_0807E6F0:
	adds r0, r1, #0
	bl sub_0806F038
	lsrs r0, r4, #0x18
	movs r1, #1
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807E714
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	b _0807E716
	.align 2, 0
_0807E710: .4byte 0x0000FFFF
_0807E714:
	ldr r1, _0807E730 @ =0x0000FFFF
_0807E716:
	adds r0, r1, #0
	bl sub_0806F038
	lsrs r0, r4, #0x18
	movs r1, #2
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807E72E
	b _0807EEDC
_0807E72E:
	b _0807EEEC
	.align 2, 0
_0807E730: .4byte 0x0000FFFF
_0807E734:
	cmp r0, #5
	bne _0807E7AC
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r7, [r0]
	adds r4, r7, #0
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807E764
	ldr r0, _0807E760 @ =gUnk_08BC9FE0
	b _0807EB84
	.align 2, 0
_0807E760: .4byte gUnk_08BC9FE0
_0807E764:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1d
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	adds r1, r5, #0
	movs r0, #2
	bl sub_0806F0CC
	adds r1, r7, #0
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	mov r2, r8
	strh r2, [r6, #0xc]
	mov r0, sb
	strh r0, [r6, #2]
	bl _0807F080
_0807E7AC:
	cmp r0, #0
	bne _0807E7DC
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	beq _0807E7C0
	bl _0807F118
_0807E7C0:
	ldr r0, _0807E7D8 @ =0x000001D1
	bl sub_08012F60
	cmp r0, #0
	beq _0807E7CE
	bl _0807F118
_0807E7CE:
	movs r0, #0x19
	strh r0, [r6, #2]
	bl _0807F118
	.align 2, 0
_0807E7D8: .4byte 0x000001D1
_0807E7DC:
	cmp r0, #6
	bne _0807E7E8
	movs r0, #0x1c
	strh r0, [r6, #2]
	bl _0807F118
_0807E7E8:
	cmp r0, #7
	beq _0807E7F0
	bl _0807F118
_0807E7F0:
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	mov r2, sb
	strh r2, [r6, #0xe]
	movs r0, #0x3c
	strh r0, [r6, #2]
	bl _0807F118
_0807E806:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807E8B6
	ldrh r0, [r6, #4]
	cmp r0, #0
	beq _0807E832
	cmp r0, #2
	beq _0807E832
	cmp r0, #3
	beq _0807E832
	cmp r0, #4
	beq _0807E832
	cmp r0, #5
	beq _0807E832
	cmp r0, #6
	beq _0807E832
	cmp r0, #7
	beq _0807E832
	bl _0807F118
_0807E832:
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807E84A
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _0807E89C
_0807E84A:
	cmp r0, #2
	bne _0807E854
	movs r0, #1
	movs r1, #3
	b _0807E870
_0807E854:
	cmp r0, #3
	bne _0807E85E
	movs r0, #1
	movs r1, #4
	b _0807E870
_0807E85E:
	cmp r0, #4
	bne _0807E868
	movs r0, #1
	movs r1, #5
	b _0807E870
_0807E868:
	cmp r0, #5
	bne _0807E882
	movs r0, #1
	movs r1, #6
_0807E870:
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	b _0807E89C
_0807E882:
	cmp r0, #6
	bne _0807E890
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	b _0807E89C
_0807E890:
	cmp r0, #7
	bne _0807E89C
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
_0807E89C:
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r2, #8
	ldrsh r1, [r6, r2]
	movs r0, #3
	bl sub_0806F0CC
	movs r1, #0
	movs r0, #7
	b _0807EEF8
_0807E8B6:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _0807E96A
	ldrh r0, [r6, #4]
	cmp r0, #0
	beq _0807E8E6
	cmp r0, #2
	beq _0807E8E6
	cmp r0, #3
	beq _0807E8E6
	cmp r0, #4
	beq _0807E8E6
	cmp r0, #5
	beq _0807E8E6
	cmp r0, #6
	beq _0807E8E6
	cmp r0, #7
	beq _0807E8E6
	bl _0807F118
_0807E8E6:
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807E8FE
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	b _0807E950
_0807E8FE:
	cmp r0, #2
	bne _0807E908
	movs r0, #1
	movs r1, #3
	b _0807E924
_0807E908:
	cmp r0, #3
	bne _0807E912
	movs r0, #1
	movs r1, #4
	b _0807E924
_0807E912:
	cmp r0, #4
	bne _0807E91C
	movs r0, #1
	movs r1, #5
	b _0807E924
_0807E91C:
	cmp r0, #5
	bne _0807E936
	movs r0, #1
	movs r1, #6
_0807E924:
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	b _0807E950
_0807E936:
	cmp r0, #6
	bne _0807E944
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	b _0807E950
_0807E944:
	cmp r0, #7
	bne _0807E950
	movs r0, #1
	movs r1, #9
	bl sub_0806F0CC
_0807E950:
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r2, #8
	ldrsh r1, [r6, r2]
	movs r0, #3
	bl sub_0806F0CC
	movs r1, #0
	movs r0, #9
	b _0807EEF8
_0807E96A:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0807E974
	b _0807F118
_0807E974:
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0807E9AA
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	mov r0, r8
	strh r0, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807F080
_0807E9AA:
	cmp r0, #2
	bne _0807E9E6
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x19
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	mov r2, r8
	strh r2, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807F046
_0807E9E6:
	cmp r0, #3
	bne _0807EA22
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x19
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	mov r1, r8
	strh r1, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807EFD8
_0807EA22:
	cmp r0, #4
	bne _0807EA5E
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x19
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	mov r0, r8
	strh r0, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807F080
_0807EA5E:
	cmp r0, #5
	bne _0807EA9A
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x19
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	mov r2, r8
	strh r2, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807F046
_0807EA9A:
	cmp r0, #1
	bne _0807EAD2
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #6
	ldrsh r1, [r6, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	mov r1, r8
	strh r1, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807EFD8
_0807EAD2:
	cmp r0, #6
	beq _0807EAD8
	b _0807F118
_0807EAD8:
	movs r4, #1
	rsbs r4, r4, #0
	movs r0, #0x91
	adds r1, r4, #0
	bl sub_08012F0C
	movs r0, #0
	adds r1, r4, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	mov r0, r8
	strh r0, [r6, #0xc]
	strh r5, [r6, #2]
	b _0807F080
_0807EB0C:
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r2, [r1]
	ldrh r1, [r6, #0xa]
	movs r0, #1
	bl sub_0806F620
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	b _0807EFFC
_0807EB34:
	bl sub_0806C294
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _0807EB42
	b _0807F118
_0807EB42:
	bl sub_0806F678
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r5, r6, #0
	adds r5, #0x12
	adds r0, r5, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r4, #0
	bne _0807EB9E
	ldrh r4, [r6, #0xa]
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	ldrh r0, [r6, #0xa]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807EB94
	ldr r0, _0807EB90 @ =gUnk_08BC9F08
_0807EB84:
	ldr r0, [r0]
	str r0, [r6, #0x14]
	movs r0, #0x32
	strh r0, [r6, #2]
	b _0807F118
	.align 2, 0
_0807EB90: .4byte gUnk_08BC9F08
_0807EB94:
	mov r0, r8
	bl sub_0807F4A0
	adds r0, r5, #0
	b _0807EFE2
_0807EB9E:
	mov r0, r8
	bl sub_0807F4A0
	adds r0, r5, #0
	b _0807EFE2
_0807EBA8:
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r1, [r1]
	movs r0, #2
	bl sub_0806BC24
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	b _0807EFFC
_0807EBCE:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807EBDA
	b _0807F118
_0807EBDA:
	bl sub_0806F60C
	adds r1, r6, #0
	adds r1, #0x94
	ldrh r2, [r6, #6]
	adds r1, r1, r2
	ldrb r5, [r1]
	adds r7, r5, #0
	lsls r0, r0, #0x10
	adds r4, r6, #0
	adds r4, #0x12
	cmp r0, #0
	bne _0807EC72
	adds r0, r5, #0
	bl sub_080159E0
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	bne _0807EC10
	movs r0, #0
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_0807EC10:
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r5
	bne _0807EC26
	movs r0, #1
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_0807EC26:
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _0807EC3C
	movs r0, #2
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_0807EC3C:
	bl sub_0801644C
	bl sub_08015A28
	bl sub_08015788
	bl sub_080156C4
	bl sub_0807F198
	ldr r0, _0807EC80 @ =0x0000045F
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	movs r2, #0xc5
	lsls r2, r2, #2
	adds r1, r6, r2
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	ldrh r0, [r6, #6]
	bl sub_0807F4A0
_0807EC72:
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	movs r0, #0
	strh r0, [r6, #2]
	b _0807F118
	.align 2, 0
_0807EC80: .4byte 0x0000045F
_0807EC84:
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r1, [r1]
	movs r0, #5
	bl sub_0806BC24
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	b _0807EFFC
_0807ECAA:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _0807ECB8
	b _0807F118
_0807ECB8:
	bl sub_0806F60C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0807ECC4
	b _0807EFDE
_0807ECC4:
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #0x90
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x91
	adds r1, r4, #0
	bl sub_08012F0C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	b _0807EFD2
_0807ED0E:
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r6, #0
	adds r1, #0x94
	adds r1, r1, r0
	ldrb r1, [r1]
	movs r0, #3
	bl sub_0806BC24
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	b _0807EFFC
_0807ED34:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _0807ED42
	b _0807F118
_0807ED42:
	bl sub_0806F60C
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov r8, r0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r4, #0
	beq _0807ED66
	b _0807EFDE
_0807ED66:
	movs r0, #0
	movs r1, #0x1b
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	adds r1, r5, #0
	movs r0, #2
	bl sub_0806F0CC
	mov r1, r8
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _0807EFD2
_0807ED90:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xc1
	bl sub_0800EC64
	movs r0, #0xe3
	lsls r0, r0, #2
	adds r4, r6, r0
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldr r1, _0807EDE0 @ =gUnk_08BC9F9C
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	ldr r0, _0807EDE4 @ =gUnk_08BCE554
	bl sub_0800ED08
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C4
	adds r0, r6, #0
	adds r0, #0x12
	movs r1, #0
	bl sub_08008E34
	b _0807EFFC
	.align 2, 0
_0807EDE0: .4byte gUnk_08BC9F9C
_0807EDE4: .4byte gUnk_08BCE554
_0807EDE8:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807EDF6
	b _0807F118
_0807EDF6:
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r7, [r0]
	lsls r2, r7, #0x18
	mov r8, r2
	lsrs r5, r2, #0x18
	adds r0, r5, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _0807EE30
	adds r0, r6, #0
	adds r0, #0x12
	movs r1, #1
	bl sub_08008E34
	strh r4, [r6, #2]
	b _0807F118
_0807EE30:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807EF04
	movs r0, #0
	movs r1, #0x1c
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r6, #6]
	bl sub_0806F038
	ldrh r0, [r6, #8]
	bl sub_0806F038
	mov r0, sb
	bl sub_0806F038
	adds r0, r7, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	mov r4, r8
	adds r0, r5, #0
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807EE9C
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	b _0807EE9E
_0807EE9C:
	ldr r1, _0807EEC0 @ =0x0000FFFF
_0807EE9E:
	adds r0, r1, #0
	bl sub_0806F038
	lsrs r0, r4, #0x18
	movs r1, #1
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807EEC4
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	b _0807EEC6
	.align 2, 0
_0807EEC0: .4byte 0x0000FFFF
_0807EEC4:
	ldr r1, _0807EEE8 @ =0x0000FFFF
_0807EEC6:
	adds r0, r1, #0
	bl sub_0806F038
	lsrs r0, r4, #0x18
	movs r1, #2
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0xff
	beq _0807EEEC
_0807EEDC:
	movs r2, #0xff
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	b _0807EEEE
	.align 2, 0
_0807EEE8: .4byte 0x0000FFFF
_0807EEEC:
	ldr r1, _0807EF00 @ =0x0000FFFF
_0807EEEE:
	adds r0, r1, #0
	bl sub_0806F038
	movs r1, #0
	movs r0, #1
_0807EEF8:
	strh r0, [r6, #0xc]
	strh r1, [r6, #2]
	mov sl, r1
	b _0807F118
	.align 2, 0
_0807EF00: .4byte 0x0000FFFF
_0807EF04:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _0807EF12
	b _0807F118
_0807EF12:
	b _0807EFFC
_0807EF14:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	movs r0, #0xe3
	lsls r0, r0, #2
	adds r2, r6, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _0807EF60 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _0807EF64 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _0807EF68 @ =gUnk_080BFE3C
	ldr r1, _0807EF6C @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x1e
	bl sub_0800ECF0
	movs r0, #0
	bl sub_0800ED48
	b _0807EFFC
	.align 2, 0
_0807EF60: .4byte gUnk_08BD1BBC
_0807EF64: .4byte gUnk_08BD1BC0
_0807EF68: .4byte gUnk_080BFE3C
_0807EF6C: .4byte gUnk_08BC9F6C
_0807EF70:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _0807EF7E
	b _0807F118
_0807EF7E:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807EFDE
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #0
	movs r1, #0x1b
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	adds r1, r4, #0
	bl sub_0806F0CC
	movs r0, #3
	adds r1, r5, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
_0807EFD2:
	movs r0, #1
	strh r0, [r6, #0xc]
	strh r7, [r6, #2]
_0807EFD8:
	movs r2, #0
	mov sl, r2
	b _0807F118
_0807EFDE:
	adds r0, r6, #0
	adds r0, #0x12
_0807EFE2:
	movs r1, #1
	bl sub_08008E34
	strh r7, [r6, #2]
	b _0807F118
_0807EFEC:
	ldr r0, [r6, #0x14]
	bl sub_0806A040
	adds r0, r6, #0
	adds r0, #0x12
	movs r1, #0
	bl sub_08008E4C
_0807EFFC:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0807F118
_0807F004:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0807F012
	b _0807F118
_0807F012:
	ldrh r5, [r6, #4]
	cmp r5, #1
	bne _0807F086
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F04C
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r5, [r6, #0xc]
	strh r4, [r6, #2]
_0807F046:
	movs r0, #0
	mov sl, r0
	b _0807F118
_0807F04C:
	ldrh r0, [r6, #0xa]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807F086
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #6
	ldrsh r1, [r6, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	strh r5, [r6, #0xc]
	strh r4, [r6, #2]
_0807F080:
	movs r1, #0
	mov sl, r1
	b _0807F118
_0807F086:
	adds r0, r6, #0
	adds r0, #0x12
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r6, #2]
	b _0807F118
_0807F094:
	ldrh r0, [r6, #0xe]
	adds r0, #1
	strh r0, [r6, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _0807F0AC
	movs r0, #0x65
_0807F0A4:
	movs r1, #0
	bl sub_080147B8
	b _0807F118
_0807F0AC:
	cmp r0, #0x1e
	bne _0807F118
	ldrh r0, [r6, #4]
	cmp r0, #7
	bne _0807F10C
	adds r0, r6, #0
	adds r0, #0x94
	ldrh r2, [r6, #6]
	adds r0, r0, r2
	ldrb r5, [r0]
	adds r0, r5, #0
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #0x9b
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0x9c
	adds r1, r4, #0
	bl sub_08012F0C
	movs r0, #0x9d
	movs r1, #1
	bl sub_08012F0C
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0xd
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_0807F10C:
	movs r0, #1
	strh r0, [r6, #0xc]
	movs r0, #0
	mov sl, r0
	mov r1, sl
	strh r1, [r6, #2]
_0807F118:
	mov r0, sl
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807F12C
sub_0807F12C: @ 0x0807F12C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807F15C
	cmp r0, #1
	bgt _0807F148
	cmp r0, #0
	beq _0807F152
	b _0807F190
_0807F148:
	cmp r0, #2
	beq _0807F168
	cmp r0, #3
	beq _0807F18C
	b _0807F190
_0807F152:
	ldrh r0, [r4, #0xc]
	movs r1, #8
	bl sub_0806AC78
	b _0807F184
_0807F15C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F190
	b _0807F184
_0807F168:
	movs r0, #0
	bl sub_08010FC8
	movs r0, #2
	bl sub_08011104
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
_0807F184:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807F190
_0807F18C:
	movs r5, #0
	strh r5, [r4, #2]
_0807F190:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807F198
sub_0807F198: @ 0x0807F198
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	bl sub_0806F020
	str r0, [sp]
	movs r1, #0xc5
	lsls r1, r1, #2
	adds r7, r0, r1
	movs r1, #0
	movs r0, #4
	strb r0, [r7]
	movs r0, #3
	strb r0, [r7, #1]
	movs r0, #2
	strb r0, [r7, #6]
	strb r1, [r7, #7]
	strb r0, [r7, #0x11]
	strb r0, [r7, #0x12]
	ldr r2, [sp]
	ldrh r0, [r2, #4]
	cmp r0, #0
	beq _0807F1E4
	cmp r0, #2
	beq _0807F1E4
	cmp r0, #3
	beq _0807F1E4
	cmp r0, #4
	beq _0807F1E4
	cmp r0, #5
	beq _0807F1E4
	cmp r0, #6
	beq _0807F1E4
	cmp r0, #7
	bne _0807F1F0
_0807F1E4:
	ldr r1, [sp]
	ldrh r0, [r1, #6]
	strh r0, [r7, #2]
	ldrh r0, [r1, #8]
	strh r0, [r7, #4]
	b _0807F1F4
_0807F1F0:
	strh r1, [r7, #2]
	strh r1, [r7, #4]
_0807F1F4:
	movs r0, #0xe0
	strb r0, [r7, #0xd]
	movs r0, #0xf0
	strb r0, [r7, #0xc]
	ldr r0, [sp]
	adds r0, #0x18
	str r0, [r7, #0x14]
	ldr r1, [sp]
	adds r1, #0xb3
	str r1, [r7, #0x18]
	movs r2, #0
	str r2, [sp, #8]
	str r2, [sp, #4]
	str r0, [sp, #0x10]
	ldr r0, [sp]
	adds r0, #0xd4
	str r0, [sp, #0x14]
	ldr r2, [sp, #0x10]
	str r2, [sp, #0x18]
	mov sl, r1
_0807F21C:
	ldr r1, [sp, #4]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	adds r5, r0, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _0807F332
	ldr r2, [sp]
	ldrh r0, [r2, #4]
	cmp r0, #1
	beq _0807F260
	cmp r0, #6
	beq _0807F260
	cmp r0, #2
	bne _0807F25C
	adds r0, r5, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _0807F332
	lsls r4, r4, #0x18
	b _0807F30A
_0807F25C:
	cmp r0, #3
	bne _0807F272
_0807F260:
	adds r0, r5, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _0807F332
	lsls r4, r4, #0x18
	b _0807F30A
_0807F272:
	cmp r0, #4
	bne _0807F2A0
	lsls r4, r4, #0x18
	lsrs r0, r4, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _0807F332
	cmp r6, #0
	bne _0807F30A
	b _0807F332
_0807F2A0:
	lsls r4, r4, #0x18
	cmp r0, #5
	bne _0807F30A
	lsrs r0, r4, #0x18
	mov r8, r0
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r5, #0
	bl sub_0801885C
	movs r1, #1
	mov sb, r1
	ands r1, r0
	cmp r1, #0
	bne _0807F332
	cmp r6, #2
	bls _0807F332
	adds r0, r5, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807F30A
	mov r0, r8
	bl sub_080639BC
	ldr r2, [sp, #0x18]
	stm r2!, {r0}
	str r2, [sp, #0x18]
	mov r1, sb
	mov r0, sl
	strb r1, [r0]
	ldr r0, [sp]
	adds r0, #0x94
	ldr r2, [sp, #8]
	adds r0, r0, r2
	mov r1, sp
	ldrb r1, [r1, #0xc]
	strb r1, [r0]
	movs r2, #1
	add sl, r2
	ldr r0, [sp, #8]
	adds r0, #1
	str r0, [sp, #8]
	b _0807F332
_0807F30A:
	lsrs r0, r4, #0x18
	bl sub_080639BC
	ldr r1, [sp, #0x18]
	stm r1!, {r0}
	str r1, [sp, #0x18]
	movs r0, #0
	mov r2, sl
	strb r0, [r2]
	ldr r0, [sp]
	adds r0, #0x94
	ldr r1, [sp, #8]
	adds r0, r0, r1
	mov r2, sp
	ldrb r2, [r2, #0xc]
	strb r2, [r0]
	movs r0, #1
	add sl, r0
	adds r1, #1
	str r1, [sp, #8]
_0807F332:
	ldr r1, [sp, #4]
	adds r1, #1
	str r1, [sp, #4]
	cmp r1, #0x1d
	bhi _0807F33E
	b _0807F21C
_0807F33E:
	ldr r2, [sp, #8]
	lsls r0, r2, #2
	ldr r1, [sp, #0x10]
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	cmp r2, #6
	bls _0807F356
	movs r0, #6
	strb r0, [r7, #0xa]
	movs r0, #0x1e
	b _0807F35E
_0807F356:
	mov r2, sp
	ldrb r2, [r2, #8]
	strb r2, [r7, #0xa]
	movs r0, #0x1a
_0807F35E:
	strh r0, [r7, #8]
	movs r1, #0
	movs r0, #0x62
	strb r0, [r7, #0xe]
	movs r0, #1
	strb r0, [r7, #0xf]
	ldr r0, [sp, #0x14]
	str r0, [r7, #0x20]
	ldr r0, _0807F388 @ =0x06012400
	str r0, [r7, #0x1c]
	ldr r0, _0807F38C @ =sub_0807F390
	str r0, [r7, #0x24]
	strb r1, [r7, #0x10]
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F388: .4byte 0x06012400
_0807F38C: .4byte sub_0807F390

	thumb_func_start sub_0807F390
sub_0807F390: @ 0x0807F390
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r1, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #8]
	bl sub_0806F020
	adds r6, r0, #0
	adds r0, #0x94
	adds r0, r0, r4
	ldrb r0, [r0]
	mov r8, r0
	mov r4, r8
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r4, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0807F3E4
	adds r7, #0x6f
_0807F3E4:
	ldr r1, _0807F494 @ =0x0000045F
	adds r0, r6, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r5, #2
	str r5, [sp, #0xc]
	cmp r0, #1
	bne _0807F414
	movs r5, #0
	ldr r2, _0807F498 @ =0x0000045C
	adds r1, r6, r2
	movs r2, #0
_0807F3FE:
	adds r0, r1, r5
	strb r2, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #2
	bls _0807F3FE
	ldr r3, _0807F494 @ =0x0000045F
	adds r1, r6, r3
	movs r0, #0
	strb r0, [r1]
_0807F414:
	movs r5, #0
	ldr r0, [sp, #0xc]
	lsls r0, r0, #0x13
	mov sl, r0
	ldr r1, [sp, #8]
	lsls r1, r1, #0x13
	mov sb, r1
_0807F422:
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0807F466
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r8
	bne _0807F466
	ldr r2, _0807F498 @ =0x0000045C
	adds r0, r6, r2
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	lsls r0, r5, #2
	adds r0, r0, r5
	lsls r0, r0, #3
	movs r3, #0xf9
	lsls r3, r3, #2
	adds r0, r0, r3
	adds r0, r6, r0
	mov r2, sl
	asrs r1, r2, #0x10
	mov r3, sb
	asrs r2, r3, #0x10
	bl sub_0800A678
_0807F466:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #2
	bls _0807F422
	ldr r0, _0807F49C @ =gUnk_02010800
	ldr r1, [sp, #0xc]
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x10
	ldr r2, [sp, #8]
	str r2, [sp]
	ldr r1, [sp, #4]
	adds r2, r7, #0
	bl sub_08069DA8
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F494: .4byte 0x0000045F
_0807F498: .4byte 0x0000045C
_0807F49C: .4byte gUnk_02010800

	thumb_func_start sub_0807F4A0
sub_0807F4A0: @ 0x0807F4A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	mov sb, r0
	adds r0, #0x94
	adds r0, r0, r4
	ldrb r0, [r0]
	mov r8, r0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	movs r1, #0xed
	lsls r1, r1, #2
	add r1, sb
	mov r0, r8
	movs r2, #0x9a
	movs r3, #7
	bl sub_0806A670
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r7, _0807F604 @ =gUnk_02010800
	movs r4, #1
	str r4, [sp]
	str r0, [sp, #4]
	movs r5, #2
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xc
	bl sub_0806F2D0
	ldr r6, _0807F608 @ =gUnk_080BFE30
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #1
	adds r3, r6, #0
	bl sub_08001284
	str r4, [sp]
	movs r0, #0x1e
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
	ldr r3, _0807F60C @ =gUnk_080BFE14
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #9
	bl sub_08001284
	ldr r3, _0807F610 @ =gUnk_080BFE18
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _0807F614 @ =gUnk_080BFE1C
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _0807F618 @ =gUnk_080BFE10
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #0xc
	bl sub_08001284
	adds r0, r7, #0
	movs r1, #0x19
	movs r2, #0xc
	adds r3, r6, #0
	bl sub_08001284
	ldr r3, _0807F61C @ =gUnk_080BFE50
	adds r0, r7, #0
	movs r1, #0x12
	movs r2, #0xe
	bl sub_08001284
	adds r0, r7, #0
	movs r1, #0x19
	movs r2, #0xe
	adds r3, r6, #0
	bl sub_08001284
	mov r0, r8
	bl GetWeaponAtk
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, r8
	bl GetWeaponDef
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	bl GetWeaponAgl
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r0, r8
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	mov r0, r8
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	mov r0, r8
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	movs r0, #9
	str r0, [sp]
	str r5, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	movs r0, #0xa
	str r0, [sp]
	str r6, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0
	blt _0807F620
	movs r0, #0xb
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	b _0807F642
	.align 2, 0
_0807F604: .4byte gUnk_02010800
_0807F608: .4byte gUnk_080BFE30
_0807F60C: .4byte gUnk_080BFE14
_0807F610: .4byte gUnk_080BFE18
_0807F614: .4byte gUnk_080BFE1C
_0807F618: .4byte gUnk_080BFE10
_0807F61C: .4byte gUnk_080BFE50
_0807F620:
	movs r0, #2
	bl sub_080012D4
	movs r0, #0xb
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0x15
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_0807F642:
	ldr r6, _0807F714 @ =gUnk_02010800
	movs r5, #0xc
	str r5, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	str r5, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r5, #0xe
	str r5, [sp]
	mov r0, r8
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x16
	bl sub_0806F2D0
	str r5, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	mov r1, sl
	str r1, [sp]
	movs r4, #0x17
	str r4, [sp, #4]
	movs r0, #0xd
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	ldr r3, [sp, #0x18]
	bl sub_0806F174
	mov r0, r8
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0xf
	str r0, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	movs r3, #0xff
	bl sub_0806F174
	mov r1, sb
	ldrh r0, [r1, #0x10]
	mov r4, sb
	adds r4, #0x10
	cmp r0, #0
	beq _0807F6E2
	adds r0, r4, #0
	bl sub_0800B4E4
_0807F6E2:
	ldr r0, [sp, #0x14]
	bl sub_080639D0
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r5, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807F714: .4byte gUnk_02010800

	thumb_func_start sub_0807F718
sub_0807F718: @ 0x0807F718
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807F740
	cmp r0, #1
	bgt _0807F734
	cmp r0, #0
	beq _0807F73A
	b _0807F768
_0807F734:
	cmp r0, #2
	beq _0807F752
	b _0807F768
_0807F73A:
	bl sub_0807F770
	b _0807F744
_0807F740:
	bl sub_0807F808
_0807F744:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F768
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0807F768
_0807F752:
	bl sub_0807F8B4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F768
	movs r5, #0
	strh r5, [r4]
	movs r0, #0xf4
	lsls r0, r0, #2
	bl sub_0806EFF0
_0807F768:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807F770
sub_0807F770: @ 0x0807F770
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807F7B4
	cmp r0, #1
	bgt _0807F78A
	cmp r0, #0
	beq _0807F794
	b _0807F7FC
_0807F78A:
	cmp r0, #2
	beq _0807F7E8
	cmp r0, #3
	beq _0807F7F8
	b _0807F7FC
_0807F794:
	strh r0, [r4, #0xe]
	bl sub_0807F91C
	adds r0, r4, #0
	adds r0, #0xe
	movs r2, #0xea
	lsls r2, r2, #2
	adds r1, r4, r2
	bl sub_080072F8
	ldrh r0, [r4, #6]
	bl sub_0807FA54
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0807F7FA
_0807F7B4:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0807F7FA
_0807F7E8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F7FC
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0807F7FA
_0807F7F8:
	movs r0, #0
_0807F7FA:
	strh r0, [r4, #2]
_0807F7FC:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807F808
sub_0807F808: @ 0x0807F808
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _0807F8A8
	adds r5, r6, #0
	adds r5, #0xe
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _0807F8A8
	ldr r0, _0807F86C @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r4, #0xf0
	ands r4, r0
	cmp r4, #0
	beq _0807F870
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	beq _0807F8A8
	ldrh r0, [r6, #6]
	bl sub_0807FA54
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0807F8A8
	.align 2, 0
_0807F86C: .4byte gCurrentKeyPress
_0807F870:
	ldr r0, _0807F8B0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807F8A8
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r6, #2]
	movs r7, #0
_0807F8A8:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0807F8B0: .4byte gKeyNewPress

	thumb_func_start sub_0807F8B4
sub_0807F8B4: @ 0x0807F8B4
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807F8E4
	cmp r0, #1
	bgt _0807F8D0
	cmp r0, #0
	beq _0807F8DA
	b _0807F914
_0807F8D0:
	cmp r0, #2
	beq _0807F8F0
	cmp r0, #3
	beq _0807F910
	b _0807F914
_0807F8DA:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0807F908
_0807F8E4:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807F914
	b _0807F908
_0807F8F0:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0807F908:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807F914
_0807F910:
	movs r5, #0
	strh r5, [r4, #2]
_0807F914:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807F91C
sub_0807F91C: @ 0x0807F91C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	bl sub_0806F020
	mov r8, r0
	movs r5, #0xea
	lsls r5, r5, #2
	add r5, r8
	movs r1, #0
	movs r0, #4
	strb r0, [r5]
	movs r0, #2
	strb r0, [r5, #1]
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r0, [r5, #0x11]
	strb r0, [r5, #0x12]
	mov r2, r8
	ldrh r0, [r2, #6]
	strh r0, [r5, #2]
	strh r1, [r5, #4]
	movs r0, #0xe0
	strb r0, [r5, #0xd]
	movs r0, #0xf0
	strb r0, [r5, #0xc]
	mov r0, r8
	adds r0, #0x10
	str r0, [r5, #0x14]
	ldr r0, _0807FA14 @ =0x0000012D
	add r0, r8
	str r0, [r5, #0x18]
	movs r7, #0
	movs r0, #0
	mov sl, r0
	movs r1, #0xc8
	lsls r1, r1, #0x10
	str r1, [sp]
_0807F96E:
	movs r2, #0xc8
	add r2, sl
	mov sb, r2
	ldr r0, [sp]
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	mov r6, r8
	adds r6, #0x10
	cmp r0, #0
	beq _0807F9AA
	adds r0, r4, #0
	bl sub_0806380C
	lsls r1, r7, #2
	adds r1, r6, r1
	str r0, [r1]
	ldr r0, _0807FA14 @ =0x0000012D
	add r0, r8
	adds r0, r0, r7
	movs r1, #0
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xf4
	adds r0, r0, r7
	mov r1, sb
	strb r1, [r0]
	adds r7, #1
_0807F9AA:
	ldr r2, [sp]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r2, r1
	movs r2, #0xc9
	add r2, sl
	mov sb, r2
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	mov r6, r8
	adds r6, #0x10
	cmp r0, #0
	beq _0807F9EC
	adds r0, r4, #0
	bl sub_0806380C
	lsls r1, r7, #2
	adds r1, r6, r1
	str r0, [r1]
	ldr r0, _0807FA14 @ =0x0000012D
	add r0, r8
	adds r0, r0, r7
	movs r1, #0
	strb r1, [r0]
	mov r0, r8
	adds r0, #0xf4
	adds r0, r0, r7
	mov r1, sb
	strb r1, [r0]
	adds r7, #1
_0807F9EC:
	ldr r2, [sp]
	movs r0, #0x80
	lsls r0, r0, #0xa
	adds r2, r2, r0
	str r2, [sp]
	movs r1, #2
	add sl, r1
	mov r2, sl
	cmp r2, #0x37
	bls _0807F96E
	lsls r0, r7, #2
	adds r0, r6, r0
	movs r1, #0
	str r1, [r0]
	cmp r7, #7
	bls _0807FA18
	movs r0, #7
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	b _0807FA1C
	.align 2, 0
_0807FA14: .4byte 0x0000012D
_0807FA18:
	strb r7, [r5, #0xa]
	movs r0, #0x1a
_0807FA1C:
	strh r0, [r5, #8]
	movs r1, #0
	movs r0, #0x7a
	strb r0, [r5, #0xe]
	movs r0, #1
	strb r0, [r5, #0xf]
	movs r0, #0xb4
	lsls r0, r0, #1
	add r0, r8
	str r0, [r5, #0x20]
	ldr r0, _0807FA4C @ =0x06012400
	str r0, [r5, #0x1c]
	ldr r0, _0807FA50 @ =sub_08084110
	str r0, [r5, #0x24]
	strb r1, [r5, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FA4C: .4byte 0x06012400
_0807FA50: .4byte sub_08084110

	thumb_func_start sub_0807FA54
sub_0807FA54: @ 0x0807FA54
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	adds r0, #0xf4
	adds r0, r0, r4
	ldrb r4, [r0]
	mov r8, r4
	ldr r0, _0807FAF0 @ =gUnk_02010800
	ldr r3, _0807FAF4 @ =gUnk_080BFE04
	movs r1, #0x15
	movs r2, #3
	bl sub_08001284
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _0807FA8A
	adds r0, r5, #0
	adds r0, #0xa
	bl sub_0800B4E4
_0807FA8A:
	adds r0, r4, #0
	bl sub_08063820
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0xa
	movs r1, #0x11
	str r1, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	movs r7, #2
	str r7, [sp, #0xc]
	str r6, [sp, #0x10]
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldrh r0, [r5, #0xc]
	adds r5, #0xc
	cmp r0, #0
	beq _0807FABC
	adds r0, r5, #0
	bl sub_0800B4E4
_0807FABC:
	ldr r4, _0807FAF8 @ =gUnk_08BC9DD8
	mov r0, r8
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #4
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	str r7, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #0x16
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FAF0: .4byte gUnk_02010800
_0807FAF4: .4byte gUnk_080BFE04
_0807FAF8: .4byte gUnk_08BC9DD8

	thumb_func_start sub_0807FAFC
sub_0807FAFC: @ 0x0807FAFC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0807FB24
	cmp r0, #1
	bgt _0807FB18
	cmp r0, #0
	beq _0807FB1E
	b _0807FB4C
_0807FB18:
	cmp r0, #2
	beq _0807FB36
	b _0807FB4C
_0807FB1E:
	bl sub_0807FBAC
	b _0807FB28
_0807FB24:
	bl sub_0807FC98
_0807FB28:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807FB4C
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0807FB4C
_0807FB36:
	bl sub_0807FDC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807FB4C
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xfd
	lsls r0, r0, #2
	bl sub_0806EFF0
_0807FB4C:
	ldrh r1, [r5, #6]
	adds r0, r5, #0
	adds r0, #0xe1
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _0807FB7E
	adds r2, r5, #0
	adds r2, #0xb8
	adds r2, r2, r1
	ldrh r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0xf1
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r2, #0xa2
	movs r3, #0x18
	bl sub_0806F544
_0807FB7E:
	movs r0, #0xe7
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r1, #0xdd
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807FBAC
sub_0807FBAC: @ 0x0807FBAC
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _0807FC46
	cmp r0, #1
	bgt _0807FBC8
	cmp r0, #0
	beq _0807FBD2
	b _0807FC8E
_0807FBC8:
	cmp r0, #2
	beq _0807FC76
	cmp r0, #3
	beq _0807FC88
	b _0807FC8E
_0807FBD2:
	strh r0, [r6, #0xe]
	bl sub_0807FE34
	adds r0, r6, #0
	adds r0, #0xe
	movs r2, #0xd3
	lsls r2, r2, #2
	adds r1, r6, r2
	bl sub_080072F8
	ldrh r0, [r6, #6]
	bl sub_0807FF98
	movs r0, #0xdd
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xe7
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _0807FC80
_0807FC46:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0807FC80
_0807FC76:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807FC8E
_0807FC80:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0807FC8E
_0807FC88:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_0807FC8E:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0807FC98
sub_0807FC98: @ 0x0807FC98
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _0807FCAC
	b _0807FDC0
_0807FCAC:
	adds r6, r5, #0
	adds r6, #0xe
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0807FCC0
	b _0807FDC0
_0807FCC0:
	ldr r0, _0807FD04 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r4, #0xf0
	ands r4, r0
	cmp r4, #0
	beq _0807FD08
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #6]
	adds r0, r6, #0
	bl sub_08008D50
	strh r0, [r5, #8]
	ldrh r0, [r5, #6]
	cmp r0, r4
	beq _0807FDC0
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #6]
	bl sub_0807FF98
	b _0807FDC0
	.align 2, 0
_0807FD04: .4byte gCurrentKeyPress
_0807FD08:
	ldr r0, _0807FD48 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _0807FD4C
	movs r0, #0
	movs r1, #0xd
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #7
	strh r0, [r5, #0xa]
	b _0807FDBC
	.align 2, 0
_0807FD48: .4byte gKeyNewPress
_0807FD4C:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	beq _0807FD88
	movs r0, #0
	movs r1, #0xd
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #9
	strh r0, [r5, #0xa]
	strh r6, [r5, #2]
	b _0807FDBE
_0807FD88:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0807FDC0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r7, [r5, #0xa]
_0807FDBC:
	strh r4, [r5, #2]
_0807FDBE:
	movs r7, #0
_0807FDC0:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0807FDC8
sub_0807FDC8: @ 0x0807FDC8
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0807FDF8
	cmp r0, #1
	bgt _0807FDE4
	cmp r0, #0
	beq _0807FDEE
	b _0807FE2C
_0807FDE4:
	cmp r0, #2
	beq _0807FE04
	cmp r0, #3
	beq _0807FE28
	b _0807FE2C
_0807FDEE:
	ldrh r0, [r4, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _0807FE20
_0807FDF8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0807FE2C
	b _0807FE20
_0807FE04:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
	movs r0, #0
	bl sub_08010FC8
	movs r0, #2
	bl sub_08011104
_0807FE20:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0807FE2C
_0807FE28:
	movs r5, #0
	strh r5, [r4, #2]
_0807FE2C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0807FE34
sub_0807FE34: @ 0x0807FE34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #0xd3
	lsls r0, r0, #2
	adds r7, r6, r0
	movs r1, #0
	movs r0, #6
	strb r0, [r7]
	movs r0, #3
	strb r0, [r7, #1]
	movs r0, #2
	strb r0, [r7, #6]
	strb r1, [r7, #7]
	strb r1, [r7, #0x11]
	strb r0, [r7, #0x12]
	ldrh r0, [r6, #6]
	strh r0, [r7, #2]
	ldrh r0, [r6, #8]
	strh r0, [r7, #4]
	movs r0, #0xd0
	strb r0, [r7, #0xd]
	movs r0, #0xf0
	strb r0, [r7, #0xc]
	adds r1, r6, #0
	adds r1, #0x14
	str r1, [r7, #0x14]
	adds r0, r6, #0
	adds r0, #0xe1
	str r0, [r7, #0x18]
	movs r2, #0
	str r2, [sp, #4]
	str r2, [sp]
	mov r8, r1
	mov sl, r0
	str r0, [sp, #8]
_0807FE88:
	ldrh r0, [r6, #4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #3
	ldr r2, [sp]
	adds r1, r2, r1
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r0, r4, #0
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807FEB8
	ldr r0, _0807FEB4 @ =gUnk_08BCA070
	ldr r0, [r0]
	mov r1, r8
	str r0, [r1]
	movs r0, #1
	ldr r2, [sp, #8]
	b _0807FEC6
	.align 2, 0
_0807FEB4: .4byte gUnk_08BCA070
_0807FEB8:
	adds r0, r4, #0
	bl sub_080639BC
	mov r1, r8
	str r0, [r1]
	movs r0, #0
	mov r2, sl
_0807FEC6:
	strb r0, [r2]
	adds r0, r6, #0
	adds r0, #0xb8
	ldr r1, [sp, #4]
	adds r0, r0, r1
	mov r2, sp
	ldrb r2, [r2]
	strb r2, [r0]
	ldr r0, [sp, #4]
	adds r0, #1
	mov sb, r0
	ldr r5, [sp]
	adds r5, #1
	ldrh r0, [r6, #4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #3
	adds r1, r5, r1
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	adds r0, r4, #0
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0807FF0C
	ldr r0, _0807FF08 @ =gUnk_08BCA070
	ldr r0, [r0]
	mov r1, r8
	str r0, [r1, #4]
	movs r0, #1
	ldr r2, [sp, #8]
	b _0807FF1A
	.align 2, 0
_0807FF08: .4byte gUnk_08BCA070
_0807FF0C:
	adds r0, r4, #0
	bl sub_080639BC
	mov r1, r8
	str r0, [r1, #4]
	movs r0, #0
	mov r2, sl
_0807FF1A:
	strb r0, [r2, #1]
	adds r0, r6, #0
	adds r0, #0xb8
	add r0, sb
	strb r5, [r0]
	adds r1, r6, #0
	adds r1, #0x14
	movs r0, #8
	add r8, r0
	movs r2, #2
	add sl, r2
	ldr r0, [sp, #8]
	adds r0, #2
	str r0, [sp, #8]
	ldr r2, [sp, #4]
	adds r2, #2
	str r2, [sp, #4]
	ldr r0, [sp]
	adds r0, #2
	str r0, [sp]
	cmp r0, #0x27
	bls _0807FE88
	lsls r0, r2, #2
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	cmp r2, #6
	bls _0807FF5A
	movs r0, #6
	strb r0, [r7, #0xa]
	movs r0, #0x1e
	b _0807FF62
_0807FF5A:
	mov r1, sp
	ldrb r1, [r1, #4]
	strb r1, [r7, #0xa]
	movs r0, #0x1a
_0807FF62:
	strh r0, [r7, #8]
	movs r1, #0
	movs r0, #0x62
	strb r0, [r7, #0xe]
	movs r0, #1
	strb r0, [r7, #0xf]
	movs r2, #0x86
	lsls r2, r2, #1
	adds r0, r6, r2
	str r0, [r7, #0x20]
	ldr r0, _0807FF90 @ =0x06012400
	str r0, [r7, #0x1c]
	ldr r0, _0807FF94 @ =sub_08084168
	str r0, [r7, #0x24]
	strb r1, [r7, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0807FF90: .4byte 0x06012400
_0807FF94: .4byte sub_08084168

	thumb_func_start sub_0807FF98
sub_0807FF98: @ 0x0807FF98
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r6, r0, #0
	adds r2, r6, #0
	adds r2, #0xb8
	adds r2, r2, r4
	ldrh r1, [r6, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	movs r0, #0xe
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0x15
	movs r2, #2
	movs r3, #7
	bl sub_0801BBB8
	ldr r7, _080800EC @ =gUnk_02010800
	ldr r3, _080800F0 @ =gUnk_080BFE54
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
	ldr r3, _080800F4 @ =gUnk_080BFE58
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #0xb
	bl sub_08001284
	ldr r3, _080800F8 @ =gUnk_080BFE14
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _080800FC @ =gUnk_080BFE18
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _08080100 @ =gUnk_080BFE1C
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _08080104 @ =gUnk_080BFE10
	adds r0, r7, #0
	movs r1, #0x15
	movs r2, #0xf
	bl sub_08001284
	mov r0, r8
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	mov r0, r8
	bl sub_08063AC4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	mov r0, r8
	bl sub_08063ADC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	mov r0, r8
	bl sub_08063AF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x14]
	mov r0, r8
	bl sub_08063B0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x18]
	movs r5, #2
	str r5, [sp]
	adds r4, #1
	str r4, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r6, #0
	adds r0, #0xe1
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _08080152
	movs r0, #0xb
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	movs r0, #0xc
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #0xd
	str r0, [sp]
	ldr r0, [sp, #0x1c]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	ldr r1, [sp, #0x14]
	lsls r0, r1, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _08080108
	movs r0, #0xe
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	b _0808012A
	.align 2, 0
_080800EC: .4byte gUnk_02010800
_080800F0: .4byte gUnk_080BFE54
_080800F4: .4byte gUnk_080BFE58
_080800F8: .4byte gUnk_080BFE14
_080800FC: .4byte gUnk_080BFE18
_08080100: .4byte gUnk_080BFE1C
_08080104: .4byte gUnk_080BFE10
_08080108:
	movs r0, #2
	bl sub_080012D4
	movs r1, #0xe
	str r1, [sp]
	str r4, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_0808012A:
	ldr r0, _08080194 @ =gUnk_02010800
	movs r1, #0xf
	str r1, [sp]
	ldr r1, [sp, #0x18]
	str r1, [sp, #4]
	movs r1, #3
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #0xf1
	lsls r0, r0, #2
	adds r1, r6, r0
	mov r0, r8
	movs r2, #0xa2
	movs r3, #0x18
	bl sub_0806A9A8
_08080152:
	ldrh r0, [r6, #0xc]
	adds r5, r6, #0
	adds r5, #0xc
	cmp r0, #0
	beq _08080162
	adds r0, r5, #0
	bl sub_0800B4E4
_08080162:
	adds r0, r6, #0
	adds r0, #0xe1
	ldrh r6, [r6, #6]
	adds r0, r0, r6
	ldrb r4, [r0]
	cmp r4, #0
	bne _08080198
	mov r0, r8
	bl sub_080639D0
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	b _080801B6
	.align 2, 0
_08080194: .4byte gUnk_02010800
_08080198:
	ldr r0, _080801C8 @ =gUnk_08BCA07C
	ldr r2, [r0]
	movs r0, #0x11
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
_080801B6:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080801C8: .4byte gUnk_08BCA07C

	thumb_func_start sub_080801CC
sub_080801CC: @ 0x080801CC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080801F4
	cmp r0, #1
	bgt _080801E8
	cmp r0, #0
	beq _080801EE
	b _0808021C
_080801E8:
	cmp r0, #2
	beq _08080206
	b _0808021C
_080801EE:
	bl sub_08080248
	b _080801F8
_080801F4:
	bl sub_08080334
_080801F8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808021C
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0808021C
_08080206:
	bl sub_0808043C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808021C
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xf6
	lsls r0, r0, #2
	bl sub_0806EFF0
_0808021C:
	movs r0, #0xec
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r1, #0xe2
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08080248
sub_08080248: @ 0x08080248
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _080802E2
	cmp r0, #1
	bgt _08080264
	cmp r0, #0
	beq _0808026E
	b _0808032A
_08080264:
	cmp r0, #2
	beq _08080312
	cmp r0, #3
	beq _08080324
	b _0808032A
_0808026E:
	strh r0, [r6, #0xe]
	bl sub_0808049C
	adds r0, r6, #0
	adds r0, #0xe
	movs r2, #0xd8
	lsls r2, r2, #2
	adds r1, r6, r2
	bl sub_080072F8
	ldrh r0, [r6, #6]
	bl sub_080805AC
	movs r0, #0xe2
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xec
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _0808031C
_080802E2:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808031C
_08080312:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808032A
_0808031C:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808032A
_08080324:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_0808032A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08080334
sub_08080334: @ 0x08080334
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _08080434
	adds r5, r6, #0
	adds r5, #0xe
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _08080434
	ldr r0, _0808039C @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r4, #0xf0
	ands r4, r0
	cmp r4, #0
	beq _080803A0
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	beq _08080434
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r6, #6]
	bl sub_080805AC
	b _08080434
	.align 2, 0
_0808039C: .4byte gCurrentKeyPress
_080803A0:
	ldr r5, _080803DC @ =gKeyNewPress
	ldrh r1, [r5]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080803E0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r7, [r6, #0xa]
	strh r4, [r6, #2]
	b _08080432
	.align 2, 0
_080803DC: .4byte gKeyNewPress
_080803E0:
	movs r0, #0xc0
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080434
	movs r0, #0
	movs r1, #0xe
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r6, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	ldrh r1, [r5]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08080420
	movs r0, #9
	b _0808042C
_08080420:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808042E
	movs r0, #7
_0808042C:
	strh r0, [r6, #0xa]
_0808042E:
	movs r0, #0
	strh r0, [r6, #2]
_08080432:
	movs r7, #0
_08080434:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0808043C
sub_0808043C: @ 0x0808043C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808046C
	cmp r0, #1
	bgt _08080458
	cmp r0, #0
	beq _08080462
	b _08080494
_08080458:
	cmp r0, #2
	beq _08080478
	cmp r0, #3
	beq _08080490
	b _08080494
_08080462:
	ldrh r0, [r4, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _08080488
_0808046C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080494
	b _08080488
_08080478:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_08080488:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08080494
_08080490:
	movs r5, #0
	strh r5, [r4, #2]
_08080494:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808049C
sub_0808049C: @ 0x0808049C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #0xd8
	lsls r0, r0, #2
	adds r5, r6, r0
	movs r1, #0
	movs r0, #6
	strb r0, [r5]
	movs r0, #3
	strb r0, [r5, #1]
	movs r0, #2
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r1, [r5, #0x11]
	strb r0, [r5, #0x12]
	ldrh r0, [r6, #6]
	strh r0, [r5, #2]
	ldrh r0, [r6, #8]
	strh r0, [r5, #4]
	movs r0, #0xd0
	strb r0, [r5, #0xd]
	movs r0, #0xf0
	strb r0, [r5, #0xc]
	adds r0, r6, #0
	adds r0, #0x10
	str r0, [r5, #0x14]
	adds r0, #0xe1
	str r0, [r5, #0x18]
	movs r7, #0
	mov r8, r1
	mov sl, r1
	mov sb, r1
_080804E8:
	mov r2, sl
	lsrs r4, r2, #0x18
	adds r0, r4, #0
	movs r1, #0
	bl sub_08018A50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08080524
	adds r0, r4, #0
	movs r1, #1
	bl sub_08018A50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08080524
	adds r2, r6, #0
	adds r2, #0x10
	mov r3, sb
	adds r1, r2, r3
	ldr r0, _08080520 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r6, #0
	adds r0, #0xf1
	adds r0, r0, r7
	movs r1, #1
	b _0808053E
	.align 2, 0
_08080520: .4byte gUnk_08BCA070
_08080524:
	mov r2, sl
	lsrs r0, r2, #0x18
	bl sub_08063CFC
	adds r2, r6, #0
	adds r2, #0x10
	mov r3, sb
	adds r1, r2, r3
	str r0, [r1]
	adds r0, r6, #0
	adds r0, #0xf1
	adds r0, r0, r7
	movs r1, #0
_0808053E:
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0xc4
	adds r0, r0, r7
	mov r1, r8
	strb r1, [r0]
	movs r3, #4
	add sb, r3
	adds r7, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	add sl, r0
	movs r1, #1
	add r8, r1
	mov r3, r8
	cmp r3, #0x2b
	bls _080804E8
	lsls r0, r7, #2
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	cmp r7, #6
	bls _08080574
	movs r0, #6
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	b _08080578
_08080574:
	strb r7, [r5, #0xa]
	movs r0, #0x1a
_08080578:
	strh r0, [r5, #8]
	movs r1, #0
	movs r0, #0x62
	strb r0, [r5, #0xe]
	movs r0, #1
	strb r0, [r5, #0xf]
	movs r2, #0x90
	lsls r2, r2, #1
	adds r0, r6, r2
	str r0, [r5, #0x20]
	ldr r0, _080805A4 @ =0x06012400
	str r0, [r5, #0x1c]
	ldr r0, _080805A8 @ =sub_080841FC
	str r0, [r5, #0x24]
	strb r1, [r5, #0x10]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080805A4: .4byte 0x06012400
_080805A8: .4byte sub_080841FC

	thumb_func_start sub_080805AC
sub_080805AC: @ 0x080805AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r6, r0, #0
	adds r0, #0xc4
	adds r0, r0, r4
	ldrb r7, [r0]
	adds r0, r6, #0
	adds r0, #0xf1
	ldrh r1, [r6, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080805E0
	adds r0, r7, #0
	bl sub_08063D44
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _080805E2
_080805E0:
	movs r4, #0
_080805E2:
	ldr r5, _0808063C @ =gUnk_02010800
	ldr r3, _08080640 @ =gUnk_080BFE60
	adds r0, r5, #0
	movs r1, #0x16
	movs r2, #3
	bl sub_08001284
	ldr r3, _08080644 @ =gUnk_080BFE04
	adds r0, r5, #0
	movs r1, #0x17
	movs r2, #4
	bl sub_08001284
	ldr r3, _08080648 @ =gUnk_080BFE10
	adds r0, r5, #0
	movs r1, #0x18
	movs r2, #0xc
	bl sub_08001284
	ldrh r0, [r6, #6]
	adds r1, r6, #0
	adds r1, #0xf1
	adds r0, r1, r0
	ldrb r0, [r0]
	mov r8, r1
	cmp r0, #0
	bne _0808064C
	adds r0, r7, #0
	bl sub_08063D5C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	b _08080658
	.align 2, 0
_0808063C: .4byte gUnk_02010800
_08080640: .4byte gUnk_080BFE60
_08080644: .4byte gUnk_080BFE04
_08080648: .4byte gUnk_080BFE10
_0808064C:
	ldr r3, _08080674 @ =gUnk_080BFE68
	adds r0, r5, #0
	movs r1, #0x18
	movs r2, #0xd
	bl sub_08001284
_08080658:
	movs r0, #1
	ands r0, r4
	cmp r0, #0
	beq _0808067C
	ldr r0, _08080678 @ =gUnk_02010800
	movs r1, #5
	str r1, [sp]
	movs r1, #8
	movs r2, #2
	movs r3, #0x17
	bl sub_08069DA8
	b _0808068C
	.align 2, 0
_08080674: .4byte gUnk_080BFE68
_08080678: .4byte gUnk_02010800
_0808067C:
	ldr r0, _080806A8 @ =gUnk_02010800
	movs r1, #5
	str r1, [sp]
	movs r1, #8
	movs r2, #0
	movs r3, #0x17
	bl sub_08069DA8
_0808068C:
	movs r0, #2
	ands r0, r4
	cmp r0, #0
	beq _080806AC
	ldr r0, _080806A8 @ =gUnk_02010800
	movs r1, #5
	str r1, [sp]
	movs r1, #9
	movs r2, #3
	movs r3, #0x19
	bl sub_08069DA8
	b _080806BC
	.align 2, 0
_080806A8: .4byte gUnk_02010800
_080806AC:
	ldr r0, _080806D8 @ =gUnk_02010800
	movs r1, #5
	str r1, [sp]
	movs r1, #9
	movs r2, #0
	movs r3, #0x19
	bl sub_08069DA8
_080806BC:
	movs r0, #4
	ands r0, r4
	cmp r0, #0
	beq _080806DC
	ldr r0, _080806D8 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	movs r1, #0xa
	movs r2, #4
	movs r3, #0x17
	bl sub_08069DA8
	b _080806EC
	.align 2, 0
_080806D8: .4byte gUnk_02010800
_080806DC:
	ldr r0, _08080708 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	movs r1, #0xa
	movs r2, #0
	movs r3, #0x17
	bl sub_08069DA8
_080806EC:
	movs r0, #8
	ands r0, r4
	cmp r0, #0
	beq _0808070C
	ldr r0, _08080708 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	movs r1, #0xb
	movs r2, #5
	movs r3, #0x19
	bl sub_08069DA8
	b _0808071C
	.align 2, 0
_08080708: .4byte gUnk_02010800
_0808070C:
	ldr r0, _08080738 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	movs r1, #0xb
	movs r2, #0
	movs r3, #0x19
	bl sub_08069DA8
_0808071C:
	movs r0, #0x10
	ands r0, r4
	cmp r0, #0
	beq _0808073C
	ldr r0, _08080738 @ =gUnk_02010800
	movs r1, #9
	str r1, [sp]
	movs r1, #0xc
	movs r2, #6
	movs r3, #0x17
	bl sub_08069DA8
	b _0808074C
	.align 2, 0
_08080738: .4byte gUnk_02010800
_0808073C:
	ldr r0, _08080768 @ =gUnk_02010800
	movs r1, #9
	str r1, [sp]
	movs r1, #0xc
	movs r2, #0
	movs r3, #0x17
	bl sub_08069DA8
_0808074C:
	movs r0, #0x20
	ands r4, r0
	cmp r4, #0
	beq _0808076C
	ldr r0, _08080768 @ =gUnk_02010800
	movs r1, #9
	str r1, [sp]
	movs r1, #0xd
	movs r2, #7
	movs r3, #0x19
	bl sub_08069DA8
	b _0808077C
	.align 2, 0
_08080768: .4byte gUnk_02010800
_0808076C:
	ldr r0, _080807B8 @ =gUnk_02010800
	movs r1, #9
	str r1, [sp]
	movs r1, #0xd
	movs r2, #0
	movs r3, #0x19
	bl sub_08069DA8
_0808077C:
	ldrh r0, [r6, #0xc]
	adds r5, r6, #0
	adds r5, #0xc
	cmp r0, #0
	beq _0808078C
	adds r0, r5, #0
	bl sub_0800B4E4
_0808078C:
	ldrh r0, [r6, #6]
	add r0, r8
	ldrb r4, [r0]
	cmp r4, #0
	bne _080807BC
	adds r0, r7, #0
	bl sub_08063D14
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	b _080807DA
	.align 2, 0
_080807B8: .4byte gUnk_02010800
_080807BC:
	ldr r0, _080807E8 @ =gUnk_08BCA07C
	ldr r2, [r0]
	movs r0, #0x11
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
_080807DA:
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080807E8: .4byte gUnk_08BCA07C

	thumb_func_start sub_080807EC
sub_080807EC: @ 0x080807EC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08080814
	cmp r0, #1
	bgt _08080808
	cmp r0, #0
	beq _0808080E
	b _0808083C
_08080808:
	cmp r0, #2
	beq _08080826
	b _0808083C
_0808080E:
	bl sub_08080868
	b _08080818
_08080814:
	bl sub_08080954
_08080818:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808083C
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0808083C
_08080826:
	bl sub_08080A5C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808083C
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xf0
	lsls r0, r0, #2
	bl sub_0806EFF0
_0808083C:
	movs r0, #0xe6
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r1, #0xdc
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08080868
sub_08080868: @ 0x08080868
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08080902
	cmp r0, #1
	bgt _08080884
	cmp r0, #0
	beq _0808088E
	b _0808094A
_08080884:
	cmp r0, #2
	beq _08080932
	cmp r0, #3
	beq _08080944
	b _0808094A
_0808088E:
	strh r0, [r6, #0xe]
	bl sub_08080ABC
	adds r0, r6, #0
	adds r0, #0xe
	movs r2, #0xd2
	lsls r2, r2, #2
	adds r1, r6, r2
	bl sub_080072F8
	ldrh r0, [r6, #6]
	bl sub_08084334
	movs r0, #0xdc
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xe6
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _0808093C
_08080902:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808093C
_08080932:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808094A
_0808093C:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808094A
_08080944:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_0808094A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08080954
sub_08080954: @ 0x08080954
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0
	bne _08080A54
	adds r5, r6, #0
	adds r5, #0xe
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _08080A54
	ldr r0, _080809BC @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r4, #0xf0
	ands r4, r0
	cmp r4, #0
	beq _080809C0
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	beq _08080A54
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r6, #6]
	bl sub_08084334
	b _08080A54
	.align 2, 0
_080809BC: .4byte gCurrentKeyPress
_080809C0:
	ldr r5, _080809FC @ =gKeyNewPress
	ldrh r1, [r5]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080A00
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r7, [r6, #0xa]
	strh r4, [r6, #2]
	b _08080A52
	.align 2, 0
_080809FC: .4byte gKeyNewPress
_08080A00:
	movs r0, #0xc0
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080A54
	movs r0, #0
	movs r1, #0xf
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r6, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	ldrh r1, [r5]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08080A40
	movs r0, #9
	b _08080A4C
_08080A40:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08080A4E
	movs r0, #7
_08080A4C:
	strh r0, [r6, #0xa]
_08080A4E:
	movs r0, #0
	strh r0, [r6, #2]
_08080A52:
	movs r7, #0
_08080A54:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08080A5C
sub_08080A5C: @ 0x08080A5C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08080A8C
	cmp r0, #1
	bgt _08080A78
	cmp r0, #0
	beq _08080A82
	b _08080AB4
_08080A78:
	cmp r0, #2
	beq _08080A98
	cmp r0, #3
	beq _08080AB0
	b _08080AB4
_08080A82:
	ldrh r0, [r4, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _08080AA8
_08080A8C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080AB4
	b _08080AA8
_08080A98:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_08080AA8:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08080AB4
_08080AB0:
	movs r5, #0
	strh r5, [r4, #2]
_08080AB4:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08080ABC
sub_08080ABC: @ 0x08080ABC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #0xd2
	lsls r0, r0, #2
	adds r5, r6, r0
	movs r1, #0
	movs r0, #6
	strb r0, [r5]
	movs r0, #3
	strb r0, [r5, #1]
	movs r0, #2
	strb r0, [r5, #6]
	strb r1, [r5, #7]
	strb r1, [r5, #0x11]
	strb r0, [r5, #0x12]
	ldrh r0, [r6, #6]
	strh r0, [r5, #2]
	ldrh r0, [r6, #8]
	strh r0, [r5, #4]
	movs r0, #0xd0
	strb r0, [r5, #0xd]
	movs r0, #0xf0
	strb r0, [r5, #0xc]
	adds r0, r6, #0
	adds r0, #0x10
	str r0, [r5, #0x14]
	adds r0, #0xcd
	str r0, [r5, #0x18]
	movs r7, #0
	mov r8, r1
	mov sl, r1
	mov sb, r1
_08080B08:
	mov r2, sl
	lsrs r4, r2, #0x18
	adds r0, r4, #0
	movs r1, #0
	bl sub_08018A94
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08080B44
	adds r0, r4, #0
	movs r1, #1
	bl sub_08018A94
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08080B44
	adds r2, r6, #0
	adds r2, #0x10
	mov r3, sb
	adds r1, r2, r3
	ldr r0, _08080B40 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r1]
	adds r0, r6, #0
	adds r0, #0xdd
	adds r0, r0, r7
	movs r1, #1
	b _08080B5E
	.align 2, 0
_08080B40: .4byte gUnk_08BCA070
_08080B44:
	mov r2, sl
	lsrs r0, r2, #0x18
	bl sub_08063DB4
	adds r2, r6, #0
	adds r2, #0x10
	mov r3, sb
	adds r1, r2, r3
	str r0, [r1]
	adds r0, r6, #0
	adds r0, #0xdd
	adds r0, r0, r7
	movs r1, #0
_08080B5E:
	strb r1, [r0]
	adds r0, r6, #0
	adds r0, #0xb4
	adds r0, r0, r7
	mov r1, r8
	strb r1, [r0]
	movs r3, #4
	add sb, r3
	adds r7, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	add sl, r0
	movs r1, #1
	add r8, r1
	mov r3, r8
	cmp r3, #0x27
	bls _08080B08
	lsls r0, r7, #2
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	cmp r7, #6
	bls _08080B94
	movs r0, #6
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	b _08080B98
_08080B94:
	strb r7, [r5, #0xa]
	movs r0, #0x1a
_08080B98:
	strh r0, [r5, #8]
	movs r1, #0
	movs r0, #0x62
	strb r0, [r5, #0xe]
	movs r0, #1
	strb r0, [r5, #0xf]
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r6, r2
	str r0, [r5, #0x20]
	ldr r0, _08080BC4 @ =0x06012400
	str r0, [r5, #0x1c]
	ldr r0, _08080BC8 @ =sub_08084298
	str r0, [r5, #0x24]
	strb r1, [r5, #0x10]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08080BC4: .4byte 0x06012400
_08080BC8: .4byte sub_08084298

	thumb_func_start sub_08080BCC
sub_08080BCC: @ 0x08080BCC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	movs r0, #0x90
	bl sub_0806EFA8
	bl sub_0806F020
	adds r6, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08080C88 @ =0x01000048
	adds r0, r1, #0
	adds r1, r6, #0
	bl CpuSet
	strh r7, [r6, #4]
	strh r4, [r6, #6]
	strh r5, [r6, #8]
	cmp r7, #1
	beq _08080C18
	cmp r7, #8
	beq _08080C18
	cmp r7, #0xa
	bne _08080C1C
_08080C18:
	mov r0, r8
	strh r0, [r6, #0xa]
_08080C1C:
	movs r0, #0xe
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08080C88: .4byte 0x01000048

	thumb_func_start sub_08080C8C
sub_08080C8C: @ 0x08080C8C
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08080CB4
	cmp r0, #1
	bgt _08080CA8
	cmp r0, #0
	beq _08080CAE
	b _08080CDA
_08080CA8:
	cmp r0, #2
	beq _08080CC6
	b _08080CDA
_08080CAE:
	bl sub_08080D00
	b _08080CB8
_08080CB4:
	bl sub_08080D80
_08080CB8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080CDA
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08080CDA
_08080CC6:
	bl sub_08081488
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080CDA
	movs r6, #0
	strh r6, [r5]
	movs r0, #0x90
	bl sub_0806EFF0
_08080CDA:
	adds r4, r5, #0
	adds r4, #0x68
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08080D00
sub_08080D00: @ 0x08080D00
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08080D30
	cmp r0, #1
	bgt _08080D1C
	cmp r0, #0
	beq _08080D26
	b _08080D78
_08080D1C:
	cmp r0, #2
	beq _08080D60
	cmp r0, #3
	beq _08080D72
	b _08080D78
_08080D26:
	bl sub_08081500
	bl sub_08081650
	b _08080D6A
_08080D30:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08080D6A
_08080D60:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080D78
_08080D6A:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08080D78
_08080D72:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_08080D78:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08080D80
sub_08080D80: @ 0x08080D80
	push {r4, r5, r6, lr}
	sub sp, #0x20
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x1e
	bne _08080D96
	b _08081464
_08080D96:
	cmp r0, #0x1e
	bgt _08080DA0
	cmp r0, #0
	beq _08080DA8
	b _0808147E
_08080DA0:
	cmp r0, #0x1f
	bne _08080DA6
	b _08081470
_08080DA6:
	b _0808147E
_08080DA8:
	ldr r0, _08080DC0 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08080DC4
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08080DBC
	b _0808147E
_08080DBC:
	subs r0, #1
	b _08080DDA
	.align 2, 0
_08080DC0: .4byte gCurrentKeyPress
_08080DC4:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08080DEA
	ldrh r1, [r5, #6]
	ldrh r0, [r5, #0x38]
	subs r0, #1
	cmp r1, r0
	bne _08080DD8
	b _0808147E
_08080DD8:
	adds r0, r1, #1
_08080DDA:
	strh r0, [r5, #6]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	bl sub_08081650
	b _0808147E
_08080DEA:
	ldr r0, _08080E2C @ =gKeyNewPress
	ldrh r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _08080ED2
	ldrh r0, [r5, #4]
	cmp r0, #1
	beq _08080E06
	cmp r0, #8
	beq _08080E06
	cmp r0, #0xa
	beq _08080E06
	b _0808147E
_08080E06:
	ldrh r0, [r5, #6]
	adds r4, r5, #0
	adds r4, #0x18
	adds r0, r4, r0
	ldrb r0, [r0]
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08080E34
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08080E30 @ =gUnk_08BC9F04
	ldr r0, [r0]
	str r0, [r5, #0x3c]
	movs r0, #0x1e
	b _0808147C
	.align 2, 0
_08080E2C: .4byte gKeyNewPress
_08080E30: .4byte gUnk_08BC9F04
_08080E34:
	movs r0, #0
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08080E50
	movs r0, #0
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08080E50:
	movs r0, #1
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08080E6C
	movs r0, #1
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08080E6C:
	movs r0, #2
	bl GetEquipWeapon
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r1]
	cmp r0, r1
	bne _08080E88
	movs r0, #2
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_08080E88:
	ldrb r0, [r5, #0xa]
	ldrh r1, [r5, #6]
	adds r1, r4, r1
	ldrb r1, [r1]
	bl SetPlayerEquipWeaponType
	bl sub_0801644C
	movs r0, #0
	movs r1, #0x10
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r5, #4]
	cmp r0, #8
	bne _08080EB8
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	b _08080EC4
_08080EB8:
	cmp r0, #0xa
	bne _08080EC4
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
_08080EC4:
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #3
	b _0808135C
_08080ED2:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08080EDE
	b _080810B8
_08080EDE:
	ldrh r0, [r5, #4]
	adds r1, r0, #0
	cmp r1, #0
	bne _08080EF4
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081070
_08080EF4:
	cmp r1, #3
	bne _08080F22
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	mov r0, sp
	bl sub_0806F054
	mov r0, sp
	b _08080FA0
_08080F22:
	cmp r1, #4
	bne _08080F4A
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #4
	b _08080F98
_08080F4A:
	cmp r1, #5
	bne _08080F72
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #8
	b _08080F98
_08080F72:
	cmp r1, #6
	bne _08080FB2
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0xc
_08080F98:
	adds r0, r4, #0
	bl sub_0806F054
	adds r0, r4, #0
_08080FA0:
	bl sub_0806F054
	ldrh r0, [r5, #6]
	bl sub_0806F038
	ldrh r0, [r5, #8]
	bl sub_0806F038
	b _080810B2
_08080FB2:
	cmp r1, #1
	bne _08080FE6
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _080810B2
_08080FE6:
	cmp r1, #8
	bne _0808101A
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #1
	bl sub_0806F0CC
	b _080810B2
_0808101A:
	cmp r1, #0xa
	bne _0808104E
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #2
	bl sub_0806F0CC
	b _080810B2
_0808104E:
	cmp r1, #2
	bne _08081060
	movs r0, #0
	movs r1, #0x16
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081070
_08081060:
	cmp r0, #7
	bne _0808108A
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
_08081070:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _080810B2
_0808108A:
	cmp r0, #9
	bne _080810B2
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_080810B2:
	movs r1, #0
	movs r0, #7
	b _0808145C
_080810B8:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080810C4
	b _08081228
_080810C4:
	ldrh r0, [r5, #4]
	adds r1, r0, #0
	cmp r1, #0
	bne _080810DA
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _080811E0
_080810DA:
	cmp r1, #3
	bne _080810EC
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	b _080811E0
_080810EC:
	cmp r1, #4
	bne _080810FE
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	b _080811E0
_080810FE:
	cmp r1, #5
	bne _08081110
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	b _080811E0
_08081110:
	cmp r1, #6
	bne _08081122
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
	b _080811E0
_08081122:
	cmp r1, #1
	bne _08081156
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08081222
_08081156:
	cmp r1, #8
	bne _0808118A
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #1
	bl sub_0806F0CC
	b _08081222
_0808118A:
	cmp r1, #0xa
	bne _080811BE
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #2
	bl sub_0806F0CC
	b _08081222
_080811BE:
	cmp r1, #2
	bne _080811D0
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	b _080811E0
_080811D0:
	cmp r0, #7
	bne _080811FA
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
_080811E0:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _08081222
_080811FA:
	cmp r0, #9
	bne _08081222
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #8
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_08081222:
	movs r1, #0
	movs r0, #9
	b _0808145C
_08081228:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08081232
	b _0808147E
_08081232:
	ldrh r0, [r5, #4]
	adds r1, r0, #0
	cmp r1, #0
	bne _08081250
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _0808140E
_08081250:
	cmp r1, #3
	bne _08081280
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x10
	b _0808130E
_08081280:
	cmp r1, #4
	bne _080812B0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x14
	b _0808130E
_080812B0:
	cmp r1, #5
	bne _080812E0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x18
	b _0808130E
_080812E0:
	cmp r1, #6
	bne _08081328
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x1c
_0808130E:
	adds r0, r4, #0
	bl sub_0806F054
	adds r0, r4, #0
	bl sub_0806F054
	ldrh r0, [r5, #6]
	bl sub_0806F038
	ldrh r0, [r5, #8]
	bl sub_0806F038
	b _08081458
_08081328:
	cmp r1, #1
	bne _08081364
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
_0808135C:
	movs r1, #0
	bl sub_0806F0CC
	b _08081458
_08081364:
	cmp r1, #8
	bne _080813A0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #1
	bl sub_0806F0CC
	b _08081458
_080813A0:
	cmp r1, #0xa
	bne _080813DC
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x11
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #2
	bl sub_0806F0CC
	b _08081458
_080813DC:
	cmp r1, #2
	bne _080813F6
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x16
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _0808140E
_080813F6:
	cmp r1, #7
	bne _08081428
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
_0808140E:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _08081458
_08081428:
	cmp r0, #9
	bne _08081458
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_08081458:
	movs r1, #0
	movs r0, #1
_0808145C:
	strh r0, [r5, #0xc]
	strh r1, [r5, #2]
	movs r6, #0
	b _0808147E
_08081464:
	ldr r0, [r5, #0x3c]
	bl sub_0806A040
	ldrh r0, [r5, #2]
	adds r0, #1
	b _0808147C
_08081470:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _0808147E
_0808147C:
	strh r0, [r5, #2]
_0808147E:
	adds r0, r6, #0
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08081488
sub_08081488: @ 0x08081488
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080814B8
	cmp r0, #1
	bgt _080814A4
	cmp r0, #0
	beq _080814AE
	b _080814F8
_080814A4:
	cmp r0, #2
	beq _080814C4
	cmp r0, #3
	beq _080814F4
	b _080814F8
_080814AE:
	ldrh r0, [r4, #0xc]
	movs r1, #8
	bl sub_0806AC78
	b _080814EC
_080814B8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080814F8
	b _080814EC
_080814C4:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x16
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_080814EC:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080814F8
_080814F4:
	movs r5, #0
	strh r5, [r4, #2]
_080814F8:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08081500
sub_08081500: @ 0x08081500
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	bl sub_0806F020
	str r0, [sp]
	movs r0, #0
	mov r8, r0
	mov sl, r0
	movs r1, #1
	mov sb, r1
	ldr r5, [sp]
	adds r5, #0x18
_08081520:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r6, r7, #0
	adds r0, r6, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [sp]
	ldrh r4, [r1, #4]
	cmp r4, #0
	beq _08081546
	cmp r4, #9
	bne _0808154C
_08081546:
	cmp r0, #0xff
	beq _0808162E
	b _08081606
_0808154C:
	cmp r4, #3
	bne _08081564
	cmp r0, #0xff
	beq _0808162E
	adds r0, r6, #0
	bl sub_0801885C
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	beq _0808162E
	b _08081626
_08081564:
	cmp r4, #4
	bne _0808157C
	cmp r0, #0xff
	beq _0808162E
	adds r0, r6, #0
	bl sub_0801885C
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	bne _0808162E
	b _08081606
_0808157C:
	cmp r4, #5
	bne _080815AA
	cmp r0, #0xff
	beq _0808162E
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_0801885C
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	bne _0808162E
	cmp r4, #0
	beq _0808162E
	b _08081626
_080815AA:
	cmp r4, #6
	bne _080815D8
	cmp r0, #0xff
	beq _0808162E
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_0801885C
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	bne _0808162E
	cmp r4, #2
	bls _0808162E
	b _08081606
_080815D8:
	cmp r4, #1
	beq _080815E4
	cmp r4, #8
	beq _080815E4
	cmp r4, #0xa
	bne _080815EC
_080815E4:
	cmp r0, #0xff
	beq _0808162E
	adds r0, r7, #0
	b _0808161A
_080815EC:
	cmp r4, #2
	bne _08081610
	cmp r0, #0xff
	beq _0808162E
	cmp r0, #0xef
	bhi _0808162E
	adds r0, r6, #0
	bl sub_0801885C
	ands r4, r0
	lsls r0, r4, #0x18
	cmp r0, #0
	bne _0808162E
_08081606:
	strb r7, [r5]
	adds r5, #1
	movs r0, #1
	add r8, r0
	b _0808162E
_08081610:
	cmp r4, #7
	bne _0808162E
	cmp r0, #0xff
	beq _0808162E
	adds r0, r6, #0
_0808161A:
	bl sub_0801885C
	mov r1, sb
	ands r1, r0
	cmp r1, #0
	bne _0808162E
_08081626:
	strb r7, [r5]
	adds r5, #1
	movs r1, #1
	add r8, r1
_0808162E:
	movs r0, #1
	add sl, r0
	mov r1, sl
	cmp r1, #0x1d
	bhi _0808163A
	b _08081520
_0808163A:
	mov r1, r8
	ldr r0, [sp]
	strh r1, [r0, #0x38]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08081650
sub_08081650: @ 0x08081650
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	bl sub_0806F020
	mov r8, r0
	adds r0, #0x18
	mov r1, r8
	ldrh r1, [r1, #6]
	adds r0, r0, r1
	ldrb r5, [r0]
	adds r0, r5, #0
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r5, #0
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r0, r5, #0
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	mov sl, r4
	mov r0, sl
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r5, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080816AA
	adds r4, #0x6f
_080816AA:
	ldr r2, _08081728 @ =gUnk_02010800
	mov sb, r2
	ldr r3, _0808172C @ =gUnk_080BFE6C
	mov r0, sb
	movs r1, #1
	movs r2, #6
	bl sub_08001284
	ldr r3, _08081730 @ =gUnk_080BFE34
	mov r0, sb
	movs r1, #1
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _08081734 @ =gUnk_080BFE10
	mov r0, sb
	movs r1, #0x15
	movs r2, #6
	bl sub_08001284
	movs r6, #2
	str r6, [sp]
	mov r0, sb
	movs r1, #0
	adds r2, r4, #0
	movs r3, #1
	bl sub_08069DA8
	mov r1, r8
	ldrh r0, [r1, #0xe]
	mov r5, r8
	adds r5, #0xe
	cmp r0, #0
	beq _080816F4
	adds r0, r5, #0
	bl sub_0800B4E4
_080816F4:
	mov r0, sl
	bl sub_080639BC
	adds r2, r0, #0
	str r6, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r6, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	cmp r7, #0xff
	bne _08081738
	movs r0, #7
	str r0, [sp]
	mov r0, sb
	movs r1, #1
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08081752
	.align 2, 0
_08081728: .4byte gUnk_02010800
_0808172C: .4byte gUnk_080BFE6C
_08081730: .4byte gUnk_080BFE34
_08081734: .4byte gUnk_080BFE10
_08081738:
	adds r0, r7, #0
	bl sub_08063D2C
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #7
	str r0, [sp]
	mov r0, sb
	movs r1, #1
	movs r3, #1
	bl sub_08069DA8
_08081752:
	cmp r7, #0xff
	bne _0808176C
	ldr r0, _08081764 @ =gUnk_02010800
	ldr r3, _08081768 @ =gUnk_080BFE68
	movs r1, #0x19
	movs r2, #6
	bl sub_08001284
	b _0808178E
	.align 2, 0
_08081764: .4byte gUnk_02010800
_08081768: .4byte gUnk_080BFE68
_0808176C:
	adds r0, r7, #0
	bl sub_08063D5C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _080817C8 @ =gUnk_02010800
	movs r1, #6
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
_0808178E:
	mov r2, r8
	ldrh r0, [r2, #0x10]
	mov r4, r8
	adds r4, #0x10
	cmp r0, #0
	beq _080817A0
	adds r0, r4, #0
	bl sub_0800B4E4
_080817A0:
	cmp r7, #0xff
	bne _080817D0
	ldr r0, _080817CC @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r0, #7
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	b _080817F2
	.align 2, 0
_080817C8: .4byte gUnk_02010800
_080817CC: .4byte gUnk_08BCA070
_080817D0:
	adds r0, r7, #0
	bl sub_08063CFC
	adds r2, r0, #0
	movs r0, #7
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
_080817F2:
	mov r1, r8
	ldrh r0, [r1, #0x12]
	mov r4, r8
	adds r4, #0x12
	cmp r0, #0
	beq _08081804
	adds r0, r4, #0
	bl sub_0800B4E4
_08081804:
	cmp r7, #0xff
	bne _0808182C
	ldr r0, _08081828 @ =gUnk_08BCA07C
	ldr r2, [r0]
	movs r0, #9
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	b _0808184E
	.align 2, 0
_08081828: .4byte gUnk_08BCA07C
_0808182C:
	adds r0, r7, #0
	bl sub_08063D14
	adds r2, r0, #0
	movs r0, #9
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
_0808184E:
	ldr r2, [sp, #0x14]
	cmp r2, #0xff
	bne _0808186C
	ldr r0, _08081868 @ =gUnk_02010800
	movs r1, #0xe
	str r1, [sp]
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08081886
	.align 2, 0
_08081868: .4byte gUnk_02010800
_0808186C:
	ldr r0, [sp, #0x14]
	bl sub_08063DE4
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _080818C0 @ =gUnk_02010800
	movs r1, #0xe
	str r1, [sp]
	movs r1, #2
	movs r3, #1
	bl sub_08069DA8
_08081886:
	mov r1, r8
	ldrh r0, [r1, #0x14]
	mov r4, r8
	adds r4, #0x14
	cmp r0, #0
	beq _08081898
	adds r0, r4, #0
	bl sub_0800B4E4
_08081898:
	ldr r2, [sp, #0x14]
	cmp r2, #0xff
	bne _080818C8
	ldr r0, _080818C4 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r0, #0xe
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	b _080818EA
	.align 2, 0
_080818C0: .4byte gUnk_02010800
_080818C4: .4byte gUnk_08BCA070
_080818C8:
	ldr r0, [sp, #0x14]
	bl sub_08063DB4
	adds r2, r0, #0
	movs r0, #0xe
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
_080818EA:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	mov r4, r8
	adds r4, #0x16
	cmp r0, #0
	beq _080818FC
	adds r0, r4, #0
	bl sub_0800B4E4
_080818FC:
	ldr r2, [sp, #0x14]
	cmp r2, #0xff
	bne _08081928
	ldr r0, _08081924 @ =gUnk_08BCA07C
	ldr r2, [r0]
	movs r0, #0x10
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	b _0808194A
	.align 2, 0
_08081924: .4byte gUnk_08BCA07C
_08081928:
	ldr r0, [sp, #0x14]
	bl sub_08063DCC
	adds r2, r0, #0
	movs r0, #0x10
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
_0808194A:
	mov r4, r8
	adds r4, #0x40
	adds r0, r4, #0
	bl sub_08009F0C
	mov r5, r8
	adds r5, #0x68
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080819B0
sub_080819B0: @ 0x080819B0
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080819D8
	cmp r0, #1
	bgt _080819CC
	cmp r0, #0
	beq _080819D2
	b _080819FE
_080819CC:
	cmp r0, #2
	beq _080819EA
	b _080819FE
_080819D2:
	bl sub_08081A24
	b _080819DC
_080819D8:
	bl sub_08081B0C
_080819DC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080819FE
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080819FE
_080819EA:
	bl sub_08081F44
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080819FE
	movs r6, #0
	strh r6, [r5]
	movs r0, #0xc8
	bl sub_0806EFF0
_080819FE:
	adds r4, r5, #0
	adds r4, #0x78
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08081A24
sub_08081A24: @ 0x08081A24
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08081ABC
	cmp r0, #1
	bgt _08081A40
	cmp r0, #0
	beq _08081A4A
	b _08081B04
_08081A40:
	cmp r0, #2
	beq _08081AEC
	cmp r0, #3
	beq _08081AFE
	b _08081B04
_08081A4A:
	bl sub_08081FA4
	adds r4, r6, #0
	adds r4, #0xe
	adds r1, r6, #0
	adds r1, #0xa0
	adds r0, r4, #0
	bl sub_080072F8
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	bl sub_0808224C
	adds r4, #0x42
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x78
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08081AF6
_08081ABC:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08081AF6
_08081AEC:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08081B04
_08081AF6:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08081B04
_08081AFE:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_08081B04:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08081B0C
sub_08081B0C: @ 0x08081B0C
	push {r4, r5, r6, lr}
	sub sp, #0x20
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _08081B22
	b _08081F3A
_08081B22:
	adds r4, r5, #0
	adds r4, #0xe
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08081B36
	b _08081F3A
_08081B36:
	ldr r0, _08081B50 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08081B54
	ldrh r0, [r5, #6]
	cmp r0, #0
	bne _08081B4A
	b _08081F3A
_08081B4A:
	subs r0, #1
	b _08081B6E
	.align 2, 0
_08081B50: .4byte gCurrentKeyPress
_08081B54:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08081B94
	ldrh r1, [r5, #6]
	adds r0, r5, #0
	adds r0, #0x4c
	ldrh r0, [r0]
	subs r0, #1
	cmp r1, r0
	bne _08081B6C
	b _08081F3A
_08081B6C:
	adds r0, r1, #1
_08081B6E:
	strh r0, [r5, #6]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	bl sub_08081FA4
	adds r1, r5, #0
	adds r1, #0xa0
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	bl sub_0808224C
	b _08081F3A
_08081B94:
	ldr r0, _08081BB8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08081C6E
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08081BBC
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081C26
	.align 2, 0
_08081BB8: .4byte gKeyNewPress
_08081BBC:
	cmp r0, #3
	bne _08081BCE
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	b _08081C26
_08081BCE:
	cmp r0, #4
	bne _08081BE0
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	b _08081C26
_08081BE0:
	cmp r0, #5
	bne _08081BF2
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	b _08081C26
_08081BF2:
	cmp r0, #6
	bne _08081C04
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
	b _08081C26
_08081C04:
	cmp r0, #2
	bne _08081C16
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	b _08081C26
_08081C16:
	cmp r0, #7
	bne _08081C40
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
_08081C26:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _08081C68
_08081C40:
	cmp r0, #8
	bne _08081C68
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #9
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_08081C68:
	movs r1, #0
	movs r0, #7
	b _08081F34
_08081C6E:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08081C7A
	b _08081DB6
_08081C7A:
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08081C8E
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081D6E
_08081C8E:
	cmp r0, #3
	bne _08081CBC
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	mov r0, sp
	bl sub_0806F054
	mov r0, sp
	b _08081D3A
_08081CBC:
	cmp r0, #4
	bne _08081CE4
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #4
	b _08081D32
_08081CE4:
	cmp r0, #5
	bne _08081D0C
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #8
	b _08081D32
_08081D0C:
	cmp r0, #6
	bne _08081D4C
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0xc
_08081D32:
	adds r0, r4, #0
	bl sub_0806F054
	adds r0, r4, #0
_08081D3A:
	bl sub_0806F054
	ldrh r0, [r5, #6]
	bl sub_0806F038
	ldrh r0, [r5, #8]
	bl sub_0806F038
	b _08081DB0
_08081D4C:
	cmp r0, #2
	bne _08081D5E
	movs r0, #0
	movs r1, #0x16
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081D6E
_08081D5E:
	cmp r0, #7
	bne _08081D88
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
_08081D6E:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _08081DB0
_08081D88:
	cmp r0, #8
	bne _08081DB0
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_08081DB0:
	movs r1, #0
	movs r0, #9
	b _08081F34
_08081DB6:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08081DC0
	b _08081F3A
_08081DC0:
	ldrh r0, [r5, #4]
	cmp r0, #0
	bne _08081DDC
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081EE6
_08081DDC:
	cmp r0, #3
	bne _08081E0C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x10
	b _08081E9A
_08081E0C:
	cmp r0, #4
	bne _08081E3C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x14
	b _08081E9A
_08081E3C:
	cmp r0, #5
	bne _08081E6C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x18
	b _08081E9A
_08081E6C:
	cmp r0, #6
	bne _08081EB4
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	add r4, sp, #0x1c
_08081E9A:
	adds r0, r4, #0
	bl sub_0806F054
	adds r0, r4, #0
	bl sub_0806F054
	ldrh r0, [r5, #6]
	bl sub_0806F038
	ldrh r0, [r5, #8]
	bl sub_0806F038
	b _08081F30
_08081EB4:
	cmp r0, #2
	bne _08081ECE
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x16
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	b _08081EE6
_08081ECE:
	cmp r0, #7
	bne _08081F00
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #6
_08081EE6:
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	b _08081F30
_08081F00:
	cmp r0, #8
	bne _08081F30
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r5, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
_08081F30:
	movs r1, #0
	movs r0, #1
_08081F34:
	strh r0, [r5, #0xa]
	strh r1, [r5, #2]
	movs r6, #0
_08081F3A:
	adds r0, r6, #0
	add sp, #0x20
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08081F44
sub_08081F44: @ 0x08081F44
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08081F74
	cmp r0, #1
	bgt _08081F60
	cmp r0, #0
	beq _08081F6A
	b _08081F9C
_08081F60:
	cmp r0, #2
	beq _08081F80
	cmp r0, #3
	beq _08081F98
	b _08081F9C
_08081F6A:
	ldrh r0, [r4, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _08081F90
_08081F74:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08081F9C
	b _08081F90
_08081F80:
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
_08081F90:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08081F9C
_08081F98:
	movs r5, #0
	strh r5, [r4, #2]
_08081F9C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08081FA4
sub_08081FA4: @ 0x08081FA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl sub_0806F020
	mov sb, r0
	adds r0, #0xa0
	str r0, [sp]
	movs r1, #0
	mov r8, r1
	movs r2, #0
	str r2, [sp, #4]
	mov r5, sb
	adds r5, #0x2c
_08081FC6:
	ldr r3, [sp, #4]
	lsls r0, r3, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	adds r6, r7, #0
	adds r0, r6, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, sb
	ldrh r4, [r1, #4]
	cmp r4, #0
	beq _08081FEC
	cmp r4, #8
	bne _08082000
_08081FEC:
	movs r2, #0x2c
	add r2, sb
	mov sl, r2
	cmp r0, #0xff
	beq _080820E0
	strb r7, [r5]
	adds r5, #1
	movs r3, #1
	add r8, r3
	b _080820E0
_08082000:
	cmp r4, #3
	bne _0808201E
	movs r1, #0x2c
	add r1, sb
	mov sl, r1
	cmp r0, #0xff
	beq _080820E0
	adds r0, r6, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	beq _080820E0
	b _080820B2
_0808201E:
	cmp r4, #4
	bne _0808202A
	movs r3, #0x2c
	add r3, sb
	mov sl, r3
	b _080820C6
_0808202A:
	cmp r4, #5
	bne _0808205E
	movs r1, #0x2c
	add r1, sb
	mov sl, r1
	cmp r0, #0xff
	beq _080820E0
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080820E0
	cmp r4, #0
	beq _080820E0
	b _080820B2
_0808205E:
	cmp r4, #6
	bne _08082092
	movs r3, #0x2c
	add r3, sb
	mov sl, r3
	cmp r0, #0xff
	beq _080820E0
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080820E0
	cmp r4, #2
	bls _080820E0
	b _080820D8
_08082092:
	cmp r4, #2
	bne _080820BC
	movs r1, #0x2c
	add r1, sb
	mov sl, r1
	cmp r0, #0xff
	beq _080820E0
	cmp r0, #0xef
	bhi _080820E0
	adds r0, r6, #0
	bl sub_0801885C
	ands r4, r0
	lsls r0, r4, #0x18
	cmp r0, #0
	bne _080820E0
_080820B2:
	strb r7, [r5]
	adds r5, #1
	movs r2, #1
	add r8, r2
	b _080820E0
_080820BC:
	movs r3, #0x2c
	add r3, sb
	mov sl, r3
	cmp r4, #7
	bne _080820E0
_080820C6:
	cmp r0, #0xff
	beq _080820E0
	adds r0, r6, #0
	bl sub_0801885C
	movs r1, #1
	ands r1, r0
	cmp r1, #0
	bne _080820E0
_080820D8:
	strb r7, [r5]
	adds r5, #1
	movs r0, #1
	add r8, r0
_080820E0:
	ldr r1, [sp, #4]
	adds r1, #1
	str r1, [sp, #4]
	cmp r1, #0x1d
	bhi _080820EC
	b _08081FC6
_080820EC:
	mov r0, sb
	adds r0, #0x4c
	movs r1, #0
	movs r2, #0
	mov r3, r8
	strh r3, [r0]
	mov r3, sb
	ldrh r0, [r3, #6]
	add r0, sl
	ldrb r7, [r0]
	movs r0, #6
	ldr r3, [sp]
	strb r0, [r3]
	movs r0, #7
	strb r0, [r3, #1]
	movs r0, #2
	strb r0, [r3, #6]
	strb r1, [r3, #7]
	strb r1, [r3, #0x11]
	strb r0, [r3, #0x12]
	strh r2, [r3, #2]
	strh r2, [r3, #4]
	movs r0, #0xe0
	strb r0, [r3, #0xd]
	movs r0, #0xf0
	strb r0, [r3, #0xc]
	mov r1, sb
	adds r1, #0x10
	str r1, [r3, #0x14]
	mov r0, sb
	adds r0, #0x20
	str r0, [r3, #0x18]
	mov sl, r2
	adds r5, r0, #0
	mov r8, r1
	mov r6, sb
	adds r6, #0x24
	lsls r7, r7, #0x18
	lsrs r0, r7, #0x18
	movs r1, #0
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _0808215A
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, sb
	str r0, [r1, #0x10]
	mov r2, sl
	strb r2, [r5]
	strh r4, [r1, #0x24]
	b _0808216A
_0808215A:
	ldr r0, _080821A4 @ =gUnk_08BCA070
	ldr r0, [r0]
	mov r3, sb
	str r0, [r3, #0x10]
	movs r0, #1
	strb r0, [r5]
	ldr r0, _080821A8 @ =0x0000FFFF
	strh r0, [r3, #0x24]
_0808216A:
	adds r5, #1
	movs r0, #4
	add r8, r0
	adds r6, #2
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #2
	bhi _0808220E
_0808217C:
	mov r3, sl
	lsls r1, r3, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r7, #0x18
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _080821AC
	adds r0, r4, #0
	bl sub_0806380C
	mov r1, r8
	str r0, [r1]
	movs r0, #0
	strb r0, [r5]
	strh r4, [r6]
	b _080821BC
	.align 2, 0
_080821A4: .4byte gUnk_08BCA070
_080821A8: .4byte 0x0000FFFF
_080821AC:
	ldr r0, _080821E4 @ =gUnk_08BCA070
	ldr r0, [r0]
	mov r2, r8
	str r0, [r2]
	movs r0, #1
	strb r0, [r5]
	ldr r0, _080821E8 @ =0x0000FFFF
	strh r0, [r6]
_080821BC:
	mov r1, sl
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	lsrs r0, r7, #0x18
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	beq _080821EC
	adds r0, r4, #0
	bl sub_0806380C
	mov r3, r8
	str r0, [r3, #4]
	movs r0, #0
	strb r0, [r5, #1]
	strh r4, [r6, #2]
	b _080821FC
	.align 2, 0
_080821E4: .4byte gUnk_08BCA070
_080821E8: .4byte 0x0000FFFF
_080821EC:
	ldr r0, _08082240 @ =gUnk_08BCA070
	ldr r0, [r0]
	mov r1, r8
	str r0, [r1, #4]
	movs r0, #1
	strb r0, [r5, #1]
	ldr r0, _08082244 @ =0x0000FFFF
	strh r0, [r6, #2]
_080821FC:
	adds r5, #2
	movs r2, #8
	add r8, r2
	adds r6, #4
	movs r3, #2
	add sl, r3
	mov r0, sl
	cmp r0, #2
	bls _0808217C
_0808220E:
	movs r1, #0
	mov r2, sb
	str r1, [r2, #0x1c]
	movs r0, #3
	ldr r3, [sp]
	strb r0, [r3, #0xa]
	movs r2, #0
	movs r0, #8
	strh r0, [r3, #8]
	strb r2, [r3, #0xe]
	movs r0, #1
	strb r0, [r3, #0xf]
	str r1, [r3, #0x20]
	str r1, [r3, #0x1c]
	ldr r0, _08082248 @ =sub_080843B4
	str r0, [r3, #0x24]
	strb r2, [r3, #0x10]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082240: .4byte gUnk_08BCA070
_08082244: .4byte 0x0000FFFF
_08082248: .4byte sub_080843B4

	thumb_func_start sub_0808224C
sub_0808224C: @ 0x0808224C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	bl sub_0806F020
	adds r5, r0, #0
	adds r0, #0x2c
	ldrh r1, [r5, #6]
	adds r0, r0, r1
	ldrb r0, [r0]
	mov sl, r0
	mov r6, sl
	adds r0, r6, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r6, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0808228E
	adds r4, #0x6f
_0808228E:
	ldr r2, _080823A4 @ =gUnk_02010800
	mov r8, r2
	ldr r3, _080823A8 @ =gUnk_080BFE14
	mov r0, r8
	movs r1, #1
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _080823AC @ =gUnk_080BFE18
	mov r0, r8
	movs r1, #1
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _080823B0 @ =gUnk_080BFE1C
	mov r0, r8
	movs r1, #1
	movs r2, #0x10
	bl sub_08001284
	ldr r3, _080823B4 @ =gUnk_080BFE10
	mov r0, r8
	movs r1, #1
	movs r2, #0x11
	bl sub_08001284
	adds r2, r4, #0
	movs r7, #2
	str r7, [sp]
	mov r0, r8
	movs r1, #0
	movs r3, #4
	bl sub_08069DA8
	ldrh r0, [r5, #0xc]
	adds r4, r5, #0
	adds r4, #0xc
	cmp r0, #0
	beq _080822E2
	adds r0, r4, #0
	bl sub_0800B4E4
_080822E2:
	mov r0, sb
	bl sub_080639BC
	adds r2, r0, #0
	str r7, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r7, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #6
	bl sub_0800B1AC
	movs r0, #1
	bl sub_080012D4
	ldr r3, _080823B8 @ =gUnk_080BFE7C
	mov r0, r8
	movs r1, #0xb
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _080823BC @ =gUnk_080BFE80
	mov r0, r8
	movs r1, #0x10
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _080823C0 @ =gUnk_080BFE84
	mov r0, r8
	movs r1, #0x15
	movs r2, #0xd
	bl sub_08001284
	movs r0, #0
	bl sub_080012D4
	adds r0, r6, #0
	bl GetWeaponInitAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponInitDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	adds r0, r6, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080823C4
	adds r0, r6, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	b _080823F0
	.align 2, 0
_080823A4: .4byte gUnk_02010800
_080823A8: .4byte gUnk_080BFE14
_080823AC: .4byte gUnk_080BFE18
_080823B0: .4byte gUnk_080BFE1C
_080823B4: .4byte gUnk_080BFE10
_080823B8: .4byte gUnk_080BFE7C
_080823BC: .4byte gUnk_080BFE80
_080823C0: .4byte gUnk_080BFE84
_080823C4:
	movs r0, #2
	bl sub_080012D4
	adds r0, r6, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	mov r0, r8
	movs r1, #1
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_080823F0:
	mov r0, sl
	lsls r5, r0, #0x18
	lsrs r0, r5, #0x18
	bl GetWeaponInitDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r4, _0808249C @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	movs r1, #0
	mov sl, r1
	str r5, [sp, #0x14]
	adds r7, r4, #0
	mov sb, r1
	movs r6, #4
	movs r2, #0x90
	lsls r2, r2, #0xc
	mov r8, r2
_08082428:
	mov r0, sl
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [sp, #0x14]
	lsrs r0, r2, #0x18
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0xff
	bne _080824A0
	mov r0, r8
	lsrs r4, r0, #0x10
	movs r0, #0xe
	str r0, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #0xf
	str r0, [sp]
	mov r2, sb
	str r2, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #0x10
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #0x11
	str r0, [sp]
	mov r1, sb
	str r1, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	b _0808251C
	.align 2, 0
_0808249C: .4byte gUnk_02010800
_080824A0:
	adds r0, r5, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, r8
	lsrs r4, r2, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
_0808251C:
	movs r0, #0xa0
	lsls r0, r0, #0xb
	add r8, r0
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #2
	bhi _0808252E
	b _08082428
_0808252E:
	ldr r6, _080825D0 @ =gUnk_02010800
	ldr r4, _080825D4 @ =gUnk_080BFE88
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xe
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0x10
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0x11
	adds r3, r4, #0
	bl sub_08001284
	ldr r0, [sp, #0x14]
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	movs r7, #4
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r4, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	adds r0, r4, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080825D8
	adds r0, r4, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	b _08082602
	.align 2, 0
_080825D0: .4byte gUnk_02010800
_080825D4: .4byte gUnk_080BFE88
_080825D8:
	movs r0, #2
	bl sub_080012D4
	adds r0, r4, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_08082602:
	ldr r1, [sp, #0x14]
	lsrs r0, r1, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08082638 @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082638: .4byte gUnk_02010800

	thumb_func_start sub_0808263C
sub_0808263C: @ 0x0808263C
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08082664
	cmp r0, #1
	bgt _08082658
	cmp r0, #0
	beq _0808265E
	b _0808268A
_08082658:
	cmp r0, #2
	beq _08082676
	b _0808268A
_0808265E:
	bl sub_080826B0
	b _08082668
_08082664:
	bl sub_08082788
_08082668:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808268A
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0808268A
_08082676:
	bl sub_0808285C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808268A
	movs r6, #0
	strh r6, [r5]
	movs r0, #0x90
	bl sub_0806EFF0
_0808268A:
	adds r4, r5, #0
	adds r4, #0x68
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080826B0
sub_080826B0: @ 0x080826B0
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08082736
	cmp r0, #1
	bgt _080826CC
	cmp r0, #0
	beq _080826D6
	b _0808277E
_080826CC:
	cmp r0, #2
	beq _08082766
	cmp r0, #3
	beq _08082778
	b _0808277E
_080826D6:
	bl sub_08084444
	ldrh r0, [r6, #6]
	bl sub_080828CC
	adds r4, r6, #0
	adds r4, #0x40
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x68
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08082770
_08082736:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08082770
_08082766:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808277E
_08082770:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808277E
_08082778:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_0808277E:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08082788
sub_08082788: @ 0x08082788
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08082852
	ldr r0, _080827B0 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080827B4
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _08082852
	subs r0, #1
	b _080827C4
	.align 2, 0
_080827B0: .4byte gCurrentKeyPress
_080827B4:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080827D6
	ldrh r0, [r4, #6]
	cmp r0, #0x27
	beq _08082852
	adds r0, #1
_080827C4:
	strh r0, [r4, #6]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r4, #6]
	bl sub_080828CC
	b _08082852
_080827D6:
	ldr r7, _08082828 @ =gKeyNewPress
	ldrh r1, [r7]
	ldr r0, _0808282C @ =0x00000302
	ands r0, r1
	cmp r0, #0
	beq _08082852
	movs r5, #2
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080827F4
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
_080827F4:
	movs r0, #0
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r4, r0]
	movs r0, #3
	bl sub_0806F0CC
	ldrh r1, [r7]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08082830
	strh r6, [r4, #0xa]
	b _0808284C
	.align 2, 0
_08082828: .4byte gKeyNewPress
_0808282C: .4byte 0x00000302
_08082830:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808283E
	movs r0, #9
	b _0808284A
_0808283E:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808284C
	movs r0, #7
_0808284A:
	strh r0, [r4, #0xa]
_0808284C:
	movs r0, #0
	strh r0, [r4, #2]
	movs r6, #0
_08082852:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808285C
sub_0808285C: @ 0x0808285C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808288C
	cmp r0, #1
	bgt _08082878
	cmp r0, #0
	beq _08082882
	b _080828C4
_08082878:
	cmp r0, #2
	beq _08082898
	cmp r0, #3
	beq _080828C0
	b _080828C4
_08082882:
	ldrh r0, [r4, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _080828B8
_0808288C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080828C4
	b _080828B8
_08082898:
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
_080828B8:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080828C4
_080828C0:
	movs r5, #0
	strh r5, [r4, #2]
_080828C4:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080828CC
sub_080828CC: @ 0x080828CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r6, r0, #0
	adds r2, r6, #0
	adds r2, #0x14
	adds r2, r2, r4
	ldrh r1, [r6, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ldrb r2, [r2]
	adds r0, r0, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	bl sub_08063B84
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x14]
	mov r0, r8
	bl sub_08063B9C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	mov r0, r8
	bl sub_08063BB4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	ldr r5, _080829C0 @ =gUnk_02010800
	ldr r3, _080829C4 @ =gUnk_080BFE54
	adds r0, r5, #0
	movs r1, #1
	movs r2, #2
	bl sub_08001284
	ldr r3, _080829C8 @ =gUnk_080BFE8C
	adds r0, r5, #0
	movs r1, #1
	movs r2, #5
	bl sub_08001284
	ldr r3, _080829CC @ =gUnk_080BFE6C
	adds r0, r5, #0
	movs r1, #1
	movs r2, #9
	bl sub_08001284
	ldr r3, _080829D0 @ =gUnk_080BFE34
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0xe
	bl sub_08001284
	mov r0, r8
	bl sub_080639E8
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #3
	mov sb, r0
	str r0, [sp]
	adds r0, r5, #0
	movs r1, #0
	movs r3, #1
	bl sub_08069DA8
	movs r7, #2
	str r7, [sp]
	adds r4, #1
	str r4, [sp, #4]
	str r7, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	ldrh r0, [r6, #0xc]
	cmp r0, #0
	beq _08082990
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0800B4E4
_08082990:
	mov r0, r8
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r3, r0, #0x18
	cmp r3, #0
	bne _080829D8
	adds r0, r6, #0
	adds r0, #0xc
	ldr r1, _080829D4 @ =gUnk_08BCA070
	ldr r2, [r1]
	mov r1, sb
	str r1, [sp]
	str r3, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	b _080829FA
	.align 2, 0
_080829C0: .4byte gUnk_02010800
_080829C4: .4byte gUnk_080BFE54
_080829C8: .4byte gUnk_080BFE8C
_080829CC: .4byte gUnk_080BFE6C
_080829D0: .4byte gUnk_080BFE34
_080829D4: .4byte gUnk_08BCA070
_080829D8:
	mov r0, r8
	bl sub_080639BC
	adds r2, r0, #0
	adds r0, r6, #0
	adds r0, #0xc
	mov r1, sb
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
_080829FA:
	ldrh r0, [r6, #0xe]
	adds r5, r6, #0
	adds r5, #0xe
	cmp r0, #0
	beq _08082A0A
	adds r0, r5, #0
	bl sub_0800B4E4
_08082A0A:
	mov r0, r8
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	bne _08082A50
	ldr r0, _08082A48 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #6
	str r4, [sp]
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, _08082A4C @ =gUnk_02010800
	str r4, [sp]
	movs r1, #1
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08082A8A
	.align 2, 0
_08082A48: .4byte gUnk_08BCA070
_08082A4C: .4byte gUnk_02010800
_08082A50:
	ldr r0, [sp, #0x14]
	bl sub_0806380C
	adds r2, r0, #0
	movs r4, #6
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, [sp, #0x14]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08082AB4 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #1
	movs r3, #1
	bl sub_08069DA8
_08082A8A:
	ldrh r0, [r6, #0x10]
	adds r5, r6, #0
	adds r5, #0x10
	cmp r0, #0
	beq _08082A9A
	adds r0, r5, #0
	bl sub_0800B4E4
_08082A9A:
	mov r0, r8
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	bne _08082ABC
	ldr r0, _08082AB8 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xa
	str r4, [sp]
	b _08082ACC
	.align 2, 0
_08082AB4: .4byte gUnk_02010800
_08082AB8: .4byte gUnk_08BCA070
_08082ABC:
	mov r0, sl
	cmp r0, #0xff
	bne _08082AFC
	ldr r0, _08082AF4 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xa
	str r4, [sp]
	movs r1, #0
_08082ACC:
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, _08082AF8 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08082B36
	.align 2, 0
_08082AF4: .4byte gUnk_08BCA070
_08082AF8: .4byte gUnk_02010800
_08082AFC:
	mov r0, sl
	bl sub_08063CFC
	adds r2, r0, #0
	movs r4, #0xa
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	mov r0, sl
	bl sub_08063D2C
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08082B60 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	movs r3, #1
	bl sub_08069DA8
_08082B36:
	ldrh r0, [r6, #0x12]
	adds r5, r6, #0
	adds r5, #0x12
	cmp r0, #0
	beq _08082B46
	adds r0, r5, #0
	bl sub_0800B4E4
_08082B46:
	mov r0, r8
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	bne _08082B68
	ldr r0, _08082B64 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xf
	str r4, [sp]
	b _08082B78
	.align 2, 0
_08082B60: .4byte gUnk_02010800
_08082B64: .4byte gUnk_08BCA070
_08082B68:
	ldr r1, [sp, #0x18]
	cmp r1, #0xff
	bne _08082BA8
	ldr r0, _08082BA0 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xf
	str r4, [sp]
	movs r1, #0
_08082B78:
	str r1, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, _08082BA4 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #3
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08082BE2
	.align 2, 0
_08082BA0: .4byte gUnk_08BCA070
_08082BA4: .4byte gUnk_02010800
_08082BA8:
	ldr r0, [sp, #0x18]
	bl sub_08063DB4
	adds r2, r0, #0
	movs r4, #0xf
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, [sp, #0x18]
	bl sub_08063DE4
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08082BF4 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #3
	movs r3, #1
	bl sub_08069DA8
_08082BE2:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08082BF4: .4byte gUnk_02010800

	thumb_func_start sub_08082BF8
sub_08082BF8: @ 0x08082BF8
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08082C20
	cmp r0, #1
	bgt _08082C14
	cmp r0, #0
	beq _08082C1A
	b _08082C46
_08082C14:
	cmp r0, #2
	beq _08082C32
	b _08082C46
_08082C1A:
	bl sub_08082C6C
	b _08082C24
_08082C20:
	bl sub_08082D44
_08082C24:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08082C46
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08082C46
_08082C32:
	bl sub_08082E18
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08082C46
	movs r6, #0
	strh r6, [r5]
	movs r0, #0x98
	bl sub_0806EFF0
_08082C46:
	adds r4, r5, #0
	adds r4, #0x70
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08082C6C
sub_08082C6C: @ 0x08082C6C
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08082CF2
	cmp r0, #1
	bgt _08082C88
	cmp r0, #0
	beq _08082C92
	b _08082D3A
_08082C88:
	cmp r0, #2
	beq _08082D22
	cmp r0, #3
	beq _08082D34
	b _08082D3A
_08082C92:
	bl sub_08084494
	ldrh r0, [r6, #6]
	bl sub_08082EA4
	adds r4, r6, #0
	adds r4, #0x48
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x70
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08082D2C
_08082CF2:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08082D2C
_08082D22:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08082D3A
_08082D2C:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08082D3A
_08082D34:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_08082D3A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08082D44
sub_08082D44: @ 0x08082D44
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _08082E0E
	ldr r0, _08082D6C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08082D70
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _08082E0E
	subs r0, #1
	b _08082D80
	.align 2, 0
_08082D6C: .4byte gCurrentKeyPress
_08082D70:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _08082D92
	ldrh r0, [r4, #6]
	cmp r0, #0x2b
	beq _08082E0E
	adds r0, #1
_08082D80:
	strh r0, [r4, #6]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r4, #6]
	bl sub_08082EA4
	b _08082E0E
_08082D92:
	ldr r7, _08082DE4 @ =gKeyNewPress
	ldrh r1, [r7]
	ldr r0, _08082DE8 @ =0x00000302
	ands r0, r1
	cmp r0, #0
	beq _08082E0E
	movs r5, #2
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08082DB0
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
_08082DB0:
	movs r0, #0
	movs r1, #8
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r4, r0]
	movs r0, #3
	bl sub_0806F0CC
	ldrh r1, [r7]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08082DEC
	strh r6, [r4, #0xa]
	b _08082E08
	.align 2, 0
_08082DE4: .4byte gKeyNewPress
_08082DE8: .4byte 0x00000302
_08082DEC:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08082DFA
	movs r0, #9
	b _08082E06
_08082DFA:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08082E08
	movs r0, #7
_08082E06:
	strh r0, [r4, #0xa]
_08082E08:
	movs r0, #0
	strh r0, [r4, #2]
	movs r6, #0
_08082E0E:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08082E18
sub_08082E18: @ 0x08082E18
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08082E48
	cmp r0, #1
	bgt _08082E34
	cmp r0, #0
	beq _08082E3E
	b _08082E9A
_08082E34:
	cmp r0, #2
	beq _08082E54
	cmp r0, #3
	beq _08082E96
	b _08082E9A
_08082E3E:
	ldrh r0, [r5, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _08082E8E
_08082E48:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08082E9A
	b _08082E8E
_08082E54:
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_0800B4E4
	adds r4, r5, #0
	adds r4, #0x14
	adds r0, r5, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
	adds r4, #2
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
	adds r4, #2
	adds r0, r5, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
_08082E8E:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08082E9A
_08082E96:
	movs r6, #0
	strh r6, [r5, #2]
_08082E9A:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08082EA4
sub_08082EA4: @ 0x08082EA4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	mov r8, r0
	ldr r1, _08082F74 @ =gUnk_080BFE91
	add r0, sp, #0x14
	movs r2, #3
	bl memcpy
	add r5, sp, #0x18
	ldr r1, _08082F78 @ =gUnk_080BFE94
	adds r0, r5, #0
	movs r2, #3
	bl memcpy
	ldr r6, _08082F7C @ =gUnk_02010800
	ldr r3, _08082F80 @ =gUnk_080BFE54
	adds r0, r6, #0
	movs r1, #1
	movs r2, #2
	bl sub_08001284
	ldr r3, _08082F84 @ =gUnk_080BFE98
	adds r0, r6, #0
	movs r1, #1
	movs r2, #6
	bl sub_08001284
	ldr r3, _08082F88 @ =gUnk_080BFEA0
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0xd
	bl sub_08001284
	movs r7, #2
	str r7, [sp]
	adds r0, r4, #1
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	mov r0, r8
	adds r0, #0x1a
	adds r0, r0, r4
	ldrb r0, [r0]
	str r0, [sp, #0x1c]
	mov r1, r8
	ldrh r0, [r1, #0xc]
	cmp r0, #0
	beq _08082F28
	mov r0, r8
	adds r0, #0xc
	bl sub_0800B4E4
_08082F28:
	ldr r0, [sp, #0x1c]
	movs r1, #0
	bl sub_08018A50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08082F90
	ldr r0, [sp, #0x1c]
	movs r1, #1
	bl sub_08018A50
	lsls r0, r0, #0x18
	asrs r3, r0, #0x18
	cmp r3, #0
	bne _08082F90
	mov r0, r8
	adds r0, #0xc
	ldr r1, _08082F8C @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r4, #3
	str r4, [sp]
	str r3, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08082FCA
	.align 2, 0
_08082F74: .4byte gUnk_080BFE91
_08082F78: .4byte gUnk_080BFE94
_08082F7C: .4byte gUnk_02010800
_08082F80: .4byte gUnk_080BFE54
_08082F84: .4byte gUnk_080BFE98
_08082F88: .4byte gUnk_080BFEA0
_08082F8C: .4byte gUnk_08BCA070
_08082F90:
	ldr r0, [sp, #0x1c]
	bl sub_08063CFC
	adds r2, r0, #0
	mov r0, r8
	adds r0, #0xc
	movs r4, #3
	str r4, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, [sp, #0x1c]
	bl sub_08063D2C
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0808309C @ =gUnk_02010800
	str r4, [sp]
	movs r1, #0
	movs r3, #1
	bl sub_08069DA8
_08082FCA:
	mov r5, r8
	adds r5, #0xe
	mov r4, r8
	adds r4, #0x14
	mov r2, r8
	ldrh r0, [r2, #0xe]
	cmp r0, #0
	beq _08082FE0
	adds r0, r5, #0
	bl sub_0800B4E4
_08082FE0:
	mov r1, r8
	ldrh r0, [r1, #0x14]
	cmp r0, #0
	beq _08082FEE
	adds r0, r4, #0
	bl sub_0800B4E4
_08082FEE:
	mov r4, r8
	adds r4, #0x16
	mov r1, r8
	adds r1, #0x10
	mov r2, r8
	ldrh r0, [r2, #0x10]
	cmp r0, #0
	beq _08083004
	adds r0, r1, #0
	bl sub_0800B4E4
_08083004:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	cmp r0, #0
	beq _08083012
	adds r0, r4, #0
	bl sub_0800B4E4
_08083012:
	mov r4, r8
	adds r4, #0x18
	mov r1, r8
	adds r1, #0x12
	mov r2, r8
	ldrh r0, [r2, #0x12]
	cmp r0, #0
	beq _08083028
	adds r0, r1, #0
	bl sub_0800B4E4
_08083028:
	mov r1, r8
	ldrh r0, [r1, #0x18]
	cmp r0, #0
	beq _08083036
	adds r0, r4, #0
	bl sub_0800B4E4
_08083036:
	ldr r0, [sp, #0x1c]
	movs r1, #0
	bl sub_08018A50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080830A4
	movs r2, #0
	mov sb, r2
	movs r7, #0
_0808304A:
	mov r4, sb
	lsls r0, r4, #1
	adds r0, #0xe
	add r0, r8
	ldr r1, _080830A0 @ =gUnk_08BCA070
	ldr r2, [r1]
	mov r5, sp
	add r5, sb
	adds r5, #0x14
	ldrb r3, [r5]
	mov r6, sp
	add r6, sb
	adds r6, #0x18
	ldrb r1, [r6]
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	bl sub_0800B1AC
	adds r4, #1
	lsls r1, r4, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _0808309C @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	mov sb, r4
	cmp r4, #2
	bls _0808304A
	b _0808316A
	.align 2, 0
_0808309C: .4byte gUnk_02010800
_080830A0: .4byte gUnk_08BCA070
_080830A4:
	movs r0, #0
	mov sb, r0
	mov sl, r0
	movs r1, #0x80
	lsls r1, r1, #9
	str r1, [sp, #0x24]
	add r6, sp, #0x18
	adds r7, r5, #0
	add r5, sp, #0x14
_080830B6:
	mov r2, sb
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [sp, #0x1c]
	bl sub_08063D74
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _0808310C
	ldr r0, _08083104 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r5]
	ldrb r0, [r6]
	str r0, [sp]
	mov r4, sl
	str r4, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	bl sub_0800B1AC
	ldr r0, [sp, #0x24]
	lsrs r1, r0, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _08083108 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	b _08083150
	.align 2, 0
_08083104: .4byte gUnk_08BCA070
_08083108: .4byte gUnk_02010800
_0808310C:
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldrb r3, [r5]
	ldrb r0, [r6]
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	bl sub_0800B1AC
	adds r0, r4, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, [sp, #0x24]
	lsrs r1, r4, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _08083274 @ =gUnk_02010800
	bl sub_08069DA8
_08083150:
	ldr r0, [sp, #0x24]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	str r0, [sp, #0x24]
	adds r6, #1
	adds r7, #2
	adds r5, #1
	movs r2, #1
	add sb, r2
	mov r4, sb
	cmp r4, #2
	bls _080830B6
_0808316A:
	ldr r0, [sp, #0x1c]
	movs r1, #1
	bl sub_08018A50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808317A
	b _0808327C
_0808317A:
	movs r0, #0
	mov sb, r0
	add r7, sp, #0x14
	movs r1, #0x14
	add r1, r8
	mov sl, r1
	movs r1, #1
	ldr r0, _08083278 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r7]
	mov r4, sp
	ldrb r0, [r4, #0x18]
	adds r0, #7
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sb
	str r1, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	bl sub_0800B1AC
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4, #0x18]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083274 @ =gUnk_02010800
	movs r1, #4
	movs r2, #0
	bl sub_08069DA8
	mov r7, sp
	adds r7, #0x15
	movs r2, #0x16
	add r2, r8
	mov sl, r2
	movs r4, #1
	mov sb, r4
_080831D2:
	ldr r0, _08083278 @ =gUnk_08BCA070
	mov r8, r0
	ldr r2, [r0]
	ldrb r3, [r7]
	mov r4, sp
	add r4, sb
	adds r4, #0x18
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r6, #1
	str r6, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	bl sub_0800B1AC
	mov r1, sb
	adds r1, #4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083274 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	mov r0, sl
	adds r0, #2
	mov r4, sb
	adds r4, #1
	mov r1, r8
	ldr r2, [r1]
	ldrb r3, [r7, #1]
	add r4, sp
	adds r4, #0x18
	ldrb r1, [r4]
	adds r1, #7
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	bl sub_0800B1AC
	mov r1, sb
	adds r1, #5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r7, #1]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083274 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	adds r7, #2
	movs r2, #4
	add sl, r2
	movs r4, #2
	add sb, r4
	mov r0, sb
	cmp r0, #2
	bls _080831D2
	b _08083350
	.align 2, 0
_08083274: .4byte gUnk_02010800
_08083278: .4byte gUnk_08BCA070
_0808327C:
	movs r1, #0
	mov sb, r1
	mov sl, r1
	movs r2, #0x80
	lsls r2, r2, #0xb
	str r2, [sp, #0x20]
	add r5, sp, #0x18
	mov r6, r8
	adds r6, #0x14
	add r7, sp, #0x14
_08083290:
	mov r4, sb
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [sp, #0x1c]
	bl sub_08063D94
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _080832EC
	ldr r0, _080832E4 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r7]
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sl
	str r1, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl sub_0800B1AC
	ldr r2, [sp, #0x20]
	lsrs r1, r2, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	ldr r0, _080832E8 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	b _08083336
	.align 2, 0
_080832E4: .4byte gUnk_08BCA070
_080832E8: .4byte gUnk_02010800
_080832EC:
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldrb r3, [r7]
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sl
	str r1, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl sub_0800B1AC
	adds r0, r4, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, [sp, #0x20]
	lsrs r1, r4, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083360 @ =gUnk_02010800
	bl sub_08069DA8
_08083336:
	ldr r0, [sp, #0x20]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	str r0, [sp, #0x20]
	adds r5, #1
	adds r6, #2
	adds r7, #1
	movs r2, #1
	add sb, r2
	mov r4, sb
	cmp r4, #2
	bls _08083290
_08083350:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083360: .4byte gUnk_02010800

	thumb_func_start sub_08083364
sub_08083364: @ 0x08083364
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0808338C
	cmp r0, #1
	bgt _08083380
	cmp r0, #0
	beq _08083386
	b _080833B2
_08083380:
	cmp r0, #2
	beq _0808339E
	b _080833B2
_08083386:
	bl sub_080833D8
	b _08083390
_0808338C:
	bl sub_080834B0
_08083390:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080833B2
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080833B2
_0808339E:
	bl sub_08083584
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080833B2
	movs r6, #0
	strh r6, [r5]
	movs r0, #0x94
	bl sub_0806EFF0
_080833B2:
	adds r4, r5, #0
	adds r4, #0x6c
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080833D8
sub_080833D8: @ 0x080833D8
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _0808345E
	cmp r0, #1
	bgt _080833F4
	cmp r0, #0
	beq _080833FE
	b _080834A6
_080833F4:
	cmp r0, #2
	beq _0808348E
	cmp r0, #3
	beq _080834A0
	b _080834A6
_080833FE:
	bl sub_080844C0
	ldrh r0, [r6, #6]
	bl sub_08083610
	adds r4, r6, #0
	adds r4, #0x44
	adds r0, r4, #0
	bl sub_08009F0C
	adds r5, r6, #0
	adds r5, #0x6c
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _08083498
_0808345E:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08083498
_0808348E:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080834A6
_08083498:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _080834A6
_080834A0:
	movs r0, #0
	strh r0, [r6, #2]
	movs r7, #0
_080834A6:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080834B0
sub_080834B0: @ 0x080834B0
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _0808357A
	ldr r0, _080834D8 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080834DC
	ldrh r0, [r4, #6]
	cmp r0, #0
	beq _0808357A
	subs r0, #1
	b _080834EC
	.align 2, 0
_080834D8: .4byte gCurrentKeyPress
_080834DC:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080834FE
	ldrh r0, [r4, #6]
	cmp r0, #0x27
	beq _0808357A
	adds r0, #1
_080834EC:
	strh r0, [r4, #6]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r4, #6]
	bl sub_08083610
	b _0808357A
_080834FE:
	ldr r7, _08083550 @ =gKeyNewPress
	ldrh r1, [r7]
	ldr r0, _08083554 @ =0x00000302
	ands r0, r1
	cmp r0, #0
	beq _0808357A
	movs r5, #2
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _0808351C
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
_0808351C:
	movs r0, #0
	movs r1, #9
	bl sub_0806F0CC
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r0, #1
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r4, r0]
	movs r0, #3
	bl sub_0806F0CC
	ldrh r1, [r7]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08083558
	strh r6, [r4, #0xa]
	b _08083574
	.align 2, 0
_08083550: .4byte gKeyNewPress
_08083554: .4byte 0x00000302
_08083558:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08083566
	movs r0, #9
	b _08083572
_08083566:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08083574
	movs r0, #7
_08083572:
	strh r0, [r4, #0xa]
_08083574:
	movs r0, #0
	strh r0, [r4, #2]
	movs r6, #0
_0808357A:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08083584
sub_08083584: @ 0x08083584
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080835B4
	cmp r0, #1
	bgt _080835A0
	cmp r0, #0
	beq _080835AA
	b _08083606
_080835A0:
	cmp r0, #2
	beq _080835C0
	cmp r0, #3
	beq _08083602
	b _08083606
_080835AA:
	ldrh r0, [r5, #0xa]
	movs r1, #8
	bl sub_0806AC78
	b _080835FA
_080835B4:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08083606
	b _080835FA
_080835C0:
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_0800B4E4
	adds r4, r5, #0
	adds r4, #0x14
	adds r0, r5, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
	adds r4, #2
	adds r0, r5, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
	adds r4, #2
	adds r0, r5, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	bl sub_0800B4E4
_080835FA:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08083606
_08083602:
	movs r6, #0
	strh r6, [r5, #2]
_08083606:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08083610
sub_08083610: @ 0x08083610
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	mov r8, r0
	ldr r1, _080836E0 @ =gUnk_080BFE91
	add r0, sp, #0x14
	movs r2, #3
	bl memcpy
	add r5, sp, #0x18
	ldr r1, _080836E4 @ =gUnk_080BFE94
	adds r0, r5, #0
	movs r2, #3
	bl memcpy
	ldr r6, _080836E8 @ =gUnk_02010800
	ldr r3, _080836EC @ =gUnk_080BFE54
	adds r0, r6, #0
	movs r1, #1
	movs r2, #2
	bl sub_08001284
	ldr r3, _080836F0 @ =gUnk_080BFE98
	adds r0, r6, #0
	movs r1, #1
	movs r2, #6
	bl sub_08001284
	ldr r3, _080836F4 @ =gUnk_080BFEA0
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0xd
	bl sub_08001284
	movs r7, #2
	str r7, [sp]
	adds r0, r4, #1
	str r0, [sp, #4]
	str r7, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	mov r0, r8
	adds r0, #0x1a
	adds r0, r0, r4
	ldrb r0, [r0]
	str r0, [sp, #0x1c]
	mov r1, r8
	ldrh r0, [r1, #0xc]
	cmp r0, #0
	beq _08083694
	mov r0, r8
	adds r0, #0xc
	bl sub_0800B4E4
_08083694:
	ldr r0, [sp, #0x1c]
	movs r1, #0
	bl sub_08018A94
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080836FC
	ldr r0, [sp, #0x1c]
	movs r1, #1
	bl sub_08018A94
	lsls r0, r0, #0x18
	asrs r3, r0, #0x18
	cmp r3, #0
	bne _080836FC
	mov r0, r8
	adds r0, #0xc
	ldr r1, _080836F8 @ =gUnk_08BCA070
	ldr r2, [r1]
	movs r4, #3
	str r4, [sp]
	str r3, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	str r7, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #2
	movs r3, #3
	bl sub_0800B1AC
	str r4, [sp]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08069DA8
	b _08083736
	.align 2, 0
_080836E0: .4byte gUnk_080BFE91
_080836E4: .4byte gUnk_080BFE94
_080836E8: .4byte gUnk_02010800
_080836EC: .4byte gUnk_080BFE54
_080836F0: .4byte gUnk_080BFE98
_080836F4: .4byte gUnk_080BFEA0
_080836F8: .4byte gUnk_08BCA070
_080836FC:
	ldr r0, [sp, #0x1c]
	bl sub_08063DB4
	adds r2, r0, #0
	mov r0, r8
	adds r0, #0xc
	movs r4, #3
	str r4, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #3
	bl sub_0800B1AC
	ldr r0, [sp, #0x1c]
	bl sub_08063DE4
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08083808 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #0
	movs r3, #1
	bl sub_08069DA8
_08083736:
	mov r5, r8
	adds r5, #0xe
	mov r4, r8
	adds r4, #0x14
	mov r2, r8
	ldrh r0, [r2, #0xe]
	cmp r0, #0
	beq _0808374C
	adds r0, r5, #0
	bl sub_0800B4E4
_0808374C:
	mov r1, r8
	ldrh r0, [r1, #0x14]
	cmp r0, #0
	beq _0808375A
	adds r0, r4, #0
	bl sub_0800B4E4
_0808375A:
	mov r4, r8
	adds r4, #0x16
	mov r1, r8
	adds r1, #0x10
	mov r2, r8
	ldrh r0, [r2, #0x10]
	cmp r0, #0
	beq _08083770
	adds r0, r1, #0
	bl sub_0800B4E4
_08083770:
	mov r1, r8
	ldrh r0, [r1, #0x16]
	cmp r0, #0
	beq _0808377E
	adds r0, r4, #0
	bl sub_0800B4E4
_0808377E:
	mov r4, r8
	adds r4, #0x18
	mov r1, r8
	adds r1, #0x12
	mov r2, r8
	ldrh r0, [r2, #0x12]
	cmp r0, #0
	beq _08083794
	adds r0, r1, #0
	bl sub_0800B4E4
_08083794:
	mov r1, r8
	ldrh r0, [r1, #0x18]
	cmp r0, #0
	beq _080837A2
	adds r0, r4, #0
	bl sub_0800B4E4
_080837A2:
	ldr r0, [sp, #0x1c]
	movs r1, #0
	bl sub_08018A94
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08083810
	movs r2, #0
	mov sb, r2
	movs r7, #0
_080837B6:
	mov r4, sb
	lsls r0, r4, #1
	adds r0, #0xe
	add r0, r8
	ldr r1, _0808380C @ =gUnk_08BCA070
	ldr r2, [r1]
	mov r5, sp
	add r5, sb
	adds r5, #0x14
	ldrb r3, [r5]
	mov r6, sp
	add r6, sb
	adds r6, #0x18
	ldrb r1, [r6]
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	bl sub_0800B1AC
	adds r4, #1
	lsls r1, r4, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _08083808 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	mov sb, r4
	cmp r4, #2
	bls _080837B6
	b _080838D6
	.align 2, 0
_08083808: .4byte gUnk_02010800
_0808380C: .4byte gUnk_08BCA070
_08083810:
	movs r0, #0
	mov sb, r0
	mov sl, r0
	movs r1, #0x80
	lsls r1, r1, #9
	str r1, [sp, #0x24]
	add r6, sp, #0x18
	adds r7, r5, #0
	add r5, sp, #0x14
_08083822:
	mov r2, sb
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [sp, #0x1c]
	bl sub_08063E14
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08083878
	ldr r0, _08083870 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r5]
	ldrb r0, [r6]
	str r0, [sp]
	mov r4, sl
	str r4, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	bl sub_0800B1AC
	ldr r0, [sp, #0x24]
	lsrs r1, r0, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _08083874 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	b _080838BC
	.align 2, 0
_08083870: .4byte gUnk_08BCA070
_08083874: .4byte gUnk_02010800
_08083878:
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldrb r3, [r5]
	ldrb r0, [r6]
	str r0, [sp]
	mov r1, sl
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	bl sub_0800B1AC
	adds r0, r4, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, [sp, #0x24]
	lsrs r1, r4, #0x10
	ldrb r3, [r5]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r6]
	str r0, [sp]
	ldr r0, _080839E0 @ =gUnk_02010800
	bl sub_08069DA8
_080838BC:
	ldr r0, [sp, #0x24]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	str r0, [sp, #0x24]
	adds r6, #1
	adds r7, #2
	adds r5, #1
	movs r2, #1
	add sb, r2
	mov r4, sb
	cmp r4, #2
	bls _08083822
_080838D6:
	ldr r0, [sp, #0x1c]
	movs r1, #1
	bl sub_08018A94
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080838E6
	b _080839E8
_080838E6:
	movs r0, #0
	mov sb, r0
	add r7, sp, #0x14
	movs r1, #0x14
	add r1, r8
	mov sl, r1
	movs r1, #1
	ldr r0, _080839E4 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r7]
	mov r4, sp
	ldrb r0, [r4, #0x18]
	adds r0, #7
	str r0, [sp]
	mov r0, sb
	str r0, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sb
	str r1, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	bl sub_0800B1AC
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4, #0x18]
	adds r0, #7
	str r0, [sp]
	ldr r0, _080839E0 @ =gUnk_02010800
	movs r1, #4
	movs r2, #0
	bl sub_08069DA8
	mov r7, sp
	adds r7, #0x15
	movs r2, #0x16
	add r2, r8
	mov sl, r2
	movs r4, #1
	mov sb, r4
_0808393E:
	ldr r0, _080839E4 @ =gUnk_08BCA070
	mov r8, r0
	ldr r2, [r0]
	ldrb r3, [r7]
	mov r4, sp
	add r4, sb
	adds r4, #0x18
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	movs r6, #1
	str r6, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	bl sub_0800B1AC
	mov r1, sb
	adds r1, #4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	ldr r0, _080839E0 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	mov r0, sl
	adds r0, #2
	mov r4, sb
	adds r4, #1
	mov r1, r8
	ldr r2, [r1]
	ldrb r3, [r7, #1]
	add r4, sp
	adds r4, #0x18
	ldrb r1, [r4]
	adds r1, #7
	str r1, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r6, [sp, #8]
	str r5, [sp, #0xc]
	str r1, [sp, #0x10]
	movs r1, #2
	bl sub_0800B1AC
	mov r1, sb
	adds r1, #5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrb r3, [r7, #1]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r4]
	adds r0, #7
	str r0, [sp]
	ldr r0, _080839E0 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	adds r7, #2
	movs r2, #4
	add sl, r2
	movs r4, #2
	add sb, r4
	mov r0, sb
	cmp r0, #2
	bls _0808393E
	b _08083ABC
	.align 2, 0
_080839E0: .4byte gUnk_02010800
_080839E4: .4byte gUnk_08BCA070
_080839E8:
	movs r1, #0
	mov sb, r1
	mov sl, r1
	movs r2, #0x80
	lsls r2, r2, #0xb
	str r2, [sp, #0x20]
	add r5, sp, #0x18
	mov r6, r8
	adds r6, #0x14
	add r7, sp, #0x14
_080839FC:
	mov r4, sb
	lsls r1, r4, #0x18
	lsrs r1, r1, #0x18
	ldr r0, [sp, #0x1c]
	bl sub_08063E34
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08083A58
	ldr r0, _08083A50 @ =gUnk_08BCA070
	ldr r2, [r0]
	ldrb r3, [r7]
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sl
	str r1, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl sub_0800B1AC
	ldr r2, [sp, #0x20]
	lsrs r1, r2, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083A54 @ =gUnk_02010800
	movs r2, #0
	bl sub_08069DA8
	b _08083AA2
	.align 2, 0
_08083A50: .4byte gUnk_08BCA070
_08083A54: .4byte gUnk_02010800
_08083A58:
	adds r0, r4, #0
	bl sub_0806380C
	adds r2, r0, #0
	ldrb r3, [r7]
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	mov r0, sl
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	mov r1, sl
	str r1, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	bl sub_0800B1AC
	adds r0, r4, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, [sp, #0x20]
	lsrs r1, r4, #0x10
	ldrb r3, [r7]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrb r0, [r5]
	adds r0, #7
	str r0, [sp]
	ldr r0, _08083ACC @ =gUnk_02010800
	bl sub_08069DA8
_08083AA2:
	ldr r0, [sp, #0x20]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	str r0, [sp, #0x20]
	adds r5, #1
	adds r6, #2
	adds r7, #1
	movs r2, #1
	add sb, r2
	mov r4, sb
	cmp r4, #2
	bls _080839FC
_08083ABC:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08083ACC: .4byte gUnk_02010800

	thumb_func_start sub_08083AD0
sub_08083AD0: @ 0x08083AD0
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xf4
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #3
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08083BA0
sub_08083BA0: @ 0x08083BA0
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xf6
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #7
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08083C70
sub_08083C70: @ 0x08083C70
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xf0
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #8
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08083D40
sub_08083D40: @ 0x08083D40
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xfd
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #6
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08083E10
sub_08083E10: @ 0x08083E10
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0xc8
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08083ECC @ =0x01000064
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	mov r0, r8
	strh r0, [r4, #8]
	movs r0, #0xd
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08083ECC: .4byte 0x01000064

	thumb_func_start sub_08083ED0
sub_08083ED0: @ 0x08083ED0
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0x90
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08083F8C @ =0x01000048
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	mov r0, r8
	strh r0, [r4, #8]
	movs r0, #0x10
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08083F8C: .4byte 0x01000048

	thumb_func_start sub_08083F90
sub_08083F90: @ 0x08083F90
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0x98
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808404C @ =0x0100004C
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	mov r0, r8
	strh r0, [r4, #8]
	movs r0, #0xf
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808404C: .4byte 0x0100004C

	thumb_func_start sub_08084050
sub_08084050: @ 0x08084050
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0x94
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808410C @ =0x0100004A
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	strh r5, [r4, #4]
	strh r6, [r4, #6]
	mov r0, r8
	strh r0, [r4, #8]
	movs r0, #0xf
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808410C: .4byte 0x0100004A

	thumb_func_start sub_08084110
sub_08084110: @ 0x08084110
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	mov r8, r0
	adds r5, r1, #0
	adds r4, r2, #0
	adds r6, r3, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_0806F020
	adds r0, #0xf4
	adds r0, r0, r5
	ldrb r0, [r0]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08084164 @ =gUnk_02010800
	subs r4, #2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r6, [sp]
	mov r1, r8
	adds r3, r4, #0
	bl sub_08069DA8
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08084164: .4byte gUnk_02010800

	thumb_func_start sub_08084168
sub_08084168: @ 0x08084168
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	mov r8, r0
	adds r5, r1, #0
	adds r4, r2, #0
	mov sb, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	mov r1, sb
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	bl sub_0806F020
	adds r6, r0, #0
	adds r6, #0xb8
	adds r6, r6, r5
	ldrh r1, [r0, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	ldrb r1, [r6]
	adds r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r5, _080841F8 @ =gUnk_02010800
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r0, sb
	str r0, [sp]
	adds r0, r5, #0
	mov r1, r8
	bl sub_08069DA8
	ldrb r1, [r6]
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	subs r4, #4
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080841F8: .4byte gUnk_02010800

	thumb_func_start sub_080841FC
sub_080841FC: @ 0x080841FC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	bl sub_0806F020
	adds r4, r0, #0
	adds r0, #0xc4
	adds r0, r0, r5
	ldrb r2, [r0]
	adds r0, r4, #0
	adds r0, #0xf1
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _08084250
	adds r0, r2, #0
	bl sub_08063D2C
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0808424C @ =gUnk_02010800
	subs r3, r6, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r7, [sp]
	mov r1, r8
	bl sub_08069DA8
	b _08084262
	.align 2, 0
_0808424C: .4byte gUnk_02010800
_08084250:
	ldr r0, _08084294 @ =gUnk_02010800
	subs r3, r6, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r7, [sp]
	mov r1, r8
	movs r2, #0
	bl sub_08069DA8
_08084262:
	adds r0, r4, #0
	adds r0, #0xc4
	adds r0, r0, r5
	ldrb r0, [r0]
	adds r2, r0, #1
	ldr r0, _08084294 @ =gUnk_02010800
	subs r1, r6, #4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	adds r1, r2, #0
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084294: .4byte gUnk_02010800

	thumb_func_start sub_08084298
sub_08084298: @ 0x08084298
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	bl sub_0806F020
	adds r4, r0, #0
	adds r0, #0xb4
	adds r0, r0, r5
	ldrb r2, [r0]
	adds r0, r4, #0
	adds r0, #0xdd
	adds r0, r0, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _080842EC
	adds r0, r2, #0
	bl sub_08063DE4
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _080842E8 @ =gUnk_02010800
	subs r3, r6, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r7, [sp]
	mov r1, r8
	bl sub_08069DA8
	b _080842FE
	.align 2, 0
_080842E8: .4byte gUnk_02010800
_080842EC:
	ldr r0, _08084330 @ =gUnk_02010800
	subs r3, r6, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r7, [sp]
	mov r1, r8
	movs r2, #0
	bl sub_08069DA8
_080842FE:
	adds r0, r4, #0
	adds r0, #0xb4
	adds r0, r0, r5
	ldrb r0, [r0]
	adds r2, r0, #1
	ldr r0, _08084330 @ =gUnk_02010800
	subs r1, r6, #4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	str r7, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	adds r1, r2, #0
	movs r2, #2
	movs r3, #0
	bl sub_08069E74
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084330: .4byte gUnk_02010800

	thumb_func_start sub_08084334
sub_08084334: @ 0x08084334
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	adds r0, #0xb4
	adds r0, r0, r4
	ldrb r6, [r0]
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	beq _08084358
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_0800B4E4
_08084358:
	adds r0, r5, #0
	adds r0, #0xdd
	ldrh r1, [r5, #6]
	adds r0, r0, r1
	ldrb r4, [r0]
	cmp r4, #0
	bne _08084388
	adds r0, r6, #0
	bl sub_08063DCC
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
	b _080843A6
_08084388:
	adds r0, r5, #0
	adds r0, #0xc
	ldr r1, _080843B0 @ =gUnk_08BCA07C
	ldr r2, [r1]
	movs r1, #0x11
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
_080843A6:
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080843B0: .4byte gUnk_08BCA07C

	thumb_func_start sub_080843B4
sub_080843B4: @ 0x080843B4
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x10
	bl sub_0806F020
	lsls r1, r7, #1
	adds r0, #0x24
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, _080843F4 @ =0x0000FFFF
	cmp r1, r0
	bne _080843FC
	ldr r0, _080843F8 @ =gUnk_02010800
	adds r1, r6, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	movs r2, #0
	bl sub_08069DA8
	b _0808441C
	.align 2, 0
_080843F4: .4byte 0x0000FFFF
_080843F8: .4byte gUnk_02010800
_080843FC:
	adds r0, r1, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _08084440 @ =gUnk_02010800
	adds r1, r6, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	bl sub_08069DA8
_0808441C:
	ldr r0, _08084440 @ =gUnk_02010800
	adds r1, r7, #1
	subs r2, r4, #3
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	str r5, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r2, #1
	movs r3, #0
	bl sub_08069E74
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084440: .4byte gUnk_02010800

	thumb_func_start sub_08084444
sub_08084444: @ 0x08084444
	push {lr}
	bl sub_0806F020
	movs r3, #0
	adds r2, r0, #0
	adds r2, #0x14
_08084450:
	adds r0, r2, r3
	strb r3, [r0]
	adds r1, r3, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #2
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #3
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #4
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #5
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #6
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #7
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r3, #0xa
	cmp r3, #0x27
	bls _08084450
	pop {r0}
	bx r0

	thumb_func_start sub_08084494
sub_08084494: @ 0x08084494
	push {lr}
	bl sub_0806F020
	movs r2, #0
	adds r3, r0, #0
	adds r3, #0x1a
_080844A0:
	adds r0, r3, r2
	strb r2, [r0]
	adds r1, r2, #1
	adds r0, r3, r1
	strb r1, [r0]
	adds r1, r2, #2
	adds r0, r3, r1
	strb r1, [r0]
	adds r1, r2, #3
	adds r0, r3, r1
	strb r1, [r0]
	adds r2, #4
	cmp r2, #0x2b
	bls _080844A0
	pop {r0}
	bx r0

	thumb_func_start sub_080844C0
sub_080844C0: @ 0x080844C0
	push {lr}
	bl sub_0806F020
	movs r3, #0
	adds r2, r0, #0
	adds r2, #0x1a
_080844CC:
	adds r0, r2, r3
	strb r3, [r0]
	adds r1, r3, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #2
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #3
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #4
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #5
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #6
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, r3, #7
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r1, #1
	adds r0, r2, r1
	strb r1, [r0]
	adds r3, #0xa
	cmp r3, #0x27
	bls _080844CC
	pop {r0}
	bx r0

	thumb_func_start sub_08084510
sub_08084510: @ 0x08084510
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808453E
	cmp r0, #1
	bgt _0808452C
	cmp r0, #0
	beq _08084532
	b _0808457A
_0808452C:
	cmp r0, #2
	beq _08084566
	b _0808457A
_08084532:
	bl sub_08084584
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808457A
	b _08084552
_0808453E:
	bl sub_08084734
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _0808457A
	movs r2, #2
	ldrsh r1, [r4, r2]
	cmp r1, #0
	bne _0808455A
_08084552:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808457A
_0808455A:
	cmp r1, #0xf
	bne _0808457A
	strh r0, [r4]
	movs r0, #2
	strh r0, [r4, #2]
	b _0808457A
_08084566:
	bl sub_08084B80
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808457A
	movs r5, #0
	strh r5, [r4]
	movs r0, #0x98
	bl sub_0806EFF0
_0808457A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08084584
sub_08084584: @ 0x08084584
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x30
	bl sub_0806F020
	adds r7, r0, #0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #6
	bls _0808459E
	b _08084722
_0808459E:
	lsls r0, r0, #2
	ldr r1, _080845A8 @ =_080845AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080845A8: .4byte _080845AC
_080845AC: @ jump table
	.4byte _080845C8 @ case 0
	.4byte _080845FC @ case 1
	.4byte _0808460E @ case 2
	.4byte _0808469E @ case 3
	.4byte _080846D6 @ case 4
	.4byte _080846EA @ case 5
	.4byte _08084704 @ case 6
_080845C8:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_080845FC:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08084608
	b _08084722
_08084608:
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_0808460E:
	movs r6, #0
	movs r4, #0
	strh r4, [r7, #6]
	add r1, sp, #8
	movs r0, #0xb
	strb r0, [r1, #2]
	movs r0, #3
	strb r0, [r1, #3]
	adds r0, r1, #0
	movs r1, #7
	mov sb, r1
	mov r1, sb
	strb r1, [r0, #4]
	adds r1, r0, #0
	movs r0, #0xc
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r6, [r0, #1]
	movs r5, #2
	strb r5, [r0, #6]
	strb r6, [r0]
	strb r5, [r0, #7]
	movs r1, #6
	mov r8, r1
	mov r1, r8
	strb r1, [r0, #8]
	strb r6, [r0, #9]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r7, #6
	add r1, sp, #8
	bl sub_08019944
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	strh r4, [r7, #8]
	add r1, sp, #0x1c
	mov r0, sb
	strb r0, [r1, #2]
	movs r0, #0x10
	strb r0, [r1, #3]
	movs r0, #0xf
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	movs r0, #0xa
	strb r0, [r1, #1]
	strb r5, [r1, #6]
	strb r6, [r1]
	strb r5, [r1, #7]
	mov r0, r8
	strb r0, [r1, #8]
	strb r6, [r1, #9]
	str r4, [r1, #0xc]
	str r4, [r1, #0x10]
	adds r0, r7, #0
	adds r0, #8
	bl sub_08019944
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0x14
	movs r3, #0
	bl sub_080147DC
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_0808469E:
	adds r4, r7, #6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08084722
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	bl sub_08084C48
	adds r4, r7, #4
	adds r1, r7, #0
	adds r1, #0x20
	adds r0, r4, #0
	bl sub_080072F8
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08008E00
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_080846D6:
	adds r0, r7, #4
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _08084722
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_080846EA:
	adds r0, r7, #0
	adds r0, #8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08084722
	bl sub_08084DA8
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08084720
_08084704:
	adds r4, r7, #4
	adds r0, r4, #0
	bl sub_08008EF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08084722
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_08008E00
	movs r0, #0
_08084720:
	strh r0, [r7, #2]
_08084722:
	movs r1, #2
	ldrsh r0, [r7, r1]
	add sp, #0x30
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08084734
sub_08084734: @ 0x08084734
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0xe
	bls _0808474A
	b _08084B74
_0808474A:
	lsls r0, r0, #2
	ldr r1, _08084754 @ =_08084758
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084754: .4byte _08084758
_08084758: @ jump table
	.4byte _08084794 @ case 0
	.4byte _08084862 @ case 1
	.4byte _08084B74 @ case 2
	.4byte _08084B74 @ case 3
	.4byte _08084B74 @ case 4
	.4byte _08084A78 @ case 5
	.4byte _08084A9C @ case 6
	.4byte _08084AD0 @ case 7
	.4byte _08084B74 @ case 8
	.4byte _08084B74 @ case 9
	.4byte _08084AE4 @ case 10
	.4byte _08084B02 @ case 11
	.4byte _08084B1E @ case 12
	.4byte _08084B2C @ case 13
	.4byte _08084B4E @ case 14
_08084794:
	adds r6, r5, #4
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _080847A6
	b _08084B74
_080847A6:
	ldr r0, _080847DC @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r4, #0xc0
	ands r4, r0
	cmp r4, #0
	beq _080847E0
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #0xc]
	bl sub_08084DA8
	ldrh r0, [r5, #0xc]
	cmp r0, r4
	bne _080847D8
	b _08084B74
_080847D8:
	movs r0, #0x64
	b _0808484E
	.align 2, 0
_080847DC: .4byte gCurrentKeyPress
_080847E0:
	ldr r0, _08084824 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08084828
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r5, #2]
	b _08084B72
	.align 2, 0
_08084824: .4byte gKeyNewPress
_08084828:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08084832
	b _08084B74
_08084832:
	ldrh r0, [r5, #0x16]
	cmp r0, #0
	bne _0808483E
	ldr r0, [r5, #0x18]
	cmp r0, #0
	beq _0808484C
_0808483E:
	adds r0, r5, #0
	adds r0, #0x10
	ldrh r1, [r5, #0xc]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _08084856
_0808484C:
	movs r0, #0x67
_0808484E:
	movs r1, #0
	bl sub_080147B8
	b _08084B74
_08084856:
	adds r0, r6, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	b _08084B46
_08084862:
	adds r6, r5, #4
	adds r0, r6, #0
	bl sub_08008EF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _08084874
	b _08084B74
_08084874:
	ldrh r4, [r5, #0xc]
	cmp r4, #0
	bne _080848E0
	bl sub_08018624
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808488E
	bl sub_08018BE0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080848A0
_0808488E:
	ldr r0, _0808489C @ =gUnk_08BC9FA8
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_0808489C: .4byte gUnk_08BC9FA8
_080848A0:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	strh r4, [r5, #2]
	b _08084B72
_080848E0:
	cmp r4, #1
	bne _0808495E
	bl sub_08016928
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084900
	ldr r0, _080848FC @ =gUnk_08BC9FB0
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_080848FC: .4byte gUnk_08BC9FB0
_08084900:
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808491C
	ldr r0, _08084918 @ =gUnk_08BC9FCC
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_08084918: .4byte gUnk_08BC9FCC
_0808491C:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	strh r0, [r5, #2]
	b _08084B72
_0808495E:
	cmp r4, #2
	bne _080849C2
	bl sub_080169B0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084980
	ldr r0, _0808497C @ =gUnk_08BC9FB4
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_0808497C: .4byte gUnk_08BC9FB4
_08084980:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	strh r0, [r5, #2]
	b _08084B72
_080849C2:
	cmp r4, #3
	bne _08084A26
	bl sub_08018598
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080849E4
	ldr r0, _080849E0 @ =gUnk_08BC9FAC
	ldr r0, [r0]
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_080849E0: .4byte gUnk_08BC9FAC
_080849E4:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	strh r0, [r5, #2]
	b _08084B72
_08084A26:
	cmp r4, #4
	bne _08084A68
	bl sub_08018598
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084A44
	ldr r0, _08084A40 @ =gUnk_080BFEA8
	bl sub_0806A040
	movs r0, #0x67
	strh r0, [r5, #0x1c]
	b _08084ADE
	.align 2, 0
_08084A40: .4byte gUnk_080BFEA8
_08084A44:
	ldr r0, _08084A60 @ =0x000001CF
	movs r1, #1
	bl sub_08012F0C
	bl sub_08016070
	ldr r0, _08084A64 @ =gUnk_080BFEC0
	bl sub_0806A040
	movs r0, #0x6a
	strh r0, [r5, #0x1c]
	movs r0, #5
	strh r0, [r5, #2]
	b _08084B74
	.align 2, 0
_08084A60: .4byte 0x000001CF
_08084A64: .4byte gUnk_080BFEC0
_08084A68:
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	bl sub_08008E00
	movs r0, #0
	strh r0, [r5, #2]
	b _08084B74
_08084A78:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08084A98 @ =0x00007FFF
	movs r0, #0
	movs r3, #0xa
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _08084B46
	.align 2, 0
_08084A98: .4byte 0x00007FFF
_08084A9C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08084B74
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08084ACC @ =0x00007FFF
	movs r0, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0x69
	movs r1, #0
	bl sub_080147B8
	b _08084B46
	.align 2, 0
_08084ACC: .4byte 0x00007FFF
_08084AD0:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08084B74
_08084ADE:
	movs r0, #0xa
	strh r0, [r5, #2]
	b _08084B74
_08084AE4:
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #8
	movs r2, #0x11
	movs r3, #0xc
	bl sub_0801BBB8
	adds r0, r5, #0
	adds r0, #8
	bl sub_0801BA7C
	b _08084B46
_08084B02:
	adds r0, r5, #0
	adds r0, #8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084B74
	adds r0, r5, #4
	bl sub_08008C14
	adds r0, r5, #6
	bl sub_0801BA7C
	b _08084B46
_08084B1E:
	adds r0, r5, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084B74
	b _08084B46
_08084B2C:
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	ldrh r0, [r5, #0x1c]
	movs r1, #0
	bl sub_080147B8
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
_08084B46:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08084B74
_08084B4E:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084B74
	movs r0, #0x85
	movs r1, #0
	bl sub_0800E6D0
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	movs r1, #4
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	bl sub_08005E18
_08084B72:
	movs r7, #0
_08084B74:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08084B80
sub_08084B80: @ 0x08084B80
	push {r4, r5, lr}
	sub sp, #8
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #6
	bhi _08084C3C
	lsls r0, r0, #2
	ldr r1, _08084BA0 @ =_08084BA4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08084BA0: .4byte _08084BA4
_08084BA4: @ jump table
	.4byte _08084BC0 @ case 0
	.4byte _08084BDE @ case 1
	.4byte _08084BFA @ case 2
	.4byte _08084C08 @ case 3
	.4byte _08084C1A @ case 4
	.4byte _08084C26 @ case 5
	.4byte _08084C38 @ case 6
_08084BC0:
	movs r0, #2
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #8
	movs r2, #0x11
	movs r3, #0xc
	bl sub_0801BBB8
	adds r0, r4, #0
	adds r0, #8
	bl sub_0801BA7C
	b _08084C30
_08084BDE:
	adds r0, r4, #0
	adds r0, #8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084C3C
	adds r0, r4, #4
	bl sub_08008C14
	adds r0, r4, #6
	bl sub_0801BA7C
	b _08084C30
_08084BFA:
	adds r0, r4, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084C3C
	b _08084C30
_08084C08:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	b _08084C30
_08084C1A:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08084C3C
	b _08084C30
_08084C26:
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
_08084C30:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08084C3C
_08084C38:
	movs r5, #0
	strh r5, [r4, #2]
_08084C3C:
	adds r0, r5, #0
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08084C48
sub_08084C48: @ 0x08084C48
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x20
	movs r1, #0
	movs r2, #0
	strh r2, [r7, #4]
	movs r0, #0xd
	strb r0, [r6]
	movs r0, #4
	strb r0, [r6, #1]
	movs r0, #2
	strb r0, [r6, #6]
	strb r1, [r6, #7]
	strb r1, [r6, #0x11]
	strb r0, [r6, #0x12]
	movs r0, #0x10
	strh r0, [r6, #8]
	ldrh r0, [r7, #0xc]
	strh r0, [r6, #2]
	strh r2, [r6, #4]
	movs r0, #0xf0
	strb r0, [r6, #0xd]
	ldr r0, _08084D80 @ =gUnk_08BC9F78
	str r0, [r6, #0x14]
	movs r4, #0
	movs r0, #0x10
	adds r0, r0, r7
	mov sb, r0
	mov r5, sb
	mov r8, r4
_08084C90:
	adds r0, r7, #0
	adds r0, #0x10
	adds r0, r0, r4
	movs r1, #1
	strb r1, [r0]
	cmp r4, #0
	beq _08084CF2
	cmp r4, #3
	beq _08084CF2
	cmp r4, #4
	beq _08084CF2
	cmp r4, #1
	bne _08084CF6
	movs r0, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084CF2
	movs r0, #1
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084CF2
	movs r0, #2
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084CF2
	movs r0, #4
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084CF2
	movs r0, #3
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08084CF2
	movs r0, #5
	bl GetForgeLevel
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08084CF6
_08084CF2:
	mov r0, r8
	strb r0, [r5]
_08084CF6:
	cmp r4, #2
	bne _08084D52
	movs r0, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08084D4E
	movs r0, #1
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08084D4E
	movs r0, #2
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08084D4E
	movs r0, #4
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08084D4E
	movs r0, #3
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08084D4E
	movs r0, #5
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _08084D52
_08084D4E:
	mov r0, r8
	strb r0, [r5]
_08084D52:
	cmp r4, #3
	bne _08084D62
	ldr r0, _08084D84 @ =0x00000177
	bl sub_08012F60
	cmp r0, #0
	bne _08084D62
	strb r0, [r7, #0x13]
_08084D62:
	adds r5, #1
	adds r4, #1
	cmp r4, #5
	bls _08084C90
	movs r0, #0x97
	bl sub_08012F60
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08084D88
	strb r0, [r7, #0x11]
	strb r0, [r7, #0x12]
	strb r0, [r7, #0x13]
	b _08084D90
	.align 2, 0
_08084D80: .4byte gUnk_08BC9F78
_08084D84: .4byte 0x00000177
_08084D88:
	cmp r0, #2
	bne _08084D90
	movs r0, #1
	strb r0, [r7, #0x11]
_08084D90:
	movs r1, #0
	movs r0, #5
	strb r0, [r6, #0xa]
	mov r0, sb
	str r0, [r6, #0x18]
	strb r1, [r6, #0x10]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08084DA8
sub_08084DA8: @ 0x08084DA8
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	bl sub_0806F020
	adds r7, r0, #0
	ldrh r0, [r7, #0xc]
	cmp r0, #0
	beq _08084DC0
	cmp r0, #3
	beq _08084DC0
	cmp r0, #4
	bne _08084DDA
_08084DC0:
	movs r0, #2
	strb r0, [r7, #0x16]
	movs r0, #3
	strb r0, [r7, #0x17]
	movs r0, #4
	strb r0, [r7, #0x18]
	movs r0, #5
	strb r0, [r7, #0x19]
	movs r0, #6
	strb r0, [r7, #0x1a]
	movs r0, #7
	strb r0, [r7, #0x1b]
	b _08084E8C
_08084DDA:
	cmp r0, #1
	bne _08084E2E
	movs r6, #0
	adds r4, r7, #0
	adds r4, #0x16
_08084DE4:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08084DF6
	adds r0, r6, #2
_08084DF6:
	strb r0, [r4]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08084E0C
	adds r0, r6, #3
_08084E0C:
	strb r0, [r4, #1]
	adds r5, r6, #2
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _08084E22
	adds r0, r5, #2
_08084E22:
	strb r0, [r4, #2]
	adds r4, #3
	adds r6, #3
	cmp r6, #5
	bls _08084DE4
	b _08084E8C
_08084E2E:
	cmp r0, #2
	bne _08084E8C
	movs r6, #0
	adds r4, r7, #0
	adds r4, #0x16
_08084E38:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _08084E4C
	adds r0, r6, #2
	b _08084E4E
_08084E4C:
	movs r0, #0
_08084E4E:
	strb r0, [r4]
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _08084E66
	adds r0, r6, #3
	b _08084E68
_08084E66:
	movs r0, #0
_08084E68:
	strb r0, [r4, #1]
	adds r5, r6, #2
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _08084E80
	adds r0, r5, #2
	b _08084E82
_08084E80:
	movs r0, #0
_08084E82:
	strb r0, [r4, #2]
	adds r4, #3
	adds r6, #3
	cmp r6, #5
	bls _08084E38
_08084E8C:
	ldr r5, _08084EEC @ =gUnk_02010000
	ldrb r2, [r7, #0x16]
	movs r4, #0x11
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #0
	movs r3, #8
	bl sub_08069DA8
	ldrb r2, [r7, #0x17]
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #1
	movs r3, #0xa
	bl sub_08069DA8
	ldrb r2, [r7, #0x18]
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #0xc
	bl sub_08069DA8
	ldrb r2, [r7, #0x19]
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #3
	movs r3, #0xe
	bl sub_08069DA8
	ldrb r2, [r7, #0x1a]
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #4
	movs r3, #0x10
	bl sub_08069DA8
	ldrb r2, [r7, #0x1b]
	str r4, [sp]
	adds r0, r5, #0
	movs r1, #5
	movs r3, #0x12
	bl sub_08069DA8
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08084EEC: .4byte gUnk_02010000

	thumb_func_start sub_08084EF0
sub_08084EF0: @ 0x08084EF0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	mov sb, r3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0xce
	lsls r4, r4, #2
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	strh r5, [r7, #0xa]
	strh r6, [r7, #0xc]
	mov r0, r8
	strh r0, [r7, #0x10]
	mov r0, sb
	strh r0, [r7, #0x12]
	cmp r5, #3
	bne _08084F74
	add r4, sp, #0xc
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0x18]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0x16]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0x14]
	b _08084FA2
_08084F74:
	cmp r5, #5
	bne _08084FA2
	add r4, sp, #0x10
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0x10]
	strh r0, [r7, #0x20]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0x10]
	strh r0, [r7, #0x1e]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0x10]
	strh r0, [r7, #0x1c]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0x10]
	strh r0, [r7, #0x1a]
_08084FA2:
	movs r0, #0x11
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r5, #0x14
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08085010
sub_08085010: @ 0x08085010
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08085038
	cmp r0, #1
	bgt _0808502C
	cmp r0, #0
	beq _08085032
	b _08085064
_0808502C:
	cmp r0, #2
	beq _0808504A
	b _08085064
_08085032:
	bl sub_0808507C
	b _0808503C
_08085038:
	bl sub_08085204
_0808503C:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08085064
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08085064
_0808504A:
	bl sub_0808612C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08085064
	movs r5, #0
	strh r5, [r4]
	movs r0, #0xce
	lsls r0, r0, #2
	bl sub_0806EFF0
	movs r0, #0
	b _08085074
_08085064:
	ldrb r0, [r4, #0xc]
	adds r1, r4, #0
	adds r1, #0x50
	movs r2, #0x96
	movs r3, #0x20
	bl sub_0806F544
	adds r0, r5, #0
_08085074:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808507C
sub_0808507C: @ 0x0808507C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _0808508E
	b _080851B2
_0808508E:
	cmp r0, #1
	bgt _08085098
	cmp r0, #0
	beq _080850A6
	b _080851FA
_08085098:
	cmp r0, #2
	bne _0808509E
	b _080851E6
_0808509E:
	cmp r0, #3
	bne _080850A4
	b _080851F6
_080850A4:
	b _080851FA
_080850A6:
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _080850B0
	cmp r0, #1
	bne _080850B8
_080850B0:
	movs r0, #0
	bl sub_080861BC
	b _08085182
_080850B8:
	cmp r0, #2
	bne _080850E6
	ldrh r0, [r5, #0xc]
	strh r0, [r5, #0xe]
	ldrb r0, [r5, #0x10]
	bl sub_08015AA4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #0x10]
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r5, #0xc]
	bl sub_08015788
	bl sub_080156C4
	movs r0, #2
	bl sub_080861BC
	b _08085182
_080850E6:
	cmp r0, #3
	beq _0808516A
	cmp r0, #5
	bne _08085172
	ldrb r4, [r5, #0x10]
	adds r0, r4, #0
	bl GetWeaponInitAtk
	adds r1, r0, #0
	ldrh r0, [r5, #0x1a]
	lsls r0, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl SetBagWeaponInitAtk
	ldrb r4, [r5, #0x10]
	adds r0, r4, #0
	bl GetWeaponInitDef
	adds r1, r0, #0
	ldrh r2, [r5, #0x1c]
	lsls r0, r2, #1
	adds r0, r0, r2
	adds r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl SetBagWeaponInitDef
	ldrb r4, [r5, #0x10]
	adds r0, r4, #0
	bl GetWeaponInitAgl
	adds r1, r0, #0
	ldrh r0, [r5, #0x1e]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl SetBagWeaponInitAgl
	ldrb r4, [r5, #0x10]
	adds r0, r4, #0
	bl GetWeaponInitDur
	adds r1, r0, #0
	ldrh r2, [r5, #0x20]
	lsls r0, r2, #2
	adds r0, r0, r2
	adds r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl SetBagWeaponInitDur
	ldrb r0, [r5, #0x10]
	bl sub_08015E3C
	bl sub_0801644C
	ldrb r0, [r5, #0x10]
	movs r1, #0
	bl SetBagWeaponTec
_0808516A:
	movs r0, #3
	bl sub_080861BC
	b _08085182
_08085172:
	cmp r0, #4
	bne _08085182
	ldrb r0, [r5, #0x10]
	bl sub_08015D34
	movs r0, #4
	bl sub_080861BC
_08085182:
	adds r4, r5, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0xdc
	movs r2, #0x8a
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C0
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080851F8
_080851B2:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080851F8
_080851E6:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080851FA
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080851F8
_080851F6:
	movs r0, #0
_080851F8:
	strh r0, [r5, #2]
_080851FA:
	movs r1, #2
	ldrsh r0, [r5, r1]
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08085204
sub_08085204: @ 0x08085204
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	str r0, [sp, #0x18]
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x7b
	bls _08085226
	bl _08086116
_08085226:
	lsls r0, r0, #2
	ldr r1, _08085230 @ =_08085234
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08085230: .4byte _08085234
_08085234: @ jump table
	.4byte _08085424 @ case 0
	.4byte _08086116 @ case 1
	.4byte _08086116 @ case 2
	.4byte _08086116 @ case 3
	.4byte _08086116 @ case 4
	.4byte _08086116 @ case 5
	.4byte _08086116 @ case 6
	.4byte _08086116 @ case 7
	.4byte _08086116 @ case 8
	.4byte _08086116 @ case 9
	.4byte _08085508 @ case 10
	.4byte _0808553C @ case 11
	.4byte _0808556C @ case 12
	.4byte _0808558C @ case 13
	.4byte _080855A8 @ case 14
	.4byte _08086116 @ case 15
	.4byte _08086116 @ case 16
	.4byte _08086116 @ case 17
	.4byte _08086116 @ case 18
	.4byte _08086116 @ case 19
	.4byte _080855BC @ case 20
	.4byte _080855FA @ case 21
	.4byte _08085626 @ case 22
	.4byte _08085634 @ case 23
	.4byte _08085672 @ case 24
	.4byte _080856A4 @ case 25
	.4byte _080856B8 @ case 26
	.4byte _08086116 @ case 27
	.4byte _08086116 @ case 28
	.4byte _08086116 @ case 29
	.4byte _080856C6 @ case 30
	.4byte _0808570A @ case 31
	.4byte _08085714 @ case 32
	.4byte _0808574A @ case 33
	.4byte _08086116 @ case 34
	.4byte _08086116 @ case 35
	.4byte _080857B4 @ case 36
	.4byte _0808583C @ case 37
	.4byte _08086116 @ case 38
	.4byte _08086116 @ case 39
	.4byte _08085860 @ case 40
	.4byte _080858A8 @ case 41
	.4byte _080858B4 @ case 42
	.4byte _08086116 @ case 43
	.4byte _08086116 @ case 44
	.4byte _08086116 @ case 45
	.4byte _08086116 @ case 46
	.4byte _08086116 @ case 47
	.4byte _08086116 @ case 48
	.4byte _08086116 @ case 49
	.4byte _08085984 @ case 50
	.4byte _080860A0 @ case 51
	.4byte _080859C8 @ case 52
	.4byte _08086116 @ case 53
	.4byte _08086116 @ case 54
	.4byte _08086116 @ case 55
	.4byte _08086116 @ case 56
	.4byte _08086116 @ case 57
	.4byte _08086116 @ case 58
	.4byte _08086116 @ case 59
	.4byte _080859F8 @ case 60
	.4byte _080860A0 @ case 61
	.4byte _08085A3C @ case 62
	.4byte _08086116 @ case 63
	.4byte _08086116 @ case 64
	.4byte _08086116 @ case 65
	.4byte _08086116 @ case 66
	.4byte _08086116 @ case 67
	.4byte _08086116 @ case 68
	.4byte _08086116 @ case 69
	.4byte _08086116 @ case 70
	.4byte _08086116 @ case 71
	.4byte _08086116 @ case 72
	.4byte _08086116 @ case 73
	.4byte _08086116 @ case 74
	.4byte _08086116 @ case 75
	.4byte _08086116 @ case 76
	.4byte _08086116 @ case 77
	.4byte _08086116 @ case 78
	.4byte _08086116 @ case 79
	.4byte _08086116 @ case 80
	.4byte _08086116 @ case 81
	.4byte _08086116 @ case 82
	.4byte _08086116 @ case 83
	.4byte _08086116 @ case 84
	.4byte _08086116 @ case 85
	.4byte _08086116 @ case 86
	.4byte _08086116 @ case 87
	.4byte _08086116 @ case 88
	.4byte _08086116 @ case 89
	.4byte _08086116 @ case 90
	.4byte _08086116 @ case 91
	.4byte _08086116 @ case 92
	.4byte _08086116 @ case 93
	.4byte _08086116 @ case 94
	.4byte _08086116 @ case 95
	.4byte _08086116 @ case 96
	.4byte _08086116 @ case 97
	.4byte _08086116 @ case 98
	.4byte _08086116 @ case 99
	.4byte _08085AA0 @ case 100
	.4byte _08085ACC @ case 101
	.4byte _08085ADE @ case 102
	.4byte _08085B00 @ case 103
	.4byte _08085BA6 @ case 104
	.4byte _08085BB8 @ case 105
	.4byte _08085C7A @ case 106
	.4byte _08085CBE @ case 107
	.4byte _08085CCA @ case 108
	.4byte _08085D88 @ case 109
	.4byte _08085DCE @ case 110
	.4byte _08086116 @ case 111
	.4byte _08086116 @ case 112
	.4byte _08086116 @ case 113
	.4byte _08086116 @ case 114
	.4byte _08086116 @ case 115
	.4byte _08086116 @ case 116
	.4byte _08086116 @ case 117
	.4byte _08086116 @ case 118
	.4byte _08086116 @ case 119
	.4byte _08085DE4 @ case 120
	.4byte _0808601C @ case 121
	.4byte _080860A0 @ case 122
	.4byte _080860BA @ case 123
_08085424:
	ldrh r4, [r6, #0xa]
	cmp r4, #0
	bne _080854C8
	ldr r0, _08085470 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08085474
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r6, #2]
	movs r2, #0
	str r2, [sp, #0x18]
	b _08085A88
	.align 2, 0
_08085470: .4byte gKeyNewPress
_08085474:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0808547E
	b _08085A88
_0808547E:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1b
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r3, #0xc
	ldrsh r1, [r6, r3]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #0x10
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldr r0, _080854C4 @ =gUnk_03003364
	ldrh r0, [r0]
	bl sub_080017C4
	strh r4, [r6, #2]
	movs r1, #0
	str r1, [sp, #0x18]
	b _08085A88
	.align 2, 0
_080854C4: .4byte gUnk_03003364
_080854C8:
	cmp r4, #1
	bne _080854D4
	movs r0, #0xa
	strh r0, [r6, #2]
	bl _08086116
_080854D4:
	cmp r4, #2
	bne _080854E0
	movs r0, #0x28
	strh r0, [r6, #2]
	bl _08086116
_080854E0:
	cmp r4, #3
	bne _080854EC
	movs r0, #0x64
	strh r0, [r6, #2]
	bl _08086116
_080854EC:
	cmp r4, #5
	bne _080854F8
	movs r0, #0x32
	strh r0, [r6, #2]
	bl _08086116
_080854F8:
	cmp r4, #4
	beq _08085500
	bl _08086116
_08085500:
	movs r0, #0x3c
	strh r0, [r6, #2]
	bl _08086116
_08085508:
	ldrb r0, [r6, #0xc]
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldrh r0, [r6, #0x12]
	cmp r0, #1
	bne _0808551A
	adds r5, #0x6f
_0808551A:
	ldrb r0, [r6, #0xc]
	bl sub_080639BC
	adds r1, r0, #0
	ldr r2, _08085538 @ =gUnk_080BFEDC
	adds r0, r5, #0
	bl sub_0806A2DC
	movs r0, #0x8f
	movs r1, #0
	bl sub_080147B8
	bl _080860B2
	.align 2, 0
_08085538: .4byte gUnk_080BFEDC
_0808553C:
	bl sub_0806A378
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808554A
	bl _08086116
_0808554A:
	ldrb r0, [r6, #0xc]
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08085560
	movs r0, #0xe
	strh r0, [r6, #2]
	bl _08086116
_08085560:
	ldrb r0, [r6, #0xc]
	bl sub_08018A14
	lsls r0, r0, #0x18
	bl _080860AE
_0808556C:
	ldr r1, _08085584 @ =0xFFFF0000
	ldr r2, _08085588 @ =0x00007FFF
	movs r0, #1
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #1
	movs r1, #2
	bl sub_08011174
	bl _080860B2
	.align 2, 0
_08085584: .4byte 0xFFFF0000
_08085588: .4byte 0x00007FFF
_0808558C:
	movs r0, #1
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0808559E
	bl _08086116
_0808559E:
	movs r0, #1
	bl sub_08011104
	bl _080860B2
_080855A8:
	bl sub_0808770C
	ldrb r0, [r6, #0xc]
	movs r1, #1
	bl sub_08016264
	movs r0, #0x14
	strh r0, [r6, #2]
	bl _08086116
_080855BC:
	adds r0, r6, #0
	adds r0, #0xc0
	ldrh r0, [r0]
	cmp r0, #1
	bls _080855D4
	adds r0, r6, #0
	adds r0, #0x80
	movs r1, #0
	bl sub_0808AAC8
	bl _080860B2
_080855D4:
	cmp r0, #0
	bne _080855E2
	ldrb r0, [r6, #0x10]
	movs r1, #0xff
	bl SetBagWeaponSkill
	b _080855F2
_080855E2:
	cmp r0, #1
	bne _080855F2
	ldrb r0, [r6, #0x10]
	adds r1, r6, #0
	adds r1, #0xba
	ldrb r1, [r1]
	bl SetBagWeaponSkill
_080855F2:
	movs r0, #0x17
	strh r0, [r6, #2]
	bl _08086116
_080855FA:
	adds r5, r6, #0
	adds r5, #0x80
	adds r0, r5, #0
	bl sub_0808983C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808560E
	bl _08086116
_0808560E:
	ldrb r4, [r6, #0x10]
	adds r0, r5, #0
	bl sub_0808AB00
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetBagWeaponSkill
	bl _080860B2
_08085626:
	adds r0, r6, #0
	adds r0, #0x80
	bl sub_0808AB08
	lsls r0, r0, #0x18
	bl _080860AE
_08085634:
	adds r0, r6, #0
	adds r0, #0xc8
	ldrh r0, [r0]
	cmp r0, #1
	bls _0808564C
	adds r0, r6, #0
	adds r0, #0x80
	movs r1, #1
	bl sub_0808AAC8
	bl _080860B2
_0808564C:
	cmp r0, #0
	bne _0808565A
	ldrb r0, [r6, #0x10]
	movs r1, #0xff
	bl SetBagWeaponSpecialEffect
	b _0808566A
_0808565A:
	cmp r0, #1
	bne _0808566A
	ldrb r0, [r6, #0x10]
	adds r1, r6, #0
	adds r1, #0xc2
	ldrb r1, [r1]
	bl SetBagWeaponSpecialEffect
_0808566A:
	movs r0, #0x1a
	strh r0, [r6, #2]
	bl _08086116
_08085672:
	adds r5, r6, #0
	adds r5, #0x80
	adds r0, r5, #0
	bl sub_0808983C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08085686
	bl _08086116
_08085686:
	ldrb r4, [r6, #0x10]
	adds r0, r5, #0
	bl sub_0808AB00
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetBagWeaponSpecialEffect
	movs r0, #1
	bl sub_080861BC
	bl _080860B2
_080856A4:
	adds r0, r6, #0
	adds r0, #0x80
	bl sub_0808AB08
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080856B6
	bl _08086116
_080856B6:
	b _080856BE
_080856B8:
	movs r0, #1
	bl sub_080861BC
_080856BE:
	movs r0, #0x1e
	strh r0, [r6, #2]
	bl _08086116
_080856C6:
	ldrb r0, [r6, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _08085702
	ldrb r0, [r6, #0xc]
	bl sub_08063BFC
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r3, #0x8e
	lsls r3, r3, #1
	adds r0, r6, r3
	adds r1, r2, #0
	bl sub_0808AB30
	bl _080860B2
_08085702:
	movs r0, #0x20
	strh r0, [r6, #2]
	bl _08086116
_0808570A:
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	bl _080860A6
_08085714:
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808573E
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808573E
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080857AC
_0808573E:
	ldrh r1, [r6, #0x10]
	movs r0, #6
	bl sub_0806BC24
	bl _080860B2
_0808574A:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08085758
	bl _08086116
_08085758:
	bl sub_0806F60C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080857AC
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0808577A
	ldrb r1, [r6, #0x10]
	movs r0, #0
	bl SetPlayerEquipWeaponType
	b _080857A8
_0808577A:
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08085792
	ldrb r1, [r6, #0x10]
	movs r0, #1
	bl SetPlayerEquipWeaponType
	b _080857A8
_08085792:
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080857A8
	ldrb r1, [r6, #0x10]
	movs r0, #2
	bl SetPlayerEquipWeaponType
_080857A8:
	bl sub_0801644C
_080857AC:
	movs r0, #0x24
	strh r0, [r6, #2]
	bl _08086116
_080857B4:
	ldr r0, _080857E4 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080857CA
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080857CA
	b _08085A88
_080857CA:
	movs r0, #0x97
	bl sub_08012F60
	lsls r0, r0, #0x10
	ldr r2, _080857E8 @ =0xFFFF0000
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080857EC
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	b _08085804
	.align 2, 0
_080857E4: .4byte gKeyNewPress
_080857E8: .4byte 0xFFFF0000
_080857EC:
	bl sub_08018624
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08085800
	bl sub_08018BE0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08085816
_08085800:
	movs r0, #0
	movs r1, #0x19
_08085804:
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	bl sub_0806F070
	b _08085836
_08085816:
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	bl sub_0806F070
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
_08085836:
	movs r0, #0x25
	strh r0, [r6, #2]
	b _08085A88
_0808583C:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	strh r0, [r6, #2]
	movs r3, #0
	str r3, [sp, #0x18]
	bl _08086116
_08085860:
	ldrb r0, [r6, #0xe]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0xe]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _080858A0
	ldrb r0, [r6, #0xe]
	bl sub_08063BFC
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x19
	cmp r2, #0
	beq _080858A0
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	adds r1, r2, #0
	bl sub_0808AB30
	bl _080860B2
_080858A0:
	movs r0, #0x2a
	strh r0, [r6, #2]
	bl _08086116
_080858A8:
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r0, r6, r2
	ldrh r1, [r6, #0xe]
	bl _080860A8
_080858B4:
	ldr r0, _08085904 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080858CA
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080858CA
	b _08085A88
_080858CA:
	movs r0, #0x97
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	lsls r4, r4, #0x10
	ldr r3, _08085908 @ =0xFFFF0000
	adds r4, r4, r3
	lsrs r4, r4, #0x10
	cmp r4, #2
	bhi _0808590C
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	bl sub_0806F070
	b _08085964
	.align 2, 0
_08085904: .4byte gKeyNewPress
_08085908: .4byte 0xFFFF0000
_0808590C:
	bl sub_08018598
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08085938
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	bl sub_0806F070
	movs r0, #0
	bl sub_0806F038
	movs r0, #0
	bl sub_0806F038
	b _08085964
_08085938:
	movs r0, #0
	movs r1, #0x19
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	bl sub_0806F070
_08085964:
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	strh r0, [r6, #2]
	str r0, [sp, #0x18]
	b _08085A88
_08085984:
	ldrb r0, [r6, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _080859C2
	ldrb r0, [r6, #0xc]
	bl sub_08063BFC
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x19
	cmp r2, #0
	beq _080859C2
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	adds r1, r2, #0
	bl sub_0808AB30
	b _080860B2
_080859C2:
	movs r0, #0x34
	strh r0, [r6, #2]
	b _08086116
_080859C8:
	ldr r0, _080859F4 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080859DC
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08085A88
_080859DC:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	b _08085A64
	.align 2, 0
_080859F4: .4byte gKeyNewPress
_080859F8:
	ldrb r0, [r6, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _08085A36
	ldrb r0, [r6, #0xc]
	bl sub_08063BFC
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x19
	cmp r2, #0
	beq _08085A36
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	adds r1, r2, #0
	bl sub_0808AB30
	b _080860B2
_08085A36:
	movs r0, #0x3e
	strh r0, [r6, #2]
	b _08086116
_08085A3C:
	ldr r0, _08085A9C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08085A50
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08085A88
_08085A50:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
_08085A64:
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	strh r0, [r6, #2]
	movs r3, #0
	str r3, [sp, #0x18]
_08085A88:
	adds r4, r6, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _08086116
	.align 2, 0
_08085A9C: .4byte gKeyNewPress
_08085AA0:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08085AC8 @ =0x00007FFF
	movs r0, #0
	movs r3, #6
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #0x8f
	movs r1, #0
	bl sub_080147B8
	b _080860B2
	.align 2, 0
_08085AC8: .4byte 0x00007FFF
_08085ACC:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08085ADC
	b _08086116
_08085ADC:
	b _080860B2
_08085ADE:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08085AFC @ =0x00007FFF
	movs r0, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	b _080860B2
	.align 2, 0
_08085AFC: .4byte 0x00007FFF
_08085B00:
	ldrh r2, [r6, #0x14]
	movs r5, #0xff
	lsls r5, r5, #8
	adds r0, r5, #0
	ands r0, r2
	cmp r0, #0
	bne _08085B1A
	ldrb r0, [r6, #0x10]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #0
	bl SetBagWeaponEnhanceItem
_08085B1A:
	ldrh r2, [r6, #0x16]
	adds r0, r5, #0
	ands r0, r2
	cmp r0, #0
	bne _08085B30
	ldrb r0, [r6, #0x10]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #1
	bl SetBagWeaponEnhanceItem
_08085B30:
	ldrh r2, [r6, #0x18]
	adds r0, r5, #0
	ands r0, r2
	cmp r0, #0
	bne _08085B46
	ldrb r0, [r6, #0x10]
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #2
	bl SetBagWeaponEnhanceItem
_08085B46:
	ldrb r0, [r6, #0x10]
	bl sub_08015E3C
	bl sub_0801644C
	ldrb r4, [r6, #0x10]
	adds r0, r4, #0
	bl GetWeaponMaxDur
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl SetBagWeaponCurrentDur
	ldrh r1, [r6, #0x14]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _08085B78
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016394
_08085B78:
	ldrh r1, [r6, #0x16]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _08085B8C
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016394
_08085B8C:
	ldrh r1, [r6, #0x18]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _08085BA0
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016394
_08085BA0:
	movs r0, #0x68
	strh r0, [r6, #2]
	b _08086116
_08085BA6:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08085BB6
	b _08086116
_08085BB6:
	b _080860B2
_08085BB8:
	movs r0, #0xba
	adds r0, r0, r6
	mov r8, r0
	add r1, sp, #0x14
	ldrh r0, [r6, #0x14]
	strb r0, [r1]
	ldrh r0, [r6, #0x16]
	strb r0, [r1, #1]
	ldrh r0, [r6, #0x18]
	strb r0, [r1, #2]
	adds r5, r6, #0
	adds r5, #0x22
	ldrb r3, [r6, #0xc]
	mov r0, r8
	adds r1, r5, #0
	add r2, sp, #0x14
	bl sub_0806333C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r6, #0
	adds r4, #0xc0
	strh r0, [r4]
	ldrb r0, [r6, #0x10]
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	mov sb, r8
	adds r7, r5, #0
	cmp r1, #0xff
	beq _08085C32
	movs r5, #0
	ldrh r2, [r4]
	cmp r5, r2
	bge _08085C18
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, r1
	beq _08085C18
_08085C08:
	adds r5, #1
	cmp r5, r2
	bge _08085C18
	mov r3, r8
	adds r0, r3, r5
	ldrb r0, [r0]
	cmp r0, r1
	bne _08085C08
_08085C18:
	ldrh r0, [r4]
	cmp r5, r0
	bne _08085C32
	mov r2, r8
	adds r0, r2, r5
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, r7, r0
	movs r1, #0xff
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08085C32:
	ldrh r0, [r4]
	cmp r0, #0
	bne _08085C42
	ldrb r0, [r6, #0x10]
	movs r1, #0xff
	bl SetBagWeaponSkill
	b _08085C62
_08085C42:
	cmp r0, #1
	bne _08085C68
	ldrb r0, [r6, #0x10]
	mov r3, sb
	ldrb r1, [r3]
	bl SetBagWeaponSkill
	ldrb r0, [r7]
	cmp r0, #0xff
	beq _08085C62
	mov r1, sb
	ldrb r0, [r1]
	ldrb r1, [r7]
	movs r2, #1
	bl sub_080162BC
_08085C62:
	movs r0, #0x6c
	strh r0, [r6, #2]
	b _08086116
_08085C68:
	cmp r0, #1
	bhi _08085C6E
	b _08086116
_08085C6E:
	adds r0, r6, #0
	adds r0, #0x80
	movs r1, #0
	bl sub_0808AAC8
	b _080860B2
_08085C7A:
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl sub_0808983C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08085C8C
	b _08086116
_08085C8C:
	adds r0, r4, #0
	bl sub_0808AB00
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0x10]
	adds r1, r4, #0
	bl SetBagWeaponSkill
	adds r0, r6, #0
	adds r0, #0x86
	movs r1, #0
	ldrsb r1, [r0, r1]
	subs r0, #0x64
	adds r1, r0, r1
	ldrb r0, [r1]
	cmp r0, #0xff
	bne _08085CB2
	b _080860B2
_08085CB2:
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl sub_080162BC
	b _080860B2
_08085CBE:
	adds r0, r6, #0
	adds r0, #0x80
	bl sub_0808AB08
	lsls r0, r0, #0x18
	b _080860AE
_08085CCA:
	movs r2, #0xc2
	adds r2, r2, r6
	mov r8, r2
	add r1, sp, #0x14
	ldrh r0, [r6, #0x14]
	strb r0, [r1]
	ldrh r0, [r6, #0x16]
	strb r0, [r1, #1]
	ldrh r0, [r6, #0x18]
	strb r0, [r1, #2]
	adds r5, r6, #0
	adds r5, #0x22
	ldrb r3, [r6, #0xc]
	mov r0, r8
	adds r1, r5, #0
	add r2, sp, #0x14
	bl sub_080635DC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r4, r6, #0
	adds r4, #0xc8
	strh r0, [r4]
	ldrb r0, [r6, #0x10]
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	mov sb, r8
	adds r7, r5, #0
	cmp r1, #0xff
	beq _08085D44
	movs r5, #0
	ldrh r2, [r4]
	cmp r5, r2
	bge _08085D2A
	mov r3, sb
	ldrb r0, [r3]
	cmp r0, r1
	beq _08085D2A
_08085D1A:
	adds r5, #1
	cmp r5, r2
	bge _08085D2A
	mov r3, r8
	adds r0, r3, r5
	ldrb r0, [r0]
	cmp r0, r1
	bne _08085D1A
_08085D2A:
	ldrh r0, [r4]
	cmp r5, r0
	bne _08085D44
	mov r2, r8
	adds r0, r2, r5
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, r7, r0
	movs r1, #0xff
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08085D44:
	ldrh r0, [r4]
	cmp r0, #0
	bne _08085D54
	ldrb r0, [r6, #0x10]
	movs r1, #0xff
	bl SetBagWeaponSpecialEffect
	b _08085DDE
_08085D54:
	cmp r0, #1
	bne _08085D76
	ldrb r0, [r6, #0x10]
	mov r3, sb
	ldrb r1, [r3]
	bl SetBagWeaponSpecialEffect
	ldrb r0, [r7]
	cmp r0, #0xff
	beq _08085DDE
	mov r1, sb
	ldrb r0, [r1]
	ldrb r1, [r7]
	movs r2, #1
	bl sub_08016328
	b _08085DDE
_08085D76:
	cmp r0, #1
	bhi _08085D7C
	b _08086116
_08085D7C:
	adds r0, r6, #0
	adds r0, #0x80
	movs r1, #1
	bl sub_0808AAC8
	b _080860B2
_08085D88:
	adds r4, r6, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl sub_0808983C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08085D9A
	b _08086116
_08085D9A:
	adds r0, r4, #0
	bl sub_0808AB00
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0x10]
	adds r1, r4, #0
	bl SetBagWeaponSpecialEffect
	adds r0, r6, #0
	adds r0, #0x86
	movs r1, #0
	ldrsb r1, [r0, r1]
	subs r0, #0x64
	adds r1, r0, r1
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _08085DC8
	adds r1, r0, #0
	adds r0, r4, #0
	movs r2, #1
	bl sub_08016328
_08085DC8:
	movs r0, #0x6e
	strh r0, [r6, #2]
	b _08086116
_08085DCE:
	adds r0, r6, #0
	adds r0, #0x80
	bl sub_0808AB08
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08085DDE
	b _08086116
_08085DDE:
	movs r0, #0x78
	strh r0, [r6, #2]
	b _08086116
_08085DE4:
	movs r2, #0
	mov r8, r2
	mov sl, r2
	movs r3, #0
	str r3, [sp, #0x1c]
	movs r0, #0
	str r0, [sp, #0x20]
	movs r5, #0
	adds r1, r6, #0
	adds r1, #0x50
	str r1, [sp, #0x24]
	adds r2, r6, #6
	str r2, [sp, #0x28]
	adds r3, r6, #0
	adds r3, #8
	str r3, [sp, #0x2c]
	movs r0, #0xff
	lsls r0, r0, #8
	mov sb, r0
	add r4, sp, #0x14
	adds r7, r6, #0
	adds r7, #0x14
_08085E10:
	ldrh r1, [r7]
	mov r0, sb
	ands r0, r1
	cmp r0, sb
	beq _08085E7C
	strb r1, [r4]
	ldrb r0, [r4]
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	ldrb r0, [r4]
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r3, sl
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	ldrb r0, [r4]
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r2, [sp, #0x1c]
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x1c]
	ldrb r0, [r4]
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r3, [sp, #0x20]
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x20]
_08085E7C:
	adds r7, #2
	adds r5, #1
	cmp r5, #2
	ble _08085E10
	ldr r7, _08085F48 @ =gUnk_02010800
	movs r0, #7
	str r0, [sp]
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	movs r0, #8
	str r0, [sp]
	mov r2, sl
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	movs r0, #9
	str r0, [sp]
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	movs r0, #0xa
	str r0, [sp]
	ldr r1, [sp, #0x20]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	ldrb r0, [r6, #0x10]
	ldr r1, [sp, #0x24]
	movs r2, #0x98
	movs r3, #0x20
	bl sub_0806A670
	ldrh r0, [r6, #6]
	cmp r0, #0
	beq _08085F08
	ldr r0, [sp, #0x28]
	bl sub_0800B4E4
_08085F08:
	ldrb r0, [r6, #0x10]
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08085F50
	movs r5, #0
	ldr r0, _08085F4C @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xd
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	str r4, [sp]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #0
	movs r3, #8
	bl sub_08069DA8
	b _08085F8A
	.align 2, 0
_08085F48: .4byte gUnk_02010800
_08085F4C: .4byte gUnk_08BCA070
_08085F50:
	adds r0, r4, #0
	bl sub_08063D2C
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063CFC
	adds r2, r0, #0
	movs r4, #0xd
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	str r4, [sp]
	adds r0, r7, #0
	movs r1, #1
	adds r2, r5, #0
	movs r3, #8
	bl sub_08069DA8
_08085F8A:
	ldrh r0, [r6, #8]
	cmp r0, #0
	beq _08085F96
	ldr r0, [sp, #0x2c]
	bl sub_0800B4E4
_08085F96:
	ldrb r0, [r6, #0x10]
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #0xff
	bne _08085FDC
	movs r5, #0
	ldr r0, _08085FD4 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0x10
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _08085FD8 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	movs r2, #0
	movs r3, #8
	bl sub_08069DA8
	b _080860B2
	.align 2, 0
_08085FD4: .4byte gUnk_08BCA070
_08085FD8: .4byte gUnk_02010800
_08085FDC:
	adds r0, r4, #0
	bl sub_08063DE4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063DB4
	adds r2, r0, #0
	movs r4, #0x10
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _08086018 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	adds r2, r5, #0
	movs r3, #8
	bl sub_08069DA8
	b _080860B2
	.align 2, 0
_08086018: .4byte gUnk_02010800
_0808601C:
	ldrb r0, [r6, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldrb r0, [r6, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _0808609A
	movs r4, #0
	ldrb r0, [r6, #0xc]
	bl sub_08063BFC
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x19
	ldrh r1, [r6, #0x14]
	movs r3, #0xff
	lsls r3, r3, #8
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _0808605A
	movs r4, #1
_0808605A:
	ldrh r1, [r6, #0x16]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _0808606E
	lsls r0, r4, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r4, r0, #0x10
_0808606E:
	ldrh r1, [r6, #0x18]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _08086082
	lsls r0, r4, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r4, r0, #0x10
_08086082:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	muls r2, r0, r2
	cmp r2, #0
	beq _0808609A
	movs r1, #0x8e
	lsls r1, r1, #1
	adds r0, r6, r1
	adds r1, r2, #0
	bl sub_0808AB30
	b _080860B2
_0808609A:
	movs r0, #0x7b
	strh r0, [r6, #2]
	b _08086116
_080860A0:
	movs r2, #0x8e
	lsls r2, r2, #1
	adds r0, r6, r2
_080860A6:
	ldrh r1, [r6, #0xc]
_080860A8:
	bl sub_08089E0C
	lsls r0, r0, #0x10
_080860AE:
	cmp r0, #0
	bne _08086116
_080860B2:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _08086116
_080860BA:
	ldr r0, _08086128 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080860CE
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08086106
_080860CE:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	strh r0, [r6, #2]
	movs r3, #0
	str r3, [sp, #0x18]
_08086106:
	adds r4, r6, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_08086116:
	ldr r0, [sp, #0x18]
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08086128: .4byte gKeyNewPress

	thumb_func_start sub_0808612C
sub_0808612C: @ 0x0808612C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08086164
	cmp r0, #1
	bgt _08086148
	cmp r0, #0
	beq _08086152
	b _080861B2
_08086148:
	cmp r0, #2
	beq _08086170
	cmp r0, #3
	beq _080861AE
	b _080861B2
_08086152:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	b _080861A6
_08086164:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080861B2
	b _080861A6
_08086170:
	adds r0, r4, #4
	bl sub_0800B4E4
	adds r0, r4, #6
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #8
	bl sub_0800B4E4
	movs r0, #0
	bl sub_08010FC8
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	bl sub_08069AA8
_080861A6:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080861B2
_080861AE:
	movs r5, #0
	strh r5, [r4, #2]
_080861B2:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080861BC
sub_080861BC: @ 0x080861BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	adds r6, r0, #0
	bl sub_0806F020
	mov r8, r0
	ldrb r0, [r0, #0xc]
	mov sb, r0
	mov r1, r8
	ldrh r1, [r1, #0x10]
	mov sl, r1
	cmp r6, #0
	bne _080861EC
	mov r1, r8
	adds r1, #0x50
	movs r2, #0x96
	movs r3, #0x20
	bl sub_0806A9A8
	b _08086222
_080861EC:
	cmp r6, #1
	beq _080861F8
	cmp r6, #2
	beq _080861F8
	cmp r6, #3
	bne _0808620C
_080861F8:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	mov r1, r8
	adds r1, #0x50
	movs r2, #0x96
	movs r3, #0x20
	bl sub_0806A670
	b _08086222
_0808620C:
	cmp r6, #4
	bne _08086222
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	mov r1, r8
	adds r1, #0x50
	movs r2, #0x96
	movs r3, #0x20
	bl sub_0806A670
_08086222:
	movs r0, #1
	bl sub_08011104
	mov r0, sb
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08086252
	cmp r6, #3
	beq _08086252
	cmp r6, #4
	beq _08086252
	movs r1, #0xf8
	lsls r1, r1, #0xe
	ldr r2, _080862A8 @ =0x00003DEF
	movs r0, #1
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
_08086252:
	mov r1, r8
	ldrh r0, [r1, #4]
	mov r7, r8
	adds r7, #4
	cmp r0, #0
	beq _08086264
	adds r0, r7, #0
	bl sub_0800B4E4
_08086264:
	mov r0, sb
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080862B4
	cmp r6, #3
	beq _080862B4
	cmp r6, #4
	beq _080862B4
	movs r5, #0
	ldr r0, _080862AC @ =gUnk_08BCA078
	ldr r2, [r0]
	movs r4, #3
	str r4, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #5
	bl sub_0800B1AC
	ldr r0, _080862B0 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #0
	movs r2, #0
	movs r3, #3
	bl sub_08069DA8
	b _08086308
	.align 2, 0
_080862A8: .4byte 0x00003DEF
_080862AC: .4byte gUnk_08BCA078
_080862B0: .4byte gUnk_02010800
_080862B4:
	mov r0, sb
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080862D8
	adds r0, r5, #0
	adds r0, #0x6f
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080862D8:
	mov r0, sb
	bl sub_080639BC
	adds r2, r0, #0
	movs r4, #3
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #5
	bl sub_0800B1AC
	ldr r0, _08086358 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #0
	adds r2, r5, #0
	movs r3, #3
	bl sub_08069DA8
_08086308:
	mov r1, r8
	ldrh r0, [r1, #6]
	mov r7, r8
	adds r7, #6
	cmp r0, #0
	beq _0808631A
	adds r0, r7, #0
	bl sub_0800B4E4
_0808631A:
	mov r0, sb
	bl sub_08018A14
	lsls r0, r0, #0x18
	asrs r1, r0, #0x18
	cmp r1, #0
	bne _08086360
	cmp r6, #3
	beq _08086360
	cmp r6, #4
	beq _08086360
	ldr r0, _0808635C @ =gUnk_08BCA078
	ldr r2, [r0]
	movs r4, #0xd
	str r4, [sp]
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _08086358 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #1
	adds r2, r5, #0
	b _080863B8
	.align 2, 0
_08086358: .4byte gUnk_02010800
_0808635C: .4byte gUnk_08BCA078
_08086360:
	movs r4, #0
	cmp r6, #0
	bne _0808636E
	mov r0, sb
	bl sub_08063B9C
	b _08086388
_0808636E:
	cmp r6, #1
	beq _0808637E
	cmp r6, #2
	beq _0808637E
	cmp r6, #3
	beq _0808637E
	cmp r6, #4
	bne _0808638C
_0808637E:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponSkill
_08086388:
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0808638C:
	cmp r4, #0xff
	bne _080863C8
	movs r5, #0
	ldr r0, _080863C0 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0xd
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _080863C4 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #1
	movs r2, #0
_080863B8:
	movs r3, #8
	bl sub_08069DA8
	b _08086402
	.align 2, 0
_080863C0: .4byte gUnk_08BCA070
_080863C4: .4byte gUnk_02010800
_080863C8:
	adds r0, r4, #0
	bl sub_08063D2C
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063CFC
	adds r2, r0, #0
	movs r4, #0xd
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _08086438 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #1
	adds r2, r5, #0
	movs r3, #8
	bl sub_08069DA8
_08086402:
	mov r1, r8
	ldrh r0, [r1, #8]
	mov r7, r8
	adds r7, #8
	cmp r0, #0
	beq _08086414
	adds r0, r7, #0
	bl sub_0800B4E4
_08086414:
	mov r0, sb
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08086440
	cmp r6, #3
	beq _08086440
	cmp r6, #4
	beq _08086440
	movs r5, #0
	ldr r0, _0808643C @ =gUnk_08BCA078
	ldr r2, [r0]
	movs r4, #0x10
	str r4, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	b _08086480
	.align 2, 0
_08086438: .4byte gUnk_02010800
_0808643C: .4byte gUnk_08BCA078
_08086440:
	movs r4, #0
	cmp r6, #0
	bne _0808644E
	mov r0, sb
	bl sub_08063BB4
	b _08086468
_0808644E:
	cmp r6, #1
	beq _0808645E
	cmp r6, #2
	beq _0808645E
	cmp r6, #3
	beq _0808645E
	cmp r6, #4
	bne _0808646C
_0808645E:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl GetWeaponSpecialEffect
_08086468:
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
_0808646C:
	cmp r4, #0xff
	bne _080864A8
	movs r5, #0
	ldr r0, _080864A0 @ =gUnk_08BCA070
	ldr r2, [r0]
	movs r4, #0x10
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
_08086480:
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _080864A4 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	movs r2, #0
	movs r3, #8
	bl sub_08069DA8
	b _080864E2
	.align 2, 0
_080864A0: .4byte gUnk_08BCA070
_080864A4: .4byte gUnk_02010800
_080864A8:
	adds r0, r4, #0
	bl sub_08063DE4
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	adds r0, r4, #0
	bl sub_08063DB4
	adds r2, r0, #0
	movs r4, #0x10
	str r4, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0xa
	bl sub_0800B1AC
	ldr r0, _080865A0 @ =gUnk_02010800
	str r4, [sp]
	movs r1, #2
	adds r2, r5, #0
	movs r3, #8
	bl sub_08069DA8
_080864E2:
	ldr r5, _080865A0 @ =gUnk_02010800
	ldr r3, _080865A4 @ =gUnk_080BFEE8
	adds r0, r5, #0
	movs r1, #4
	movs r2, #6
	bl sub_08001284
	ldr r3, _080865A8 @ =gUnk_080BFEF4
	adds r0, r5, #0
	movs r1, #4
	movs r2, #7
	bl sub_08001284
	ldr r3, _080865AC @ =gUnk_080BFF00
	adds r0, r5, #0
	movs r1, #4
	movs r2, #8
	bl sub_08001284
	ldr r3, _080865B0 @ =gUnk_080BFF0C
	adds r0, r5, #0
	movs r1, #4
	movs r2, #9
	bl sub_08001284
	ldr r3, _080865B4 @ =gUnk_080BFF18
	adds r0, r5, #0
	movs r1, #4
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _080865B8 @ =gUnk_080BFF24
	adds r0, r5, #0
	movs r1, #8
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _080865BC @ =gUnk_080BFF34
	adds r0, r5, #0
	movs r1, #8
	movs r2, #0xf
	bl sub_08001284
	mov r0, sb
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #6
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xa
	bl sub_0806F2D0
	mov r0, sb
	bl sub_08018A14
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080865C4
	cmp r6, #3
	beq _080865C4
	cmp r6, #4
	beq _080865C4
	ldr r4, _080865C0 @ =gUnk_080BFF3C
	adds r0, r5, #0
	movs r1, #8
	movs r2, #7
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #8
	movs r2, #8
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #8
	movs r2, #9
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #8
	movs r2, #0xa
	adds r3, r4, #0
	bl sub_08001284
	b _08086742
	.align 2, 0
_080865A0: .4byte gUnk_02010800
_080865A4: .4byte gUnk_080BFEE8
_080865A8: .4byte gUnk_080BFEF4
_080865AC: .4byte gUnk_080BFF00
_080865B0: .4byte gUnk_080BFF0C
_080865B4: .4byte gUnk_080BFF18
_080865B8: .4byte gUnk_080BFF24
_080865BC: .4byte gUnk_080BFF34
_080865C0: .4byte gUnk_080BFF3C
_080865C4:
	cmp r6, #0
	bne _08086680
	mov r0, sb
	bl sub_08063AC4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r5, _08086634 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	mov r0, sb
	bl sub_08063ADC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	mov r0, sb
	bl sub_08063AF4
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08086638
	mov r0, sb
	bl sub_08063AF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	b _08086658
	.align 2, 0
_08086634: .4byte gUnk_02010800
_08086638:
	mov r0, sb
	bl sub_08063AF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	movs r3, #7
	bl sub_0806F2D0
_08086658:
	mov r0, sb
	bl sub_08063B0C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _0808667C @ =gUnk_02010800
	movs r1, #0xa
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	b _08086742
	.align 2, 0
_0808667C: .4byte gUnk_02010800
_08086680:
	subs r0, r6, #1
	cmp r0, #3
	bhi _08086742
	mov r0, sl
	lsls r4, r0, #0x18
	lsrs r5, r4, #0x18
	adds r0, r5, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, _080866FC @ =gUnk_02010800
	mov r8, r1
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r7, #3
	str r7, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08086700
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	str r7, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	b _08086720
	.align 2, 0
_080866FC: .4byte gUnk_02010800
_08086700:
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	mov r0, r8
	movs r1, #1
	movs r2, #1
	movs r3, #7
	bl sub_0806F2D0
_08086720:
	lsrs r0, r4, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080867B8 @ =gUnk_02010800
	movs r1, #0xa
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r2, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
_08086742:
	cmp r6, #0
	bne _08086804
	mov r0, sl
	lsls r4, r0, #0x18
	lsrs r5, r4, #0x18
	adds r0, r5, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r7, _080867B8 @ =gUnk_02010800
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r6, #4
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080867BC
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	b _080867DA
	.align 2, 0
_080867B8: .4byte gUnk_02010800
_080867BC:
	adds r0, r5, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
_080867DA:
	lsrs r0, r4, #0x18
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08086800 @ =gUnk_02010800
	movs r1, #0xa
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r2, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F2D0
	b _0808683E
	.align 2, 0
_08086800: .4byte gUnk_02010800
_08086804:
	subs r0, r6, #1
	cmp r0, #3
	bhi _0808683E
	ldr r4, _08086850 @ =gUnk_02010800
	ldr r5, _08086854 @ =gUnk_080BFF40
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #7
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #8
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #9
	adds r3, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #0xa
	adds r3, r5, #0
	bl sub_08001284
_0808683E:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08086850: .4byte gUnk_02010800
_08086854: .4byte gUnk_080BFF40

	thumb_func_start sub_08086858
sub_08086858: @ 0x08086858
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #0x8c
	bl sub_0806EFA8
	bl sub_0806F020
	adds r4, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08086928 @ =0x01000046
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	movs r6, #0
	strh r5, [r4, #4]
	add r5, sp, #0xc
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #0x36]
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #0x34]
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #0x32]
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #6]
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #0xc]
	adds r0, r5, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r4, #0xa]
	movs r0, #0x12
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08086928: .4byte 0x01000046

	thumb_func_start sub_0808692C
sub_0808692C: @ 0x0808692C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08086954
	cmp r0, #1
	bgt _08086948
	cmp r0, #0
	beq _0808694E
	b _0808697A
_08086948:
	cmp r0, #2
	beq _08086966
	b _0808697A
_0808694E:
	bl sub_08086984
	b _08086958
_08086954:
	bl sub_08086A10
_08086958:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808697A
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808697A
_08086966:
	bl sub_08086F08
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808697A
	movs r5, #0
	strh r5, [r4]
	movs r0, #0x8c
	bl sub_0806EFF0
_0808697A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08086984
sub_08086984: @ 0x08086984
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080869C0
	cmp r0, #1
	bgt _080869A0
	cmp r0, #0
	beq _080869AA
	b _08086A08
_080869A0:
	cmp r0, #2
	beq _080869F0
	cmp r0, #3
	beq _08086A02
	b _08086A08
_080869AA:
	bl sub_08086F68
	adds r0, r4, #0
	adds r0, #0x10
	adds r1, r4, #0
	adds r1, #0x3c
	bl sub_080072F8
	bl sub_080870B4
	b _080869FA
_080869C0:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _080869FA
_080869F0:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08086A08
_080869FA:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08086A08
_08086A02:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_08086A08:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08086A10
sub_08086A10: @ 0x08086A10
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov sl, r0
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0x15
	bls _08086A30
	b _08086EF4
_08086A30:
	lsls r0, r0, #2
	ldr r1, _08086A3C @ =_08086A40
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08086A3C: .4byte _08086A40
_08086A40: @ jump table
	.4byte _08086A98 @ case 0
	.4byte _08086CDC @ case 1
	.4byte _08086EF4 @ case 2
	.4byte _08086EF4 @ case 3
	.4byte _08086EF4 @ case 4
	.4byte _08086EF4 @ case 5
	.4byte _08086EF4 @ case 6
	.4byte _08086EF4 @ case 7
	.4byte _08086EF4 @ case 8
	.4byte _08086EF4 @ case 9
	.4byte _08086D48 @ case 10
	.4byte _08086D9C @ case 11
	.4byte _08086EF4 @ case 12
	.4byte _08086EF4 @ case 13
	.4byte _08086EF4 @ case 14
	.4byte _08086EF4 @ case 15
	.4byte _08086EF4 @ case 16
	.4byte _08086EF4 @ case 17
	.4byte _08086EF4 @ case 18
	.4byte _08086EF4 @ case 19
	.4byte _08086EC4 @ case 20
	.4byte _08086EDC @ case 21
_08086A98:
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r5, r4, #0
	cmp r0, #3
	beq _08086AAE
	b _08086EF4
_08086AAE:
	ldr r0, _08086AE8 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08086AEC
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r7, #6]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _08086ADE
	b _08086EF4
_08086ADE:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _08086EF4
	.align 2, 0
_08086AE8: .4byte gCurrentKeyPress
_08086AEC:
	ldr r0, _08086B3C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08086AFA
	b _08086C20
_08086AFA:
	ldrh r2, [r7, #6]
	lsls r1, r2, #1
	adds r0, r7, #0
	adds r0, #0x32
	adds r0, r0, r1
	ldrh r1, [r0]
	ldrb r6, [r0]
	movs r3, #0xff
	lsls r3, r3, #8
	lsrs r4, r1, #8
	cmp r2, #3
	bne _08086B50
	ldrh r1, [r7, #0x32]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08086B2E
	ldrh r1, [r7, #0x34]
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08086B2E
	ldrh r0, [r7, #0x36]
	ands r3, r0
	cmp r3, #0
	bne _08086B40
_08086B2E:
	adds r0, r5, #0
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	b _08086ED4
	.align 2, 0
_08086B3C: .4byte gKeyNewPress
_08086B40:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08086B4C @ =gUnk_08BC9FD0
	b _08086DF4
	.align 2, 0
_08086B4C: .4byte gUnk_08BC9FD0
_08086B50:
	cmp r4, #0xff
	bne _08086B68
	cmp r6, #0xff
	beq _08086B68
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08086B64 @ =gUnk_08BC9FC8
	b _08086DF4
	.align 2, 0
_08086B64: .4byte gUnk_08BC9FC8
_08086B68:
	ldrb r0, [r7, #0xa]
	bl sub_080639E8
	lsls r0, r0, #0x18
	movs r1, #0xfe
	lsls r1, r1, #0x18
	adds r0, r0, r1
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrh r1, [r7, #6]
	cmp r1, #1
	bne _08086B8A
	cmp r0, #1
	ble _08086B92
_08086B8A:
	cmp r1, #2
	bne _08086BA4
	cmp r0, #3
	bgt _08086BA4
_08086B92:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08086BA0 @ =gUnk_08BC9FD4
	b _08086DF4
	.align 2, 0
_08086BA0: .4byte gUnk_08BC9FD4
_08086BA4:
	cmp r4, #0xff
	beq _08086BBA
	cmp r6, #0xff
	beq _08086BBA
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0xa
	strh r0, [r7, #2]
	b _08086EF4
_08086BBA:
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08086BCE
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	b _08086DF2
_08086BCE:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r7, #0xa]
	bl sub_0806F038
	ldrh r0, [r7, #0xc]
	bl sub_0806F038
	ldrh r0, [r7, #0x32]
	bl sub_0806F038
	ldrh r0, [r7, #0x34]
	bl sub_0806F038
	ldrh r0, [r7, #0x36]
	bl sub_0806F038
	ldrh r0, [r7, #6]
	b _08086D3C
_08086C20:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08086C2A
	b _08086EF4
_08086C2A:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	adds r6, r7, #0
	adds r6, #0x32
	movs r5, #0xff
	lsls r5, r5, #8
	ldr r0, _08086CD8 @ =0x0000FFFF
	mov r8, r0
	ldrh r1, [r7, #0x32]
	adds r0, r1, #0
	ands r0, r5
	cmp r0, r5
	beq _08086C64
	cmp r1, r8
	beq _08086C64
	movs r4, #0xff
	ands r4, r1
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_08086C64:
	ldrh r1, [r6, #2]
	adds r0, r1, #0
	ands r0, r5
	cmp r0, r5
	beq _08086C8A
	cmp r1, r8
	beq _08086C8A
	movs r4, #0xff
	ands r4, r1
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_08086C8A:
	ldrh r1, [r6, #4]
	adds r0, r1, #0
	ands r0, r5
	cmp r0, r5
	beq _08086CB0
	cmp r1, r8
	beq _08086CB0
	movs r4, #0xff
	ands r4, r1
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_08086CB0:
	movs r4, #0
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	strh r4, [r7, #2]
	b _08086E54
	.align 2, 0
_08086CD8: .4byte 0x0000FFFF
_08086CDC:
	adds r4, r7, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl sub_08008EF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _08086CF0
	b _08086EF4
_08086CF0:
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_08008E00
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	movs r1, #0x1b
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #0xa
	ldrsh r1, [r7, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #0xc
	ldrsh r1, [r7, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r7, #0x32]
	bl sub_0806F038
	ldrh r0, [r7, #0x34]
	bl sub_0806F038
	ldrh r0, [r7, #0x36]
_08086D3C:
	bl sub_0806F038
	movs r0, #0
	strh r0, [r7, #2]
	mov sl, r0
	b _08086EF4
_08086D48:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xc5
	bl sub_0800EC64
	adds r4, r7, #0
	adds r4, #0x64
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldr r1, _08086D94 @ =gUnk_08BC9F90
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	ldr r0, _08086D98 @ =gUnk_08BCE554
	bl sub_0800ED08
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C4
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E34
	b _08086ED4
	.align 2, 0
_08086D94: .4byte gUnk_08BC9F90
_08086D98: .4byte gUnk_08BCE554
_08086D9C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #0
	beq _08086DAC
	b _08086EF4
_08086DAC:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08086DCC
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E34
	mov r1, sb
	strh r1, [r7, #2]
	b _08086EF4
_08086DCC:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08086E5A
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08086E04
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E34
_08086DF2:
	ldr r0, _08086E00 @ =gUnk_08BC9FCC
_08086DF4:
	ldr r0, [r0]
	str r0, [r7, #0x14]
	movs r0, #0x14
	strh r0, [r7, #2]
	b _08086EF4
	.align 2, 0
_08086E00: .4byte gUnk_08BC9FCC
_08086E04:
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	ldrh r0, [r7, #0xa]
	bl sub_0806F038
	ldrh r0, [r7, #0xc]
	bl sub_0806F038
	ldrh r0, [r7, #0x32]
	bl sub_0806F038
	ldrh r0, [r7, #0x34]
	bl sub_0806F038
	ldrh r0, [r7, #0x36]
	bl sub_0806F038
	ldrh r0, [r7, #6]
	bl sub_0806F038
	mov r0, sb
	strh r0, [r7, #2]
_08086E54:
	movs r1, #0
	mov sl, r1
	b _08086EF4
_08086E5A:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r8, r0
	cmp r0, #1
	bne _08086EF4
	ldrh r6, [r7, #6]
	lsls r0, r6, #1
	adds r4, r7, #0
	adds r4, #0x32
	adds r4, r4, r0
	ldrb r5, [r4]
	adds r0, r5, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r5, #0
	bl SetItemQuantity
	lsls r1, r6, #2
	adds r0, r7, #0
	adds r0, #0x18
	adds r0, r0, r1
	ldr r1, _08086EBC @ =gUnk_08BCA070
	ldr r1, [r1]
	str r1, [r0]
	adds r0, r7, #0
	adds r0, #0x2c
	adds r0, r0, r6
	mov r1, r8
	strb r1, [r0]
	ldr r0, _08086EC0 @ =0x0000FFFF
	strh r0, [r4]
	strh r6, [r7, #0x3e]
	adds r0, r7, #0
	adds r0, #0x10
	adds r1, r7, #0
	adds r1, #0x3c
	bl sub_080076B0
	bl sub_080870B4
	mov r0, sb
	strh r0, [r7, #2]
	b _08086EF4
	.align 2, 0
_08086EBC: .4byte gUnk_08BCA070
_08086EC0: .4byte 0x0000FFFF
_08086EC4:
	ldr r0, [r7, #0x14]
	bl sub_0806A040
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E4C
_08086ED4:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _08086EF4
_08086EDC:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08086EF4
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r7, #2]
_08086EF4:
	mov r0, sl
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08086F08
sub_08086F08: @ 0x08086F08
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08086F38
	cmp r0, #1
	bgt _08086F24
	cmp r0, #0
	beq _08086F2E
	b _08086F60
_08086F24:
	cmp r0, #2
	beq _08086F44
	cmp r0, #3
	beq _08086F5C
	b _08086F60
_08086F2E:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08086F54
_08086F38:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08086F60
	b _08086F54
_08086F44:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_08008C14
_08086F54:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08086F60
_08086F5C:
	movs r5, #0
	strh r5, [r4, #2]
_08086F60:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08086F68
sub_08086F68: @ 0x08086F68
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	bl sub_0806F020
	adds r7, r0, #0
	adds r6, r7, #0
	adds r6, #0x3c
	movs r1, #0
	movs r0, #6
	strb r0, [r6]
	movs r0, #5
	strb r0, [r6, #1]
	movs r0, #2
	strb r0, [r6, #6]
	strb r1, [r6, #7]
	strb r1, [r6, #0x11]
	strb r0, [r6, #0x12]
	ldrh r0, [r7, #6]
	strh r0, [r6, #2]
	strh r1, [r6, #4]
	movs r0, #0xd8
	strb r0, [r6, #0xd]
	movs r0, #0xf0
	strb r0, [r6, #0xc]
	adds r1, r7, #0
	adds r1, #0x18
	str r1, [r6, #0x14]
	adds r0, r7, #0
	adds r0, #0x2c
	str r0, [r6, #0x18]
	movs r3, #0
	adds r5, r0, #0
	adds r2, r1, #0
	movs r0, #1
	mov r8, r0
	ldrh r1, [r7, #0x32]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	lsrs r4, r1, #8
	cmp r0, #0xff
	beq _08086FD4
	str r2, [sp]
	str r3, [sp, #4]
	bl sub_0806380C
	str r0, [r7, #0x18]
	ldr r2, [sp]
	ldr r3, [sp, #4]
	cmp r4, #0xff
	beq _08086FDA
	strb r3, [r5]
	b _08086FDE
_08086FD4:
	ldr r0, _08087014 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r7, #0x18]
_08086FDA:
	mov r0, r8
	strb r0, [r5]
_08086FDE:
	adds r5, #1
	adds r2, #4
	adds r3, #1
	cmp r3, #2
	bhi _08087068
_08086FE8:
	lsls r0, r3, #1
	adds r1, r7, #0
	adds r1, #0x32
	adds r1, r1, r0
	ldrh r0, [r1]
	ldrb r1, [r1]
	lsrs r4, r0, #8
	cmp r1, #0xff
	beq _08087018
	adds r0, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	bl sub_0806380C
	ldr r2, [sp]
	str r0, [r2]
	ldr r3, [sp, #4]
	cmp r4, #0xff
	beq _0808701E
	movs r0, #0
	b _08087020
	.align 2, 0
_08087014: .4byte gUnk_08BCA070
_08087018:
	ldr r0, _08087050 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r2]
_0808701E:
	mov r0, r8
_08087020:
	strb r0, [r5]
	adds r0, r3, #1
	lsls r0, r0, #1
	adds r1, r7, #0
	adds r1, #0x32
	adds r1, r1, r0
	ldrh r0, [r1]
	ldrb r1, [r1]
	lsrs r4, r0, #8
	cmp r1, #0xff
	beq _08087054
	adds r0, r1, #0
	str r2, [sp]
	str r3, [sp, #4]
	bl sub_0806380C
	ldr r2, [sp]
	str r0, [r2, #4]
	ldr r3, [sp, #4]
	cmp r4, #0xff
	beq _0808705A
	movs r0, #0
	b _0808705C
	.align 2, 0
_08087050: .4byte gUnk_08BCA070
_08087054:
	ldr r0, _080870A4 @ =gUnk_08BCA070
	ldr r0, [r0]
	str r0, [r2, #4]
_0808705A:
	mov r0, r8
_0808705C:
	strb r0, [r5, #1]
	adds r5, #2
	adds r2, #8
	adds r3, #2
	cmp r3, #2
	bls _08086FE8
_08087068:
	movs r1, #0
	ldr r0, _080870A8 @ =gUnk_08BCA07C
	ldr r0, [r0]
	str r0, [r7, #0x24]
	adds r0, r7, #0
	adds r0, #0x2f
	movs r3, #1
	strb r3, [r0]
	ldr r0, _080870AC @ =0x0000FFFF
	strh r0, [r7, #0x38]
	str r1, [r7, #0x28]
	movs r0, #4
	strb r0, [r6, #0xa]
	movs r2, #0
	movs r0, #0x18
	strh r0, [r6, #8]
	strb r2, [r6, #0xe]
	strb r3, [r6, #0xf]
	str r1, [r6, #0x20]
	str r1, [r6, #0x1c]
	ldr r0, _080870B0 @ =sub_0808AA2C
	str r0, [r6, #0x24]
	strb r2, [r6, #0x10]
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080870A4: .4byte gUnk_08BCA070
_080870A8: .4byte gUnk_08BCA07C
_080870AC: .4byte 0x0000FFFF
_080870B0: .4byte sub_0808AA2C

	thumb_func_start sub_080870B4
sub_080870B4: @ 0x080870B4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	bl sub_0806F020
	str r0, [sp, #0x14]
	ldrh r0, [r0, #0xc]
	mov sb, r0
	ldr r1, [sp, #0x14]
	ldrb r7, [r1, #0xc]
	adds r0, r7, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r7, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080870F2
	adds r4, #0x6f
_080870F2:
	movs r2, #0
	str r2, [sp, #0x18]
	ldr r5, _0808720C @ =gUnk_02010800
	ldr r3, _08087210 @ =gUnk_080BFF48
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _08087214 @ =gUnk_080BFF4C
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _08087218 @ =gUnk_080BFF50
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0x10
	bl sub_08001284
	ldr r3, _0808721C @ =gUnk_080BFF54
	adds r0, r5, #0
	movs r1, #1
	movs r2, #0x11
	bl sub_08001284
	movs r6, #2
	str r6, [sp]
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #2
	bl sub_08069DA8
	ldr r1, [sp, #0x14]
	ldrh r0, [r1, #0xe]
	adds r4, r1, #0
	adds r4, #0xe
	cmp r0, #0
	beq _0808714A
	adds r0, r4, #0
	bl sub_0800B4E4
_0808714A:
	mov r0, r8
	bl sub_080639BC
	adds r2, r0, #0
	str r6, [sp]
	ldr r0, [sp, #0x18]
	str r0, [sp, #4]
	str r0, [sp, #8]
	str r6, [sp, #0xc]
	str r0, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #4
	bl sub_0800B1AC
	movs r0, #1
	bl sub_080012D4
	ldr r3, _08087220 @ =gUnk_080BFF58
	adds r0, r5, #0
	movs r1, #0xb
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _08087224 @ =gUnk_080BFF5C
	adds r0, r5, #0
	movs r1, #0x10
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _08087228 @ =gUnk_080BFF60
	adds r0, r5, #0
	movs r1, #0x15
	movs r2, #0xd
	bl sub_08001284
	movs r0, #0
	bl sub_080012D4
	adds r0, r7, #0
	bl GetWeaponInitAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	adds r0, r7, #0
	bl GetWeaponInitDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	adds r0, r7, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _0808722C
	adds r0, r7, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	b _08087258
	.align 2, 0
_0808720C: .4byte gUnk_02010800
_08087210: .4byte gUnk_080BFF48
_08087214: .4byte gUnk_080BFF4C
_08087218: .4byte gUnk_080BFF50
_0808721C: .4byte gUnk_080BFF54
_08087220: .4byte gUnk_080BFF58
_08087224: .4byte gUnk_080BFF5C
_08087228: .4byte gUnk_080BFF60
_0808722C:
	movs r0, #2
	bl sub_080012D4
	adds r0, r7, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	movs r3, #4
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_08087258:
	mov r1, sb
	lsls r5, r1, #0x18
	lsrs r0, r5, #0x18
	bl GetWeaponInitDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r4, _080873B4 @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #3
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #5
	bl sub_0806F2D0
	movs r2, #0
	str r2, [sp, #0x1c]
	str r5, [sp, #0x20]
	movs r0, #0x90
	lsls r0, r0, #0xc
	str r0, [sp, #0x24]
_0808728A:
	ldr r2, [sp, #0x1c]
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x18
	ldr r2, [sp, #0x20]
	lsrs r0, r2, #0x18
	bl GetWeaponEnhanceItem
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xff
	beq _080872A2
	b _080873F8
_080872A2:
	ldr r7, _080873B4 @ =gUnk_02010800
	ldr r0, [sp, #0x24]
	lsrs r4, r0, #0x10
	movs r1, #0xe
	mov sb, r1
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	movs r0, #4
	mov r8, r0
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r1, #0xf
	mov sl, r1
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	mov r0, r8
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r1, #0x10
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	mov r0, r8
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r1, #0x11
	str r1, [sp]
	movs r2, #0
	str r2, [sp, #4]
	mov r0, r8
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #1
	ldr r1, [sp, #0x14]
	adds r1, #0x32
	adds r5, r1, r0
	ldrh r1, [r5]
	ldr r0, _080873B8 @ =0x0000FFFF
	cmp r1, r0
	bne _08087322
	b _08087488
_08087322:
	adds r0, r6, #0
	ands r0, r1
	bl sub_08018AD8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080873BC
	ldrh r0, [r5]
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, sb
	str r2, [sp]
	str r0, [sp, #4]
	mov r0, r8
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	ldrh r0, [r5]
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r1, sl
	str r1, [sp]
	str r0, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	ldrh r0, [r5]
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	ldrh r0, [r5]
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	mov r2, r8
	str r2, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	b _08087488
	.align 2, 0
_080873B4: .4byte gUnk_02010800
_080873B8: .4byte 0x0000FFFF
_080873BC:
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0xe
	ldr r3, _080873F4 @ =gUnk_080BFF64
	bl sub_08001284
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0xf
	ldr r3, _080873F4 @ =gUnk_080BFF64
	bl sub_08001284
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0x10
	ldr r3, _080873F4 @ =gUnk_080BFF64
	bl sub_08001284
	adds r0, r7, #0
	adds r1, r4, #0
	movs r2, #0x11
	ldr r3, _080873F4 @ =gUnk_080BFF64
	bl sub_08001284
	movs r0, #1
	str r0, [sp, #0x18]
	b _08087488
	.align 2, 0
_080873F4: .4byte gUnk_080BFF64
_080873F8:
	movs r0, #1
	bl sub_080012D4
	adds r0, r6, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldr r1, [sp, #0x24]
	lsrs r4, r1, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	movs r2, #4
	str r2, [sp, #8]
	ldr r0, _080875A8 @ =gUnk_02010800
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r6, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	ldr r0, _080875A8 @ =gUnk_02010800
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r6, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	ldr r0, _080875A8 @ =gUnk_02010800
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	adds r0, r6, #0
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0x11
	str r1, [sp]
	str r0, [sp, #4]
	movs r2, #4
	str r2, [sp, #8]
	ldr r0, _080875A8 @ =gUnk_02010800
	movs r1, #1
	movs r2, #1
	adds r3, r4, #0
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_08087488:
	ldr r0, [sp, #0x24]
	movs r1, #0xa0
	lsls r1, r1, #0xb
	adds r0, r0, r1
	str r0, [sp, #0x24]
	ldr r2, [sp, #0x1c]
	adds r2, #1
	str r2, [sp, #0x1c]
	cmp r2, #2
	bhi _0808749E
	b _0808728A
_0808749E:
	ldr r6, _080875A8 @ =gUnk_02010800
	ldr r4, _080875AC @ =gUnk_080BFF6C
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xe
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0x10
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0x11
	adds r3, r4, #0
	bl sub_08001284
	ldr r0, [sp, #0x18]
	cmp r0, #0
	beq _080874DA
	b _080876C4
_080874DA:
	ldr r1, [sp, #0x20]
	lsrs r4, r1, #0x18
	adds r0, r4, #0
	bl GetWeaponInitAtk
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	bl GetWeaponInitDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	adds r0, r4, #0
	bl GetWeaponInitAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	adds r0, r4, #0
	bl GetWeaponInitDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldr r5, [sp, #0x14]
	adds r5, #0x32
	movs r7, #2
_08087512:
	ldrh r0, [r5]
	ldr r2, _080875B0 @ =0x0000FFFF
	cmp r0, r2
	beq _0808757A
	movs r4, #0xff
	ands r4, r0
	adds r0, r4, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	adds r0, r4, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
	adds r0, r4, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	adds r0, r4, #0
	bl sub_0806394C
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	mov r2, sl
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
_0808757A:
	adds r5, #2
	subs r7, #1
	cmp r7, #0
	bge _08087512
	lsls r0, r6, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080875B4 @ =0x000003E6
	cmp r2, r0
	ble _080875BC
	ldr r0, _080875A8 @ =gUnk_02010800
	movs r1, #0xe
	str r1, [sp]
	ldr r1, _080875B8 @ =0x000003E7
	str r1, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	b _080875D2
	.align 2, 0
_080875A8: .4byte gUnk_02010800
_080875AC: .4byte gUnk_080BFF6C
_080875B0: .4byte 0x0000FFFF
_080875B4: .4byte 0x000003E6
_080875B8: .4byte 0x000003E7
_080875BC:
	ldr r0, _080875F8 @ =gUnk_02010800
	movs r1, #0xe
	str r1, [sp]
	str r2, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
_080875D2:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080875FC @ =0x000003E6
	cmp r2, r0
	ble _08087604
	ldr r0, _080875F8 @ =gUnk_02010800
	movs r1, #0xf
	str r1, [sp]
	ldr r1, _08087600 @ =0x000003E7
	str r1, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	b _0808761A
	.align 2, 0
_080875F8: .4byte gUnk_02010800
_080875FC: .4byte 0x000003E6
_08087600: .4byte 0x000003E7
_08087604:
	ldr r0, _08087638 @ =gUnk_02010800
	movs r1, #0xf
	str r1, [sp]
	str r2, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
_0808761A:
	mov r2, sb
	lsls r0, r2, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _08087660
	ldr r0, _0808763C @ =0x000003E6
	cmp r4, r0
	ble _08087644
	ldr r0, _08087638 @ =gUnk_02010800
	movs r1, #0x10
	str r1, [sp]
	ldr r1, _08087640 @ =0x000003E7
	str r1, [sp, #4]
	b _0808764C
	.align 2, 0
_08087638: .4byte gUnk_02010800
_0808763C: .4byte 0x000003E6
_08087640: .4byte 0x000003E7
_08087644:
	ldr r0, _0808765C @ =gUnk_02010800
	movs r1, #0x10
	str r1, [sp]
	str r4, [sp, #4]
_0808764C:
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	b _08087682
	.align 2, 0
_0808765C: .4byte gUnk_02010800
_08087660:
	movs r0, #2
	bl sub_080012D4
	ldr r0, _0808769C @ =gUnk_02010800
	movs r1, #0x10
	str r1, [sp]
	str r4, [sp, #4]
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #1
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
_08087682:
	mov r1, sl
	lsls r0, r1, #0x10
	asrs r2, r0, #0x10
	ldr r0, _080876A0 @ =0x000003E6
	cmp r2, r0
	ble _080876A8
	ldr r0, _0808769C @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	ldr r1, _080876A4 @ =0x000003E7
	str r1, [sp, #4]
	b _080876B0
	.align 2, 0
_0808769C: .4byte gUnk_02010800
_080876A0: .4byte 0x000003E6
_080876A4: .4byte 0x000003E7
_080876A8:
	ldr r0, _080876C0 @ =gUnk_02010800
	movs r1, #0x11
	str r1, [sp]
	str r2, [sp, #4]
_080876B0:
	movs r1, #4
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	b _080876F6
	.align 2, 0
_080876C0: .4byte gUnk_02010800
_080876C4:
	ldr r4, _08087708 @ =gUnk_080BFF70
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0xe
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0x10
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x19
	movs r2, #0x11
	adds r3, r4, #0
	bl sub_08001284
_080876F6:
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08087708: .4byte gUnk_080BFF70

	thumb_func_start sub_0808770C
sub_0808770C: @ 0x0808770C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	bl sub_0806F020
	mov sb, r0
	ldrb r5, [r0, #0xc]
	ldrb r4, [r0, #0x10]
	adds r0, r4, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r0, r4, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	adds r0, r4, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	adds r0, r4, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	adds r0, r4, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	adds r0, r4, #0
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	adds r0, r4, #0
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	adds r0, r4, #0
	bl sub_080159E0
	adds r0, r5, #0
	bl sub_08063A48
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #8
	movs r0, #0xc4
	lsls r0, r0, #0xe
	adds r4, r4, r0
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	mov r1, sb
	ldrh r0, [r1, #0x12]
	cmp r0, #1
	bne _080877BA
	adds r0, r5, #0
	bl sub_08015918
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r2, sb
	strh r0, [r2, #0x10]
	b _080877C8
_080877BA:
	adds r0, r5, #0
	bl sub_08015854
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, sb
	strh r0, [r1, #0x10]
_080877C8:
	lsls r5, r0, #0x18
	lsrs r4, r5, #0x18
	adds r0, r4, #0
	bl GetWeaponAtk
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	adds r0, r4, #0
	bl GetWeaponDef
	mov r2, sl
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sl, r1
	adds r0, r4, #0
	bl GetWeaponAgl
	ldr r2, [sp]
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp]
	adds r0, r4, #0
	bl GetWeaponMaxDur
	ldr r1, [sp, #4]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r5, [sp, #0x14]
	cmp r0, #0xff
	bne _08087832
	lsls r0, r6, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	ble _08087832
	lsrs r0, r0, #0x1f
	adds r0, r1, r0
	lsls r0, r0, #0xf
	lsrs r6, r0, #0x10
_08087832:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08087852
	mov r2, sl
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	ble _08087852
	lsrs r0, r0, #0x1f
	adds r0, r1, r0
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x10
	mov sl, r0
_08087852:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08087872
	ldr r1, [sp]
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	ble _08087872
	lsrs r0, r0, #0x1f
	adds r0, r1, r0
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x10
	str r0, [sp]
_08087872:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _08087892
	ldr r2, [sp, #4]
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	ble _08087892
	lsrs r0, r0, #0x1f
	adds r0, r1, r0
	lsls r0, r0, #0xf
	lsrs r0, r0, #0x10
	str r0, [sp, #4]
_08087892:
	ldr r0, [sp, #0x14]
	lsrs r7, r0, #0x18
	lsls r6, r6, #0x10
	mov r8, r6
	mov r1, r8
	asrs r1, r1, #0x10
	mov r8, r1
	adds r0, r7, #0
	bl SetBagWeaponInitAtk
	mov r2, sl
	lsls r6, r2, #0x10
	asrs r6, r6, #0x10
	adds r0, r7, #0
	adds r1, r6, #0
	bl SetBagWeaponInitDef
	ldr r0, [sp]
	lsls r5, r0, #0x10
	asrs r5, r5, #0x10
	adds r0, r7, #0
	adds r1, r5, #0
	bl SetBagWeaponInitAgl
	ldr r1, [sp, #4]
	lsls r4, r1, #0x10
	asrs r4, r4, #0x10
	adds r0, r7, #0
	adds r1, r4, #0
	bl SetBagWeaponInitDur
	adds r0, r7, #0
	mov r1, r8
	bl SetBagWeaponAtk
	adds r0, r7, #0
	adds r1, r6, #0
	bl SetBagWeaponDef
	adds r0, r7, #0
	adds r1, r5, #0
	bl SetBagWeaponAgl
	adds r0, r7, #0
	adds r1, r4, #0
	bl SetBagWeaponMaxDur
	adds r0, r7, #0
	bl GetWeaponMaxDur
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r7, #0
	bl SetBagWeaponCurrentDur
	ldr r1, [sp, #8]
	adds r0, r7, #0
	bl SetBagWeaponTec
	mov r6, sb
	adds r6, #0x80
	mov r4, sb
	adds r4, #0xc0
	movs r0, #0
	strh r0, [r4]
	mov r5, sb
	adds r5, #0xba
	movs r0, #0xff
	strb r0, [r5]
	ldr r2, [sp, #0xc]
	cmp r2, #0xff
	beq _08087930
	ldrh r0, [r4]
	adds r0, r5, r0
	strb r2, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08087930:
	adds r0, r7, #0
	bl GetWeaponSkill
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0xc]
	cmp r0, #0xff
	beq _08087950
	ldrh r0, [r4]
	adds r0, r5, r0
	mov r2, sp
	ldrb r2, [r2, #0xc]
	strb r2, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_08087950:
	ldrh r0, [r4]
	cmp r0, #2
	bne _08087966
	mov r1, sb
	adds r1, #0xbb
	ldrb r0, [r5]
	ldrb r1, [r1]
	cmp r0, r1
	bne _08087966
	movs r0, #1
	strh r0, [r4]
_08087966:
	adds r4, r6, #0
	adds r4, #0x48
	movs r0, #0
	strh r0, [r4]
	adds r5, r6, #0
	adds r5, #0x42
	movs r0, #0xff
	strb r0, [r5]
	ldr r0, [sp, #0x10]
	cmp r0, #0xff
	beq _0808798C
	ldrh r0, [r4]
	adds r0, r5, r0
	mov r1, sp
	ldrb r1, [r1, #0x10]
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_0808798C:
	ldr r2, [sp, #0x14]
	lsrs r0, r2, #0x18
	bl GetWeaponSpecialEffect
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x10]
	cmp r0, #0xff
	beq _080879AE
	ldrh r0, [r4]
	adds r0, r5, r0
	mov r1, sp
	ldrb r1, [r1, #0x10]
	strb r1, [r0]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080879AE:
	ldrh r0, [r4]
	cmp r0, #2
	bne _080879C4
	adds r1, r6, #0
	adds r1, #0x43
	ldrb r0, [r5]
	ldrb r1, [r1]
	cmp r0, r1
	bne _080879C4
	movs r0, #1
	strh r0, [r4]
_080879C4:
	bl sub_08015A28
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080879D8
sub_080879D8: @ 0x080879D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	adds r5, r0, #0
	adds r4, r1, #0
	adds r6, r2, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0xa4
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08087A38 @ =0x01000052
	adds r0, r1, #0
	adds r1, r7, #0
	bl CpuSet
	strh r5, [r7, #0xc]
	strh r4, [r7, #0xe]
	strh r6, [r7, #0x10]
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	adds r2, r1, #0
	subs r0, r1, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bhi _08087A3C
	movs r0, #1
	b _08087A52
	.align 2, 0
_08087A38: .4byte 0x01000052
_08087A3C:
	cmp r1, #7
	bne _08087A44
	movs r0, #2
	b _08087A52
_08087A44:
	cmp r1, #8
	bne _08087A4C
	movs r0, #3
	b _08087A52
_08087A4C:
	cmp r2, #9
	bne _08087A56
	movs r0, #4
_08087A52:
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x16]
_08087A56:
	movs r5, #0
	strh r5, [r7, #0x12]
	movs r0, #0x13
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08087AC0
sub_08087AC0: @ 0x08087AC0
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08087AE8
	cmp r0, #1
	bgt _08087ADC
	cmp r0, #0
	beq _08087AE2
	b _08087B0E
_08087ADC:
	cmp r0, #2
	beq _08087AFA
	b _08087B0E
_08087AE2:
	bl sub_08087B34
	b _08087AEC
_08087AE8:
	bl sub_08087BE8
_08087AEC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08087B0E
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08087B0E
_08087AFA:
	bl sub_08087E94
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08087B0E
	movs r5, #0
	strh r5, [r4]
	movs r0, #0xa4
	bl sub_0806EFF0
_08087B0E:
	ldrb r0, [r4, #0xe]
	adds r1, r4, #0
	adds r1, #0x74
	movs r2, #0x98
	movs r3, #0x18
	bl sub_0806F544
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08087B34
sub_08087B34: @ 0x08087B34
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08087B96
	cmp r0, #1
	bgt _08087B50
	cmp r0, #0
	beq _08087B5A
	b _08087BDE
_08087B50:
	cmp r0, #2
	beq _08087BC6
	cmp r0, #3
	beq _08087BD8
	b _08087BDE
_08087B5A:
	bl sub_08087F0C
	adds r4, r5, #0
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	movs r0, #0x12
	ldrsh r2, [r5, r0]
	lsls r2, r2, #0x13
	movs r1, #0xb0
	lsls r1, r1, #0xe
	adds r2, r2, r1
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0xe
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C0
	b _08087BD0
_08087B96:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _08087BD0
_08087BC6:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08087BDE
_08087BD0:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _08087BDE
_08087BD8:
	movs r0, #0
	strh r0, [r5, #2]
	movs r6, #0
_08087BDE:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08087BE8
sub_08087BE8: @ 0x08087BE8
	push {r4, r5, r6, lr}
	sub sp, #8
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0x15
	bls _08087BFE
	b _08087E8A
_08087BFE:
	lsls r0, r0, #2
	ldr r1, _08087C08 @ =_08087C0C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08087C08: .4byte _08087C0C
_08087C0C: @ jump table
	.4byte _08087C64 @ case 0
	.4byte _08087E8A @ case 1
	.4byte _08087E8A @ case 2
	.4byte _08087E8A @ case 3
	.4byte _08087E8A @ case 4
	.4byte _08087E8A @ case 5
	.4byte _08087E8A @ case 6
	.4byte _08087E8A @ case 7
	.4byte _08087E8A @ case 8
	.4byte _08087E8A @ case 9
	.4byte _08087DA4 @ case 10
	.4byte _08087DF8 @ case 11
	.4byte _08087E8A @ case 12
	.4byte _08087E8A @ case 13
	.4byte _08087E8A @ case 14
	.4byte _08087E8A @ case 15
	.4byte _08087E8A @ case 16
	.4byte _08087E8A @ case 17
	.4byte _08087E8A @ case 18
	.4byte _08087E8A @ case 19
	.4byte _08087E60 @ case 20
	.4byte _08087E6E @ case 21
_08087C64:
	ldr r0, _08087C98 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r5, #1
	ands r5, r1
	cmp r5, #0
	beq _08087CB4
	ldrh r0, [r4, #0x14]
	cmp r0, #0
	beq _08087CA0
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	movs r2, #1
	movs r3, #3
	bl sub_08009F50
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _08087C9C @ =gUnk_08BC9FD8
	ldr r0, [r0]
	str r0, [r4, #0x20]
	movs r0, #0x14
	strh r0, [r4, #2]
	b _08087E8A
	.align 2, 0
_08087C98: .4byte gKeyNewPress
_08087C9C: .4byte gUnk_08BC9FD8
_08087CA0:
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	movs r2, #1
	movs r3, #3
	bl sub_08009F50
	movs r0, #0xa
	strh r0, [r4, #2]
	b _08087E8A
_08087CB4:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _08087CE6
	movs r0, #0
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08087E5A
_08087CE6:
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08087D46
	ldrh r2, [r4, #0x12]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08087D04
	lsls r0, r2, #0x10
	adds r1, r0, #0
	cmp r1, #0
	beq _08087D18
	subs r0, r2, #1
	b _08087D16
_08087D04:
	movs r0, #0x80
	ands r0, r1
	lsls r1, r2, #0x10
	cmp r0, #0
	beq _08087D18
	asrs r0, r1, #0x10
	cmp r0, #3
	beq _08087D18
	adds r0, r2, #1
_08087D16:
	strh r0, [r4, #0x12]
_08087D18:
	asrs r1, r1, #0x10
	movs r2, #0x12
	ldrsh r0, [r4, r2]
	cmp r1, r0
	bne _08087D24
	b _08087E8A
_08087D24:
	adds r0, r4, #0
	adds r0, #0x24
	movs r3, #0x12
	ldrsh r2, [r4, r3]
	lsls r2, r2, #0x13
	movs r1, #0xb0
	lsls r1, r1, #0xe
	adds r2, r2, r1
	asrs r2, r2, #0x10
	movs r1, #0xe
	bl sub_0800A678
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _08087E8A
_08087D46:
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	bne _08087D50
	b _08087E8A
_08087D50:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08087D76
	ldrh r0, [r4, #0x14]
	cmp r0, #0
	beq _08087D9E
	movs r2, #0x12
	ldrsh r0, [r4, r2]
	lsls r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x18
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	subs r0, #1
	b _08087D9C
_08087D76:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08087D9E
	movs r3, #0x12
	ldrsh r0, [r4, r3]
	lsls r0, r0, #1
	adds r1, r4, #0
	adds r1, #0x18
	adds r1, r1, r0
	ldrh r2, [r1]
	movs r3, #0
	ldrsh r0, [r1, r3]
	cmp r0, #0
	beq _08087D9E
	subs r0, r2, #1
	strh r0, [r1]
	ldrh r0, [r4, #0x14]
	adds r0, #1
_08087D9C:
	strh r0, [r4, #0x14]
_08087D9E:
	bl sub_08087F0C
	b _08087E8A
_08087DA4:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #7
	movs r2, #0xb
	movs r3, #0xed
	bl sub_0800EC64
	adds r2, r4, #0
	adds r2, #0x4c
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _08087DE8 @ =gUnk_08BC9FDC
	ldr r0, [r0]
	ldr r1, _08087DEC @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x1e
	bl sub_0800ECF0
	ldr r0, _08087DF0 @ =gUnk_08BCE558
	bl sub_0800ED08
	ldr r0, _08087DF4 @ =gUnk_08BCE55C
	bl sub_0800ECFC
	b _08087E66
	.align 2, 0
_08087DE8: .4byte gUnk_08BC9FDC
_08087DEC: .4byte gUnk_08BC9F6C
_08087DF0: .4byte gUnk_08BCE558
_08087DF4: .4byte gUnk_08BCE55C
_08087DF8:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _08087E8A
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08087E7A
	movs r0, #0
	movs r1, #0x1b
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r2, #0x10
	ldrsh r1, [r4, r2]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r3, #0x18
	ldrsh r0, [r4, r3]
	bl sub_0806F038
	movs r1, #0x1a
	ldrsh r0, [r4, r1]
	bl sub_0806F038
	movs r2, #0x1c
	ldrsh r0, [r4, r2]
	bl sub_0806F038
	movs r3, #0x1e
	ldrsh r0, [r4, r3]
	bl sub_0806F038
_08087E5A:
	strh r5, [r4, #2]
	movs r6, #0
	b _08087E8A
_08087E60:
	ldr r0, [r4, #0x20]
	bl sub_0806A040
_08087E66:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08087E8A
_08087E6E:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _08087E8A
_08087E7A:
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	strh r5, [r4, #2]
_08087E8A:
	adds r0, r6, #0
	add sp, #8
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08087E94
sub_08087E94: @ 0x08087E94
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08087EC4
	cmp r0, #1
	bgt _08087EB0
	cmp r0, #0
	beq _08087EBA
	b _08087F04
_08087EB0:
	cmp r0, #2
	beq _08087ED0
	cmp r0, #3
	beq _08087F00
	b _08087F04
_08087EBA:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08087EF8
_08087EC4:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08087F04
	b _08087EF8
_08087ED0:
	adds r0, r4, #4
	bl sub_0800B4E4
	adds r0, r4, #6
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_0800B4E4
	movs r0, #0
	bl sub_08010FC8
	movs r0, #2
	bl sub_08011104
_08087EF8:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08087F04
_08087F00:
	movs r5, #0
	strh r5, [r4, #2]
_08087F04:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_08087F0C
sub_08087F0C: @ 0x08087F0C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	bl sub_0806F020
	adds r7, r0, #0
	ldrh r0, [r7, #0x10]
	mov sl, r0
	ldrh r1, [r7, #0xe]
	str r1, [sp, #0x14]
	ldrb r4, [r7, #0xe]
	adds r0, r4, #0
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	adds r0, r4, #0
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08087F58
	movs r0, #0x6f
	add sb, r0
_08087F58:
	ldr r5, _08088058 @ =gUnk_02010800
	ldr r3, _0808805C @ =gUnk_080BFF78
	adds r0, r5, #0
	movs r1, #4
	movs r2, #5
	bl sub_08001284
	ldr r3, _08088060 @ =gUnk_080BFF48
	adds r0, r5, #0
	movs r1, #4
	movs r2, #6
	bl sub_08001284
	ldr r3, _08088064 @ =gUnk_080BFF4C
	adds r0, r5, #0
	movs r1, #4
	movs r2, #7
	bl sub_08001284
	ldr r3, _08088068 @ =gUnk_080BFF50
	adds r0, r5, #0
	movs r1, #4
	movs r2, #8
	bl sub_08001284
	ldr r3, _0808806C @ =gUnk_080BFF54
	adds r0, r5, #0
	movs r1, #4
	movs r2, #9
	bl sub_08001284
	ldr r3, _08088070 @ =gUnk_080BFF80
	adds r0, r5, #0
	movs r1, #4
	movs r2, #0xb
	bl sub_08001284
	ldr r4, _08088074 @ =gUnk_080BFF88
	adds r0, r5, #0
	movs r1, #0xb
	movs r2, #6
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0xb
	movs r2, #7
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0xb
	movs r2, #8
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0xb
	movs r2, #9
	adds r3, r4, #0
	bl sub_08001284
	movs r0, #5
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #9
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #6
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _08088078
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	b _08088098
	.align 2, 0
_08088058: .4byte gUnk_02010800
_0808805C: .4byte gUnk_080BFF78
_08088060: .4byte gUnk_080BFF48
_08088064: .4byte gUnk_080BFF4C
_08088068: .4byte gUnk_080BFF50
_0808806C: .4byte gUnk_080BFF54
_08088070: .4byte gUnk_080BFF80
_08088074: .4byte gUnk_080BFF88
_08088078:
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #8
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	movs r3, #7
	bl sub_0806F2D0
_08088098:
	mov r1, sl
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #0x18]
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r4, _08088224 @ =gUnk_02010800
	movs r6, #9
	str r6, [sp]
	str r0, [sp, #4]
	movs r5, #3
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #8
	bl sub_0806F2D0
	movs r0, #0xb
	str r0, [sp]
	ldrh r0, [r7, #0x14]
	str r0, [sp, #4]
	movs r0, #2
	mov r8, r0
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #9
	bl sub_0806F2D0
	movs r0, #6
	str r0, [sp]
	movs r1, #0x18
	ldrsh r0, [r7, r1]
	lsls r0, r0, #1
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F3D0
	movs r0, #7
	str r0, [sp]
	movs r0, #0x1a
	ldrsh r1, [r7, r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F3D0
	movs r0, #8
	str r0, [sp]
	movs r1, #0x1c
	ldrsh r0, [r7, r1]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F3D0
	str r6, [sp]
	movs r0, #0x1e
	ldrsh r1, [r7, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xb
	bl sub_0806F3D0
	mov r1, r8
	str r1, [sp]
	adds r0, r4, #0
	movs r1, #0
	mov r2, sb
	movs r3, #3
	bl sub_08069DA8
	ldrh r0, [r7, #4]
	adds r4, r7, #4
	cmp r0, #0
	beq _08088160
	adds r0, r4, #0
	bl sub_0800B4E4
_08088160:
	ldr r1, [sp, #0x14]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
	adds r2, r0, #0
	mov r0, r8
	str r0, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #5
	bl sub_0800B1AC
	ldrh r0, [r7, #6]
	adds r6, r7, #6
	cmp r0, #0
	beq _08088192
	adds r0, r6, #0
	bl sub_0800B4E4
_08088192:
	ldrh r0, [r7, #8]
	movs r1, #8
	adds r1, r1, r7
	mov sb, r1
	cmp r0, #0
	beq _080881A4
	mov r0, sb
	bl sub_0800B4E4
_080881A4:
	ldrh r0, [r7, #0xa]
	movs r1, #0xa
	adds r1, r1, r7
	mov sl, r1
	cmp r0, #0
	beq _080881B6
	mov r0, sl
	bl sub_0800B4E4
_080881B6:
	ldr r4, _08088228 @ =gUnk_08BC9FE4
	ldr r2, [r4]
	movs r0, #0xd
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, r8
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #2
	movs r3, #4
	bl sub_0800B1AC
	ldr r2, [r4, #4]
	movs r0, #0xf
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	mov r0, sb
	movs r1, #2
	movs r3, #4
	bl sub_0800B1AC
	ldr r2, [r4, #8]
	movs r0, #0x11
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	mov r0, r8
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	movs r3, #4
	bl sub_0800B1AC
	adds r1, r7, #0
	adds r1, #0x74
	ldr r0, [sp, #0x18]
	movs r2, #0x98
	movs r3, #0x18
	bl sub_0806A670
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088224: .4byte gUnk_02010800
_08088228: .4byte gUnk_08BC9FE4

	thumb_func_start sub_0808822C
sub_0808822C: @ 0x0808822C
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	movs r0, #0xe4
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808826C @ =0x01000072
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088270
	strh r7, [r5, #0xa]
	strh r6, [r5, #0xc]
	strh r4, [r5, #0xe]
	b _08088284
	.align 2, 0
_0808826C: .4byte 0x01000072
_08088270:
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08088284
	movs r0, #0
	strh r0, [r5, #0xa]
	strh r0, [r5, #0xc]
	strh r0, [r5, #0xe]
_08088284:
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	strh r0, [r5, #0x10]
	strh r0, [r5, #0x12]
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	bne _0808838A
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808838A
	ldrb r0, [r5, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl GetForgeLevel
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldrb r0, [r5, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	adds r2, r4, #0
	lsrs r0, r0, #0x18
	subs r1, r2, r0
	movs r4, #5
	cmp r1, #0
	blt _0808831E
	movs r4, #0xa
	cmp r2, r0
	beq _0808831E
	movs r4, #0xf
	cmp r1, #1
	beq _0808831E
	movs r4, #0x14
	cmp r1, #2
	beq _0808831E
	movs r4, #0
	cmp r1, #2
	ble _0808831E
	movs r4, #0x19
_0808831E:
	bl sub_08018914
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808832C
	cmp r6, #4
	beq _0808835C
_0808832C:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0808833C
	cmp r6, #1
	beq _0808835C
_0808833C:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808834C
	cmp r6, #2
	beq _0808835C
_0808834C:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808835E
	cmp r6, #3
	bne _0808835E
_0808835C:
	adds r4, #0xa
_0808835E:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _0808836C
	movs r4, #0
_0808836C:
	cmp r4, #0
	beq _0808838A
	movs r0, #0x64
	adds r1, r4, #0
	bl __udivsi3
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0800180C
	cmp r0, #0
	bne _0808838A
	movs r0, #1
	strh r0, [r5, #0x10]
_0808838A:
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080883C8
	ldrb r0, [r5, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl GetForgeLevel
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldrb r0, [r5, #0xc]
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bge _080883C8
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080883C8
	movs r0, #1
	strh r0, [r5, #0x12]
_080883C8:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080883D0
sub_080883D0: @ 0x080883D0
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080883F8
	cmp r0, #1
	bgt _080883EC
	cmp r0, #0
	beq _080883F2
	b _08088422
_080883EC:
	cmp r0, #2
	beq _0808840A
	b _08088422
_080883F2:
	bl sub_08088494
	b _080883FC
_080883F8:
	bl sub_08088538
_080883FC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08088422
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _08088422
_0808840A:
	bl sub_08088664
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08088422
	movs r6, #0
	strh r6, [r4]
	movs r0, #0xe4
	bl sub_0806EFF0
	movs r0, #0
	b _0808848E
_08088422:
	movs r1, #0x18
	ldrsh r0, [r4, r1]
	adds r5, r4, #0
	adds r5, #0xbc
	cmp r0, #1
	bne _08088434
	adds r0, r5, #0
	bl sub_08009FF8
_08088434:
	adds r0, r5, #0
	bl sub_0800A778
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	adds r5, r4, #0
	adds r5, #0x44
	cmp r0, #1
	bne _0808844C
	adds r0, r5, #0
	bl sub_08009FF8
_0808844C:
	adds r0, r5, #0
	bl sub_0800A778
	movs r1, #0x16
	ldrsh r0, [r4, r1]
	cmp r0, #1
	bne _08088462
	adds r0, r4, #0
	adds r0, #0x6c
	bl sub_08009FF8
_08088462:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08088476
	adds r0, r4, #0
	adds r0, #0x6c
	bl sub_0800A778
_08088476:
	movs r1, #0x1a
	ldrsh r0, [r4, r1]
	cmp r0, #1
	bne _0808848C
	adds r4, #0x94
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808848C:
	adds r0, r6, #0
_0808848E:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08088494
sub_08088494: @ 0x08088494
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080884C6
	cmp r0, #1
	bgt _080884AE
	cmp r0, #0
	beq _080884B8
	b _0808852C
_080884AE:
	cmp r0, #2
	beq _08088518
	cmp r0, #3
	beq _08088528
	b _0808852C
_080884B8:
	bl sub_080886E0
	bl sub_080895A8
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0808852A
_080884C6:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #4
	bl sub_08011104
	ldr r1, _08088514 @ =0xFE003FFF
	movs r0, #4
	movs r2, #0
	movs r3, #2
	bl sub_0801015C
	movs r0, #4
	movs r1, #1
	bl sub_08011174
	movs r0, #4
	movs r1, #1
	bl sub_08011144
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0808852A
	.align 2, 0
_08088514: .4byte 0xFE003FFF
_08088518:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808852C
	ldrh r0, [r4, #2]
	adds r0, #1
	b _0808852A
_08088528:
	movs r0, #0
_0808852A:
	strh r0, [r4, #2]
_0808852C:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08088538
sub_08088538: @ 0x08088538
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _08088550
	cmp r0, #1
	beq _08088558
	b _0808865A
_08088550:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808865A
_08088558:
	bl sub_080889A8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808865A
	ldrh r0, [r4, #0xa]
	cmp r0, #0
	bne _080885CE
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080885A2
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	bl sub_0806F0CC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #0x10
	ldrsh r1, [r4, r0]
	movs r0, #4
	bl sub_0806F0CC
	b _08088654
_080885A2:
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08088654
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	b _08088616
_080885CE:
	cmp r0, #1
	bne _080885E0
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	b _08088602
_080885E0:
	cmp r0, #2
	bne _080885F2
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	b _08088602
_080885F2:
	cmp r0, #4
	bne _08088624
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #5
_08088602:
	bl sub_0806F0CC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r0, #3
_08088616:
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08088654
_08088624:
	cmp r0, #3
	bne _08088654
	movs r0, #0
	movs r1, #0x1a
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #4
	bl sub_0806F0CC
	movs r0, #0xc
	ldrsh r1, [r4, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #0xe
	ldrsh r1, [r4, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_08088654:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_0808865A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08088664
sub_08088664: @ 0x08088664
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808869C
	cmp r0, #1
	bgt _08088680
	cmp r0, #0
	beq _0808868A
	b _080886D6
_08088680:
	cmp r0, #2
	beq _080886A8
	cmp r0, #3
	beq _080886D2
	b _080886D6
_0808868A:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	b _080886CA
_0808869C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080886D6
	b _080886CA
_080886A8:
	bl sub_08069AA8
	movs r0, #4
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #2
	bl sub_08006210
	movs r0, #2
	bl sub_08005B5C
_080886CA:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080886D6
_080886D2:
	movs r5, #0
	strh r5, [r4, #2]
_080886D6:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080886E0
sub_080886E0: @ 0x080886E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	bl sub_0806F020
	str r0, [sp, #0x38]
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #7
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	movs r1, #6
	movs r2, #2
	bl sub_0800476C
	movs r0, #2
	movs r1, #5
	movs r2, #1
	bl sub_0800476C
	movs r0, #0x40
	bl sub_08004840
	movs r0, #4
	bl sub_0800485C
	movs r0, #0x98
	lsls r0, r0, #5
	bl sub_08004878
	movs r0, #0xc
	bl sub_08004894
	movs r0, #0x10
	bl sub_080048B0
	movs r0, #0x96
	bl sub_08012F60
	lsls r0, r0, #0x10
	str r0, [sp, #0x40]
	lsrs r4, r0, #0x10
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	mov sl, r0
	ldr r1, _08088880 @ =gUnk_08BCE52C
	mov sb, r1
	lsls r4, r4, #3
	mov r8, r4
	mov r0, r8
	add r0, sb
	ldrh r1, [r0]
	mov r0, sl
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _08088884 @ =gUnk_02012C00
	adds r1, r4, #0
	bl LZ77UnCompWram
	mov r0, sb
	adds r0, #2
	add r0, r8
	ldrh r1, [r0]
	mov r0, sl
	bl sub_08001D78
	adds r7, r0, #0
	ldr r1, _08088888 @ =gUnk_0200FC00
	bl LZ77UnCompWram
	mov r0, sb
	adds r0, #4
	add r0, r8
	ldrh r1, [r0]
	mov r0, sl
	bl sub_08001D78
	adds r7, r0, #0
	ldr r6, _0808888C @ =gUnk_02010800
	adds r1, r6, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _08088890 @ =0x06008000
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #0
	ldr r1, _08088888 @ =gUnk_0200FC00
	adds r2, r1, #0
	movs r3, #4
	bl sub_08005F14
	str r4, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #1
	adds r1, r6, #0
	adds r2, r6, #0
	movs r3, #4
	bl sub_08005F14
	ldr r2, _08088894 @ =gUnk_02011400
	ldr r3, _08088898 @ =0x06003000
	movs r0, #0
	ldr r1, _08088888 @ =gUnk_0200FC00
	bl sub_08005CF4
	ldr r2, _0808889C @ =gUnk_02012000
	ldr r3, _080888A0 @ =0x06003800
	movs r0, #1
	adds r1, r6, #0
	bl sub_08005CF4
	movs r2, #6
	add sb, r2
	mov r0, r8
	add r0, sb
	ldrh r1, [r0]
	mov r0, sl
	bl sub_08001D78
	adds r6, r0, #0
	movs r0, #0
	adds r1, r6, #0
	bl sub_08005D6C
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	mov sl, r0
	ldr r1, [sp, #0x38]
	movs r2, #0x12
	ldrsh r0, [r1, r2]
	cmp r0, #0
	bne _080888A4
	mov r0, sl
	movs r1, #0x14
	bl sub_08001D78
	adds r5, r0, #0
	mov r0, sl
	movs r1, #0x15
	bl sub_08001D78
	adds r7, r0, #0
	mov r0, sl
	movs r1, #0x16
	b _080888BC
	.align 2, 0
_08088880: .4byte gUnk_08BCE52C
_08088884: .4byte gUnk_02012C00
_08088888: .4byte gUnk_0200FC00
_0808888C: .4byte gUnk_02010800
_08088890: .4byte 0x06008000
_08088894: .4byte gUnk_02011400
_08088898: .4byte 0x06003000
_0808889C: .4byte gUnk_02012000
_080888A0: .4byte 0x06003800
_080888A4:
	mov r0, sl
	movs r1, #0x17
	bl sub_08001D78
	adds r5, r0, #0
	mov r0, sl
	movs r1, #0x18
	bl sub_08001D78
	adds r7, r0, #0
	mov r0, sl
	movs r1, #0x19
_080888BC:
	bl sub_08001D78
	adds r6, r0, #0
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080888EC
	mov r0, sl
	movs r1, #0x17
	bl sub_08001D78
	adds r5, r0, #0
	mov r0, sl
	movs r1, #0x18
	bl sub_08001D78
	adds r7, r0, #0
	mov r0, sl
	movs r1, #0x19
	bl sub_08001D78
	adds r6, r0, #0
_080888EC:
	ldr r4, _08088990 @ =gUnk_0201A400
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	ldr r0, _08088994 @ =gUnk_0200F000
	mov sb, r0
	adds r0, r7, #0
	mov r1, sb
	bl LZ77UnCompWram
	ldr r7, _08088998 @ =gUnk_0200E000
	adds r0, r6, #0
	adds r1, r7, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _0808899C @ =0x06004000
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	ldr r0, [sp, #0x20]
	movs r1, #0xe
	movs r2, #2
	bl sub_08010D40
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #2
	mov r1, sb
	mov r2, sb
	movs r3, #0xe
	bl sub_08005F14
	ldr r2, _080889A0 @ =gUnk_0200F020
	ldr r6, _080889A4 @ =0x06002800
	movs r0, #2
	mov r1, sb
	adds r3, r6, #0
	bl sub_08005CF4
	add r4, sp, #0x28
	mov r0, sb
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	adds r1, r6, #0
	bl CpuFastSet
	movs r0, #2
	adds r1, r7, #0
	bl sub_08005D6C
	movs r0, #0
	movs r1, #8
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #8
	movs r2, #0
	bl sub_08005E18
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08088990: .4byte gUnk_0201A400
_08088994: .4byte gUnk_0200F000
_08088998: .4byte gUnk_0200E000
_0808899C: .4byte 0x06004000
_080889A0: .4byte gUnk_0200F020
_080889A4: .4byte 0x06002800

	thumb_func_start sub_080889A8
sub_080889A8: @ 0x080889A8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x54
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov sb, r0
	ldr r0, _080889EC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080889F0
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #0x27
	bgt _080889F0
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	beq _080889F0
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bne _080889F0
	movs r0, #0
	bl _08089598
	.align 2, 0
_080889EC: .4byte gKeyNewPress
_080889F0:
	movs r1, #4
	ldrsh r0, [r7, r1]
	cmp r0, #0x33
	bls _080889FC
	bl _08089596
_080889FC:
	lsls r0, r0, #2
	ldr r1, _08088A08 @ =_08088A0C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08088A08: .4byte _08088A0C
_08088A0C: @ jump table
	.4byte _08088ADC @ case 0
	.4byte _08088B3C @ case 1
	.4byte _08088B74 @ case 2
	.4byte _08089596 @ case 3
	.4byte _08089596 @ case 4
	.4byte _08089596 @ case 5
	.4byte _08089596 @ case 6
	.4byte _08089596 @ case 7
	.4byte _08089596 @ case 8
	.4byte _08089596 @ case 9
	.4byte _08088BA0 @ case 10
	.4byte _08088C00 @ case 11
	.4byte _08089596 @ case 12
	.4byte _08089596 @ case 13
	.4byte _08089596 @ case 14
	.4byte _08089596 @ case 15
	.4byte _08089596 @ case 16
	.4byte _08089596 @ case 17
	.4byte _08089596 @ case 18
	.4byte _08089596 @ case 19
	.4byte _08088C36 @ case 20
	.4byte _08088C50 @ case 21
	.4byte _08088CB6 @ case 22
	.4byte _08088CDC @ case 23
	.4byte _08088E18 @ case 24
	.4byte _08089596 @ case 25
	.4byte _08089596 @ case 26
	.4byte _08089596 @ case 27
	.4byte _08089596 @ case 28
	.4byte _08088F00 @ case 29
	.4byte _08088F06 @ case 30
	.4byte _08089184 @ case 31
	.4byte _080892B8 @ case 32
	.4byte _0808934A @ case 33
	.4byte _08089350 @ case 34
	.4byte _08089596 @ case 35
	.4byte _08089596 @ case 36
	.4byte _08089596 @ case 37
	.4byte _08089596 @ case 38
	.4byte _08089596 @ case 39
	.4byte _08089374 @ case 40
	.4byte _08089494 @ case 41
	.4byte _080894BE @ case 42
	.4byte _08089502 @ case 43
	.4byte _08089596 @ case 44
	.4byte _08089596 @ case 45
	.4byte _08089596 @ case 46
	.4byte _08089596 @ case 47
	.4byte _08089596 @ case 48
	.4byte _08089596 @ case 49
	.4byte _0808953C @ case 50
	.4byte _08089582 @ case 51
_08088ADC:
	adds r0, r7, #0
	adds r0, #0x44
	movs r1, #4
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	movs r5, #0
	movs r4, #1
	strh r4, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #0xbc
	movs r1, #6
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	strh r4, [r7, #0x18]
	movs r0, #6
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #2
	movs r2, #0
	movs r3, #0xb
	bl sub_08005C14
	ldrb r0, [r7, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	ldr r1, _08088B38 @ =gUnk_08BCE560
	lsrs r0, r0, #0x17
	adds r0, r0, r1
	ldrh r0, [r0]
	str r5, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	bl _0808956E
	.align 2, 0
_08088B38: .4byte gUnk_08BCE560
_08088B3C:
	adds r0, r7, #0
	adds r0, #0x44
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _08088B50
	bl _08089596
_08088B50:
	movs r4, #0
	strh r4, [r7, #0x14]
	ldrh r0, [r7, #0x1c]
	adds r0, #1
	strh r0, [r7, #0x1c]
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08088B6E
	movs r0, #0xa
	strh r0, [r7, #4]
	bl _08089596
_08088B6E:
	strh r4, [r7, #0x1e]
	bl _0808956E
_08088B74:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	movs r1, #0
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1e
	beq _08088B88
	bl _08089596
_08088B88:
	ldrh r0, [r7, #0x1c]
	adds r0, #1
	strh r0, [r7, #0x1c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bne _08088C30
	strh r1, [r7, #0x1e]
	movs r0, #0x14
	strh r0, [r7, #4]
	bl _08089596
_08088BA0:
	adds r0, r7, #0
	adds r0, #0x6c
	movs r1, #5
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	movs r5, #0
	movs r4, #1
	strh r4, [r7, #0x16]
	adds r0, r7, #0
	adds r0, #0xbc
	movs r1, #6
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	strh r4, [r7, #0x18]
	movs r0, #6
	str r0, [sp]
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #2
	movs r2, #0
	movs r3, #0xb
	bl sub_08005C14
	ldrb r0, [r7, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	ldr r1, _08088BFC @ =gUnk_08BCE560
	lsrs r0, r0, #0x17
	adds r0, r0, r1
	ldrh r0, [r0]
	str r5, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	bl _0808956E
	.align 2, 0
_08088BFC: .4byte gUnk_08BCE560
_08088C00:
	adds r0, r7, #0
	adds r0, #0x6c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _08088C14
	bl _08089596
_08088C14:
	movs r1, #0
	strh r1, [r7, #0x16]
	ldrh r0, [r7, #0x1c]
	adds r0, #1
	strh r0, [r7, #0x1c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bne _08088C30
	movs r0, #0x14
	strh r0, [r7, #4]
	strh r1, [r7, #0x1e]
	bl _08089596
_08088C30:
	strh r1, [r7, #4]
	bl _08089596
_08088C36:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1e
	beq _08088C48
	bl _08089596
_08088C48:
	movs r0, #0
	strh r0, [r7, #0x1e]
	bl _0808956E
_08088C50:
	adds r0, r7, #0
	adds r0, #0x44
	movs r1, #4
	movs r2, #1
	movs r3, #1
	bl sub_08009F50
	movs r5, #0
	movs r4, #1
	strh r4, [r7, #0x14]
	adds r0, r7, #0
	adds r0, #0x6c
	movs r1, #5
	movs r2, #1
	movs r3, #1
	bl sub_08009F50
	strh r4, [r7, #0x16]
	adds r0, r7, #0
	adds r0, #0xbc
	movs r1, #6
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	strh r4, [r7, #0x18]
	ldrh r0, [r7, #0xa]
	cmp r0, #0
	bne _08088CA0
	str r5, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x9b
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	bl _0808956E
_08088CA0:
	str r5, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x9b
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	bl _0808956E
_08088CB6:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	beq _08088CC8
	bl _08089596
_08088CC8:
	movs r0, #0
	strh r0, [r7, #0x1e]
	movs r0, #2
	bl sub_08006210
	movs r0, #2
	bl sub_08005B5C
	bl _0808956E
_08088CDC:
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	adds r4, r0, #0
	ldrh r0, [r7, #0xa]
	cmp r0, #0
	bne _08088D14
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #0
	bne _08088D04
	adds r0, r4, #0
	movs r1, #0x1c
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1d
	b _08088D22
_08088D04:
	adds r0, r4, #0
	movs r1, #0x1e
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1f
	b _08088D22
_08088D14:
	adds r0, r4, #0
	movs r1, #0x20
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x21
_08088D22:
	bl sub_08001D78
	adds r6, r0, #0
	ldr r4, _08088E00 @ =gUnk_0201A400
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	ldr r5, _08088E04 @ =gUnk_0200F000
	adds r0, r6, #0
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	adds r1, r4, #0
	movs r2, #0xe0
	bl sub_080064B0
	adds r0, r4, #0
	add r1, sp, #0x14
	bl sub_08001CBC
	ldr r0, [sp, #0x24]
	ldr r1, _08088E08 @ =0x06004000
	ldr r2, [sp, #0x18]
	bl sub_08006BA4
	add r4, sp, #0x30
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _08088E0C @ =0x06002800
	ldrh r2, [r4, #8]
	bl sub_08006BA4
	ldr r0, [sp, #0x28]
	movs r1, #0xe
	movs r2, #2
	bl sub_08010D40
	movs r0, #1
	bl sub_08004554
	movs r0, #2
	movs r1, #0x80
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0x40
	bl sub_08004840
	movs r0, #4
	bl sub_0800485C
	movs r0, #0x98
	lsls r0, r0, #5
	bl sub_08004878
	movs r0, #0x10
	str r0, [r7, #0x2c]
	bl sub_08004894
	movs r0, #0x10
	bl sub_080048B0
	movs r0, #0x20
	str r0, [r7, #0x20]
	str r0, [r7, #0x24]
	movs r0, #0x60
	str r0, [r7, #0x28]
	movs r2, #0x80
	lsls r2, r2, #7
	movs r0, #2
	adds r1, r2, #0
	bl sub_08006340
	ldr r1, [r7, #0x20]
	ldr r2, [r7, #0x24]
	movs r0, #2
	bl sub_080062E0
	movs r0, #2
	movs r1, #0
	bl sub_08006394
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x58
	bl sub_08005E18
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	bl sub_08011104
	ldr r1, _08088E10 @ =0xFFFF3FFF
	ldr r2, _08088E14 @ =0x00007FFF
	movs r0, #3
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	b _0808956E
	.align 2, 0
_08088E00: .4byte gUnk_0201A400
_08088E04: .4byte gUnk_0200F000
_08088E08: .4byte 0x06004000
_08088E0C: .4byte 0x06002800
_08088E10: .4byte 0xFFFF3FFF
_08088E14: .4byte 0x00007FFF
_08088E18:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	strh r0, [r7, #0x1e]
	ldrh r4, [r7, #0x1e]
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	beq _08088E2A
	b _08089596
_08088E2A:
	ldr r1, [r7, #0x20]
	ldr r3, [r7, #0x28]
	adds r1, r1, r3
	str r1, [r7, #0x20]
	ldr r2, [r7, #0x24]
	adds r2, r2, r3
	str r2, [r7, #0x24]
	ldr r0, _08088E7C @ =0x00000D99
	muls r0, r3, r0
	lsrs r0, r0, #0xc
	str r0, [r7, #0x28]
	movs r0, #2
	bl sub_080062E0
	ldr r1, [r7, #0x20]
	movs r0, #0x96
	lsls r0, r0, #1
	cmp r1, r0
	bhi _08088E52
	b _08089596
_08088E52:
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08088E62
	b _08089596
_08088E62:
	ldrh r0, [r7, #0xa]
	cmp r0, #1
	bne _08088E80
	str r4, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0xa5
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	b _08088E92
	.align 2, 0
_08088E7C: .4byte 0x00000D99
_08088E80:
	str r4, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x7b
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
_08088E92:
	movs r1, #0x10
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _08088E9C
	b _0808936E
_08088E9C:
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08088ED8 @ =0x00007FFF
	movs r0, #2
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _08088EE0
	ldr r0, _08088EDC @ =0x000005C6
	str r1, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	b _08088EF4
	.align 2, 0
_08088ED8: .4byte 0x00007FFF
_08088EDC: .4byte 0x000005C6
_08088EE0:
	ldr r0, _08088EFC @ =0x00000565
	movs r1, #0
	str r1, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
_08088EF4:
	movs r0, #0x1d
	strh r0, [r7, #4]
	b _08089596
	.align 2, 0
_08088EFC: .4byte 0x00000565
_08088F00:
	movs r0, #0x1e
	strh r0, [r7, #4]
	b _08089596
_08088F06:
	movs r0, #3
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08088FD4 @ =0x00007FFF
	movs r0, #3
	movs r3, #0x28
	bl sub_0801015C
	movs r0, #3
	movs r1, #2
	bl sub_08011174
	movs r0, #2
	bl sub_08011104
	movs r0, #4
	bl sub_08011104
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0x80
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0x1f
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	adds r4, r0, #0
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08088FE8
	adds r0, r4, #0
	movs r1, #0x28
	bl sub_08001D78
	adds r5, r0, #0
	ldr r1, _08088FD8 @ =gUnk_0202F800
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x29
	bl sub_08001D78
	adds r6, r0, #0
	ldr r1, _08088FDC @ =gUnk_02036800
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x24
	bl sub_08001D78
	adds r5, r0, #0
	ldr r1, _08088FE0 @ =gUnk_02039000
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x25
	bl sub_08001D78
	adds r6, r0, #0
	ldr r1, _08088FE4 @ =gUnk_0203D800
	bl LZ77UnCompWram
	b _08089028
	.align 2, 0
_08088FD4: .4byte 0x00007FFF
_08088FD8: .4byte gUnk_0202F800
_08088FDC: .4byte gUnk_02036800
_08088FE0: .4byte gUnk_02039000
_08088FE4: .4byte gUnk_0203D800
_08088FE8:
	adds r0, r4, #0
	movs r1, #0x2a
	bl sub_08001D78
	adds r5, r0, #0
	ldr r1, _080890F8 @ =gUnk_0202F800
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x2b
	bl sub_08001D78
	adds r6, r0, #0
	ldr r1, _080890FC @ =gUnk_02036800
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x26
	bl sub_08001D78
	adds r5, r0, #0
	ldr r1, _08089100 @ =gUnk_02039000
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x27
	bl sub_08001D78
	adds r6, r0, #0
	ldr r1, _08089104 @ =gUnk_0203D800
	bl LZ77UnCompWram
_08089028:
	ldr r0, _080890F8 @ =gUnk_0202F800
	add r1, sp, #0x14
	bl sub_08001CBC
	ldr r0, [sp, #0x24]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldr r2, [sp, #0x18]
	lsrs r2, r2, #2
	ldr r4, _08089108 @ =0x001FFFFF
	ands r2, r4
	bl CpuFastSet
	ldr r0, [sp, #0x28]
	add r1, sp, #0x14
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0
	bl sub_08010D40
	ldr r0, _08089100 @ =gUnk_02039000
	add r1, sp, #0x14
	bl sub_08001CBC
	ldr r0, [sp, #0x24]
	ldr r1, _0808910C @ =0x06008000
	ldr r2, [sp, #0x18]
	lsrs r2, r2, #2
	ands r2, r4
	bl CpuFastSet
	ldr r0, [sp, #0x28]
	add r1, sp, #0x14
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0xa
	bl sub_08010D40
	ldr r1, _080890FC @ =gUnk_02036800
	ldr r2, _08089110 @ =gUnk_02037C00
	ldr r3, _08089114 @ =0x06007800
	movs r0, #1
	bl sub_08005CF4
	ldr r5, _08089104 @ =gUnk_0203D800
	movs r3, #0
	mov r8, r3
	str r3, [sp]
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r0, #0
	adds r1, r5, #0
	adds r2, r5, #0
	movs r3, #0xa
	bl sub_08005F14
	ldr r2, _08089118 @ =gUnk_0203EC20
	ldr r6, _0808911C @ =0x0600F800
	movs r0, #0
	adds r1, r5, #0
	adds r3, r6, #0
	bl sub_08005CF4
	add r4, sp, #0x30
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	adds r1, r6, #0
	bl CpuFastSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08089124
	movs r0, #0x90
	lsls r0, r0, #0xd
	str r0, [r7, #0x30]
	mov r0, r8
	str r0, [r7, #0x34]
	str r0, [r7, #0x38]
	str r0, [r7, #0x3c]
	ldr r0, _08089120 @ =0xFFFEC000
	b _08089132
	.align 2, 0
_080890F8: .4byte gUnk_0202F800
_080890FC: .4byte gUnk_02036800
_08089100: .4byte gUnk_02039000
_08089104: .4byte gUnk_0203D800
_08089108: .4byte 0x001FFFFF
_0808910C: .4byte 0x06008000
_08089110: .4byte gUnk_02037C00
_08089114: .4byte 0x06007800
_08089118: .4byte gUnk_0203EC20
_0808911C: .4byte 0x0600F800
_08089120: .4byte 0xFFFEC000
_08089124:
	mov r1, r8
	str r1, [r7, #0x30]
	str r1, [r7, #0x34]
	str r1, [r7, #0x38]
	str r1, [r7, #0x3c]
	movs r0, #0xa0
	lsls r0, r0, #9
_08089132:
	str r0, [r7, #0x40]
	ldr r0, [r7, #0x38]
	cmp r0, #0
	bge _0808913E
	ldr r3, _08089180 @ =0x00000FFF
	adds r0, r0, r3
_0808913E:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	ldr r2, [r7, #0x3c]
	cmp r2, #0
	bge _0808914C
	ldr r0, _08089180 @ =0x00000FFF
	adds r2, r2, r0
_0808914C:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	movs r0, #0
	bl sub_08005E18
	ldr r0, [r7, #0x30]
	cmp r0, #0
	bge _08089160
	ldr r1, _08089180 @ =0x00000FFF
	adds r0, r0, r1
_08089160:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	ldr r2, [r7, #0x34]
	cmp r2, #0
	bge _0808916E
	ldr r3, _08089180 @ =0x00000FFF
	adds r2, r2, r3
_0808916E:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	movs r0, #1
	bl sub_08005E18
	movs r0, #0
	strh r0, [r7, #0x1e]
	b _0808956E
	.align 2, 0
_08089180: .4byte 0x00000FFF
_08089184:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	strh r0, [r7, #0x1e]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x19
	ble _0808921A
	ldr r1, [r7, #0x40]
	ldr r0, _080891CC @ =0x00000EB8
	muls r0, r1, r0
	cmp r0, #0
	bge _080891A0
	ldr r1, _080891D0 @ =0x00000FFF
	adds r0, r0, r1
_080891A0:
	asrs r0, r0, #0xc
	str r0, [r7, #0x40]
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _080891D8
	ldr r0, [r7, #0x40]
	ldr r1, _080891D4 @ =0xFFFFF800
	cmp r0, r1
	ble _080891BA
	str r1, [r7, #0x40]
_080891BA:
	ldr r0, [r7, #0x30]
	ldr r1, [r7, #0x40]
	adds r0, r0, r1
	str r0, [r7, #0x30]
	cmp r0, #0
	bge _080891F8
	str r2, [r7, #0x30]
	b _080891F8
	.align 2, 0
_080891CC: .4byte 0x00000EB8
_080891D0: .4byte 0x00000FFF
_080891D4: .4byte 0xFFFFF800
_080891D8:
	ldr r1, [r7, #0x40]
	ldr r0, _0808922C @ =0x000007FF
	cmp r1, r0
	bgt _080891E4
	adds r0, #1
	str r0, [r7, #0x40]
_080891E4:
	ldr r0, [r7, #0x34]
	ldr r1, [r7, #0x40]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	ldr r1, _08089230 @ =0x000E5FFF
	cmp r0, r1
	ble _080891F8
	movs r0, #0xe6
	lsls r0, r0, #0xc
	str r0, [r7, #0x34]
_080891F8:
	ldr r0, [r7, #0x30]
	cmp r0, #0
	bge _08089202
	ldr r3, _08089234 @ =0x00000FFF
	adds r0, r0, r3
_08089202:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	ldr r2, [r7, #0x34]
	cmp r2, #0
	bge _08089210
	ldr r0, _08089234 @ =0x00000FFF
	adds r2, r2, r0
_08089210:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	movs r0, #1
	bl sub_08005E18
_0808921A:
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08089238
	ldr r0, [r7, #0x38]
	subs r0, #0xc
	str r0, [r7, #0x38]
	b _0808923E
	.align 2, 0
_0808922C: .4byte 0x000007FF
_08089230: .4byte 0x000E5FFF
_08089234: .4byte 0x00000FFF
_08089238:
	ldr r0, [r7, #0x3c]
	adds r0, #0xa
	str r0, [r7, #0x3c]
_0808923E:
	movs r3, #0x38
	ldrsh r1, [r7, r3]
	movs r0, #0x3c
	ldrsh r2, [r7, r0]
	movs r0, #0
	bl sub_08005E18
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08089288
	ldr r1, [r7, #0x30]
	ldr r0, _0808927C @ =0x0003FFFF
	cmp r1, r0
	ble _08089260
	b _08089596
_08089260:
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08089280 @ =0x00007FFF
	movs r0, #3
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	ldr r0, _08089284 @ =0xFFFFF800
	str r0, [r7, #0x40]
	b _0808956E
	.align 2, 0
_0808927C: .4byte 0x0003FFFF
_08089280: .4byte 0x00007FFF
_08089284: .4byte 0xFFFFF800
_08089288:
	ldr r1, [r7, #0x34]
	ldr r0, _080892B0 @ =0x000E5FFF
	cmp r1, r0
	bgt _08089292
	b _08089596
_08089292:
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080892B4 @ =0x00007FFF
	movs r0, #3
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	movs r0, #0x80
	lsls r0, r0, #4
	str r0, [r7, #0x40]
	b _0808956E
	.align 2, 0
_080892B0: .4byte 0x000E5FFF
_080892B4: .4byte 0x00007FFF
_080892B8:
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _080892D4
	ldr r0, [r7, #0x30]
	ldr r1, [r7, #0x40]
	adds r0, r0, r1
	str r0, [r7, #0x30]
	cmp r0, #0
	bge _080892E8
	str r2, [r7, #0x30]
	b _080892E8
_080892D4:
	ldr r0, [r7, #0x34]
	ldr r1, [r7, #0x40]
	adds r0, r0, r1
	str r0, [r7, #0x34]
	ldr r1, _0808931C @ =0x000FDFFF
	cmp r0, r1
	ble _080892E8
	movs r0, #0xfe
	lsls r0, r0, #0xc
	str r0, [r7, #0x34]
_080892E8:
	ldr r0, [r7, #0x30]
	cmp r0, #0
	bge _080892F2
	ldr r1, _08089320 @ =0x00000FFF
	adds r0, r0, r1
_080892F2:
	lsls r0, r0, #4
	asrs r1, r0, #0x10
	ldr r2, [r7, #0x34]
	cmp r2, #0
	bge _08089300
	ldr r3, _08089320 @ =0x00000FFF
	adds r2, r2, r3
_08089300:
	lsls r2, r2, #4
	asrs r2, r2, #0x10
	movs r0, #1
	bl sub_08005E18
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08089324
	ldr r0, [r7, #0x38]
	subs r0, #0xc
	str r0, [r7, #0x38]
	b _0808932A
	.align 2, 0
_0808931C: .4byte 0x000FDFFF
_08089320: .4byte 0x00000FFF
_08089324:
	ldr r0, [r7, #0x3c]
	adds r0, #0xa
	str r0, [r7, #0x3c]
_0808932A:
	movs r0, #0x38
	ldrsh r1, [r7, r0]
	movs r3, #0x3c
	ldrsh r2, [r7, r3]
	movs r0, #0
	bl sub_08005E18
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08089348
	b _08089596
_08089348:
	b _0808956E
_0808934A:
	bl sub_080886E0
	b _0808956E
_08089350:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
_0808936E:
	movs r0, #0x28
	strh r0, [r7, #4]
	b _08089596
_08089374:
	ldr r1, _08089408 @ =0xFFFF3FFF
	ldr r2, _0808940C @ =0x00007FFF
	movs r0, #3
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #3
	movs r1, #2
	bl sub_08011174
	movs r0, #4
	bl sub_08011104
	movs r1, #0x10
	ldrsh r0, [r7, r1]
	cmp r0, #1
	bne _0808941C
	movs r0, #0
	bl sub_08004840
	movs r0, #2
	movs r1, #5
	movs r2, #0
	bl sub_0800476C
	movs r4, #0x80
	lsls r4, r4, #5
	movs r0, #0
	adds r1, r4, #0
	bl sub_0801B9BC
	ldr r0, _08089410 @ =0x06001800
	adds r1, r4, #0
	bl sub_0800E690
	ldr r0, _08089414 @ =gUnk_0201F400
	adds r1, r4, #0
	bl sub_0800E6B0
	ldr r1, _08089418 @ =gUnk_0200F000
	movs r0, #2
	bl sub_0800E6F0
	movs r0, #0x85
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #2
	bl sub_0800E74C
	movs r0, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	bl sub_0801B9EC
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	b _08089424
	.align 2, 0
_08089408: .4byte 0xFFFF3FFF
_0808940C: .4byte 0x00007FFF
_08089410: .4byte 0x06001800
_08089414: .4byte gUnk_0201F400
_08089418: .4byte gUnk_0200F000
_0808941C:
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
_08089424:
	ldrb r0, [r7, #0xc]
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	adds r1, r2, #0
	ldrh r0, [r7, #0xa]
	cmp r0, #1
	bne _08089442
	adds r0, r7, #0
	adds r0, #0x44
	movs r1, #4
	movs r2, #8
	b _08089456
_08089442:
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #1
	bne _0808945E
	adds r0, r7, #0
	adds r0, #0x44
	adds r2, #9
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
_08089456:
	movs r3, #0
	bl sub_08009F50
	b _08089470
_0808945E:
	adds r0, r7, #0
	adds r0, #0x44
	adds r2, r1, #2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
	movs r3, #0
	bl sub_08009F50
_08089470:
	adds r0, r7, #0
	adds r0, #0x6c
	movs r1, #5
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	adds r0, r7, #0
	adds r0, #0xbc
	movs r1, #6
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	movs r0, #0
	strh r0, [r7, #0x16]
	strh r0, [r7, #0x1a]
	b _0808956E
_08089494:
	ldrh r0, [r7, #0x1e]
	adds r0, #1
	strh r0, [r7, #0x1e]
	ldrh r0, [r7, #0x1e]
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _08089596
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08089596
	strh r0, [r7, #0x16]
	movs r1, #0x10
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _0808956E
	b _0808952E
_080894BE:
	movs r2, #0
	movs r5, #0
	strh r5, [r7, #6]
	add r1, sp, #0x40
	movs r0, #0x11
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	movs r0, #7
	strb r0, [r1, #2]
	movs r0, #0xf
	strb r0, [r1, #3]
	strb r2, [r1, #1]
	movs r4, #2
	strb r4, [r1, #6]
	strb r2, [r1]
	strb r4, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	strb r2, [r1, #9]
	str r5, [r1, #0xc]
	str r5, [r1, #0x10]
	adds r0, r7, #6
	bl sub_08019944
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _0808956E
_08089502:
	adds r0, r7, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08089596
	adds r0, r7, #0
	adds r0, #8
	ldr r2, _08089534 @ =gUnk_080BFF8C
	movs r1, #0x10
	str r1, [sp]
	ldr r1, _08089538 @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r3, #9
	bl sub_0800B1AC
_0808952E:
	movs r0, #0x32
	strh r0, [r7, #4]
	b _08089596
	.align 2, 0
_08089534: .4byte gUnk_080BFF8C
_08089538: .4byte 0x44444444
_0808953C:
	ldr r0, _08089578 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08089596
	adds r0, r7, #0
	adds r0, #0x6c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08089596
	movs r3, #0x10
	ldrsh r0, [r7, r3]
	cmp r0, #1
	bne _0808957C
	adds r0, r7, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r7, #6
	bl sub_0801BA7C
_0808956E:
	ldrh r0, [r7, #4]
	adds r0, #1
	strh r0, [r7, #4]
	b _08089596
	.align 2, 0
_08089578: .4byte gKeyNewPress
_0808957C:
	movs r0, #0
	strh r0, [r7, #4]
	b _08089594
_08089582:
	adds r0, r7, #6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _08089596
	strh r0, [r7, #4]
	movs r0, #0
_08089594:
	mov sb, r0
_08089596:
	mov r0, sb
_08089598:
	add sp, #0x54
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080895A8
sub_080895A8: @ 0x080895A8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x1c
	bl sub_0806F020
	adds r7, r0, #0
	movs r5, #0
	movs r6, #0
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	mov r8, r0
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080895D6
	movs r1, #2
	movs r0, #3
	b _080895DA
_080895D6:
	movs r1, #4
	movs r0, #5
_080895DA:
	mov sb, r0
	mov r0, r8
	bl sub_08001D78
	ldr r4, _08089644 @ =gUnk_02020000
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #4
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	mov r1, sb
	mov r0, r8
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #4
	movs r1, #4
	bl sub_0800A630
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08089672
	bl sub_08018914
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808966C
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _08089648
	movs r5, #8
	movs r6, #9
	b _08089682
	.align 2, 0
_08089644: .4byte gUnk_02020000
_08089648:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808965A
	movs r5, #0xa
	movs r6, #0xb
	b _08089682
_0808965A:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808966C
	movs r5, #0xc
	movs r6, #0xd
	b _08089682
_0808966C:
	movs r5, #6
	movs r6, #7
	b _08089682
_08089672:
	bl sub_0806F0A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _08089682
	movs r5, #0xe
	movs r6, #0xf
_08089682:
	adds r1, r5, #0
	mov r0, r8
	bl sub_08001D78
	ldr r4, _08089824 @ =gUnk_02022800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #5
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x14
	bl sub_08010D40
	adds r1, r6, #0
	mov r0, r8
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #5
	movs r1, #5
	bl sub_0800A630
	mov r0, r8
	movs r1, #0
	bl sub_08001D78
	ldr r4, _08089828 @ =gUnk_02025000
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #6
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x16
	bl sub_08010D40
	mov r0, r8
	movs r1, #1
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #6
	movs r1, #6
	bl sub_0800A630
	adds r4, r7, #0
	adds r4, #0x44
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _0808982C @ =0x06010000
	movs r5, #0x80
	lsls r5, r5, #4
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x60
	movs r2, #0x6d
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #5
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #4
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _08089830 @ =0x06010800
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x8f
	movs r2, #0x6d
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	adds r4, #0x50
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #6
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _08089834 @ =0x06011000
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x78
	movs r2, #0x70
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #6
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _08089838 @ =0x06011800
	movs r3, #0xc0
	lsls r3, r3, #4
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x70
	movs r2, #0x38
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	bl sub_0800A6C4
	movs r0, #0
	strh r0, [r7, #0x14]
	strh r0, [r7, #0x16]
	strh r0, [r7, #0x18]
	movs r0, #1
	strh r0, [r7, #0x1a]
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08089824: .4byte gUnk_02022800
_08089828: .4byte gUnk_02025000
_0808982C: .4byte 0x06010000
_08089830: .4byte 0x06010800
_08089834: .4byte 0x06011000
_08089838: .4byte 0x06011800

	thumb_func_start sub_0808983C
sub_0808983C: @ 0x0808983C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	adds r7, r0, #0
	movs r0, #0
	str r0, [sp, #0x3c]
	movs r1, #0
	str r1, [sp, #0x40]
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089864
	adds r2, r7, #0
	adds r2, #0x3a
	str r2, [sp, #0x3c]
	adds r0, r7, #0
	adds r0, #0x40
	b _08089870
_08089864:
	cmp r0, #1
	bne _08089874
	adds r0, r7, #0
	adds r0, #0x42
	str r0, [sp, #0x3c]
	adds r0, #6
_08089870:
	ldrh r0, [r0]
	str r0, [sp, #0x40]
_08089874:
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #6
	bls _0808987E
	b _08089DF8
_0808987E:
	lsls r0, r0, #2
	ldr r1, _08089888 @ =_0808988C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08089888: .4byte _0808988C
_0808988C: @ jump table
	.4byte _080898A8 @ case 0
	.4byte _0808995A @ case 1
	.4byte _0808997C @ case 2
	.4byte _08089B4A @ case 3
	.4byte _08089CCC @ case 4
	.4byte _08089D80 @ case 5
	.4byte _08089DCC @ case 6
_080898A8:
	movs r4, #0
	movs r5, #0
	strh r5, [r7, #0xe]
	add r1, sp, #0x14
	movs r0, #0x11
	strb r0, [r1, #4]
	ldr r2, [sp, #0x40]
	lsls r0, r2, #1
	adds r0, #4
	strb r0, [r1, #5]
	adds r2, r1, #0
	adds r0, r1, #0
	ldrb r0, [r0, #4]
	movs r1, #0x1e
	subs r0, r1, r0
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	strb r0, [r2, #2]
	adds r0, r2, #0
	ldrb r0, [r0, #5]
	movs r1, #0x10
	mov sl, r1
	subs r0, r1, r0
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	strb r0, [r2, #3]
	adds r0, r2, #0
	ldrb r0, [r0, #2]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r7, #8]
	adds r0, r2, #0
	ldrb r0, [r0, #3]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	strh r0, [r7, #0xa]
	adds r0, r2, #0
	strb r4, [r0, #1]
	movs r2, #1
	mov sb, r2
	mov r1, sb
	strb r1, [r0, #6]
	strb r4, [r0]
	movs r2, #2
	mov r8, r2
	mov r1, r8
	strb r1, [r0, #7]
	movs r6, #6
	strb r6, [r0, #8]
	strb r4, [r0, #9]
	str r5, [sp, #0x20]
	str r5, [sp, #0x24]
	adds r0, r7, #0
	adds r0, #0xe
	add r1, sp, #0x14
	bl sub_08019944
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	strh r5, [r7, #0x10]
	add r1, sp, #0x28
	movs r2, #0x1e
	strb r2, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	strb r4, [r1, #2]
	mov r0, sl
	strb r0, [r1, #3]
	strb r4, [r1, #1]
	mov r2, sb
	strb r2, [r1, #6]
	strb r4, [r1]
	mov r0, r8
	strb r0, [r1, #7]
	strb r6, [r1, #8]
	strb r4, [r1, #9]
	str r5, [r1, #0xc]
	str r5, [r1, #0x10]
	adds r0, r7, #0
	adds r0, #0x10
	bl sub_08019944
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
_0808995A:
	adds r0, r7, #0
	adds r0, #0xe
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0808996C
	b _08089DF8
_0808996C:
	adds r0, r7, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_080199C0
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
_0808997C:
	movs r2, #0
	ldrh r0, [r7]
	cmp r0, #0
	bne _0808998C
	ldr r0, _08089988 @ =gUnk_08BC9FBC
	b _08089992
	.align 2, 0
_08089988: .4byte gUnk_08BC9FBC
_0808998C:
	cmp r0, #1
	bne _08089994
	ldr r0, _08089A3C @ =gUnk_08BC9FC0
_08089992:
	ldr r2, [r0]
_08089994:
	adds r0, r7, #0
	adds r0, #0x12
	ldrh r3, [r7, #8]
	adds r3, #3
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r1, [r7, #0xa]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0xe
	movs r1, #0
	bl sub_080199C0
	adds r6, r7, #0
	adds r6, #0x4c
	movs r1, #0
	strh r4, [r7, #0xc]
	ldrb r0, [r7, #8]
	adds r0, #4
	strb r0, [r6]
	ldrb r0, [r7, #0xa]
	adds r0, #3
	strb r0, [r6, #1]
	strb r1, [r6, #6]
	strb r1, [r6, #7]
	strb r1, [r6, #0x11]
	strb r1, [r6, #0x12]
	movs r0, #0x18
	strh r0, [r6, #8]
	strh r4, [r6, #2]
	strh r4, [r6, #4]
	movs r0, #0xe0
	strb r0, [r6, #0xd]
	adds r0, r7, #0
	adds r0, #0x18
	str r0, [r6, #0x14]
	movs r1, #0
	mov sb, r1
	mov sl, r0
	ldr r2, [sp, #0x40]
	lsls r2, r2, #2
	str r2, [sp, #0x48]
	movs r0, #0x34
	adds r0, r0, r7
	mov r8, r0
	adds r1, r7, #0
	adds r1, #0xc
	str r1, [sp, #0x44]
	ldr r2, [sp, #0x40]
	cmp sb, r2
	blo _08089A14
	b _08089B16
_08089A14:
	mov r5, sl
	ldr r4, [sp, #0x3c]
	movs r0, #3
	ands r0, r2
	cmp r2, #0
	ble _08089A78
	cmp r0, #0
	beq _08089AA0
	cmp r0, #1
	ble _08089A78
	cmp r0, #2
	ble _08089A56
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089A40
	ldrb r0, [r4]
	bl sub_08063CFC
	b _08089A4C
	.align 2, 0
_08089A3C: .4byte gUnk_08BC9FC0
_08089A40:
	cmp r0, #1
	bne _08089A4E
	ldr r1, [sp, #0x3c]
	ldrb r0, [r1]
	bl sub_08063DB4
_08089A4C:
	str r0, [r7, #0x18]
_08089A4E:
	adds r5, #4
	adds r4, #1
	movs r2, #1
	add sb, r2
_08089A56:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089A64
	ldrb r0, [r4]
	bl sub_08063CFC
	b _08089A6E
_08089A64:
	cmp r0, #1
	bne _08089A70
	ldrb r0, [r4]
	bl sub_08063DB4
_08089A6E:
	str r0, [r5]
_08089A70:
	adds r5, #4
	adds r4, #1
	movs r0, #1
	add sb, r0
_08089A78:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089A86
	ldrb r0, [r4]
	bl sub_08063CFC
	b _08089A90
_08089A86:
	cmp r0, #1
	bne _08089A92
	ldrb r0, [r4]
	bl sub_08063DB4
_08089A90:
	str r0, [r5]
_08089A92:
	adds r5, #4
	adds r4, #1
	movs r1, #1
	add sb, r1
	ldr r2, [sp, #0x40]
	cmp sb, r2
	bhs _08089B16
_08089AA0:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089AAE
	ldrb r0, [r4]
	bl sub_08063CFC
	b _08089AB8
_08089AAE:
	cmp r0, #1
	bne _08089ABA
	ldrb r0, [r4]
	bl sub_08063DB4
_08089AB8:
	str r0, [r5]
_08089ABA:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089AC8
	ldrb r0, [r4, #1]
	bl sub_08063CFC
	b _08089AD2
_08089AC8:
	cmp r0, #1
	bne _08089AD4
	ldrb r0, [r4, #1]
	bl sub_08063DB4
_08089AD2:
	str r0, [r5, #4]
_08089AD4:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089AE2
	ldrb r0, [r4, #2]
	bl sub_08063CFC
	b _08089AEC
_08089AE2:
	cmp r0, #1
	bne _08089AEE
	ldrb r0, [r4, #2]
	bl sub_08063DB4
_08089AEC:
	str r0, [r5, #8]
_08089AEE:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089AFC
	ldrb r0, [r4, #3]
	bl sub_08063CFC
	b _08089B06
_08089AFC:
	cmp r0, #1
	bne _08089B08
	ldrb r0, [r4, #3]
	bl sub_08063DB4
_08089B06:
	str r0, [r5, #0xc]
_08089B08:
	adds r5, #0x10
	adds r4, #4
	movs r0, #4
	add sb, r0
	ldr r1, [sp, #0x40]
	cmp sb, r1
	blo _08089AA0
_08089B16:
	ldr r1, [sp, #0x48]
	add r1, sl
	movs r0, #0
	str r0, [r1]
	mov sb, r0
	mov r1, sb
	mov r2, r8
	strb r1, [r2]
	strb r0, [r2, #1]
	strb r0, [r2, #2]
	strb r0, [r2, #3]
	strb r0, [r2, #4]
	strb r0, [r2, #5]
	add r2, sp, #0x40
	ldrb r2, [r2]
	strb r2, [r6, #0xa]
	mov r1, r8
	str r1, [r6, #0x18]
	strb r0, [r6, #0x10]
	ldr r0, [sp, #0x44]
	adds r1, r6, #0
	bl sub_080072F8
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
_08089B4A:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _08089B5C
	b _08089DF8
_08089B5C:
	movs r6, #0
	mov sb, r6
	ldr r2, [sp, #0x40]
	cmp sb, r2
	blo _08089B68
	b _08089C6C
_08089B68:
	movs r0, #3
	mov sl, r0
	ldr r5, [sp, #0x3c]
	movs r0, #1
	ands r0, r2
	cmp r2, #0
	ble _08089B7A
	cmp r0, #0
	beq _08089BCC
_08089B7A:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089B8A
	ldr r1, [sp, #0x3c]
	ldrb r0, [r1]
	bl sub_08063D2C
	b _08089B96
_08089B8A:
	cmp r0, #1
	bne _08089B9A
	ldr r2, [sp, #0x3c]
	ldrb r0, [r2]
	bl sub_08063DE4
_08089B96:
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_08089B9A:
	mov r1, sb
	adds r1, #8
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r3, [r7, #8]
	adds r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r0, [r7, #0xa]
	add r0, sl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, _08089BDC @ =gUnk_02010000
	adds r2, r6, #0
	bl sub_08069DA8
	movs r0, #2
	add sl, r0
	adds r5, #1
	movs r1, #1
	add sb, r1
	ldr r2, [sp, #0x40]
	cmp sb, r2
	bhs _08089C6C
_08089BCC:
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089BE0
	ldrb r0, [r5]
	bl sub_08063D2C
	b _08089BEA
	.align 2, 0
_08089BDC: .4byte gUnk_02010000
_08089BE0:
	cmp r0, #1
	bne _08089BEE
	ldrb r0, [r5]
	bl sub_08063DE4
_08089BEA:
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_08089BEE:
	mov r1, sb
	adds r1, #8
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r3, [r7, #8]
	adds r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r0, [r7, #0xa]
	add r0, sl
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, _08089C28 @ =gUnk_02010000
	adds r2, r6, #0
	bl sub_08069DA8
	movs r0, #2
	add r0, sl
	mov r8, r0
	mov r4, sb
	adds r4, #1
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089C2C
	ldrb r0, [r5, #1]
	bl sub_08063D2C
	b _08089C36
	.align 2, 0
_08089C28: .4byte gUnk_02010000
_08089C2C:
	cmp r0, #1
	bne _08089C3A
	ldrb r0, [r5, #1]
	bl sub_08063DE4
_08089C36:
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
_08089C3A:
	adds r1, r4, #0
	adds r1, #8
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r3, [r7, #8]
	adds r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldrh r0, [r7, #0xa]
	add r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	ldr r0, _08089C98 @ =gUnk_02010000
	adds r2, r6, #0
	bl sub_08069DA8
	movs r1, #4
	add sl, r1
	adds r5, #2
	movs r2, #2
	add sb, r2
	ldr r0, [sp, #0x40]
	cmp sb, r0
	blo _08089BCC
_08089C6C:
	ldrh r4, [r7]
	cmp r4, #0
	bne _08089C9C
	ldr r1, [sp, #0x3c]
	ldrb r0, [r1]
	bl sub_08063D14
	adds r2, r0, #0
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #1
	bl sub_0800B1AC
	b _08089CC6
	.align 2, 0
_08089C98: .4byte gUnk_02010000
_08089C9C:
	cmp r4, #1
	bne _08089CC6
	ldr r2, [sp, #0x3c]
	ldrb r0, [r2]
	bl sub_08063DCC
	adds r2, r0, #0
	adds r0, r7, #0
	adds r0, #0x14
	movs r1, #0x11
	str r1, [sp]
	movs r3, #0
	str r3, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #1
	bl sub_0800B1AC
_08089CC6:
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
_08089CCC:
	ldr r0, _08089D2C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xc0
	ands r0, r1
	cmp r0, #0
	beq _08089D5E
	adds r5, r7, #0
	adds r5, #0xc
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	movs r5, #0
	strb r0, [r7, #6]
	movs r0, #6
	ldrsb r0, [r7, r0]
	cmp r0, r4
	bne _08089D02
	b _08089DF8
_08089D02:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	adds r4, r7, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_0800B4E4
	ldrh r0, [r7]
	cmp r0, #0
	bne _08089D30
	movs r0, #6
	ldrsb r0, [r7, r0]
	ldr r1, [sp, #0x3c]
	adds r0, r1, r0
	ldrb r0, [r0]
	bl sub_08063D14
	b _08089D42
	.align 2, 0
_08089D2C: .4byte gCurrentKeyPress
_08089D30:
	cmp r0, #1
	bne _08089DF8
	movs r0, #6
	ldrsb r0, [r7, r0]
	ldr r2, [sp, #0x3c]
	adds r0, r2, r0
	ldrb r0, [r0]
	bl sub_08063DCC
_08089D42:
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #0
	movs r3, #1
	bl sub_0800B1AC
	b _08089DF8
_08089D5E:
	ldr r0, _08089D7C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08089DF8
	adds r0, r7, #0
	adds r0, #0xc
	movs r1, #2
	movs r2, #1
	bl sub_08008E00
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
	.align 2, 0
_08089D7C: .4byte gKeyNewPress
_08089D80:
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_08008EF4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _08089DF8
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _08089DC8 @ =0x00007FFF
	movs r0, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #6
	ldrsb r0, [r7, r0]
	ldr r1, [sp, #0x3c]
	adds r0, r1, r0
	ldrb r0, [r0]
	strb r0, [r7, #7]
	ldrh r0, [r7, #2]
	adds r0, #1
	b _08089DF6
	.align 2, 0
_08089DC8: .4byte 0x00007FFF
_08089DCC:
	adds r0, r7, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x14
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0xe
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0x10
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_08008C14
	movs r0, #0
_08089DF6:
	strh r0, [r7, #2]
_08089DF8:
	movs r2, #2
	ldrsh r0, [r7, r2]
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08089E0C
sub_08089E0C: @ 0x08089E0C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x28
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #0x16
	bls _08089E26
	bl _0808A630
_08089E26:
	lsls r0, r0, #2
	ldr r1, _08089E30 @ =_08089E34
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08089E30: .4byte _08089E34
_08089E34: @ jump table
	.4byte _08089E90 @ case 0
	.4byte _08089EE8 @ case 1
	.4byte _08089FAC @ case 2
	.4byte _08089FEA @ case 3
	.4byte _0808A092 @ case 4
	.4byte _0808A1B4 @ case 5
	.4byte _0808A260 @ case 6
	.4byte _0808A2D4 @ case 7
	.4byte _0808A54E @ case 8
	.4byte _0808A2F2 @ case 9
	.4byte _0808A324 @ case 10
	.4byte _0808A3A8 @ case 11
	.4byte _0808A3FC @ case 12
	.4byte _0808A40A @ case 13
	.4byte _0808A44C @ case 14
	.4byte _0808A4F8 @ case 15
	.4byte _0808A560 @ case 16
	.4byte _0808A630 @ case 17
	.4byte _0808A630 @ case 18
	.4byte _0808A630 @ case 19
	.4byte _0808A630 @ case 20
	.4byte _0808A5A4 @ case 21
	.4byte _0808A5EC @ case 22
_08089E90:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _08089EE2
	bl sub_0808AB3C
	movs r0, #0xf0
	str r0, [r7, #0x2c]
	movs r0, #0x4c
	str r0, [r7, #0x30]
	adds r4, r7, #0
	adds r4, #0x3c
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #4
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #7
	movs r2, #1
	bl sub_0800A6C0
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	b _0808A54E
_08089EE2:
	movs r0, #0
	strh r0, [r7]
	b _0808A630
_08089EE8:
	ldrh r0, [r7, #2]
	adds r0, #1
	movs r4, #0
	strh r0, [r7, #2]
	ldr r0, _08089FA4 @ =0x43700000
	ldr r1, _08089FA8 @ =0x42900000
	ldrh r3, [r7, #2]
	movs r2, #0x14
	str r2, [sp]
	movs r2, #0x82
	bl sub_08001140
	bl __fixsfsi
	str r0, [r7, #0x2c]
	ldrh r0, [r7, #2]
	cmp r0, #0x14
	bne _08089F1A
	strh r4, [r7, #2]
	movs r0, #0x48
	str r0, [r7, #0x2c]
	str r4, [r7, #0x14]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
_08089F1A:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r7, #0x10]
	ldr r1, [r7, #8]
	str r1, [r7, #0xc]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	str r4, [r7, #0x1c]
	adds r0, r6, #0
	bl sub_08018500
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	str r4, [r7, #0x20]
	ldr r2, [r7, #0x1c]
	ldr r0, [r7, #0x2c]
	str r0, [sp]
	ldr r0, [r7, #0x30]
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x50
	adds r3, r4, #0
	bl sub_0808A640
	b _0808A630
	.align 2, 0
_08089FA4: .4byte 0x43700000
_08089FA8: .4byte 0x42900000
_08089FAC:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	bne _08089FC0
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
_08089FC0:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r2, [r7, #0x1c]
	ldr r3, [r7, #0x20]
	ldr r0, [r7, #0x2c]
	str r0, [sp]
	ldr r0, [r7, #0x30]
	b _0808A5E0
_08089FEA:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [r7, #0x10]
	ldr r1, [r7, #8]
	str r1, [r7, #0xc]
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	str r4, [r7, #0x1c]
	adds r0, r6, #0
	bl sub_08018500
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	ldr r0, [r7, #0xc]
	lsls r0, r0, #0xa
	str r0, [r7, #0xc]
	ldr r1, [r7, #0x1c]
	lsls r1, r1, #0xa
	str r1, [r7, #0x1c]
	lsls r4, r4, #0xa
	str r4, [r7, #0x20]
	str r4, [r7, #0x24]
	movs r1, #0x78
	bl __divsi3
	str r0, [r7, #0x28]
	movs r0, #0
	strh r0, [r7, #2]
	str r0, [r7, #0x18]
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r2, [r7, #0x1c]
	ldr r3, [r7, #0x24]
	ldr r0, [r7, #0x2c]
	str r0, [sp]
	ldr r0, [r7, #0x30]
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x50
	bl sub_0808A640
	b _0808A552
_0808A092:
	ldrh r1, [r7, #2]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	bne _0808A0B2
	cmp r1, #0x78
	beq _0808A0B2
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x65
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_0808A0B2:
	ldr r0, [r7, #0xc]
	ldr r1, [r7, #0x28]
	subs r0, r0, r1
	str r0, [r7, #0xc]
	ldr r0, [r7, #0x24]
	adds r0, r0, r1
	str r0, [r7, #0x24]
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x78
	bne _0808A0DE
	movs r0, #1
	bl sub_08014848
	ldr r0, [r7, #0x24]
	str r0, [r7, #0x20]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
_0808A0DE:
	ldr r1, [r7, #0x24]
	ldr r0, [r7, #0x1c]
	cmp r1, r0
	blt _0808A18A
	ldr r0, [r7, #0x10]
	adds r0, #1
	str r0, [r7, #0x10]
	cmp r0, #8
	bgt _0808A136
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0xa
	str r4, [r7, #0x1c]
	ldr r0, [r7, #0x10]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #6
	ldr r1, [r7, #0x24]
	adds r1, r1, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #6
	subs r1, r1, r0
	str r1, [r7, #0x24]
	b _0808A180
_0808A136:
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0xa
	str r4, [r7, #0x1c]
	ldr r0, [r7, #0x10]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	adds r4, r0, #0
	ldrb r0, [r7, #0x10]
	bl sub_08018524
	lsls r4, r4, #0x10
	lsrs r4, r4, #6
	ldr r1, [r7, #0x24]
	adds r1, r1, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #6
	subs r1, r1, r0
	str r1, [r7, #0x24]
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
_0808A180:
	movs r0, #1
	str r0, [r7, #0x14]
	ldr r0, [r7, #0x18]
	adds r0, #1
	str r0, [r7, #0x18]
_0808A18A:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r2, [r7, #0x1c]
	ldr r3, [r7, #0x24]
	ldr r0, [r7, #0x2c]
	str r0, [sp]
	ldr r0, [r7, #0x30]
	b _0808A5E0
_0808A1B4:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r6, #0
	bl GetForgeLevel
	movs r4, #0
	strb r0, [r7, #6]
	adds r0, r6, #0
	bl sub_08018500
	adds r1, r0, #0
	ldr r0, [r7, #8]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08017D84
	adds r0, r6, #0
	bl GetForgeLevel
	adds r1, r0, #0
	ldr r0, [r7, #0x18]
	adds r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl SetForgeLevel
	str r4, [r7, #0x18]
	adds r0, r6, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #8
	bhi _0808A232
	adds r0, r6, #0
	bl sub_08018500
	adds r4, r0, #0
	adds r0, r6, #0
	bl GetForgeLevel
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018524
	lsls r4, r4, #0x10
	lsls r0, r0, #0x10
	cmp r4, r0
	blo _0808A232
	movs r0, #1
	str r0, [r7, #0x14]
	ldr r0, [r7, #0x18]
	adds r0, #1
	str r0, [r7, #0x18]
_0808A232:
	adds r0, r6, #0
	bl GetForgeLevel
	adds r1, r0, #0
	ldr r0, [r7, #0x18]
	adds r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r6, #0
	bl SetForgeLevel
	ldr r0, [r7, #0x14]
	cmp r0, #1
	bne _0808A258
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	b _0808A5B2
_0808A258:
	movs r0, #0
	strh r0, [r7, #2]
	movs r0, #0x15
	b _0808A5B6
_0808A260:
	bl sub_0808A820
	movs r0, #0x40
	bl sub_08004840
	movs r0, #1
	bl sub_0800485C
	movs r0, #0xf0
	lsls r0, r0, #5
	bl sub_08004878
	movs r0, #0x10
	strh r0, [r7, #4]
	bl sub_08004894
	movs r0, #0x10
	bl sub_080048B0
	movs r0, #4
	bl sub_08011104
	ldr r4, _0808A2CC @ =0xFFFF3FFF
	movs r0, #4
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #4
	movs r1, #1
	bl sub_08011174
	movs r0, #4
	movs r1, #0x30
	bl sub_08011260
	movs r0, #4
	bl sub_080111B0
	movs r0, #3
	bl sub_08011104
	ldr r2, _0808A2D0 @ =0x00007F94
	movs r0, #3
	adds r1, r4, #0
	movs r3, #0x32
	bl sub_0801015C
	movs r0, #3
	movs r1, #2
	bl sub_08011174
	b _0808A552
	.align 2, 0
_0808A2CC: .4byte 0xFFFF3FFF
_0808A2D0: .4byte 0x00007F94
_0808A2D4:
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x73
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	b _0808A552
_0808A2F2:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xf
	beq _0808A302
	b _0808A630
_0808A302:
	movs r0, #4
	movs r1, #2
	bl sub_080111FC
	movs r0, #4
	movs r1, #0xc
	bl sub_08011260
	movs r0, #4
	bl sub_080111D8
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	movs r0, #0
	strh r0, [r7, #2]
	b _0808A630
_0808A324:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xa
	bls _0808A350
	ldrh r1, [r7, #2]
	movs r0, #1
	ands r1, r0
	cmp r1, #0
	bne _0808A350
	ldrh r0, [r7, #4]
	subs r0, #1
	strh r0, [r7, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0808A34A
	strh r1, [r7, #4]
_0808A34A:
	ldrh r0, [r7, #4]
	bl sub_08004894
_0808A350:
	movs r0, #4
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0808A360
	b _0808A630
_0808A360:
	movs r0, #4
	bl sub_08011104
	movs r0, #0
	bl sub_08004894
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	movs r1, #0xd
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #0
	bl sub_0800E74C
	movs r0, #0x14
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #0
	strh r4, [r7, #2]
	strb r0, [r7, #7]
	b _0808A552
_0808A3A8:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _0808A3E8 @ =0x0000C483
	ldr r2, _0808A3EC @ =gUnk_08BC9DF4
	lsls r1, r6, #2
	adds r1, r1, r2
	ldr r1, [r1]
	bl sub_0800E77C
	ldr r5, _0808A3F0 @ =0x0000C583
	ldr r4, _0808A3F4 @ =gUnk_08BC9E10
	adds r0, r6, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r1, [r0]
	adds r0, r5, #0
	bl sub_0800E77C
	ldr r0, _0808A3F8 @ =gUnk_08BC9FF0
	ldr r0, [r0]
	bl sub_0806A040
	b _0808A552
	.align 2, 0
_0808A3E8: .4byte 0x0000C483
_0808A3EC: .4byte gUnk_08BC9DF4
_0808A3F0: .4byte 0x0000C583
_0808A3F4: .4byte gUnk_08BC9E10
_0808A3F8: .4byte gUnk_08BC9FF0
_0808A3FC:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808A408
	b _0808A630
_0808A408:
	b _0808A552
_0808A40A:
	movs r2, #0
	movs r3, #0
	strh r3, [r7, #0x34]
	add r0, sp, #0x14
	movs r4, #1
	strb r4, [r0, #2]
	movs r5, #6
	strb r5, [r0, #3]
	adds r1, r0, #0
	movs r0, #0x1c
	strb r0, [r1, #4]
	movs r0, #8
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r2, [r0, #1]
	strb r4, [r0, #6]
	strb r2, [r0]
	movs r0, #2
	strb r0, [r1, #7]
	adds r0, r1, #0
	strb r5, [r0, #8]
	strb r2, [r0, #9]
	str r3, [sp, #0x20]
	str r3, [sp, #0x24]
	adds r0, r7, #0
	adds r0, #0x34
	bl sub_08019944
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	b _0808A552
_0808A44C:
	movs r1, #0x34
	adds r1, r1, r7
	mov r8, r1
	mov r0, r8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0808A462
	b _0808A630
_0808A462:
	movs r4, #0
	strh r4, [r7, #0x36]
	strh r4, [r7, #0x38]
	strh r4, [r7, #0x3a]
	adds r0, r7, #0
	adds r0, #0x36
	ldr r5, _0808A4F4 @ =gUnk_08BC9FF4
	movs r2, #6
	ldrsb r2, [r7, r2]
	adds r2, #1
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r1, r1, r5
	ldr r2, [r1]
	movs r1, #7
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r6, #2
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #2
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x38
	movs r2, #6
	ldrsb r2, [r7, r2]
	adds r2, #1
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r2, r5, #4
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #9
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #2
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x3a
	movs r2, #6
	ldrsb r2, [r7, r2]
	adds r2, #1
	lsls r1, r2, #1
	adds r1, r1, r2
	lsls r1, r1, #2
	adds r5, #8
	adds r1, r1, r5
	ldr r2, [r1]
	movs r1, #0xb
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #2
	bl sub_0800B1AC
	mov r0, r8
	movs r1, #1
	bl sub_080199C0
	b _0808A552
	.align 2, 0
_0808A4F4: .4byte gUnk_08BC9FF4
_0808A4F8:
	ldr r0, _0808A55C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0808A50C
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808A510
_0808A50C:
	movs r0, #1
	strb r0, [r7, #7]
_0808A510:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x3c
	bhi _0808A520
	b _0808A630
_0808A520:
	movs r0, #7
	ldrsb r0, [r7, r0]
	cmp r0, #1
	beq _0808A52A
	b _0808A630
_0808A52A:
	adds r0, r7, #0
	adds r0, #0x36
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x38
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x3a
	bl sub_0800B4E4
	adds r0, r7, #0
	adds r0, #0x34
	bl sub_0801BA7C
	movs r0, #0
	strb r0, [r7, #7]
_0808A54E:
	movs r0, #0
	strh r0, [r7, #2]
_0808A552:
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	b _0808A630
	.align 2, 0
_0808A55C: .4byte gKeyNewPress
_0808A560:
	adds r0, r7, #0
	adds r0, #0x34
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	bne _0808A630
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	subs r0, #2
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldrb r0, [r7, #6]
	adds r0, #1
	strb r0, [r7, #6]
	movs r4, #6
	ldrsb r4, [r7, r4]
	adds r0, r6, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r4, r0
	bne _0808A59E
	mov r0, r8
	strh r0, [r7]
	b _0808A630
_0808A59E:
	movs r0, #0xd
	strh r0, [r7]
	b _0808A630
_0808A5A4:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bne _0808A5B8
_0808A5B2:
	ldrh r0, [r7]
	adds r0, #1
_0808A5B6:
	strh r0, [r7]
_0808A5B8:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r2, [r7, #0x1c]
	ldr r3, [r7, #0x20]
	movs r0, #0x48
	str r0, [sp]
	movs r0, #0x4c
_0808A5E0:
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x50
	bl sub_0808A640
	b _0808A630
_0808A5EC:
	ldr r0, [r7, #0x2c]
	subs r0, #0xf
	str r0, [r7, #0x2c]
	movs r1, #0x60
	rsbs r1, r1, #0
	cmp r0, r1
	bgt _0808A5FE
	movs r0, #0
	strh r0, [r7]
_0808A5FE:
	adds r4, r7, #0
	adds r4, #0x3c
	movs r0, #0x2c
	ldrsh r1, [r7, r0]
	movs r0, #0x30
	ldrsh r2, [r7, r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r2, [r7, #0x1c]
	ldr r3, [r7, #0x20]
	ldr r0, [r7, #0x2c]
	str r0, [sp]
	ldr r0, [r7, #0x30]
	str r0, [sp, #4]
	adds r0, r7, #0
	movs r1, #0x50
	bl sub_0808A640
_0808A630:
	movs r1, #0
	ldrsh r0, [r7, r1]
	add sp, #0x28
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0808A640
sub_0808A640: @ 0x0808A640
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	str r0, [sp]
	adds r5, r1, #0
	adds r4, r2, #0
	str r3, [sp, #4]
	cmp r4, #0
	beq _0808A662
	lsls r0, r3, #0xa
	adds r1, r4, #0
	bl __udivsi3
	b _0808A664
_0808A662:
	movs r0, #0
_0808A664:
	muls r0, r5, r0
	lsrs r0, r0, #0xa
	cmp r4, #0
	bne _0808A674
	ldr r1, [sp, #4]
	cmp r1, #0
	bne _0808A674
	adds r0, r5, #0
_0808A674:
	lsrs r3, r0, #3
	mov r8, r3
	movs r1, #7
	ands r1, r0
	str r1, [sp, #8]
	movs r3, #0
	mov sb, r3
	ldr r0, [sp, #0x38]
	adds r0, #0x10
	str r0, [sp, #0x10]
	ldr r0, [sp, #0x3c]
	adds r0, #8
	str r0, [sp, #0xc]
	ldr r0, [sp]
	adds r0, #0x8c
	str r0, [sp, #0x14]
	cmp sb, r8
	blo _0808A69A
	b _0808A79E
_0808A69A:
	ldr r1, [sp, #0xc]
	lsls r1, r1, #0x10
	mov sl, r1
	ldr r3, [sp, #0x10]
	lsls r7, r3, #0x10
	ldr r6, [sp]
	adds r6, #0x64
	movs r0, #1
	mov r1, r8
	ands r0, r1
	cmp r1, #0
	ble _0808A6B6
	cmp r0, #0
	beq _0808A706
_0808A6B6:
	adds r0, r6, #0
	bl sub_08009F0C
	adds r0, r6, #0
	movs r1, #6
	movs r2, #0xd
	movs r3, #1
	bl sub_08009F50
	adds r0, r6, #0
	movs r1, #7
	movs r2, #1
	bl sub_0800A6C0
	asrs r1, r7, #0x10
	adds r0, r6, #0
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r6, #0
	bl sub_08009FF8
	adds r0, r6, #0
	bl sub_0800A778
	movs r0, #0x80
	lsls r0, r0, #0xc
	adds r7, r7, r0
	ldr r6, [sp]
	adds r6, #0x8c
	movs r1, #1
	mov sb, r1
	cmp sb, r8
	bhs _0808A79E
_0808A706:
	adds r0, r6, #0
	bl sub_08009F0C
	adds r0, r6, #0
	movs r1, #6
	movs r2, #0xd
	movs r3, #1
	bl sub_08009F50
	adds r0, r6, #0
	movs r1, #7
	movs r2, #1
	bl sub_0800A6C0
	asrs r1, r7, #0x10
	adds r0, r6, #0
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
	adds r0, r6, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r6, #0
	bl sub_08009FF8
	adds r0, r6, #0
	bl sub_0800A778
	movs r0, #0x80
	lsls r0, r0, #0xc
	adds r5, r7, r0
	adds r4, r6, #0
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #0xd
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #7
	movs r2, #1
	bl sub_0800A6C0
	asrs r5, r5, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r0, #0x80
	lsls r0, r0, #0xd
	adds r7, r7, r0
	adds r6, #0x50
	movs r1, #2
	add sb, r1
	cmp sb, r8
	blo _0808A706
_0808A79E:
	ldr r3, [sp, #4]
	cmp r3, #0
	beq _0808A7B4
	mov r0, r8
	cmp r0, #0
	bne _0808A7B4
	ldr r1, [sp, #8]
	cmp r1, #0
	bne _0808A7B4
	movs r3, #1
	str r3, [sp, #8]
_0808A7B4:
	mov r0, sb
	lsls r4, r0, #2
	add r4, sb
	lsls r4, r4, #3
	adds r4, #0x64
	ldr r1, [sp]
	adds r4, r1, r4
	adds r0, r4, #0
	bl sub_08009F0C
	ldr r2, [sp, #8]
	adds r2, #5
	adds r0, r4, #0
	movs r1, #6
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #7
	movs r2, #1
	bl sub_0800A6C0
	mov r3, sb
	lsls r1, r3, #3
	ldr r0, [sp, #0x10]
	adds r1, r0, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r3, [sp, #0xc]
	lsls r2, r3, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r0, [sp, #0x14]
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0808A820
sub_0808A820: @ 0x0808A820
	push {r4, r5, r6, lr}
	sub sp, #0x38
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	adds r4, r0, #0
	movs r1, #0x1a
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r4, #0
	movs r1, #0x1b
	bl sub_08001D78
	adds r6, r0, #0
	ldr r4, _0808A8BC @ =gUnk_02012400
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	ldr r5, _0808A8C0 @ =gUnk_02014C00
	adds r0, r6, #0
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _0808A8C4 @ =0x0600DA00
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0xe
	bl sub_08010D40
	movs r0, #0xd0
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r1, r5, #0
	adds r2, r5, #0
	movs r3, #0xe
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _0808A8C8 @ =0x06006800
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	bl CpuFastSet
	movs r0, #0
	movs r1, #0xd
	movs r2, #3
	bl sub_0800476C
	movs r0, #0
	bl sub_0800E764
	add sp, #0x38
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808A8BC: .4byte gUnk_02012400
_0808A8C0: .4byte gUnk_02014C00
_0808A8C4: .4byte 0x0600DA00
_0808A8C8: .4byte 0x06006800

	thumb_func_start sub_0808A8CC
sub_0808A8CC: @ 0x0808A8CC
	push {r4, r5, r6, lr}
	sub sp, #0xc
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x98
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _0808A970 @ =0x0100004C
	adds r0, r1, #0
	adds r1, r5, #0
	bl CpuSet
	movs r6, #0
	strh r4, [r5, #0xc]
	movs r0, #0x1a
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x20
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	movs r1, #4
	rsbs r1, r1, #0
	movs r0, #1
	movs r2, #0
	bl sub_08005E18
	movs r0, #0x85
	movs r1, #0
	bl sub_0800E6D0
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808A970: .4byte 0x0100004C

	thumb_func_start sub_0808A974
sub_0808A974: @ 0x0808A974
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #0
	adds r5, r4, #0
	adds r5, #0x10
	movs r7, #0
	ldrh r0, [r4, #0xc]
	cmp r0, #0
	bne _0808A99C
	adds r0, r4, #4
	movs r1, #0
	bl sub_08008EB4
	movs r1, #0
	bl sub_0800B31C
	strb r6, [r4, #0x10]
	b _0808A9AE
_0808A99C:
	adds r0, r4, #4
	movs r1, #0
	bl sub_08008EB4
	movs r1, #1
	bl sub_0800B31C
	movs r0, #1
	strb r0, [r4, #0x10]
_0808A9AE:
	adds r5, #1
	movs r0, #0x80
	lsls r0, r0, #9
	adds r7, r7, r0
	adds r6, #1
	cmp r6, #4
	bhi _0808AA26
_0808A9BC:
	ldrh r0, [r4, #0xc]
	cmp r0, r6
	bne _0808A9D4
	lsrs r1, r7, #0x10
	adds r0, r4, #4
	bl sub_08008EB4
	movs r1, #0
	bl sub_0800B31C
	movs r0, #0
	b _0808A9E4
_0808A9D4:
	lsrs r1, r7, #0x10
	adds r0, r4, #4
	bl sub_08008EB4
	movs r1, #1
	bl sub_0800B31C
	movs r0, #1
_0808A9E4:
	strb r0, [r5]
	movs r0, #0x80
	lsls r0, r0, #9
	adds r2, r7, r0
	adds r1, r6, #1
	ldrh r0, [r4, #0xc]
	cmp r0, r1
	bne _0808AA06
	lsrs r1, r2, #0x10
	adds r0, r4, #4
	bl sub_08008EB4
	movs r1, #0
	bl sub_0800B31C
	movs r0, #0
	b _0808AA16
_0808AA06:
	lsrs r1, r2, #0x10
	adds r0, r4, #4
	bl sub_08008EB4
	movs r1, #1
	bl sub_0800B31C
	movs r0, #1
_0808AA16:
	strb r0, [r5, #1]
	adds r5, #2
	movs r0, #0x80
	lsls r0, r0, #0xa
	adds r7, r7, r0
	adds r6, #2
	cmp r6, #4
	bls _0808A9BC
_0808AA26:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0808AA2C
sub_0808AA2C: @ 0x0808AA2C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	mov r8, r7
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	bl sub_0806F020
	lsls r1, r5, #1
	adds r0, #0x32
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r1, #0
	cmp r5, #3
	beq _0808AAB2
	cmp r1, #0xff
	bne _0808AA78
	ldr r0, _0808AA74 @ =gUnk_02010800
	adds r1, r7, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r6, [sp]
	movs r2, #0
	bl sub_08069DA8
	b _0808AA98
	.align 2, 0
_0808AA74: .4byte gUnk_02010800
_0808AA78:
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0808AAC0 @ =gUnk_02010800
	mov r1, r8
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r6, [sp]
	bl sub_08069DA8
_0808AA98:
	ldr r0, _0808AAC0 @ =gUnk_02010800
	adds r1, r5, #1
	subs r2, r4, #3
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp]
	str r6, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r2, #1
	movs r3, #0
	bl sub_08069E74
_0808AAB2:
	add sp, #0xc
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808AAC0: .4byte gUnk_02010800

	thumb_func_start __div05
__div05: @ 0x0808AAC4
	bx lr
	.align 2, 0

	thumb_func_start sub_0808AAC8
sub_0808AAC8: @ 0x0808AAC8
	push {lr}
	sub sp, #4
	adds r3, r0, #0
	movs r2, #0
	movs r0, #0
	strh r0, [r3, #2]
	strh r0, [r3, #4]
	strh r1, [r3]
	strb r2, [r3, #6]
	strb r2, [r3, #7]
	adds r1, r3, #0
	adds r1, #0x4a
	strh r0, [r1]
	strh r0, [r3, #0xc]
	strh r0, [r3, #0xe]
	strh r0, [r3, #0x12]
	str r0, [sp]
	adds r3, #0x4c
	ldr r2, _0808AAFC @ =0x0500000A
	mov r0, sp
	adds r1, r3, #0
	bl CpuSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0808AAFC: .4byte 0x0500000A

	thumb_func_start sub_0808AB00
sub_0808AB00: @ 0x0808AB00
	ldrb r0, [r0, #7]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bx lr

	thumb_func_start sub_0808AB08
sub_0808AB08: @ 0x0808AB08
	push {lr}
	adds r0, #0xe
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808AB28
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0808AB28
	movs r0, #0
	b _0808AB2A
_0808AB28:
	movs r0, #1
_0808AB2A:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808AB30
sub_0808AB30: @ 0x0808AB30
	movs r2, #0
	strh r2, [r0]
	strh r2, [r0, #2]
	str r2, [r0, #0xc]
	str r1, [r0, #8]
	bx lr

	thumb_func_start sub_0808AB3C
sub_0808AB3C: @ 0x0808AB3C
	push {r4, r5, r6, lr}
	sub sp, #0x1c
	movs r0, #3
	movs r1, #0x19
	bl sub_08001D3C
	adds r6, r0, #0
	movs r1, #0
	bl sub_08001D78
	ldr r4, _0808ABA4 @ =gUnk_02025000
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x10]
	ldr r5, _0808ABA8 @ =0x06013800
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	adds r1, r5, #0
	bl CpuFastSet
	movs r0, #6
	mov r1, sp
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x17
	bl sub_08010D40
	adds r0, r6, #0
	movs r1, #1
	bl sub_08001D78
	adds r2, r0, #0
	movs r0, #6
	movs r1, #6
	bl sub_0800A630
	add sp, #0x1c
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808ABA4: .4byte gUnk_02025000
_0808ABA8: .4byte 0x06013800

	thumb_func_start sub_0808ABAC
sub_0808ABAC: @ 0x0808ABAC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808ABD4
	cmp r0, #1
	bgt _0808ABC8
	cmp r0, #0
	beq _0808ABCE
	b _0808ABFA
_0808ABC8:
	cmp r0, #2
	beq _0808ABE6
	b _0808ABFA
_0808ABCE:
	bl sub_0808AC08
	b _0808ABD8
_0808ABD4:
	bl sub_0808AC9C
_0808ABD8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808ABFA
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808ABFA
_0808ABE6:
	bl sub_0808B008
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808ABFA
	movs r5, #0
	strh r5, [r4]
	ldr r0, _0808AC04 @ =0x0000080C
	bl sub_0806EFF0
_0808ABFA:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808AC04: .4byte 0x0000080C

	thumb_func_start sub_0808AC08
sub_0808AC08: @ 0x0808AC08
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808AC4C
	cmp r0, #1
	bgt _0808AC24
	cmp r0, #0
	beq _0808AC2E
	b _0808AC92
_0808AC24:
	cmp r0, #2
	beq _0808AC7C
	cmp r0, #3
	beq _0808AC8E
	b _0808AC92
_0808AC2E:
	bl sub_0808B070
	adds r0, r4, #0
	adds r0, #0x10
	ldr r2, _0808AC48 @ =0x000007E4
	adds r1, r4, r2
	bl sub_080072F8
	ldrh r0, [r4, #6]
	bl sub_0808B3F8
	b _0808AC86
	.align 2, 0
_0808AC48: .4byte 0x000007E4
_0808AC4C:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808AC86
_0808AC7C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808AC92
_0808AC86:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808AC92
_0808AC8E:
	movs r5, #0
	strh r5, [r4, #2]
_0808AC92:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808AC9C
sub_0808AC9C: @ 0x0808AC9C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x15
	bls _0808ACB8
	b _0808AFF8
_0808ACB8:
	lsls r0, r0, #2
	ldr r1, _0808ACC4 @ =_0808ACC8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808ACC4: .4byte _0808ACC8
_0808ACC8: @ jump table
	.4byte _0808AD20 @ case 0
	.4byte _0808AFF8 @ case 1
	.4byte _0808AFF8 @ case 2
	.4byte _0808AFF8 @ case 3
	.4byte _0808AFF8 @ case 4
	.4byte _0808AFF8 @ case 5
	.4byte _0808AFF8 @ case 6
	.4byte _0808AFF8 @ case 7
	.4byte _0808AFF8 @ case 8
	.4byte _0808AFF8 @ case 9
	.4byte _0808AE34 @ case 10
	.4byte _0808AED4 @ case 11
	.4byte _0808AFF8 @ case 12
	.4byte _0808AFF8 @ case 13
	.4byte _0808AFF8 @ case 14
	.4byte _0808AFF8 @ case 15
	.4byte _0808AFF8 @ case 16
	.4byte _0808AFF8 @ case 17
	.4byte _0808AFF8 @ case 18
	.4byte _0808AFF8 @ case 19
	.4byte _0808AFC8 @ case 20
	.4byte _0808AFE0 @ case 21
_0808AD20:
	adds r6, r5, #0
	adds r6, #0x10
	adds r0, r6, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808AD34
	b _0808AFF8
_0808AD34:
	ldr r0, _0808AD80 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0808AD84
	adds r0, r6, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	bl sub_080079E0
	adds r0, r6, #0
	bl sub_08008D30
	strh r0, [r5, #6]
	adds r0, r6, #0
	bl sub_08008D50
	strh r0, [r5, #8]
	ldrh r0, [r5, #6]
	cmp r0, r4
	bne _0808AD6A
	b _0808AFF8
_0808AD6A:
	bl sub_0808B3F8
	adds r0, r6, #0
	bl sub_08008C34
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0808AFF8
	.align 2, 0
_0808AD80: .4byte gCurrentKeyPress
_0808AD84:
	ldr r0, _0808ADC0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808AE16
	ldrh r1, [r5, #6]
	lsls r2, r1, #1
	movs r3, #0x87
	lsls r3, r3, #2
	adds r0, r5, r3
	adds r0, r0, r2
	ldrh r2, [r0]
	lsls r1, r1, #2
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r0, r5, r3
	adds r0, r0, r1
	ldrh r4, [r0]
	ldr r0, _0808ADC4 @ =0x0000012B
	cmp r2, r0
	bhi _0808ADD6
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0808ADCC
	ldr r0, _0808ADC8 @ =gUnk_08BC9EE8
	b _0808AE02
	.align 2, 0
_0808ADC0: .4byte gKeyNewPress
_0808ADC4: .4byte 0x0000012B
_0808ADC8: .4byte gUnk_08BC9EE8
_0808ADCC:
	bl sub_08018E3C
	cmp r4, r0
	bhi _0808AE00
	b _0808AE10
_0808ADD6:
	ldr r1, _0808ADF0 @ =0xFFFFFED4
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x63
	bne _0808ADF8
	ldr r0, _0808ADF4 @ =gUnk_08BC9EE8
	b _0808AE02
	.align 2, 0
_0808ADF0: .4byte 0xFFFFFED4
_0808ADF4: .4byte gUnk_08BC9EE8
_0808ADF8:
	bl sub_08018E3C
	cmp r4, r0
	bls _0808AE10
_0808AE00:
	ldr r0, _0808AE0C @ =gUnk_08BC9EE0
_0808AE02:
	ldr r0, [r0]
	str r0, [r5, #0x14]
	movs r0, #0x14
	strh r0, [r5, #2]
	b _0808AFF8
	.align 2, 0
_0808AE0C: .4byte gUnk_08BC9EE0
_0808AE10:
	movs r0, #0xa
	strh r0, [r5, #2]
	b _0808AFF8
_0808AE16:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0808AE20
	b _0808AFF8
_0808AE20:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r2, #0
	mov sb, r2
	mov r3, sb
	strh r3, [r5, #2]
	b _0808AFF8
_0808AE34:
	ldrh r1, [r5, #6]
	lsls r1, r1, #1
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r5, r2
	adds r0, r0, r1
	ldrh r6, [r0]
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E34
	ldr r0, _0808AE60 @ =0x0000012B
	cmp r6, r0
	bhi _0808AE64
	adds r0, r6, #0
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x1e
	b _0808AE76
	.align 2, 0
_0808AE60: .4byte 0x0000012B
_0808AE64:
	ldr r3, _0808AEB0 @ =0xFFFFFED4
	adds r0, r6, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x63
_0808AE76:
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	bl sub_08018E3C
	ldrh r2, [r5, #6]
	lsls r2, r2, #2
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r1, r5, r3
	adds r1, r1, r2
	ldr r7, [r1]
	adds r1, r7, #0
	bl __udivsi3
	lsls r1, r4, #0x10
	lsls r0, r0, #0x10
	cmp r1, r0
	ble _0808AE9E
	lsrs r4, r0, #0x10
_0808AE9E:
	ldr r0, _0808AEB4 @ =0x0000012B
	cmp r6, r0
	bhi _0808AEB8
	movs r0, #4
	adds r1, r6, #0
	bl sub_0806BC24
	b _0808AFD8
	.align 2, 0
_0808AEB0: .4byte 0xFFFFFED4
_0808AEB4: .4byte 0x0000012B
_0808AEB8:
	ldr r0, _0808AED0 @ =0xFFFFFED4
	adds r1, r6, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r7, #0x10
	lsrs r2, r2, #0x10
	adds r3, r4, #0
	movs r0, #0
	bl sub_0806B698
	b _0808AFD8
	.align 2, 0
_0808AED0: .4byte 0xFFFFFED4
_0808AED4:
	ldrh r0, [r5, #6]
	lsls r0, r0, #1
	movs r1, #0x87
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r4, r0
	ldrh r1, [r0]
	ldr r0, _0808AF44 @ =0x0000012B
	cmp r1, r0
	bhi _0808AF48
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	beq _0808AEF6
	b _0808AFF8
_0808AEF6:
	ldrh r0, [r5, #6]
	lsls r0, r0, #1
	adds r0, r4, r0
	ldrh r4, [r0]
	bl sub_0806F60C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808AF28
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	bl sub_08015854
	bl sub_08018E3C
	ldrh r2, [r5, #6]
	lsls r2, r2, #2
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r1, r5, r3
	adds r1, r1, r2
	ldr r1, [r1]
	subs r0, r0, r1
	bl SetMoney
_0808AF28:
	ldrh r0, [r5, #6]
	bl sub_0808B3F8
	adds r4, r5, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl sub_08008C34
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	strh r6, [r5, #2]
	b _0808AFF8
	.align 2, 0
_0808AF44: .4byte 0x0000012B
_0808AF48:
	bl sub_0806B750
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	bne _0808AFF8
	ldrh r0, [r5, #6]
	lsls r0, r0, #1
	adds r0, r4, r0
	ldrh r4, [r0]
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	asrs r7, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r7, r0
	beq _0808AFA6
	ldr r0, _0808AFC4 @ =0xFFFFFED4
	adds r4, r4, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, r1, r6
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	bl sub_08018E3C
	ldrh r2, [r5, #6]
	lsls r2, r2, #2
	movs r3, #0xe8
	lsls r3, r3, #2
	adds r1, r5, r3
	adds r1, r1, r2
	ldr r1, [r1]
	muls r1, r7, r1
	subs r0, r0, r1
	bl SetMoney
_0808AFA6:
	ldrh r0, [r5, #6]
	bl sub_0808B3F8
	adds r4, r5, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl sub_08008C34
	adds r0, r4, #0
	movs r1, #1
	bl sub_08008E34
	mov r0, r8
	strh r0, [r5, #2]
	b _0808AFF8
	.align 2, 0
_0808AFC4: .4byte 0xFFFFFED4
_0808AFC8:
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r5, #0x14]
	bl sub_0806A040
_0808AFD8:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0808AFF8
_0808AFE0:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0808AFF8
	adds r0, r5, #0
	adds r0, #0x10
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r5, #2]
_0808AFF8:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808B008
sub_0808B008: @ 0x0808B008
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808B038
	cmp r0, #1
	bgt _0808B024
	cmp r0, #0
	beq _0808B02E
	b _0808B068
_0808B024:
	cmp r0, #2
	beq _0808B044
	cmp r0, #3
	beq _0808B064
	b _0808B068
_0808B02E:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0808B05C
_0808B038:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808B068
	b _0808B05C
_0808B044:
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0808B05C:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808B068
_0808B064:
	movs r5, #0
	strh r5, [r4, #2]
_0808B068:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808B070
sub_0808B070: @ 0x0808B070
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	bl sub_0806F020
	str r0, [sp]
	ldr r1, _0808B120 @ =0x000007E4
	adds r1, r0, r1
	str r1, [sp, #4]
	movs r1, #0
	movs r0, #4
	ldr r2, [sp, #4]
	strb r0, [r2]
	movs r0, #3
	strb r0, [r2, #1]
	movs r0, #2
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	ldr r3, [sp]
	ldrh r0, [r3, #6]
	strh r0, [r2, #2]
	ldrh r0, [r3, #8]
	strh r0, [r2, #4]
	movs r0, #0xe0
	strb r0, [r2, #0xd]
	movs r0, #0xf0
	strb r0, [r2, #0xc]
	adds r2, r3, #0
	adds r2, #0x18
	ldr r4, [sp, #4]
	str r2, [r4, #0x14]
	ldr r6, _0808B124 @ =0x0000031E
	adds r0, r3, r6
	str r0, [r4, #0x18]
	movs r3, #0
	ldr r0, _0808B128 @ =gUnk_03006B28
	ldrh r0, [r0]
	cmp r3, r0
	bhi _0808B1A2
	str r2, [sp, #0x1c]
	mov sb, r1
_0808B0CC:
	movs r7, #0
	mov r8, r7
	lsls r0, r1, #2
	adds r2, r1, #1
	str r2, [sp, #0x14]
	adds r0, r0, r1
	lsls r0, r0, #3
	mov sl, r0
	movs r2, #0
	mov r4, sb
	str r4, [sp, #0x2c]
	ldr r5, [sp, #0x1c]
	add r5, sb
_0808B0E6:
	ldr r0, _0808B12C @ =gUnk_03006B20
	movs r6, #0
	ldrsh r0, [r0, r6]
	lsls r1, r0, #6
	adds r1, r1, r0
	lsls r1, r1, #3
	ldr r0, _0808B130 @ =gUnk_08BCE56C
	add r0, sl
	adds r1, r1, r0
	str r1, [sp, #0x28]
	adds r0, r1, r2
	ldrh r4, [r0]
	ldr r0, _0808B134 @ =0x0000FFFF
	cmp r4, r0
	beq _0808B18C
	ldr r0, _0808B138 @ =0x0000012B
	cmp r4, r0
	bhi _0808B13C
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	str r2, [sp, #0x20]
	str r3, [sp, #0x24]
	bl sub_080639BC
	str r0, [r5]
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x24]
	b _0808B152
	.align 2, 0
_0808B120: .4byte 0x000007E4
_0808B124: .4byte 0x0000031E
_0808B128: .4byte gUnk_03006B28
_0808B12C: .4byte gUnk_03006B20
_0808B130: .4byte gUnk_08BCE56C
_0808B134: .4byte 0x0000FFFF
_0808B138: .4byte 0x0000012B
_0808B13C:
	ldr r7, _0808B1C0 @ =0xFFFFFED4
	adds r0, r4, r7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r2, [sp, #0x20]
	str r3, [sp, #0x24]
	bl sub_0806380C
	str r0, [r5]
	ldr r3, [sp, #0x24]
	ldr r2, [sp, #0x20]
_0808B152:
	ldr r1, [sp]
	ldr r6, _0808B1C4 @ =0x0000031E
	adds r0, r1, r6
	adds r0, r0, r3
	movs r1, #0
	strb r1, [r0]
	lsls r1, r3, #1
	ldr r7, [sp]
	movs r6, #0x87
	lsls r6, r6, #2
	adds r0, r7, r6
	adds r0, r0, r1
	strh r4, [r0]
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r4, [sp, #0x2c]
	adds r1, r1, r4
	ldr r0, [sp, #0x28]
	adds r0, #0x14
	adds r0, r0, r2
	ldrh r0, [r0]
	str r0, [r1]
	adds r4, #4
	str r4, [sp, #0x2c]
	adds r5, #4
	movs r6, #4
	add sb, r6
	adds r3, #1
_0808B18C:
	adds r2, #2
	movs r7, #1
	add r8, r7
	mov r0, r8
	cmp r0, #9
	bls _0808B0E6
	ldr r1, [sp, #0x14]
	ldr r0, _0808B1C8 @ =gUnk_03006B28
	ldrh r0, [r0]
	cmp r1, r0
	bls _0808B0CC
_0808B1A2:
	lsls r0, r3, #2
	ldr r2, [sp]
	adds r2, #0x18
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	str r2, [sp, #0x1c]
	cmp r3, #6
	bls _0808B1CC
	movs r0, #6
	ldr r1, [sp, #4]
	strb r0, [r1, #0xa]
	movs r0, #0x1e
	strh r0, [r1, #8]
	b _0808B1D4
	.align 2, 0
_0808B1C0: .4byte 0xFFFFFED4
_0808B1C4: .4byte 0x0000031E
_0808B1C8: .4byte gUnk_03006B28
_0808B1CC:
	ldr r2, [sp, #4]
	strb r3, [r2, #0xa]
	movs r0, #0x1a
	strh r0, [r2, #8]
_0808B1D4:
	ldr r4, [sp]
	strh r3, [r4, #0x12]
	ldrh r3, [r4, #0x12]
	movs r6, #0
	mov sl, r6
	cmp r3, #1
	beq _0808B272
_0808B1E2:
	subs r6, r3, #1
	mov r7, sl
	adds r7, #1
	str r7, [sp, #0x18]
	cmp r6, sl
	bls _0808B264
	movs r1, #0x87
	lsls r1, r1, #2
	ldr r0, [sp]
	adds r1, r0, r1
	str r1, [sp, #8]
	ldr r2, [sp, #0x1c]
	str r2, [sp, #0xc]
	ldr r3, _0808B2A0 @ =0x0000031E
	adds r3, r0, r3
	str r3, [sp, #0x10]
	movs r4, #0xe8
	lsls r4, r4, #2
	adds r0, r0, r4
	mov sb, r0
_0808B20A:
	subs r7, r6, #1
	mov r8, r7
	lsls r0, r7, #1
	ldr r1, [sp, #8]
	adds r1, r1, r0
	mov ip, r1
	ldrh r1, [r1]
	lsls r0, r6, #1
	ldr r2, [sp, #8]
	adds r7, r2, r0
	ldrh r3, [r7]
	cmp r1, r3
	bls _0808B25E
	mov r0, r8
	lsls r4, r0, #2
	ldr r1, [sp, #0xc]
	adds r2, r1, r4
	ldr r5, [r2]
	lsls r3, r6, #2
	adds r1, r1, r3
	ldr r0, [r1]
	str r0, [r2]
	str r5, [r1]
	mov r2, ip
	ldrh r1, [r2]
	ldrh r0, [r7]
	strh r0, [r2]
	strh r1, [r7]
	ldr r2, [sp, #0x10]
	add r2, r8
	ldrb r5, [r2]
	ldr r7, [sp, #0x10]
	adds r1, r7, r6
	ldrb r0, [r1]
	strb r0, [r2]
	strb r5, [r1]
	add r4, sb
	ldrh r1, [r4]
	add r3, sb
	ldr r0, [r3]
	str r0, [r4]
	str r1, [r3]
_0808B25E:
	mov r6, r8
	cmp r6, sl
	bhi _0808B20A
_0808B264:
	ldr r0, [sp, #0x18]
	mov sl, r0
	ldr r1, [sp]
	ldrh r3, [r1, #0x12]
	subs r0, r3, #1
	cmp sl, r0
	blo _0808B1E2
_0808B272:
	movs r1, #0
	movs r0, #0x90
	ldr r2, [sp, #4]
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	ldr r3, [sp]
	ldr r4, _0808B2A4 @ =0x000005A4
	adds r0, r3, r4
	str r0, [r2, #0x20]
	ldr r0, _0808B2A8 @ =0x06012400
	str r0, [r2, #0x1c]
	ldr r6, _0808B2AC @ =sub_0808B2B0
	str r6, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B2A0: .4byte 0x0000031E
_0808B2A4: .4byte 0x000005A4
_0808B2A8: .4byte 0x06012400
_0808B2AC: .4byte sub_0808B2B0

	thumb_func_start sub_0808B2B0
sub_0808B2B0: @ 0x0808B2B0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r8, r3
	bl sub_0806F020
	adds r6, r0, #0
	mov r0, sb
	lsls r1, r0, #1
	movs r2, #0x87
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r5, [r0]
	ldr r0, _0808B2F8 @ =0x0000012B
	cmp r5, r0
	bhi _0808B2FC
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	b _0808B308
	.align 2, 0
_0808B2F8: .4byte 0x0000012B
_0808B2FC:
	ldr r1, _0808B378 @ =0xFFFFFED4
	adds r0, r5, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063850
_0808B308:
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r7, _0808B37C @ =gUnk_02010800
	subs r3, r4, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov r0, r8
	str r0, [sp]
	adds r0, r7, #0
	mov r1, sl
	bl sub_08069DA8
	mov r4, r8
	adds r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	mov r2, sb
	lsls r1, r2, #2
	movs r2, #0xe8
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0808B380 @ =gUnk_080BFFA0
	adds r0, r7, #0
	movs r1, #0x15
	adds r2, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	adds r0, #0x10
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, sb
	bne _0808B3D8
	ldr r0, _0808B384 @ =0x0000012B
	cmp r5, r0
	bhi _0808B388
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl GetCertainWeaponQuantity
	b _0808B394
	.align 2, 0
_0808B378: .4byte 0xFFFFFED4
_0808B37C: .4byte gUnk_02010800
_0808B380: .4byte gUnk_080BFFA0
_0808B384: .4byte 0x0000012B
_0808B388:
	ldr r1, _0808B3CC @ =0xFFFFFED4
	adds r0, r5, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08018B50
_0808B394:
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	movs r0, #1
	bl sub_080012D4
	ldr r4, _0808B3D0 @ =gUnk_02010800
	ldr r3, _0808B3D4 @ =gUnk_080BFFA4
	adds r0, r4, #0
	movs r1, #0x12
	mov r2, r8
	bl sub_08001284
	mov r2, r8
	str r2, [sp]
	str r5, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	b _0808B3E4
	.align 2, 0
_0808B3CC: .4byte 0xFFFFFED4
_0808B3D0: .4byte gUnk_02010800
_0808B3D4: .4byte gUnk_080BFFA4
_0808B3D8:
	ldr r3, _0808B3F4 @ =gUnk_080BFFA8
	adds r0, r7, #0
	movs r1, #0x12
	mov r2, r8
	bl sub_08001284
_0808B3E4:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B3F4: .4byte gUnk_080BFFA8

	thumb_func_start sub_0808B3F8
sub_0808B3F8: @ 0x0808B3F8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	mov r8, r0
	lsls r4, r4, #1
	movs r0, #0x87
	lsls r0, r0, #2
	add r0, r8
	adds r0, r0, r4
	ldrh r7, [r0]
	ldr r6, _0808B524 @ =gUnk_02010800
	ldr r3, _0808B528 @ =gUnk_080BFFAC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #2
	bl sub_08001284
	ldr r3, _0808B52C @ =gUnk_080BFFB4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #6
	bl sub_08001284
	ldr r3, _0808B530 @ =gUnk_080BFFB8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #8
	bl sub_08001284
	ldr r3, _0808B534 @ =gUnk_080BFFBC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _0808B538 @ =gUnk_080BFFC0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _0808B53C @ =gUnk_080BFFC4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _0808B540 @ =gUnk_080BFFC8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #7
	bl sub_08001284
	ldr r4, _0808B544 @ =gUnk_080BFFD0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #9
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xb
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xd
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	bl sub_08018E3C
	movs r1, #2
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #7
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0808B548 @ =gUnk_080BFFA0
	adds r0, r6, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
	ldr r0, _0808B54C @ =0x0000012B
	cmp r7, r0
	bhi _0808B4CE
	b _0808B63C
_0808B4CE:
	ldr r1, _0808B550 @ =0xFFFFFED4
	adds r0, r7, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808B4F0
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808B554
_0808B4F0:
	adds r0, r5, #0
	bl sub_080638C8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r4, [sp]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080638E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	b _0808B5B2
	.align 2, 0
_0808B524: .4byte gUnk_02010800
_0808B528: .4byte gUnk_080BFFAC
_0808B52C: .4byte gUnk_080BFFB4
_0808B530: .4byte gUnk_080BFFB8
_0808B534: .4byte gUnk_080BFFBC
_0808B538: .4byte gUnk_080BFFC0
_0808B53C: .4byte gUnk_080BFFC4
_0808B540: .4byte gUnk_080BFFC8
_0808B544: .4byte gUnk_080BFFD0
_0808B548: .4byte gUnk_080BFFA0
_0808B54C: .4byte 0x0000012B
_0808B550: .4byte 0xFFFFFED4
_0808B554:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808B5C0
	adds r0, r5, #0
	bl sub_08063968
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063984
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080639A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
_0808B5B2:
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	b _0808B63C
_0808B5C0:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bne _0808B63C
	adds r0, r7, #0
	subs r0, #0x2c
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018AD8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808B63C
	adds r0, r5, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
_0808B63C:
	mov r1, r8
	ldrh r0, [r1, #0xe]
	mov r4, r8
	adds r4, #0xe
	cmp r0, #0
	beq _0808B64E
	adds r0, r4, #0
	bl sub_0800B4E4
_0808B64E:
	ldr r0, _0808B660 @ =0x0000012B
	cmp r7, r0
	bhi _0808B664
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639D0
	b _0808B670
	.align 2, 0
_0808B660: .4byte 0x0000012B
_0808B664:
	ldr r1, _0808B6A8 @ =0xFFFFFED4
	adds r0, r7, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063820
_0808B670:
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	mov r1, r8
	ldrh r0, [r1, #0xc]
	mov r5, r8
	adds r5, #0xc
	cmp r0, #0
	beq _0808B69E
	adds r0, r5, #0
	bl sub_0800B4E4
_0808B69E:
	ldr r0, _0808B6AC @ =0x0000012B
	cmp r7, r0
	bhi _0808B6B4
	ldr r2, _0808B6B0 @ =gUnk_080BFFD8
	b _0808B6CA
	.align 2, 0
_0808B6A8: .4byte 0xFFFFFED4
_0808B6AC: .4byte 0x0000012B
_0808B6B0: .4byte gUnk_080BFFD8
_0808B6B4:
	ldr r4, _0808B6F0 @ =gUnk_08BC9DD8
	ldr r1, _0808B6F4 @ =0xFFFFFED4
	adds r0, r7, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
_0808B6CA:
	movs r0, #3
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #2
	movs r3, #0x18
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B6F0: .4byte gUnk_08BC9DD8
_0808B6F4: .4byte 0xFFFFFED4

	thumb_func_start sub_0808B6F8
sub_0808B6F8: @ 0x0808B6F8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x10
	adds r5, r0, #0
	adds r6, r1, #0
	mov r8, r2
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r4, _0808B7D8 @ =0x00000B28
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r7, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	strh r5, [r7, #4]
	strh r6, [r7, #6]
	mov r0, r8
	strh r0, [r7, #8]
	cmp r5, #5
	bne _0808B764
	add r4, sp, #0xc
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0xe]
	adds r0, r4, #0
	bl sub_0806F054
	ldr r0, [sp, #0xc]
	strh r0, [r7, #0xc]
_0808B764:
	movs r0, #0x16
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808B7D8: .4byte 0x00000B28

	thumb_func_start sub_0808B7DC
sub_0808B7DC: @ 0x0808B7DC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808B804
	cmp r0, #1
	bgt _0808B7F8
	cmp r0, #0
	beq _0808B7FE
	b _0808B82A
_0808B7F8:
	cmp r0, #2
	beq _0808B816
	b _0808B82A
_0808B7FE:
	bl sub_0808B838
	b _0808B808
_0808B804:
	bl sub_0808B8C8
_0808B808:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808B82A
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808B82A
_0808B816:
	bl sub_0808BBF0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808B82A
	movs r5, #0
	strh r5, [r4]
	ldr r0, _0808B834 @ =0x00000B28
	bl sub_0806EFF0
_0808B82A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808B834: .4byte 0x00000B28

	thumb_func_start sub_0808B838
sub_0808B838: @ 0x0808B838
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808B878
	cmp r0, #1
	bgt _0808B854
	cmp r0, #0
	beq _0808B85E
	b _0808B8BE
_0808B854:
	cmp r0, #2
	beq _0808B8A8
	cmp r0, #3
	beq _0808B8BA
	b _0808B8BE
_0808B85E:
	bl sub_0808BC58
	adds r0, r4, #0
	adds r0, #0x14
	movs r2, #0xb0
	lsls r2, r2, #4
	adds r1, r4, r2
	bl sub_080072F8
	ldrh r0, [r4, #6]
	bl sub_0808BF38
	b _0808B8B2
_0808B878:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808B8B2
_0808B8A8:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808B8BE
_0808B8B2:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808B8BE
_0808B8BA:
	movs r5, #0
	strh r5, [r4, #2]
_0808B8BE:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808B8C8
sub_0808B8C8: @ 0x0808B8C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	mov sl, r0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x15
	bls _0808B8E8
	b _0808BBDC
_0808B8E8:
	lsls r0, r0, #2
	ldr r1, _0808B8F4 @ =_0808B8F8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808B8F4: .4byte _0808B8F8
_0808B8F8: @ jump table
	.4byte _0808B950 @ case 0
	.4byte _0808BBDC @ case 1
	.4byte _0808BBDC @ case 2
	.4byte _0808BBDC @ case 3
	.4byte _0808BBDC @ case 4
	.4byte _0808BBDC @ case 5
	.4byte _0808BBDC @ case 6
	.4byte _0808BBDC @ case 7
	.4byte _0808BBDC @ case 8
	.4byte _0808BBDC @ case 9
	.4byte _0808B9F2 @ case 10
	.4byte _0808BA34 @ case 11
	.4byte _0808BBDC @ case 12
	.4byte _0808BBDC @ case 13
	.4byte _0808BBDC @ case 14
	.4byte _0808BBDC @ case 15
	.4byte _0808BBDC @ case 16
	.4byte _0808BBDC @ case 17
	.4byte _0808BBDC @ case 18
	.4byte _0808BBDC @ case 19
	.4byte _0808BBA8 @ case 20
	.4byte _0808BBC0 @ case 21
_0808B950:
	adds r5, r6, #0
	adds r5, #0x14
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808B964
	b _0808BBDC
_0808B964:
	ldr r0, _0808B9B0 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0808B9B4
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	bne _0808B99A
	b _0808BBDC
_0808B99A:
	bl sub_0808BF38
	adds r0, r5, #0
	bl sub_08008C34
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0808BBDC
	.align 2, 0
_0808B9B0: .4byte gCurrentKeyPress
_0808B9B4:
	ldr r0, _0808B9D0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808B9D4
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	movs r0, #0xa
	strh r0, [r6, #2]
	b _0808BBDC
	.align 2, 0
_0808B9D0: .4byte gKeyNewPress
_0808B9D4:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0808B9DE
	b _0808BBDC
_0808B9DE:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r2, #0
	mov sl, r2
	mov r3, sl
	strh r3, [r6, #2]
	b _0808BBDC
_0808B9F2:
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E34
	ldrh r0, [r6, #6]
	lsls r0, r0, #1
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r4, r6, r1
	adds r0, r4, r0
	ldrh r0, [r0]
	bl sub_08018B50
	adds r3, r0, #0
	lsls r3, r3, #0x18
	ldrh r2, [r6, #6]
	lsls r0, r2, #1
	adds r4, r4, r0
	ldrh r1, [r4]
	lsls r2, r2, #2
	ldr r4, _0808BA30 @ =0x0000059C
	adds r0, r6, r4
	adds r0, r0, r2
	ldrh r2, [r0]
	lsrs r3, r3, #0x18
	movs r0, #1
	bl sub_0806B698
	b _0808BBB8
	.align 2, 0
_0808BA30: .4byte 0x0000059C
_0808BA34:
	bl sub_0806B750
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	beq _0808BA44
	b _0808BBDC
_0808BA44:
	ldrh r1, [r6, #6]
	lsls r1, r1, #1
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r7, [r0]
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r5, r0, #0x10
	movs r0, #1
	rsbs r0, r0, #0
	cmp r5, r0
	bne _0808BA66
	b _0808BB98
_0808BA66:
	adds r0, r7, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, r1, r4
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r7, #0
	bl SetItemQuantity
	bl sub_08018E3C
	ldrh r2, [r6, #6]
	lsls r2, r2, #2
	ldr r3, _0808BA9C @ =0x0000059C
	adds r1, r6, r3
	adds r1, r1, r2
	ldr r1, [r1]
	muls r1, r5, r1
	adds r0, r0, r1
	bl SetMoney
	movs r5, #0
	movs r4, #0x14
	adds r4, r4, r6
	mov r8, r4
	b _0808BAA2
	.align 2, 0
_0808BA9C: .4byte 0x0000059C
_0808BAA0:
	adds r5, #1
_0808BAA2:
	cmp r5, #3
	bgt _0808BACC
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl sub_080189D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _0808BAA0
	adds r0, r7, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808BAA0
	adds r0, r4, #0
	movs r1, #0xff
	bl SetBattleAidItem
_0808BACC:
	ldr r0, _0808BB20 @ =0x00000B0A
	adds r5, r6, r0
	ldrb r1, [r5]
	mov sb, r1
	bl sub_0808BC58
	ldrb r0, [r5]
	cmp r0, #0
	bne _0808BB30
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	mov r0, r8
	bl sub_08008C34
	bl sub_08018E3C
	ldr r4, _0808BB24 @ =gUnk_02010800
	movs r1, #2
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0808BB28 @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
	ldr r0, _0808BB2C @ =gUnk_08BC9EEC
	ldr r0, [r0]
	str r0, [r6, #0x18]
	movs r0, #0x14
	strh r0, [r6, #2]
	b _0808BBDC
	.align 2, 0
_0808BB20: .4byte 0x00000B0A
_0808BB24: .4byte gUnk_02010800
_0808BB28: .4byte gUnk_080BFFA0
_0808BB2C: .4byte gUnk_08BC9EEC
_0808BB30:
	mov r4, r8
	movs r2, #0xb0
	lsls r2, r2, #4
	adds r1, r6, r2
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	bl sub_08008D30
	movs r7, #0
	strh r0, [r6, #6]
	adds r0, r4, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	mov r4, sb
	subs r4, #1
	ldrb r5, [r5]
	cmp r4, r5
	bne _0808BB86
	lsls r4, r4, #0x19
	movs r3, #0xc0
	lsls r3, r3, #0x12
	adds r4, r4, r3
	asrs r4, r4, #0x18
	movs r5, #2
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #2
	movs r1, #2
	adds r2, r4, #0
	movs r3, #2
	bl sub_0801BBB8
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #2
	movs r1, #0x10
	adds r2, r4, #0
	movs r3, #6
	bl sub_0801BBB8
_0808BB86:
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	ldrh r0, [r6, #6]
	bl sub_0808BF38
	strh r7, [r6, #2]
	b _0808BBDC
_0808BB98:
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #1
	bl sub_08008E34
	mov r4, r8
	strh r4, [r6, #2]
	b _0808BBDC
_0808BBA8:
	adds r0, r6, #0
	adds r0, #0x14
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r6, #0x18]
	bl sub_0806A040
_0808BBB8:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808BBDC
_0808BBC0:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0808BBDC
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	strh r4, [r6, #2]
	movs r0, #0
	mov sl, r0
_0808BBDC:
	mov r0, sl
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808BBF0
sub_0808BBF0: @ 0x0808BBF0
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808BC20
	cmp r0, #1
	bgt _0808BC0C
	cmp r0, #0
	beq _0808BC16
	b _0808BC50
_0808BC0C:
	cmp r0, #2
	beq _0808BC2C
	cmp r0, #3
	beq _0808BC4C
	b _0808BC50
_0808BC16:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0808BC44
_0808BC20:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808BC50
	b _0808BC44
_0808BC2C:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
_0808BC44:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808BC50
_0808BC4C:
	movs r5, #0
	strh r5, [r4, #2]
_0808BC50:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808BC58
sub_0808BC58: @ 0x0808BC58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #0xb0
	lsls r0, r0, #4
	adds r0, r0, r7
	mov r8, r0
	movs r5, #0
	movs r0, #4
	mov r1, r8
	strb r0, [r1]
	movs r0, #3
	strb r0, [r1, #1]
	movs r0, #2
	strb r0, [r1, #6]
	strb r5, [r1, #7]
	strb r0, [r1, #0x11]
	strb r0, [r1, #0x12]
	ldrh r0, [r7, #6]
	strh r0, [r1, #2]
	ldrh r0, [r7, #8]
	strh r0, [r1, #4]
	movs r0, #0xe0
	strb r0, [r1, #0xd]
	movs r0, #0xf0
	strb r0, [r1, #0xc]
	adds r4, r7, #0
	adds r4, #0x1c
	str r4, [r1, #0x14]
	ldr r2, _0808BD90 @ =0x000004D2
	adds r0, r7, r2
	str r0, [r1, #0x18]
	ldrh r0, [r7, #4]
	cmp r0, #5
	beq _0808BD98
	mov sb, r5
	movs r0, #0
	str r0, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
_0808BCB4:
	ldr r1, [sp]
	lsls r0, r1, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BD14
	adds r0, r6, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r5, #0
	bne _0808BD14
	adds r0, r6, #0
	bl sub_0806380C
	mov r2, sb
	lsls r4, r2, #2
	ldr r1, [sp, #8]
	stm r1!, {r0}
	str r1, [sp, #8]
	ldr r2, _0808BD90 @ =0x000004D2
	adds r0, r7, r2
	add r0, sb
	strb r5, [r0]
	mov r0, sb
	lsls r1, r0, #1
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r0, r0, r1
	mov r1, sp
	ldrh r1, [r1]
	strh r1, [r0]
	adds r0, r6, #0
	bl sub_080638B0
	ldr r2, _0808BD94 @ =0x0000059C
	adds r1, r7, r2
	adds r1, r1, r4
	str r0, [r1]
	movs r0, #1
	add sb, r0
_0808BD14:
	ldr r1, [sp]
	adds r1, #1
	mov sl, r1
	lsls r0, r1, #0x10
	lsrs r6, r0, #0x10
	adds r0, r6, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BD76
	adds r0, r6, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r5, #0
	bne _0808BD76
	adds r0, r6, #0
	bl sub_0806380C
	mov r2, sb
	lsls r4, r2, #2
	ldr r1, [sp, #8]
	stm r1!, {r0}
	str r1, [sp, #8]
	ldr r2, _0808BD90 @ =0x000004D2
	adds r0, r7, r2
	add r0, sb
	strb r5, [r0]
	mov r0, sb
	lsls r1, r0, #1
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r0, r0, r1
	mov r1, sl
	strh r1, [r0]
	adds r0, r6, #0
	bl sub_080638B0
	ldr r2, _0808BD94 @ =0x0000059C
	adds r1, r7, r2
	adds r1, r1, r4
	str r0, [r1]
	movs r0, #1
	add sb, r0
_0808BD76:
	ldr r1, [sp]
	adds r1, #2
	str r1, [sp]
	cmp r1, #0xc7
	bls _0808BCB4
	mov r2, sb
	lsls r0, r2, #2
	ldr r1, [sp, #4]
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	b _0808BDD6
	.align 2, 0
_0808BD90: .4byte 0x000004D2
_0808BD94: .4byte 0x0000059C
_0808BD98:
	movs r2, #0
	mov sb, r2
	ldrh r0, [r7, #0xc]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BDCE
	ldrh r0, [r7, #0xc]
	bl sub_0806380C
	str r0, [r7, #0x1c]
	ldr r0, _0808BDE8 @ =0x000004D2
	adds r1, r7, r0
	movs r0, #0
	strb r0, [r1]
	movs r2, #0xd0
	lsls r2, r2, #2
	adds r1, r7, r2
	ldrh r0, [r7, #0xc]
	strh r0, [r1]
	ldr r0, _0808BDEC @ =0x0000059C
	adds r1, r7, r0
	ldrh r0, [r7, #0xe]
	str r0, [r1]
	movs r1, #1
	mov sb, r1
_0808BDCE:
	mov r2, sb
	lsls r0, r2, #2
	adds r0, r4, r0
	str r5, [r0]
_0808BDD6:
	mov r0, sb
	cmp r0, #6
	bls _0808BDF0
	movs r0, #6
	mov r1, r8
	strb r0, [r1, #0xa]
	movs r0, #0x1e
	strh r0, [r1, #8]
	b _0808BDFA
	.align 2, 0
_0808BDE8: .4byte 0x000004D2
_0808BDEC: .4byte 0x0000059C
_0808BDF0:
	mov r0, sb
	mov r2, r8
	strb r0, [r2, #0xa]
	movs r0, #0x1a
	strh r0, [r2, #8]
_0808BDFA:
	movs r1, #0
	movs r0, #0x90
	mov r2, r8
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	movs r2, #0x8c
	lsls r2, r2, #4
	adds r0, r7, r2
	mov r2, r8
	str r0, [r2, #0x20]
	ldr r0, _0808BE2C @ =0x06012400
	str r0, [r2, #0x1c]
	ldr r0, _0808BE30 @ =sub_0808BE34
	str r0, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BE2C: .4byte 0x06012400
_0808BE30: .4byte sub_0808BE34

	thumb_func_start sub_0808BE34
sub_0808BE34: @ 0x0808BE34
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r6, r1, #0
	adds r4, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	bl sub_0806F020
	mov sb, r0
	lsls r1, r6, #1
	movs r0, #0xd0
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldrh r5, [r0]
	adds r0, r5, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r0, r5, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r5, _0808BF08 @ =gUnk_02010800
	subs r4, #2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r7, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r3, r4, #0
	bl sub_08069DA8
	adds r4, r7, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	lsls r1, r6, #2
	ldr r0, _0808BF0C @ =0x0000059C
	add r0, sb
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0808BF10 @ =gUnk_080BFFA0
	adds r0, r5, #0
	movs r1, #0x15
	adds r2, r4, #0
	bl sub_08001284
	movs r0, #0x14
	add sb, r0
	mov r0, sb
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r6
	bne _0808BF18
	movs r0, #1
	bl sub_080012D4
	ldr r3, _0808BF14 @ =gUnk_080BFFA4
	adds r0, r5, #0
	movs r1, #0x12
	adds r2, r7, #0
	bl sub_08001284
	str r7, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	b _0808BF24
	.align 2, 0
_0808BF08: .4byte gUnk_02010800
_0808BF0C: .4byte 0x0000059C
_0808BF10: .4byte gUnk_080BFFA0
_0808BF14: .4byte gUnk_080BFFA4
_0808BF18:
	ldr r3, _0808BF34 @ =gUnk_080BFFA8
	adds r0, r5, #0
	movs r1, #0x12
	adds r2, r7, #0
	bl sub_08001284
_0808BF24:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808BF34: .4byte gUnk_080BFFA8

	thumb_func_start sub_0808BF38
sub_0808BF38: @ 0x0808BF38
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r7, r0, #0
	lsls r4, r4, #1
	movs r1, #0xd0
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r0, r4
	ldrh r5, [r0]
	ldr r6, _0808C030 @ =gUnk_02010800
	ldr r3, _0808C034 @ =gUnk_080BFFAC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #2
	bl sub_08001284
	ldr r3, _0808C038 @ =gUnk_080BFFB4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #6
	bl sub_08001284
	ldr r3, _0808C03C @ =gUnk_080BFFB8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #8
	bl sub_08001284
	ldr r3, _0808C040 @ =gUnk_080BFFBC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _0808C044 @ =gUnk_080BFFC0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _0808C048 @ =gUnk_080BFFC4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _0808C04C @ =gUnk_080BFFC8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #7
	bl sub_08001284
	ldr r4, _0808C050 @ =gUnk_080BFFD0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #9
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xb
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xd
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808BFFA
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808C054
_0808BFFA:
	adds r0, r5, #0
	bl sub_080638C8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080638E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	b _0808C0B2
	.align 2, 0
_0808C030: .4byte gUnk_02010800
_0808C034: .4byte gUnk_080BFFAC
_0808C038: .4byte gUnk_080BFFB4
_0808C03C: .4byte gUnk_080BFFB8
_0808C040: .4byte gUnk_080BFFBC
_0808C044: .4byte gUnk_080BFFC0
_0808C048: .4byte gUnk_080BFFC4
_0808C04C: .4byte gUnk_080BFFC8
_0808C050: .4byte gUnk_080BFFD0
_0808C054:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808C0C0
	adds r0, r5, #0
	bl sub_08063968
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063984
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080639A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
_0808C0B2:
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	b _0808C138
_0808C0C0:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bne _0808C138
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018AD8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808C138
	adds r0, r5, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
_0808C138:
	bl sub_08018E3C
	ldr r4, _0808C1D8 @ =gUnk_02010800
	movs r1, #2
	mov r8, r1
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0808C1DC @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
	ldrh r0, [r7, #0x12]
	adds r4, r7, #0
	adds r4, #0x12
	cmp r0, #0
	beq _0808C172
	adds r0, r4, #0
	bl sub_0800B4E4
_0808C172:
	adds r0, r5, #0
	bl sub_08063820
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r0, r8
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldrh r0, [r7, #0x10]
	adds r7, #0x10
	cmp r0, #0
	beq _0808C1A2
	adds r0, r7, #0
	bl sub_0800B4E4
_0808C1A2:
	ldr r4, _0808C1E0 @ =gUnk_08BC9DD8
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #3
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0x18
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808C1D8: .4byte gUnk_02010800
_0808C1DC: .4byte gUnk_080BFFA0
_0808C1E0: .4byte gUnk_08BC9DD8

	thumb_func_start sub_0808C1E4
sub_0808C1E4: @ 0x0808C1E4
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r4, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0808C20C
	cmp r0, #1
	bgt _0808C200
	cmp r0, #0
	beq _0808C206
	b _0808C234
_0808C200:
	cmp r0, #2
	beq _0808C21E
	b _0808C234
_0808C206:
	bl sub_0808C2F8
	b _0808C210
_0808C20C:
	bl sub_0808C498
_0808C210:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808C234
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _0808C234
_0808C21E:
	bl sub_0808C810
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808C234
	movs r4, #0
	strh r4, [r5]
	movs r0, #0x9a
	lsls r0, r0, #3
	bl sub_0806EFF0
_0808C234:
	ldrh r1, [r5, #6]
	lsls r1, r1, #1
	adds r0, r5, #0
	adds r0, #0x90
	adds r0, r0, r1
	ldrb r0, [r0]
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r2, _0808C2DC @ =0x00000424
	adds r1, r5, r2
	movs r2, #0xe
	movs r3, #0x60
	bl sub_0806F544
	lsls r6, r4, #0x10
	ldr r0, _0808C2E0 @ =0x00000454
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0808C2E4 @ =0x000004CC
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808C274
	adds r0, r4, #0
	bl sub_0800A778
_0808C274:
	ldr r2, _0808C2E8 @ =0x0000047C
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0808C2EC @ =0x000004CD
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808C292
	adds r0, r4, #0
	bl sub_0800A778
_0808C292:
	ldr r2, _0808C2F0 @ =0x000004A4
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	ldr r1, _0808C2F4 @ =0x000004CE
	adds r0, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808C2B0
	adds r0, r4, #0
	bl sub_0800A778
_0808C2B0:
	movs r2, #0xff
	lsls r2, r2, #2
	adds r4, r5, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	movs r0, #0xf5
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	asrs r0, r6, #0x10
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0808C2DC: .4byte 0x00000424
_0808C2E0: .4byte 0x00000454
_0808C2E4: .4byte 0x000004CC
_0808C2E8: .4byte 0x0000047C
_0808C2EC: .4byte 0x000004CD
_0808C2F0: .4byte 0x000004A4
_0808C2F4: .4byte 0x000004CE

	thumb_func_start sub_0808C2F8
sub_0808C2F8: @ 0x0808C2F8
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r7, #1
	movs r0, #2
	ldrsh r5, [r6, r0]
	cmp r5, #1
	bne _0808C30C
	b _0808C448
_0808C30C:
	cmp r5, #1
	bgt _0808C316
	cmp r5, #0
	beq _0808C324
	b _0808C48E
_0808C316:
	cmp r5, #2
	bne _0808C31C
	b _0808C478
_0808C31C:
	cmp r5, #3
	bne _0808C322
	b _0808C48A
_0808C322:
	b _0808C48E
_0808C324:
	bl sub_0808C874
	adds r0, r6, #0
	adds r0, #0xe
	movs r2, #0xeb
	lsls r2, r2, #2
	adds r1, r6, r2
	bl sub_080072F8
	ldrh r0, [r6, #6]
	bl sub_0808CC08
	ldr r0, _0808C42C @ =0x00000454
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0808C430 @ =0x000004CC
	adds r0, r6, r1
	strb r5, [r0]
	ldr r2, _0808C434 @ =0x0000047C
	adds r4, r6, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0808C438 @ =0x000004CD
	adds r0, r6, r1
	strb r5, [r0]
	ldr r2, _0808C43C @ =0x000004A4
	adds r4, r6, r2
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r1, _0808C440 @ =0x000004CE
	adds r0, r6, r1
	strb r5, [r0]
	ldr r2, _0808C444 @ =0x000004CF
	adds r0, r6, r2
	strb r7, [r0]
	movs r0, #0xf5
	lsls r0, r0, #2
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	movs r1, #0xff
	lsls r1, r1, #2
	adds r5, r6, r1
	adds r0, r5, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	movs r1, #0
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r5, #0
	movs r1, #0xe0
	movs r2, #0x98
	bl sub_0800A678
	b _0808C482
	.align 2, 0
_0808C42C: .4byte 0x00000454
_0808C430: .4byte 0x000004CC
_0808C434: .4byte 0x0000047C
_0808C438: .4byte 0x000004CD
_0808C43C: .4byte 0x000004A4
_0808C440: .4byte 0x000004CE
_0808C444: .4byte 0x000004CF
_0808C448:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808C482
_0808C478:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808C48E
_0808C482:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808C48E
_0808C48A:
	movs r7, #0
	strh r7, [r6, #2]
_0808C48E:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808C498
sub_0808C498: @ 0x0808C498
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	mov sl, r0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x15
	bls _0808C4B8
	b _0808C7FE
_0808C4B8:
	lsls r0, r0, #2
	ldr r1, _0808C4C4 @ =_0808C4C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808C4C4: .4byte _0808C4C8
_0808C4C8: @ jump table
	.4byte _0808C520 @ case 0
	.4byte _0808C7FE @ case 1
	.4byte _0808C7FE @ case 2
	.4byte _0808C7FE @ case 3
	.4byte _0808C7FE @ case 4
	.4byte _0808C7FE @ case 5
	.4byte _0808C7FE @ case 6
	.4byte _0808C7FE @ case 7
	.4byte _0808C7FE @ case 8
	.4byte _0808C7FE @ case 9
	.4byte _0808C648 @ case 10
	.4byte _0808C666 @ case 11
	.4byte _0808C7FE @ case 12
	.4byte _0808C7FE @ case 13
	.4byte _0808C7FE @ case 14
	.4byte _0808C7FE @ case 15
	.4byte _0808C7FE @ case 16
	.4byte _0808C7FE @ case 17
	.4byte _0808C7FE @ case 18
	.4byte _0808C7FE @ case 19
	.4byte _0808C7C6 @ case 20
	.4byte _0808C7DE @ case 21
_0808C520:
	adds r5, r6, #0
	adds r5, #0xe
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808C534
	b _0808C7FE
_0808C534:
	ldr r0, _0808C588 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0808C590
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _0808C58C @ =0x000004CF
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	bne _0808C572
	b _0808C7FE
_0808C572:
	bl sub_0808CC08
	adds r0, r5, #0
	bl sub_08008C34
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0808C7FE
	.align 2, 0
_0808C588: .4byte gCurrentKeyPress
_0808C58C: .4byte 0x000004CF
_0808C590:
	ldr r0, _0808C5AC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r4, #1
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _0808C5B0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	movs r0, #0xa
	strh r0, [r6, #2]
	b _0808C7FE
	.align 2, 0
_0808C5AC: .4byte gKeyNewPress
_0808C5B0:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808C5EC
	movs r0, #0
	movs r1, #0xc
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #7
	strh r0, [r6, #0xc]
	b _0808C63E
_0808C5EC:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808C628
	movs r0, #0
	movs r1, #0xb
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #6
	ldrsh r1, [r6, r0]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r6, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #9
	strh r0, [r6, #0xc]
	b _0808C63E
_0808C628:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0808C632
	b _0808C7FE
_0808C632:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	strh r4, [r6, #0xc]
_0808C63E:
	movs r1, #0
	mov sl, r1
	mov r0, sl
	strh r0, [r6, #2]
	b _0808C7FE
_0808C648:
	adds r0, r6, #0
	adds r0, #0xe
	movs r1, #0
	bl sub_08008E34
	ldrh r1, [r6, #6]
	lsls r1, r1, #1
	adds r0, r6, #0
	adds r0, #0x90
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #0
	bl sub_0806BC24
	b _0808C7D6
_0808C666:
	bl sub_0806BD0C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0808C674
	b _0808C7FE
_0808C674:
	bl sub_0806F60C
	ldrh r2, [r6, #6]
	lsls r2, r2, #1
	adds r1, r6, #0
	adds r1, #0x90
	adds r1, r1, r2
	ldrh r7, [r1]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808C68C
	b _0808C7B8
_0808C68C:
	lsls r0, r7, #0x18
	lsrs r0, r0, #0x18
	bl sub_080159E0
	bl sub_08015A28
	bl sub_08015788
	bl sub_080156C4
	bl sub_08018E3C
	ldrh r2, [r6, #6]
	lsls r2, r2, #2
	adds r1, r6, #0
	adds r1, #0xf0
	adds r1, r1, r2
	ldr r1, [r1]
	adds r0, r0, r1
	bl SetMoney
	movs r5, #0
	movs r1, #0xe
	adds r1, r1, r6
	mov r8, r1
	b _0808C6C2
_0808C6C0:
	adds r5, #1
_0808C6C2:
	cmp r5, #2
	bhi _0808C6E0
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r7
	bne _0808C6C0
	adds r0, r4, #0
	movs r1, #0xff
	bl SetPlayerEquipWeaponType
_0808C6E0:
	bl sub_0801644C
	ldr r0, _0808C734 @ =0x000003B6
	adds r5, r6, r0
	ldrb r1, [r5]
	mov sb, r1
	bl sub_0808C874
	ldrb r0, [r5]
	cmp r0, #0
	bne _0808C744
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	bl sub_08018E3C
	ldr r4, _0808C738 @ =gUnk_02010800
	movs r1, #2
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	ldr r3, _0808C73C @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x1a
	movs r2, #2
	bl sub_08001284
	ldr r0, _0808C740 @ =gUnk_08BC9EEC
	ldr r0, [r0]
	str r0, [r6, #0x10]
	movs r0, #0x14
	strh r0, [r6, #2]
	b _0808C7FE
	.align 2, 0
_0808C734: .4byte 0x000003B6
_0808C738: .4byte gUnk_02010800
_0808C73C: .4byte gUnk_080BFFA0
_0808C740: .4byte gUnk_08BC9EEC
_0808C744:
	ldr r0, _0808C7B4 @ =0x000004CF
	adds r1, r6, r0
	movs r7, #0
	movs r0, #1
	strb r0, [r1]
	mov r4, r8
	movs r0, #0xeb
	lsls r0, r0, #2
	adds r1, r6, r0
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r4, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	mov r4, sb
	subs r4, #1
	ldrb r5, [r5]
	cmp r4, r5
	bne _0808C7A2
	lsls r4, r4, #0x19
	movs r1, #0xc0
	lsls r1, r1, #0x12
	adds r4, r4, r1
	asrs r4, r4, #0x18
	movs r5, #2
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #2
	movs r1, #3
	adds r2, r4, #0
	movs r3, #2
	bl sub_0801BBB8
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #2
	movs r1, #0x14
	adds r2, r4, #0
	movs r3, #7
	bl sub_0801BBB8
_0808C7A2:
	mov r0, r8
	bl sub_08008D30
	strh r0, [r6, #6]
	ldrh r0, [r6, #6]
	bl sub_0808CC08
	strh r7, [r6, #2]
	b _0808C7FE
	.align 2, 0
_0808C7B4: .4byte 0x000004CF
_0808C7B8:
	adds r0, r6, #0
	adds r0, #0xe
	movs r1, #1
	bl sub_08008E34
	strh r4, [r6, #2]
	b _0808C7FE
_0808C7C6:
	adds r0, r6, #0
	adds r0, #0xe
	movs r1, #0
	bl sub_08008E4C
	ldr r0, [r6, #0x10]
	bl sub_0806A040
_0808C7D6:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808C7FE
_0808C7DE:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0808C7FE
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	strh r4, [r6, #2]
	movs r0, #1
	strh r0, [r6, #0xc]
	movs r0, #0
	mov sl, r0
_0808C7FE:
	mov r0, sl
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0808C810
sub_0808C810: @ 0x0808C810
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808C840
	cmp r0, #1
	bgt _0808C82C
	cmp r0, #0
	beq _0808C836
	b _0808C86C
_0808C82C:
	cmp r0, #2
	beq _0808C84C
	cmp r0, #3
	beq _0808C868
	b _0808C86C
_0808C836:
	ldrh r0, [r4, #0xc]
	movs r1, #8
	bl sub_0806AC78
	b _0808C860
_0808C840:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808C86C
	b _0808C860
_0808C84C:
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_08008C14
	movs r0, #0
	bl sub_08010FC8
	movs r0, #2
	bl sub_08011104
_0808C860:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808C86C
_0808C868:
	movs r5, #0
	strh r5, [r4, #2]
_0808C86C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808C874
sub_0808C874: @ 0x0808C874
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	bl sub_0806F020
	mov sl, r0
	movs r7, #0xeb
	lsls r7, r7, #2
	add r7, sl
	movs r1, #0
	movs r0, #5
	strb r0, [r7]
	movs r0, #3
	strb r0, [r7, #1]
	movs r0, #2
	strb r0, [r7, #6]
	strb r1, [r7, #7]
	strb r0, [r7, #0x11]
	strb r0, [r7, #0x12]
	mov r1, sl
	ldrh r0, [r1, #6]
	strh r0, [r7, #2]
	ldrh r0, [r1, #8]
	strh r0, [r7, #4]
	movs r0, #0xe0
	strb r0, [r7, #0xd]
	movs r0, #0xf0
	strb r0, [r7, #0xc]
	mov r0, sl
	adds r0, #0x14
	str r0, [r7, #0x14]
	adds r0, #0xba
	str r0, [r7, #0x18]
	movs r2, #0
	str r2, [sp, #4]
	movs r0, #0
	str r0, [sp]
_0808C8C4:
	ldr r1, [sp]
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sb, r0
	mov r8, sb
	mov r0, r8
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	mov r2, sl
	adds r2, #0x14
	str r2, [sp, #8]
	cmp r6, #0xff
	beq _0808C9BC
	cmp r6, #0xef
	bhi _0808C9BC
	mov r0, r8
	bl sub_0801885C
	movs r1, #2
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r5, #0
	bne _0808C9BC
	adds r0, r6, #0
	bl sub_080639BC
	ldr r1, [sp, #4]
	lsls r4, r1, #2
	ldr r2, [sp, #8]
	adds r1, r2, r4
	str r0, [r1]
	mov r0, sl
	adds r0, #0xce
	ldr r1, [sp, #4]
	adds r0, r0, r1
	strb r5, [r0]
	lsls r1, r1, #1
	mov r0, sl
	adds r0, #0x90
	adds r0, r0, r1
	mov r2, sb
	strh r2, [r0]
	adds r0, r6, #0
	bl sub_08063AAC
	mov r1, sl
	adds r1, #0xf0
	adds r1, r1, r4
	mov sb, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [r1]
	mov r0, r8
	bl GetWeaponAtk
	adds r5, r0, #0
	adds r0, r6, #0
	bl sub_08063AC4
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r5, r5, r0
	mov r0, r8
	bl GetWeaponDef
	adds r4, r0, #0
	adds r0, r6, #0
	bl sub_08063ADC
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	adds r5, r5, r4
	mov r0, r8
	bl GetWeaponAgl
	adds r4, r0, #0
	adds r0, r6, #0
	bl sub_08063AF4
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	adds r5, r5, r4
	mov r0, r8
	bl GetWeaponMaxDur
	adds r4, r0, #0
	adds r0, r6, #0
	bl sub_08063B0C
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	subs r4, r4, r0
	adds r5, r5, r4
	lsls r1, r5, #2
	adds r1, r1, r5
	lsls r1, r1, #1
	mov r2, sb
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r2]
	cmp r0, #9
	bhi _0808C9B6
	movs r0, #0xa
	str r0, [r2]
_0808C9B6:
	ldr r0, [sp, #4]
	adds r0, #1
	str r0, [sp, #4]
_0808C9BC:
	ldr r1, [sp]
	adds r1, #1
	str r1, [sp]
	cmp r1, #0x1d
	bhi _0808C9C8
	b _0808C8C4
_0808C9C8:
	ldr r2, [sp, #4]
	lsls r0, r2, #2
	ldr r1, [sp, #8]
	adds r0, r1, r0
	movs r1, #0
	str r1, [r0]
	cmp r2, #4
	bls _0808C9E0
	movs r0, #4
	strb r0, [r7, #0xa]
	movs r0, #0x1e
	b _0808C9E8
_0808C9E0:
	mov r2, sp
	ldrb r2, [r2, #4]
	strb r2, [r7, #0xa]
	movs r0, #0x1a
_0808C9E8:
	strh r0, [r7, #8]
	movs r1, #0
	movs r0, #0xb0
	strb r0, [r7, #0xe]
	movs r0, #1
	strb r0, [r7, #0xf]
	movs r0, #0xb6
	lsls r0, r0, #1
	add r0, sl
	str r0, [r7, #0x20]
	ldr r0, _0808CA18 @ =0x06012400
	str r0, [r7, #0x1c]
	ldr r0, _0808CA1C @ =sub_0808CA20
	str r0, [r7, #0x24]
	strb r1, [r7, #0x10]
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808CA18: .4byte 0x06012400
_0808CA1C: .4byte sub_0808CA20

	thumb_func_start sub_0808CA20
sub_0808CA20: @ 0x0808CA20
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov r8, r2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0x10]
	bl sub_0806F020
	adds r6, r0, #0
	lsls r1, r5, #1
	adds r0, #0x90
	adds r0, r0, r1
	ldrh r0, [r0]
	str r0, [sp, #0x14]
	lsls r4, r0, #0x18
	lsrs r0, r4, #0x18
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	ldr r0, _0808CAEC @ =0x000004CF
	adds r2, r6, r0
	movs r0, #0
	ldrsb r0, [r2, r0]
	cmp r0, #1
	bne _0808CA84
	movs r1, #0
	mov sb, r1
	ldr r7, _0808CAF0 @ =0x000004CC
	adds r0, r6, r7
	mov r7, sb
	strb r7, [r0]
	ldr r7, _0808CAF4 @ =0x000004CD
	adds r0, r6, r7
	strb r1, [r0]
	adds r7, #1
	adds r0, r6, r7
	strb r1, [r0]
	strb r1, [r2]
_0808CA84:
	movs r0, #0
	mov sb, r0
	str r4, [sp, #0x1c]
	mov r1, r8
	subs r1, #2
	str r1, [sp, #0x24]
	ldr r2, [sp, #0x10]
	adds r2, #1
	str r2, [sp, #0x28]
	lsls r5, r5, #2
	str r5, [sp, #0x2c]
	adds r7, r6, #0
	adds r7, #0xf0
	str r7, [sp, #0x30]
	lsls r3, r3, #0x18
	str r3, [sp, #0x20]
	lsls r0, r1, #0x13
	str r0, [sp, #0x18]
	ldr r1, _0808CAF8 @ =0x00000454
	adds r7, r6, r1
	ldr r2, [sp, #0x10]
	lsls r2, r2, #0x13
	mov sl, r2
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808CAE6
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r3, [sp, #0x14]
	cmp r0, r3
	bne _0808CAE6
	ldr r0, _0808CAF0 @ =0x000004CC
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	ldr r2, [sp, #0x18]
	asrs r1, r2, #0x10
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
_0808CAE6:
	adds r7, #0x28
	movs r0, #1
	b _0808CB80
	.align 2, 0
_0808CAEC: .4byte 0x000004CF
_0808CAF0: .4byte 0x000004CC
_0808CAF4: .4byte 0x000004CD
_0808CAF8: .4byte 0x00000454
_0808CAFC:
	mov r2, sb
	lsls r0, r2, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808CB38
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r3, [sp, #0x14]
	cmp r0, r3
	bne _0808CB38
	ldr r1, _0808CBFC @ =0x000004CC
	adds r0, r6, r1
	add r0, sb
	movs r1, #1
	strb r1, [r0]
	adds r0, r7, #0
	ldr r2, [sp, #0x18]
	asrs r1, r2, #0x10
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
_0808CB38:
	movs r0, #0x28
	adds r0, r0, r7
	mov r8, r0
	mov r5, sb
	adds r5, #1
	lsls r0, r5, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808CB7C
	adds r0, r4, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [sp, #0x14]
	cmp r0, r1
	bne _0808CB7C
	ldr r2, _0808CBFC @ =0x000004CC
	adds r0, r6, r2
	adds r0, r0, r5
	movs r1, #1
	strb r1, [r0]
	mov r0, r8
	ldr r3, [sp, #0x18]
	asrs r1, r3, #0x10
	mov r3, sl
	asrs r2, r3, #0x10
	bl sub_0800A678
_0808CB7C:
	adds r7, #0x50
	movs r0, #2
_0808CB80:
	add sb, r0
	mov r1, sb
	cmp r1, #2
	bls _0808CAFC
	ldr r5, _0808CC00 @ =gUnk_02010800
	ldr r2, [sp, #0x28]
	lsls r4, r2, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	ldr r3, [sp, #0x30]
	ldr r7, [sp, #0x2c]
	adds r0, r3, r7
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #6
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r3, _0808CC04 @ =gUnk_080BFFA0
	adds r0, r5, #0
	movs r1, #0x1a
	adds r2, r4, #0
	bl sub_08001284
	ldr r1, [sp, #0x20]
	lsrs r0, r1, #0x18
	bl sub_080639E8
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r2, [sp, #0x1c]
	lsrs r0, r2, #0x18
	bl sub_080188D0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0808CBD6
	adds r4, #0x6f
_0808CBD6:
	ldr r7, [sp, #0x24]
	lsls r3, r7, #0x10
	lsrs r3, r3, #0x10
	ldr r0, [sp, #0x10]
	str r0, [sp]
	adds r0, r5, #0
	ldr r1, [sp, #0xc]
	adds r2, r4, #0
	bl sub_08069DA8
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808CBFC: .4byte 0x000004CC
_0808CC00: .4byte gUnk_02010800
_0808CC04: .4byte gUnk_080BFFA0

	thumb_func_start sub_0808CC08
sub_0808CC08: @ 0x0808CC08
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	lsls r4, r4, #1
	adds r0, #0x90
	adds r0, r0, r4
	ldrh r1, [r0]
	mov r8, r1
	ldrb r6, [r0]
	adds r0, r6, #0
	bl GetWeaponType
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0808CD5C @ =0x00000424
	adds r5, r5, r0
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0xe
	movs r3, #0x60
	bl sub_0806A670
	ldr r7, _0808CD60 @ =gUnk_02010800
	ldr r3, _0808CD64 @ =gUnk_080BFFE0
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0xd
	bl sub_08001284
	ldr r3, _0808CD68 @ =gUnk_080BFFBC
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _0808CD6C @ =gUnk_080BFFC0
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0xf
	bl sub_08001284
	ldr r3, _0808CD70 @ =gUnk_080BFFC4
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0x10
	bl sub_08001284
	ldr r3, _0808CD74 @ =gUnk_080BFFB8
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0x11
	bl sub_08001284
	ldr r3, _0808CD78 @ =gUnk_080BFFE8
	adds r0, r7, #0
	movs r1, #0xb
	movs r2, #0x12
	bl sub_08001284
	bl sub_08018E3C
	movs r5, #2
	str r5, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	ldr r3, _0808CD7C @ =gUnk_080BFFA0
	adds r0, r7, #0
	movs r1, #0x1a
	movs r2, #2
	bl sub_08001284
	adds r0, r4, #0
	bl sub_08063BE4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponAtk
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xe
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
	adds r0, r6, #0
	bl GetWeaponDef
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
	ldr r3, _0808CD80 @ =gUnk_080BFFD0
	adds r0, r7, #0
	movs r1, #0xe
	movs r2, #0x10
	bl sub_08001284
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0808CD84
	movs r0, #2
	bl sub_080012D4
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	b _0808CDA2
	.align 2, 0
_0808CD5C: .4byte 0x00000424
_0808CD60: .4byte gUnk_02010800
_0808CD64: .4byte gUnk_080BFFE0
_0808CD68: .4byte gUnk_080BFFBC
_0808CD6C: .4byte gUnk_080BFFC0
_0808CD70: .4byte gUnk_080BFFC4
_0808CD74: .4byte gUnk_080BFFB8
_0808CD78: .4byte gUnk_080BFFE8
_0808CD7C: .4byte gUnk_080BFFA0
_0808CD80: .4byte gUnk_080BFFD0
_0808CD84:
	adds r0, r6, #0
	bl GetWeaponAgl
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0x10
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
_0808CDA2:
	mov r1, r8
	lsls r5, r1, #0x18
	lsrs r5, r5, #0x18
	adds r0, r5, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r6, _0808CEA4 @ =gUnk_02010800
	movs r1, #0x11
	mov sl, r1
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #3
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
	ldr r0, _0808CEA8 @ =gUnk_080BFFEC
	mov r8, r0
	adds r0, r6, #0
	movs r1, #0x12
	movs r2, #0x11
	mov r3, r8
	bl sub_08001284
	adds r0, r5, #0
	bl GetWeaponMaxDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r1, sl
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x12
	mov sb, r1
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xf
	bl sub_0806F2D0
	adds r0, r6, #0
	movs r1, #0x12
	movs r2, #0x12
	mov r3, r8
	bl sub_08001284
	mov r0, sb
	str r0, [sp]
	movs r0, #0xff
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	adds r0, r5, #0
	bl GetWeaponMaxDur
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl GetWeaponCurrentDur
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r1, #0x17
	mov r8, r1
	str r1, [sp, #4]
	mov r0, sl
	str r0, [sp, #8]
	movs r0, #1
	str r0, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	adds r3, r4, #0
	bl sub_0806F174
	adds r0, r5, #0
	bl GetWeaponTec
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	mov r0, sb
	str r0, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	adds r0, r6, #0
	movs r1, #0x58
	movs r2, #0x28
	movs r3, #0xff
	bl sub_0806F174
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808CEA4: .4byte gUnk_02010800
_0808CEA8: .4byte gUnk_080BFFEC

	thumb_func_start sub_0808CEAC
sub_0808CEAC: @ 0x0808CEAC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808CED4
	cmp r0, #1
	bgt _0808CEC8
	cmp r0, #0
	beq _0808CECE
	b _0808CEFA
_0808CEC8:
	cmp r0, #2
	beq _0808CEE6
	b _0808CEFA
_0808CECE:
	bl sub_0808CF40
	b _0808CED8
_0808CED4:
	bl sub_0808D014
_0808CED8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808CEFA
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808CEFA
_0808CEE6:
	bl sub_0808D4EC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808CEFA
	movs r5, #0
	strh r5, [r4]
	ldr r0, _0808CF34 @ =0x00000D0C
	bl sub_0806EFF0
_0808CEFA:
	ldrh r0, [r4, #4]
	cmp r0, #1
	bne _0808CF2A
	movs r1, #0xb5
	lsls r1, r1, #3
	adds r0, r4, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bne _0808CF16
	ldr r1, _0808CF38 @ =0x00000CE4
	adds r0, r4, r1
	bl sub_08009FF8
_0808CF16:
	ldr r1, _0808CF3C @ =0x000005AA
	adds r0, r4, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bne _0808CF2A
	ldr r1, _0808CF38 @ =0x00000CE4
	adds r0, r4, r1
	bl sub_0800A778
_0808CF2A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808CF34: .4byte 0x00000D0C
_0808CF38: .4byte 0x00000CE4
_0808CF3C: .4byte 0x000005AA

	thumb_func_start sub_0808CF40
sub_0808CF40: @ 0x0808CF40
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r5, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0808CFC4
	cmp r0, #1
	bgt _0808CF5C
	cmp r0, #0
	beq _0808CF66
	b _0808D00A
_0808CF5C:
	cmp r0, #2
	beq _0808CFF4
	cmp r0, #3
	beq _0808D006
	b _0808D00A
_0808CF66:
	bl sub_0808D564
	adds r0, r5, #0
	adds r0, #0x12
	ldr r2, _0808CFB8 @ =0x00000C94
	adds r1, r5, r2
	bl sub_080072F8
	ldrh r0, [r5, #6]
	bl sub_0808D9D4
	ldr r0, _0808CFBC @ =0x00000CE4
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0x20
	bl sub_0800A678
	movs r1, #0xb5
	lsls r1, r1, #3
	adds r0, r5, r1
	strh r6, [r0]
	ldr r2, _0808CFC0 @ =0x000005AA
	adds r0, r5, r2
	strh r6, [r0]
	b _0808CFFE
	.align 2, 0
_0808CFB8: .4byte 0x00000C94
_0808CFBC: .4byte 0x00000CE4
_0808CFC0: .4byte 0x000005AA
_0808CFC4:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808CFFE
_0808CFF4:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808D00A
_0808CFFE:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _0808D00A
_0808D006:
	movs r6, #0
	strh r6, [r5, #2]
_0808D00A:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808D014
sub_0808D014: @ 0x0808D014
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	str r0, [sp, #0x14]
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #0x15
	bls _0808D034
	b _0808D4DA
_0808D034:
	lsls r0, r0, #2
	ldr r1, _0808D040 @ =_0808D044
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808D040: .4byte _0808D044
_0808D044: @ jump table
	.4byte _0808D09C @ case 0
	.4byte _0808D4DA @ case 1
	.4byte _0808D4DA @ case 2
	.4byte _0808D4DA @ case 3
	.4byte _0808D4DA @ case 4
	.4byte _0808D224 @ case 5
	.4byte _0808D2C4 @ case 6
	.4byte _0808D4DA @ case 7
	.4byte _0808D4DA @ case 8
	.4byte _0808D4DA @ case 9
	.4byte _0808D2E2 @ case 10
	.4byte _0808D4DA @ case 11
	.4byte _0808D4DA @ case 12
	.4byte _0808D4DA @ case 13
	.4byte _0808D4DA @ case 14
	.4byte _0808D318 @ case 15
	.4byte _0808D348 @ case 16
	.4byte _0808D4DA @ case 17
	.4byte _0808D4DA @ case 18
	.4byte _0808D4DA @ case 19
	.4byte _0808D4AC @ case 20
	.4byte _0808D4C2 @ case 21
_0808D09C:
	adds r5, r6, #0
	adds r5, #0x12
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808D0B0
	b _0808D4DA
_0808D0B0:
	ldr r0, _0808D104 @ =gCurrentKeyPress
	ldrh r0, [r0]
	movs r7, #0xf0
	ands r7, r0
	cmp r7, #0
	beq _0808D108
	ldrh r0, [r6, #4]
	cmp r0, #0
	beq _0808D0C4
	b _0808D4DA
_0808D0C4:
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #8]
	ldrh r0, [r6, #6]
	cmp r0, r4
	bne _0808D0EE
	b _0808D4DA
_0808D0EE:
	bl sub_0808D9D4
	adds r0, r5, #0
	bl sub_08008C34
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _0808D4DA
	.align 2, 0
_0808D104: .4byte gCurrentKeyPress
_0808D108:
	ldr r0, _0808D12C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r5, #1
	adds r4, r5, #0
	ands r4, r1
	cmp r4, #0
	beq _0808D1F4
	ldrh r0, [r6, #4]
	cmp r0, #0
	bne _0808D130
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	strh r5, [r6, #4]
	movs r0, #5
	strh r0, [r6, #2]
	b _0808D4DA
	.align 2, 0
_0808D12C: .4byte gKeyNewPress
_0808D130:
	ldrh r0, [r6, #6]
	lsls r0, r0, #1
	movs r2, #0x88
	lsls r2, r2, #2
	adds r5, r6, r2
	adds r0, r5, r0
	ldrh r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x63
	bne _0808D168
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0808D164 @ =gUnk_08BC9EE8
	ldr r0, [r0]
	str r0, [r6, #0x18]
	movs r3, #0xb5
	lsls r3, r3, #3
	adds r0, r6, r3
	strh r7, [r0]
	b _0808D1D8
	.align 2, 0
_0808D164: .4byte gUnk_08BC9EE8
_0808D168:
	bl sub_08018E3C
	ldrh r4, [r6, #6]
	lsls r2, r4, #2
	movs r3, #0xe9
	lsls r3, r3, #2
	adds r1, r6, r3
	adds r1, r1, r2
	ldr r1, [r1]
	cmp r0, r1
	bhs _0808D19C
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0808D198 @ =gUnk_08BC9EE0
	ldr r0, [r0]
	str r0, [r6, #0x18]
	movs r4, #0xb5
	lsls r4, r4, #3
	adds r0, r6, r4
	strh r7, [r0]
	b _0808D1D8
	.align 2, 0
_0808D198: .4byte gUnk_08BC9EE0
_0808D19C:
	lsls r3, r4, #1
	adds r0, r5, r3
	ldrb r0, [r0]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r3, r3, r4
	lsls r2, r3, #1
	ldr r4, _0808D1E0 @ =0x000005AC
	adds r2, r2, r4
	adds r2, r6, r2
	ldr r4, _0808D1E4 @ =0x000008B2
	adds r3, r3, r4
	adds r3, r6, r3
	bl sub_0808DFB0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _0808D1EC
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0808D1E8 @ =gUnk_08BC9EE4
	ldr r0, [r0]
	str r0, [r6, #0x18]
	movs r1, #0xb5
	lsls r1, r1, #3
	adds r0, r6, r1
	strh r4, [r0]
_0808D1D8:
	movs r0, #0x14
	strh r0, [r6, #2]
	b _0808D4DA
	.align 2, 0
_0808D1E0: .4byte 0x000005AC
_0808D1E4: .4byte 0x000008B2
_0808D1E8: .4byte gUnk_08BC9EE4
_0808D1EC:
	strh r4, [r6, #0x16]
	movs r0, #0xf
	strh r0, [r6, #2]
	b _0808D4DA
_0808D1F4:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _0808D1FE
	b _0808D4DA
_0808D1FE:
	ldrh r0, [r6, #4]
	cmp r0, #1
	bne _0808D214
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	strh r4, [r6, #4]
	movs r0, #0xa
	strh r0, [r6, #2]
	b _0808D4DA
_0808D214:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r2, #0
	str r2, [sp, #0x14]
	b _0808D4D8
_0808D224:
	ldrh r0, [r6, #6]
	bl sub_0808DC80
	adds r4, r6, #0
	adds r4, #0x12
	ldr r0, _0808D2BC @ =0x00000CBC
	adds r1, r6, r0
	adds r0, r4, #0
	bl sub_080076B0
	adds r0, r4, #0
	movs r1, #0
	bl sub_08008E34
	movs r0, #0xc
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #2
	movs r2, #3
	movs r3, #0x14
	bl sub_0801BBB8
	ldrh r0, [r6, #0xc]
	adds r7, r6, #0
	adds r7, #0xc
	cmp r0, #0
	beq _0808D264
	adds r0, r7, #0
	bl sub_0800B4E4
_0808D264:
	ldrh r1, [r6, #6]
	lsls r1, r1, #2
	adds r0, r6, #0
	adds r0, #0x1c
	adds r0, r0, r1
	ldr r2, [r0]
	movs r5, #4
	str r5, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #1
	movs r3, #4
	bl sub_0800B1AC
	ldrh r1, [r6, #6]
	lsls r1, r1, #1
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r0, [r0]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, _0808D2C0 @ =gUnk_02010000
	str r5, [sp]
	adds r0, r4, #0
	movs r1, #3
	movs r3, #2
	bl sub_08069DA8
	adds r0, r4, #0
	movs r1, #1
	movs r2, #6
	movs r3, #0x15
	bl sub_0806F500
	b _0808D4BA
	.align 2, 0
_0808D2BC: .4byte 0x00000CBC
_0808D2C0: .4byte gUnk_02010000
_0808D2C4:
	adds r0, r6, #0
	adds r0, #0x12
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808D2D6
	b _0808D4DA
_0808D2D6:
	ldrh r0, [r6, #6]
	bl sub_0808DEE0
	movs r0, #0
	strh r0, [r6, #2]
	b _0808D4DA
_0808D2E2:
	ldrh r0, [r6, #6]
	bl sub_0808D564
	adds r0, r6, #0
	adds r0, #0x12
	ldr r3, _0808D314 @ =0x00000C94
	adds r1, r6, r3
	bl sub_080076B0
	movs r0, #0xc
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #2
	movs r1, #1
	movs r2, #3
	movs r3, #0x15
	bl sub_0801BBB8
	adds r0, r6, #0
	adds r0, #0xc
	bl sub_0800B4E4
	strh r4, [r6, #2]
	b _0808D4DA
	.align 2, 0
_0808D314: .4byte 0x00000C94
_0808D318:
	ldrh r2, [r6, #6]
	lsls r1, r2, #1
	movs r4, #0x88
	lsls r4, r4, #2
	adds r0, r6, r4
	adds r0, r0, r1
	ldrh r1, [r0]
	lsls r2, r2, #2
	movs r3, #0xe9
	lsls r3, r3, #2
	adds r0, r6, r3
	adds r0, r0, r2
	ldrh r2, [r0]
	ldrh r3, [r6, #0x16]
	movs r0, #2
	bl sub_0806B698
	ldr r4, _0808D344 @ =0x000005AA
	adds r1, r6, r4
	movs r0, #0
	strh r0, [r1]
	b _0808D4BA
	.align 2, 0
_0808D344: .4byte 0x000005AA
_0808D348:
	bl sub_0806B750
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808D354
	b _0808D4DA
_0808D354:
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	asrs r0, r0, #0x10
	mov sl, r0
	movs r0, #1
	rsbs r0, r0, #0
	cmp sl, r0
	bne _0808D36A
	b _0808D488
_0808D36A:
	bl sub_08018E3C
	ldrh r2, [r6, #6]
	lsls r2, r2, #2
	movs r3, #0xe9
	lsls r3, r3, #2
	adds r1, r6, r3
	adds r1, r1, r2
	ldr r1, [r1]
	mov r4, sl
	muls r4, r1, r4
	adds r1, r4, #0
	subs r0, r0, r1
	bl SetMoney
	ldrh r1, [r6, #6]
	lsls r1, r1, #1
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, r1, r5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r3, r6, #0
	adds r3, #0x12
	str r3, [sp, #0x18]
	mov sb, sl
	ldrh r0, [r6, #6]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r0, r1, #1
	ldr r4, _0808D494 @ =0x000005AC
	adds r7, r6, r4
	adds r0, r7, r0
	ldrb r4, [r0]
	ldr r0, _0808D498 @ =0x000008B2
	adds r0, r0, r6
	mov r8, r0
	add r1, r8
	ldrb r5, [r1]
	cmp r4, #0xff
	beq _0808D3E8
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	mov r0, sb
	muls r0, r5, r0
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_0808D3E8:
	ldrh r0, [r6, #6]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r0, r1, #1
	adds r0, #2
	adds r0, r7, r0
	ldrb r4, [r0]
	adds r1, #1
	add r1, r8
	ldrb r5, [r1]
	cmp r4, #0xff
	beq _0808D418
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	mov r0, sb
	muls r0, r5, r0
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_0808D418:
	ldrh r0, [r6, #6]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r0, r1, #1
	adds r0, #4
	adds r0, r7, r0
	ldrb r4, [r0]
	adds r1, #2
	add r1, r8
	ldrb r5, [r1]
	cmp r4, #0xff
	beq _0808D448
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	mov r0, sl
	muls r0, r5, r0
	subs r1, r1, r0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_0808D448:
	ldrh r0, [r6, #6]
	bl sub_0808DC80
	ldr r2, _0808D49C @ =0x00000CBC
	adds r1, r6, r2
	ldr r0, [sp, #0x18]
	bl sub_080076B0
	ldr r0, [sp, #0x18]
	movs r1, #0
	bl sub_08008E34
	bl sub_08018E3C
	ldr r4, _0808D4A0 @ =gUnk_02010800
	movs r3, #2
	str r3, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0808D4A4 @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
_0808D488:
	ldr r4, _0808D4A8 @ =0x000005AA
	adds r0, r6, r4
	movs r2, #0
	movs r1, #1
	strh r1, [r0]
	b _0808D4D8
	.align 2, 0
_0808D494: .4byte 0x000005AC
_0808D498: .4byte 0x000008B2
_0808D49C: .4byte 0x00000CBC
_0808D4A0: .4byte gUnk_02010800
_0808D4A4: .4byte gUnk_080BFFA0
_0808D4A8: .4byte 0x000005AA
_0808D4AC:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, [r6, #0x18]
	bl sub_0806A040
_0808D4BA:
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808D4DA
_0808D4C2:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _0808D4DA
	movs r0, #0xb5
	lsls r0, r0, #3
	adds r1, r6, r0
	movs r0, #1
	strh r0, [r1]
_0808D4D8:
	strh r2, [r6, #2]
_0808D4DA:
	ldr r0, [sp, #0x14]
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0808D4EC
sub_0808D4EC: @ 0x0808D4EC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808D51C
	cmp r0, #1
	bgt _0808D508
	cmp r0, #0
	beq _0808D512
	b _0808D55A
_0808D508:
	cmp r0, #2
	beq _0808D528
	cmp r0, #3
	beq _0808D556
	b _0808D55A
_0808D512:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0808D54E
_0808D51C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808D55A
	b _0808D54E
_0808D528:
	adds r0, r4, #0
	adds r0, #0x12
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0x10
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xe
	bl sub_0800B4E4
	ldrh r0, [r4, #0xc]
	cmp r0, #0
	beq _0808D54E
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0808D54E:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808D55A
_0808D556:
	movs r5, #0
	strh r5, [r4, #2]
_0808D55A:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808D564
sub_0808D564: @ 0x0808D564
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x48
	bl sub_0806F020
	mov sb, r0
	ldr r0, _0808D738 @ =0x00000C94
	add r0, sb
	str r0, [sp]
	movs r1, #0
	movs r0, #4
	ldr r2, [sp]
	strb r0, [r2]
	movs r0, #3
	strb r0, [r2, #1]
	movs r0, #2
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	mov r4, sb
	ldrh r0, [r4, #6]
	strh r0, [r2, #2]
	ldrh r0, [r4, #8]
	strh r0, [r2, #4]
	movs r0, #0xe0
	strb r0, [r2, #0xd]
	movs r0, #0xf0
	strb r0, [r2, #0xc]
	mov r2, sb
	adds r2, #0x1c
	ldr r5, [sp]
	str r2, [r5, #0x14]
	ldr r0, _0808D73C @ =0x00000322
	add r0, sb
	str r0, [r5, #0x18]
	movs r6, #0
	str r6, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	ldr r0, _0808D740 @ =gUnk_03006B28
	ldrh r0, [r0]
	cmp r6, r0
	bls _0808D5C4
	b _0808D716
_0808D5C4:
	str r2, [sp, #0x34]
	str r1, [sp, #0x38]
	movs r2, #0
	str r2, [sp, #0x3c]
_0808D5CC:
	movs r4, #0
	str r4, [sp, #4]
	ldr r5, [sp, #0xc]
	lsls r5, r5, #2
	str r5, [sp, #0x30]
	ldr r6, [sp, #0xc]
	adds r6, #1
	str r6, [sp, #0x28]
	mov r8, r4
	ldr r0, [sp, #0x3c]
	lsls r3, r0, #1
	adds r7, r0, #0
_0808D5E4:
	ldr r0, _0808D744 @ =gUnk_03006B20
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r2, r0, #6
	adds r2, r2, r0
	lsls r2, r2, #5
	ldr r4, [sp, #0x30]
	ldr r5, [sp, #0xc]
	adds r0, r4, r5
	lsls r0, r0, #5
	ldr r1, _0808D748 @ =gUnk_08BCEF94
	adds r0, r0, r1
	adds r5, r2, r0
	ldr r6, [sp, #4]
	lsls r6, r6, #1
	str r6, [sp, #0x44]
	adds r0, r5, r6
	ldrh r4, [r0]
	ldr r0, _0808D74C @ =0x0000FFFF
	cmp r4, r0
	beq _0808D6F8
	ldr r1, _0808D750 @ =0xFFFFFED4
	mov sl, r1
	add r4, sl
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	str r3, [sp, #0x40]
	bl sub_0806380C
	ldr r6, [sp, #8]
	lsls r2, r6, #2
	ldr r6, [sp, #0x34]
	adds r1, r6, r2
	str r0, [r1]
	ldr r0, _0808D73C @ =0x00000322
	add r0, sb
	ldr r1, [sp, #8]
	adds r0, r0, r1
	movs r1, #0
	strb r1, [r0]
	movs r0, #0x88
	lsls r0, r0, #2
	add r0, sb
	ldr r6, [sp, #0x38]
	adds r0, r0, r6
	strh r4, [r0]
	movs r1, #0xe9
	lsls r1, r1, #2
	add r1, sb
	adds r1, r1, r2
	adds r0, r5, #0
	adds r0, #0x14
	ldr r2, [sp, #0x44]
	adds r0, r0, r2
	ldrh r0, [r0]
	str r0, [r1]
	adds r0, r5, #0
	adds r0, #0x28
	add r0, r8
	ldrh r4, [r0]
	ldr r3, [sp, #0x40]
	ldr r6, _0808D74C @ =0x0000FFFF
	cmp r4, r6
	beq _0808D66C
	mov r1, sl
	adds r0, r4, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808D66C:
	ldr r0, _0808D754 @ =0x000005AC
	add r0, sb
	adds r0, r0, r3
	strh r4, [r0]
	adds r0, r5, #0
	adds r0, #0x2a
	add r0, r8
	ldrh r4, [r0]
	ldr r2, _0808D74C @ =0x0000FFFF
	cmp r4, r2
	beq _0808D68A
	mov r6, sl
	adds r0, r4, r6
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808D68A:
	ldr r0, _0808D758 @ =0x000005AE
	add r0, sb
	adds r0, r0, r3
	strh r4, [r0]
	adds r0, r5, #0
	adds r0, #0x2c
	add r0, r8
	ldrh r4, [r0]
	ldr r0, _0808D74C @ =0x0000FFFF
	cmp r4, r0
	beq _0808D6A8
	mov r1, sl
	adds r0, r4, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0808D6A8:
	movs r0, #0xb6
	lsls r0, r0, #3
	add r0, sb
	adds r0, r0, r3
	strh r4, [r0]
	ldr r1, _0808D75C @ =0x000008B2
	add r1, sb
	adds r1, r1, r7
	adds r0, r5, #0
	adds r0, #0x64
	add r0, r8
	ldrh r0, [r0]
	strb r0, [r1]
	ldr r1, _0808D760 @ =0x000008B3
	add r1, sb
	adds r1, r1, r7
	adds r0, r5, #0
	adds r0, #0x66
	add r0, r8
	ldrh r0, [r0]
	strb r0, [r1]
	ldr r1, _0808D764 @ =0x000008B4
	add r1, sb
	adds r1, r1, r7
	adds r0, r5, #0
	adds r0, #0x68
	add r0, r8
	ldrh r0, [r0]
	strb r0, [r1]
	adds r3, #6
	adds r7, #3
	ldr r2, [sp, #0x38]
	adds r2, #2
	str r2, [sp, #0x38]
	ldr r4, [sp, #0x3c]
	adds r4, #3
	str r4, [sp, #0x3c]
	ldr r5, [sp, #8]
	adds r5, #1
	str r5, [sp, #8]
_0808D6F8:
	movs r6, #6
	add r8, r6
	ldr r0, [sp, #4]
	adds r0, #1
	str r0, [sp, #4]
	cmp r0, #9
	bhi _0808D708
	b _0808D5E4
_0808D708:
	ldr r1, [sp, #0x28]
	str r1, [sp, #0xc]
	ldr r0, _0808D740 @ =gUnk_03006B28
	ldrh r0, [r0]
	cmp r1, r0
	bhi _0808D716
	b _0808D5CC
_0808D716:
	ldr r2, [sp, #8]
	lsls r0, r2, #2
	mov r2, sb
	adds r2, #0x1c
	adds r0, r2, r0
	movs r1, #0
	str r1, [r0]
	str r2, [sp, #0x34]
	ldr r4, [sp, #8]
	cmp r4, #6
	bls _0808D768
	movs r0, #6
	ldr r5, [sp]
	strb r0, [r5, #0xa]
	movs r0, #0x1e
	strh r0, [r5, #8]
	b _0808D774
	.align 2, 0
_0808D738: .4byte 0x00000C94
_0808D73C: .4byte 0x00000322
_0808D740: .4byte gUnk_03006B28
_0808D744: .4byte gUnk_03006B20
_0808D748: .4byte gUnk_08BCEF94
_0808D74C: .4byte 0x0000FFFF
_0808D750: .4byte 0xFFFFFED4
_0808D754: .4byte 0x000005AC
_0808D758: .4byte 0x000005AE
_0808D75C: .4byte 0x000008B2
_0808D760: .4byte 0x000008B3
_0808D764: .4byte 0x000008B4
_0808D768:
	mov r6, sp
	ldrb r0, [r6, #8]
	ldr r6, [sp]
	strb r0, [r6, #0xa]
	movs r0, #0x1a
	strh r0, [r6, #8]
_0808D774:
	mov r1, sp
	ldrh r2, [r1, #8]
	mov r1, sb
	strh r2, [r1, #0x14]
	ldrh r1, [r1, #0x14]
	movs r4, #0
	str r4, [sp, #0x10]
	cmp r1, #1
	bne _0808D788
	b _0808D88A
_0808D788:
	subs r6, r1, #1
	ldr r5, [sp, #0x10]
	adds r5, #1
	str r5, [sp, #0x2c]
	ldr r0, [sp, #0x10]
	cmp r6, r0
	bls _0808D87A
	movs r1, #0x88
	lsls r1, r1, #2
	add r1, sb
	str r1, [sp, #0x1c]
	ldr r2, _0808D8B8 @ =0x00000322
	add r2, sb
	str r2, [sp, #0x20]
	movs r4, #0xe9
	lsls r4, r4, #2
	add r4, sb
	str r4, [sp, #0x24]
_0808D7AC:
	subs r5, r6, #1
	str r5, [sp, #0x14]
	lsls r0, r5, #1
	str r0, [sp, #0x18]
	ldr r1, [sp, #0x1c]
	adds r1, r1, r0
	mov ip, r1
	ldrh r0, [r1]
	lsls r2, r6, #1
	mov sl, r2
	ldr r5, [sp, #0x1c]
	add r5, sl
	ldr r4, [sp, #0x14]
	mov r8, r4
	ldrh r1, [r5]
	cmp r0, r1
	bls _0808D872
	lsls r4, r4, #2
	ldr r0, [sp, #0x34]
	adds r2, r0, r4
	ldr r7, [r2]
	lsls r3, r6, #2
	adds r1, r0, r3
	ldr r0, [r1]
	str r0, [r2]
	str r7, [r1]
	mov r1, ip
	ldrh r7, [r1]
	ldrh r0, [r5]
	strh r0, [r1]
	strh r7, [r5]
	ldr r2, [sp, #0x20]
	add r2, r8
	ldrb r7, [r2]
	ldr r5, [sp, #0x20]
	adds r1, r5, r6
	ldrb r0, [r1]
	strb r0, [r2]
	strb r7, [r1]
	ldr r0, [sp, #0x24]
	adds r4, r0, r4
	ldrh r7, [r4]
	adds r3, r0, r3
	ldr r0, [r3]
	str r0, [r4]
	str r7, [r3]
	ldr r3, [sp, #0x18]
	add r3, r8
	ldr r0, _0808D8BC @ =0x000005AC
	add r0, sb
	mov r1, sl
	adds r2, r1, r6
	ldr r5, _0808D8C0 @ =0x000008B2
	adds r4, r6, r5
	add r4, sl
	add r4, sb
	subs r5, #1
	adds r1, r6, r5
	ldr r6, [sp, #0x18]
	adds r1, r6, r1
	add r1, sb
	lsls r3, r3, #1
	lsls r2, r2, #1
	adds r2, r2, r0
	adds r3, r3, r0
	mov r8, r1
	adds r6, r4, #0
	ldrh r7, [r3]
	ldrh r0, [r2]
	strh r0, [r3]
	strh r7, [r2]
	ldrb r7, [r1]
	ldrb r0, [r4]
	strb r0, [r1]
	strb r7, [r4]
	adds r4, #1
	adds r1, #1
	adds r2, #2
	adds r3, #2
	ldrh r7, [r3]
	ldrh r0, [r2]
	strh r0, [r3]
	strh r7, [r2]
	ldrb r7, [r1]
	ldrb r0, [r4]
	strb r0, [r1]
	strb r7, [r4]
	adds r2, #2
	adds r3, #2
	ldrh r7, [r3]
	ldrh r0, [r2]
	strh r0, [r3]
	strh r7, [r2]
	mov r0, r8
	ldrb r7, [r0, #2]
	ldrb r0, [r6, #2]
	mov r1, r8
	strb r0, [r1, #2]
	strb r7, [r6, #2]
_0808D872:
	ldr r6, [sp, #0x14]
	ldr r2, [sp, #0x10]
	cmp r6, r2
	bhi _0808D7AC
_0808D87A:
	ldr r4, [sp, #0x2c]
	str r4, [sp, #0x10]
	mov r5, sb
	ldrh r1, [r5, #0x14]
	subs r0, r1, #1
	cmp r4, r0
	bhs _0808D88A
	b _0808D788
_0808D88A:
	movs r1, #0
	movs r0, #0x90
	ldr r6, [sp]
	strb r0, [r6, #0xe]
	movs r0, #1
	strb r0, [r6, #0xf]
	ldr r0, _0808D8C4 @ =0x00000A54
	add r0, sb
	str r0, [r6, #0x20]
	ldr r0, _0808D8C8 @ =0x06012400
	str r0, [r6, #0x1c]
	ldr r0, _0808D8CC @ =sub_0808D8D0
	str r0, [r6, #0x24]
	strb r1, [r6, #0x10]
	add sp, #0x48
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808D8B8: .4byte 0x00000322
_0808D8BC: .4byte 0x000005AC
_0808D8C0: .4byte 0x000008B2
_0808D8C4: .4byte 0x00000A54
_0808D8C8: .4byte 0x06012400
_0808D8CC: .4byte sub_0808D8D0

	thumb_func_start sub_0808D8D0
sub_0808D8D0: @ 0x0808D8D0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0xc
	mov r8, r0
	adds r6, r1, #0
	adds r4, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r3, r3, #0x10
	lsrs r7, r3, #0x10
	bl sub_0806F020
	mov sb, r0
	lsls r1, r6, #1
	movs r0, #0x88
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldrh r5, [r0]
	adds r0, r5, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov sl, r0
	adds r0, r5, #0
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r5, _0808D9A8 @ =gUnk_02010800
	subs r4, #2
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r7, [sp]
	adds r0, r5, #0
	mov r1, r8
	adds r3, r4, #0
	bl sub_08069DA8
	adds r4, r7, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	lsls r1, r6, #2
	movs r0, #0xe9
	lsls r0, r0, #2
	add r0, sb
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0808D9AC @ =gUnk_080BFFA0
	adds r0, r5, #0
	movs r1, #0x15
	adds r2, r4, #0
	bl sub_08001284
	movs r0, #0x12
	add sb, r0
	mov r0, sb
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r6
	bne _0808D9B4
	movs r0, #1
	bl sub_080012D4
	ldr r3, _0808D9B0 @ =gUnk_080BFFA4
	adds r0, r5, #0
	movs r1, #0x12
	adds r2, r7, #0
	bl sub_08001284
	str r7, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x13
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	b _0808D9C0
	.align 2, 0
_0808D9A8: .4byte gUnk_02010800
_0808D9AC: .4byte gUnk_080BFFA0
_0808D9B0: .4byte gUnk_080BFFA4
_0808D9B4:
	ldr r3, _0808D9D0 @ =gUnk_080BFFA8
	adds r0, r5, #0
	movs r1, #0x12
	adds r2, r7, #0
	bl sub_08001284
_0808D9C0:
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808D9D0: .4byte gUnk_080BFFA8

	thumb_func_start sub_0808D9D4
sub_0808D9D4: @ 0x0808D9D4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r7, r0, #0
	lsls r4, r4, #1
	movs r1, #0x88
	lsls r1, r1, #2
	adds r0, r7, r1
	adds r0, r0, r4
	ldrh r5, [r0]
	ldr r6, _0808DACC @ =gUnk_02010800
	ldr r3, _0808DAD0 @ =gUnk_080BFFAC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #2
	bl sub_08001284
	ldr r3, _0808DAD4 @ =gUnk_080BFFB4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #6
	bl sub_08001284
	ldr r3, _0808DAD8 @ =gUnk_080BFFB8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #8
	bl sub_08001284
	ldr r3, _0808DADC @ =gUnk_080BFFBC
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xa
	bl sub_08001284
	ldr r3, _0808DAE0 @ =gUnk_080BFFC0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xc
	bl sub_08001284
	ldr r3, _0808DAE4 @ =gUnk_080BFFC4
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xe
	bl sub_08001284
	ldr r3, _0808DAE8 @ =gUnk_080BFFC8
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #7
	bl sub_08001284
	ldr r4, _0808DAEC @ =gUnk_080BFFD0
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #9
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xb
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xd
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	movs r1, #0x18
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808DA96
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bne _0808DAF0
_0808DA96:
	adds r0, r5, #0
	bl sub_080638C8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #7
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080638E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #9
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #4
	str r0, [sp, #8]
	b _0808DB4E
	.align 2, 0
_0808DACC: .4byte gUnk_02010800
_0808DAD0: .4byte gUnk_080BFFAC
_0808DAD4: .4byte gUnk_080BFFB4
_0808DAD8: .4byte gUnk_080BFFB8
_0808DADC: .4byte gUnk_080BFFBC
_0808DAE0: .4byte gUnk_080BFFC0
_0808DAE4: .4byte gUnk_080BFFC4
_0808DAE8: .4byte gUnk_080BFFC8
_0808DAEC: .4byte gUnk_080BFFD0
_0808DAF0:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #3
	bne _0808DB5C
	adds r0, r5, #0
	bl sub_08063968
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	movs r4, #4
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063984
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_080639A0
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
_0808DB4E:
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	b _0808DBD4
_0808DB5C:
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #4
	bne _0808DBD4
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_08018AD8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808DBD4
	adds r0, r5, #0
	bl sub_080638F8
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xb
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063914
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xd
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
	adds r0, r5, #0
	bl sub_08063930
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	movs r1, #0xf
	str r1, [sp]
	str r0, [sp, #4]
	str r4, [sp, #8]
	adds r0, r6, #0
	movs r1, #1
	movs r2, #0
	movs r3, #0x18
	bl sub_0806F2D0
_0808DBD4:
	bl sub_08018E3C
	ldr r4, _0808DC74 @ =gUnk_02010800
	movs r1, #2
	mov r8, r1
	str r1, [sp]
	str r0, [sp, #4]
	movs r0, #7
	str r0, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0xe
	bl sub_0806F2D0
	ldr r3, _0808DC78 @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #2
	bl sub_08001284
	ldrh r0, [r7, #0x10]
	adds r4, r7, #0
	adds r4, #0x10
	cmp r0, #0
	beq _0808DC0E
	adds r0, r4, #0
	bl sub_0800B4E4
_0808DC0E:
	adds r0, r5, #0
	bl sub_08063820
	adds r2, r0, #0
	movs r0, #0x11
	str r0, [sp]
	movs r6, #0
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r0, r8
	str r0, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r4, #0
	movs r1, #2
	movs r3, #1
	bl sub_0800B1AC
	ldrh r0, [r7, #0xe]
	adds r7, #0xe
	cmp r0, #0
	beq _0808DC3E
	adds r0, r7, #0
	bl sub_0800B4E4
_0808DC3E:
	ldr r4, _0808DC7C @ =gUnk_08BC9DD8
	adds r0, r5, #0
	bl sub_08063838
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x16
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #3
	str r0, [sp]
	str r6, [sp, #4]
	str r6, [sp, #8]
	mov r1, r8
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	movs r3, #0x18
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808DC74: .4byte gUnk_02010800
_0808DC78: .4byte gUnk_080BFFA0
_0808DC7C: .4byte gUnk_08BC9DD8

	thumb_func_start sub_0808DC80
sub_0808DC80: @ 0x0808DC80
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r7, r0, #0
	ldr r0, _0808DD28 @ =0x00000CBC
	adds r6, r7, r0
	movs r1, #0
	movs r0, #4
	strb r0, [r6]
	movs r0, #8
	strb r0, [r6, #1]
	movs r0, #2
	strb r0, [r6, #6]
	strb r1, [r6, #7]
	strb r0, [r6, #0x11]
	strb r0, [r6, #0x12]
	strh r1, [r6, #2]
	strh r1, [r6, #4]
	movs r0, #0xe0
	strb r0, [r6, #0xd]
	movs r0, #0xf0
	strb r0, [r6, #0xc]
	ldr r1, _0808DD2C @ =0x00000A38
	adds r0, r7, r1
	str r0, [r6, #0x14]
	movs r2, #0xa5
	lsls r2, r2, #4
	adds r0, r7, r2
	str r0, [r6, #0x18]
	movs r3, #0
	mov sl, r3
	lsls r0, r4, #1
	adds r0, r0, r4
	mov r8, r0
	mov sb, r3
_0808DCD6:
	mov r4, r8
	lsls r0, r4, #1
	add r0, sb
	ldr r2, _0808DD30 @ =0x000005AC
	adds r1, r7, r2
	adds r5, r1, r0
	ldrh r0, [r5]
	ldr r4, _0808DD34 @ =0x0000FFFF
	cmp r0, r4
	beq _0808DD70
	str r3, [sp]
	bl sub_0806380C
	ldr r3, [sp]
	lsls r2, r3, #2
	ldr r4, _0808DD2C @ =0x00000A38
	adds r1, r7, r4
	adds r1, r1, r2
	str r0, [r1]
	mov r0, sl
	add r0, r8
	ldr r1, _0808DD38 @ =0x000008B2
	adds r4, r7, r1
	adds r4, r4, r0
	ldrh r0, [r5]
	str r3, [sp]
	bl sub_08018B50
	ldrb r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r3, [sp]
	cmp r1, r0
	bls _0808DD3C
	movs r2, #0xa5
	lsls r2, r2, #4
	adds r0, r7, r2
	adds r0, r0, r3
	movs r1, #1
	b _0808DD46
	.align 2, 0
_0808DD28: .4byte 0x00000CBC
_0808DD2C: .4byte 0x00000A38
_0808DD30: .4byte 0x000005AC
_0808DD34: .4byte 0x0000FFFF
_0808DD38: .4byte 0x000008B2
_0808DD3C:
	movs r4, #0xa5
	lsls r4, r4, #4
	adds r0, r7, r4
	adds r0, r0, r3
	movs r1, #0
_0808DD46:
	strb r1, [r0]
	lsls r0, r3, #1
	ldr r1, _0808DDAC @ =0x00000A48
	adds r2, r7, r1
	adds r2, r2, r0
	mov r4, r8
	lsls r1, r4, #1
	add r1, sb
	ldr r4, _0808DDB0 @ =0x000005AC
	adds r0, r7, r4
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2]
	adds r3, #1
	movs r0, #2
	add sb, r0
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #2
	bls _0808DCD6
_0808DD70:
	lsls r1, r3, #2
	ldr r4, _0808DDB4 @ =0x00000A38
	adds r0, r7, r4
	adds r0, r0, r1
	movs r1, #0
	str r1, [r0]
	strb r3, [r6, #0xa]
	movs r0, #8
	strh r0, [r6, #8]
	movs r0, #0x90
	strb r0, [r6, #0xe]
	movs r0, #1
	strb r0, [r6, #0xf]
	ldr r2, _0808DDB8 @ =0x00000A54
	adds r0, r7, r2
	str r0, [r6, #0x20]
	ldr r0, _0808DDBC @ =0x06012400
	str r0, [r6, #0x1c]
	ldr r0, _0808DDC0 @ =sub_0808DDC4
	str r0, [r6, #0x24]
	strb r1, [r6, #0x10]
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808DDAC: .4byte 0x00000A48
_0808DDB0: .4byte 0x000005AC
_0808DDB4: .4byte 0x00000A38
_0808DDB8: .4byte 0x00000A54
_0808DDBC: .4byte 0x06012400
_0808DDC0: .4byte sub_0808DDC4

	thumb_func_start sub_0808DDC4
sub_0808DDC4: @ 0x0808DDC4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r6, r1, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #0x10]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0x14]
	bl sub_0806F020
	adds r7, r0, #0
	ldrh r1, [r7, #6]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r4, r6, r0
	ldr r1, _0808DEC8 @ =0x000008B2
	adds r1, r1, r7
	mov sb, r1
	add r4, sb
	lsls r5, r6, #1
	lsls r0, r0, #1
	adds r0, r5, r0
	ldr r1, _0808DECC @ =0x000005AC
	adds r1, r1, r7
	mov sl, r1
	add r0, sl
	ldrh r0, [r0]
	bl sub_08018B50
	ldrb r1, [r4]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r1, r0
	bls _0808DE22
	movs r0, #1
	bl sub_080012D4
_0808DE22:
	ldr r0, _0808DED0 @ =gUnk_02010800
	mov r8, r0
	ldr r4, [sp, #0x14]
	adds r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r3, _0808DED4 @ =gUnk_080BFFA4
	movs r1, #0x10
	adds r2, r4, #0
	bl sub_08001284
	str r4, [sp]
	ldrh r1, [r7, #6]
	lsls r0, r1, #1
	adds r0, r0, r1
	adds r0, r6, r0
	add r0, sb
	ldrb r0, [r0]
	str r0, [sp, #4]
	movs r6, #2
	str r6, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x11
	bl sub_0806F2D0
	ldr r3, _0808DED8 @ =gUnk_080BFFEC
	mov r0, r8
	movs r1, #0x13
	adds r2, r4, #0
	bl sub_08001284
	ldrh r1, [r7, #6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r5, r0
	add r0, sl
	ldrh r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r4, [sp]
	str r0, [sp, #4]
	str r6, [sp, #8]
	mov r0, r8
	movs r1, #0
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	movs r0, #0
	bl sub_080012D4
	ldr r1, _0808DEDC @ =0x00000A48
	adds r0, r7, r1
	adds r0, r0, r5
	ldrh r0, [r0]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r3, [sp, #0x10]
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, [sp, #0x14]
	str r0, [sp]
	mov r0, r8
	ldr r1, [sp, #0xc]
	bl sub_08069DA8
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808DEC8: .4byte 0x000008B2
_0808DECC: .4byte 0x000005AC
_0808DED0: .4byte gUnk_02010800
_0808DED4: .4byte gUnk_080BFFA4
_0808DED8: .4byte gUnk_080BFFEC
_0808DEDC: .4byte 0x00000A48

	thumb_func_start sub_0808DEE0
sub_0808DEE0: @ 0x0808DEE0
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	bl sub_0806F020
	adds r7, r0, #0
	ldrh r0, [r7, #0xc]
	cmp r0, #0
	beq _0808DEF8
	adds r0, r7, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0808DEF8:
	adds r0, r7, #0
	adds r0, #0xc
	ldrh r2, [r7, #6]
	lsls r2, r2, #2
	adds r1, r7, #0
	adds r1, #0x1c
	adds r1, r1, r2
	ldr r2, [r1]
	movs r6, #4
	str r6, [sp]
	movs r5, #0
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r4, #2
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #2
	movs r3, #4
	bl sub_0800B1AC
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	movs r1, #2
	movs r2, #4
	movs r3, #2
	bl sub_0801BBB8
	ldrh r1, [r7, #6]
	lsls r1, r1, #1
	movs r2, #0x88
	lsls r2, r2, #2
	adds r0, r7, r2
	adds r0, r0, r1
	ldrh r0, [r0]
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r4, _0808DFA8 @ =gUnk_02010800
	str r6, [sp]
	adds r0, r4, #0
	movs r1, #3
	movs r3, #2
	bl sub_08069DA8
	movs r0, #1
	str r0, [sp]
	str r5, [sp, #4]
	movs r1, #1
	movs r2, #6
	movs r3, #0x15
	bl sub_0801BBB8
	adds r0, r4, #0
	movs r1, #1
	movs r2, #6
	movs r3, #0x15
	bl sub_0806F500
	movs r2, #5
	str r2, [sp]
	ldrh r1, [r7, #6]
	lsls r1, r1, #2
	movs r3, #0xe9
	lsls r3, r3, #2
	adds r0, r7, r3
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [sp, #4]
	str r2, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _0808DFAC @ =gUnk_080BFFA0
	adds r0, r4, #0
	movs r1, #0x15
	movs r2, #5
	bl sub_08001284
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808DFA8: .4byte gUnk_02010800
_0808DFAC: .4byte gUnk_080BFFA0

	thumb_func_start sub_0808DFB0
sub_0808DFB0: @ 0x0808DFB0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	adds r6, r2, #0
	mov sb, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp, #8]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0xc]
	movs r0, #0x64
	mov r8, r0
	ldr r2, _0808E098 @ =0x0000FFFF
	mov sl, r2
	mov r5, sp
	mov r7, sp
	ldrh r0, [r6]
	cmp r0, sl
	beq _0808DFFA
	bl sub_08018B50
	strb r0, [r5]
	add r4, sp, #4
	ldrb r0, [r5]
	mov r2, sb
	ldrb r1, [r2]
	bl __udivsi3
	strb r0, [r4]
	ldrb r0, [r4]
	cmp r8, r0
	bls _0808DFFA
	mov r8, r0
_0808DFFA:
	ldrh r0, [r6, #2]
	cmp r0, sl
	beq _0808E01E
	bl sub_08018B50
	strb r0, [r7, #1]
	mov r4, sp
	adds r4, #5
	ldrb r0, [r7, #1]
	mov r2, sb
	ldrb r1, [r2, #1]
	bl __udivsi3
	strb r0, [r4]
	ldrb r0, [r4]
	cmp r8, r0
	bls _0808E01E
	mov r8, r0
_0808E01E:
	ldrh r0, [r6, #4]
	cmp r0, sl
	beq _0808E042
	bl sub_08018B50
	strb r0, [r7, #2]
	mov r4, sp
	adds r4, #6
	ldrb r0, [r7, #2]
	mov r2, sb
	ldrb r1, [r2, #2]
	bl __udivsi3
	strb r0, [r4]
	ldrb r0, [r4]
	cmp r8, r0
	bls _0808E042
	mov r8, r0
_0808E042:
	bl sub_08018E3C
	ldr r1, [sp, #0xc]
	bl __udivsi3
	cmp r8, r0
	bls _0808E060
	bl sub_08018E3C
	ldr r1, [sp, #0xc]
	bl __udivsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
_0808E060:
	ldr r0, [sp, #8]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x63
	subs r1, r1, r0
	cmp r8, r1
	ble _0808E086
	ldr r0, [sp, #8]
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x63
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r8, r1
_0808E086:
	mov r0, r8
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808E098: .4byte 0x0000FFFF

	thumb_func_start sub_0808E09C
sub_0808E09C: @ 0x0808E09C
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808E0C4
	cmp r0, #1
	bgt _0808E0B8
	cmp r0, #0
	beq _0808E0BE
	b _0808E0EC
_0808E0B8:
	cmp r0, #2
	beq _0808E0D6
	b _0808E0EC
_0808E0BE:
	bl sub_0808E0F4
	b _0808E0C8
_0808E0C4:
	bl sub_0808E188
_0808E0C8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808E0EC
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _0808E0EC
_0808E0D6:
	bl sub_0808E4CC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808E0EC
	movs r5, #0
	strh r5, [r4]
	movs r0, #0x99
	lsls r0, r0, #4
	bl sub_0806EFF0
_0808E0EC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808E0F4
sub_0808E0F4: @ 0x0808E0F4
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808E138
	cmp r0, #1
	bgt _0808E110
	cmp r0, #0
	beq _0808E11A
	b _0808E17E
_0808E110:
	cmp r0, #2
	beq _0808E168
	cmp r0, #3
	beq _0808E17A
	b _0808E17E
_0808E11A:
	bl sub_0808E52C
	adds r0, r4, #0
	adds r0, #0xa
	ldr r2, _0808E134 @ =0x00000968
	adds r1, r4, r2
	bl sub_080072F8
	ldrh r0, [r4, #4]
	bl sub_0808E8E0
	b _0808E172
	.align 2, 0
_0808E134: .4byte 0x00000968
_0808E138:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	b _0808E172
_0808E168:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808E17E
_0808E172:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808E17E
_0808E17A:
	movs r5, #0
	strh r5, [r4, #2]
_0808E17E:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808E188
sub_0808E188: @ 0x0808E188
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _0808E1A4
	b _0808E3E4
_0808E1A4:
	cmp r0, #1
	bgt _0808E1AE
	cmp r0, #0
	beq _0808E1B6
	b _0808E4BC
_0808E1AE:
	cmp r0, #4
	bne _0808E1B4
	b _0808E4A4
_0808E1B4:
	b _0808E4BC
_0808E1B6:
	adds r5, r6, #0
	adds r5, #0xa
	adds r0, r5, #0
	bl sub_08008D18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _0808E1CA
	b _0808E4BC
_0808E1CA:
	ldr r0, _0808E220 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0xf0
	ands r0, r1
	cmp r0, #0
	beq _0808E224
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	bl sub_080079E0
	adds r0, r5, #0
	bl sub_08008D30
	strh r0, [r6, #4]
	adds r0, r5, #0
	bl sub_08008D50
	strh r0, [r6, #6]
	adds r0, r5, #0
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r4
	bne _0808E208
	b _0808E4BC
_0808E208:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r6, #4]
	bl sub_0808E8E0
	adds r0, r5, #0
	bl sub_08008C34
	b _0808E4BC
	.align 2, 0
_0808E220: .4byte gCurrentKeyPress
_0808E224:
	ldr r0, _0808E270 @ =gKeyNewPress
	ldrh r1, [r0]
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	bne _0808E232
	b _0808E3C8
_0808E232:
	ldrh r1, [r6, #4]
	lsls r1, r1, #1
	movs r2, #0xce
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r7, [r0]
	adds r0, r5, #0
	bl sub_08008D30
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0xf
	ldr r0, _0808E274 @ =0x00000594
	adds r0, r0, r6
	mov r8, r0
	add r4, r8
	bl sub_08018E50
	ldrh r1, [r4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r1, r0
	bls _0808E27C
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0808E278 @ =gUnk_08BC9EF4
	b _0808E362
	.align 2, 0
_0808E270: .4byte gKeyNewPress
_0808E274: .4byte 0x00000594
_0808E278: .4byte gUnk_08BC9EF4
_0808E27C:
	ldr r0, _0808E2DC @ =0x000001F3
	cmp r7, r0
	bls _0808E2E4
	ldr r1, _0808E2E0 @ =0xFFFFFED4
	adds r0, r7, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	beq _0808E358
	adds r0, r5, #0
	movs r1, #0
	bl sub_08008E34
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	bl sub_08018E50
	ldrh r1, [r6, #4]
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r7, [r1]
	adds r1, r7, #0
	bl __udivsi3
	lsls r1, r5, #0x10
	lsls r0, r0, #0x10
	cmp r1, r0
	ble _0808E2D2
	lsrs r5, r0, #0x10
_0808E2D2:
	adds r3, r5, #0
	movs r0, #4
	adds r1, r4, #0
	adds r2, r7, #0
	b _0808E3BC
	.align 2, 0
_0808E2DC: .4byte 0x000001F3
_0808E2E0: .4byte 0xFFFFFED4
_0808E2E4:
	ldr r0, _0808E344 @ =0x0000012B
	cmp r7, r0
	bls _0808E34C
	ldr r2, _0808E348 @ =0xFFFFFED4
	adds r0, r7, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x63
	beq _0808E358
	adds r0, r5, #0
	movs r1, #0
	bl sub_08008E34
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x63
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	bl sub_08018E50
	ldrh r1, [r6, #4]
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r7, [r1]
	adds r1, r7, #0
	bl __udivsi3
	lsls r1, r5, #0x10
	lsls r0, r0, #0x10
	cmp r1, r0
	ble _0808E33A
	lsrs r5, r0, #0x10
_0808E33A:
	adds r3, r5, #0
	movs r0, #4
	adds r1, r4, #0
	adds r2, r7, #0
	b _0808E3BC
	.align 2, 0
_0808E344: .4byte 0x0000012B
_0808E348: .4byte 0xFFFFFED4
_0808E34C:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1e
	bne _0808E37C
_0808E358:
	movs r0, #0x67
	movs r1, #0
	bl sub_080147B8
	ldr r0, _0808E378 @ =gUnk_08BC9EE8
_0808E362:
	ldr r0, [r0]
	bl sub_0806A040
	adds r0, r5, #0
	movs r1, #0
	bl sub_08008E4C
	movs r0, #4
	strh r0, [r6, #2]
	b _0808E4BC
	.align 2, 0
_0808E378: .4byte gUnk_08BC9EE8
_0808E37C:
	adds r0, r5, #0
	movs r1, #0
	bl sub_08008E34
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x1e
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	bl sub_08018E50
	ldrh r1, [r6, #4]
	lsls r1, r1, #1
	add r1, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r1]
	adds r1, r4, #0
	bl __udivsi3
	lsls r1, r5, #0x10
	lsls r0, r0, #0x10
	cmp r1, r0
	ble _0808E3B4
	lsrs r5, r0, #0x10
_0808E3B4:
	adds r3, r5, #0
	movs r0, #5
	adds r1, r7, #0
	adds r2, r4, #0
_0808E3BC:
	bl sub_0806B698
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _0808E4BC
_0808E3C8:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808E4BC
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r6, #2]
	b _0808E4BC
_0808E3E4:
	bl sub_0806B750
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808E4BC
	ldrh r1, [r6, #4]
	lsls r1, r1, #1
	movs r2, #0xce
	lsls r2, r2, #2
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r5, [r0]
	ldr r2, _0808E460 @ =0x00000594
	adds r0, r6, r2
	adds r0, r0, r1
	ldrh r7, [r0]
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r2, #0xa
	adds r2, r2, r6
	mov r8, r2
	cmp r0, r1
	beq _0808E48A
	bl sub_08018E50
	adds r4, r0, #0
	bl sub_0806F5F8
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	muls r0, r7, r0
	subs r4, r4, r0
	adds r0, r4, #0
	bl SetFishingPoint
	ldr r0, _0808E464 @ =0x0000012B
	cmp r5, r0
	bls _0808E46C
	ldr r0, _0808E468 @ =0xFFFFFED4
	adds r4, r5, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	adds r5, r0, #0
	bl sub_0806F5F8
	adds r1, r0, #0
	adds r1, r1, r5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	b _0808E48A
	.align 2, 0
_0808E460: .4byte 0x00000594
_0808E464: .4byte 0x0000012B
_0808E468: .4byte 0xFFFFFED4
_0808E46C:
	movs r4, #0
	b _0808E47A
_0808E470:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	bl sub_08015854
	adds r4, #1
_0808E47A:
	bl sub_0806F5F8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r4, r0
	blo _0808E470
	bl sub_08015A28
_0808E48A:
	ldrh r0, [r6, #4]
	bl sub_0808E8E0
	mov r0, r8
	bl sub_08008C34
	mov r0, r8
	movs r1, #1
	bl sub_08008E34
	movs r0, #0
	strh r0, [r6, #2]
	b _0808E4BC
_0808E4A4:
	bl sub_0806A0D4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0808E4BC
	adds r0, r6, #0
	adds r0, #0xa
	movs r1, #1
	bl sub_08008E4C
	strh r4, [r6, #2]
_0808E4BC:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0808E4CC
sub_0808E4CC: @ 0x0808E4CC
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808E4FC
	cmp r0, #1
	bgt _0808E4E8
	cmp r0, #0
	beq _0808E4F2
	b _0808E524
_0808E4E8:
	cmp r0, #2
	beq _0808E508
	cmp r0, #3
	beq _0808E520
	b _0808E524
_0808E4F2:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _0808E518
_0808E4FC:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808E524
	b _0808E518
_0808E508:
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_08008C14
	adds r0, r4, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0808E518:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _0808E524
_0808E520:
	movs r5, #0
	strh r5, [r4, #2]
_0808E524:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0808E52C
sub_0808E52C: @ 0x0808E52C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	bl sub_0806F020
	mov r8, r0
	ldr r0, _0808E5C0 @ =0x00000968
	add r0, r8
	mov sb, r0
	movs r1, #0
	movs r0, #5
	mov r2, sb
	strb r0, [r2]
	movs r0, #4
	strb r0, [r2, #1]
	movs r0, #2
	strb r0, [r2, #6]
	strb r1, [r2, #7]
	strb r0, [r2, #0x11]
	strb r0, [r2, #0x12]
	mov r1, r8
	ldrh r0, [r1, #4]
	strh r0, [r2, #2]
	ldrh r0, [r1, #6]
	strh r0, [r2, #4]
	movs r0, #0xe0
	strb r0, [r2, #0xd]
	movs r0, #0xf0
	strb r0, [r2, #0xc]
	mov r2, r8
	adds r2, #0x14
	mov r0, sb
	str r2, [r0, #0x14]
	ldr r0, _0808E5C4 @ =0x000004CA
	add r0, r8
	mov r1, sb
	str r0, [r1, #0x18]
	movs r6, #0
	movs r1, #0
	ldr r0, _0808E5C8 @ =gUnk_03006B28
	ldrh r0, [r0]
	adds r0, #1
	cmp r6, r0
	bhs _0808E620
	str r2, [sp, #0xc]
_0808E58C:
	movs r7, #0
	lsls r0, r1, #4
	adds r2, r1, #1
	mov sl, r2
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0808E5CC @ =gUnk_08BD1834
	adds r4, r0, r1
	lsls r0, r6, #2
	ldr r2, [sp, #0xc]
	adds r5, r0, r2
_0808E5A2:
	ldrh r2, [r4]
	adds r1, r2, #0
	ldr r0, _0808E5D0 @ =0x0000FFFF
	cmp r1, r0
	beq _0808E614
	ldr r0, _0808E5D4 @ =0x0000012B
	cmp r1, r0
	bls _0808E5DC
	ldr r1, _0808E5D8 @ =0xFFFFFED4
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0806380C
	b _0808E5E4
	.align 2, 0
_0808E5C0: .4byte 0x00000968
_0808E5C4: .4byte 0x000004CA
_0808E5C8: .4byte gUnk_03006B28
_0808E5CC: .4byte gUnk_08BD1834
_0808E5D0: .4byte 0x0000FFFF
_0808E5D4: .4byte 0x0000012B
_0808E5D8: .4byte 0xFFFFFED4
_0808E5DC:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639BC
_0808E5E4:
	str r0, [r5]
	ldr r0, _0808E640 @ =0x000004CA
	add r0, r8
	adds r0, r0, r6
	movs r1, #0
	strb r1, [r0]
	lsls r2, r6, #1
	movs r0, #0xce
	lsls r0, r0, #2
	add r0, r8
	adds r0, r0, r2
	ldrh r1, [r4]
	strh r1, [r0]
	ldr r0, _0808E644 @ =0x00000594
	add r0, r8
	adds r0, r0, r2
	ldrh r1, [r4, #0x1e]
	strh r1, [r0]
	adds r5, #4
	adds r6, #1
	adds r4, #2
	adds r7, #1
	cmp r7, #0xe
	bls _0808E5A2
_0808E614:
	mov r1, sl
	ldr r0, _0808E648 @ =gUnk_03006B28
	ldrh r0, [r0]
	adds r0, #1
	cmp r1, r0
	blo _0808E58C
_0808E620:
	movs r0, #0
	mov r2, r8
	strh r6, [r2, #0x10]
	lsls r1, r6, #2
	adds r2, #0x14
	adds r1, r2, r1
	str r0, [r1]
	str r2, [sp, #0xc]
	cmp r6, #6
	bls _0808E64C
	movs r0, #6
	mov r1, sb
	strb r0, [r1, #0xa]
	movs r0, #0x1e
	strh r0, [r1, #8]
	b _0808E654
	.align 2, 0
_0808E640: .4byte 0x000004CA
_0808E644: .4byte 0x00000594
_0808E648: .4byte gUnk_03006B28
_0808E64C:
	mov r2, sb
	strb r6, [r2, #0xa]
	movs r0, #0x1a
	strh r0, [r2, #8]
_0808E654:
	mov r0, r8
	ldrh r1, [r0, #0x10]
	movs r2, #0
	mov sl, r2
	cmp r1, #1
	beq _0808E712
	ldr r0, _0808E740 @ =0x00000594
	add r0, r8
	str r0, [sp, #8]
_0808E666:
	subs r5, r1, #1
	mov r1, sl
	adds r1, #1
	str r1, [sp, #0x10]
	cmp r5, sl
	bls _0808E704
	movs r7, #0xce
	lsls r7, r7, #2
	add r7, r8
	ldr r2, _0808E744 @ =0x000004CA
	add r2, r8
	str r2, [sp, #4]
	ldr r0, [sp, #0xc]
	str r0, [sp]
_0808E682:
	subs r2, r5, #1
	lsls r0, r2, #1
	adds r0, r7, r0
	ldrh r4, [r0]
	lsls r1, r5, #1
	adds r0, r7, r1
	ldrh r0, [r0]
	adds r6, r2, #0
	mov ip, r1
	ldr r1, _0808E748 @ =0x0000012B
	cmp r4, r1
	bls _0808E6A0
	ldr r1, _0808E74C @ =0x000001C1
	cmp r4, r1
	bls _0808E6A6
_0808E6A0:
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r4, r4, r2
_0808E6A6:
	ldr r1, _0808E748 @ =0x0000012B
	cmp r0, r1
	bls _0808E6B2
	ldr r1, _0808E74C @ =0x000001C1
	cmp r0, r1
	bls _0808E6B8
_0808E6B2:
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
_0808E6B8:
	cmp r4, r0
	bls _0808E6FE
	ldr r1, _0808E750 @ =0x000001F3
	lsls r2, r6, #2
	ldr r0, [sp]
	adds r2, r0, r2
	ldr r3, [r2]
	lsls r1, r5, #2
	adds r1, r0, r1
	ldr r0, [r1]
	str r0, [r2]
	str r3, [r1]
	lsls r3, r6, #1
	adds r2, r7, r3
	ldrh r4, [r2]
	mov r0, ip
	adds r1, r7, r0
	ldrh r0, [r1]
	strh r0, [r2]
	strh r4, [r1]
	ldr r1, [sp, #4]
	adds r2, r1, r6
	ldrb r4, [r2]
	adds r1, r1, r5
	ldrb r0, [r1]
	strb r0, [r2]
	strb r4, [r1]
	ldr r2, [sp, #8]
	adds r3, r2, r3
	ldrh r2, [r3]
	ldr r1, [sp, #8]
	add r1, ip
	ldrh r0, [r1]
	strh r0, [r3]
	strh r2, [r1]
_0808E6FE:
	adds r5, r6, #0
	cmp r5, sl
	bhi _0808E682
_0808E704:
	ldr r0, [sp, #0x10]
	mov sl, r0
	mov r2, r8
	ldrh r1, [r2, #0x10]
	subs r0, r1, #1
	cmp sl, r0
	blo _0808E666
_0808E712:
	movs r1, #0
	movs r0, #0xb0
	mov r2, sb
	strb r0, [r2, #0xe]
	movs r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xe5
	lsls r0, r0, #3
	add r0, r8
	str r0, [r2, #0x20]
	ldr r0, _0808E754 @ =0x06012400
	str r0, [r2, #0x1c]
	ldr r0, _0808E758 @ =sub_0808E75C
	str r0, [r2, #0x24]
	strb r1, [r2, #0x10]
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E740: .4byte 0x00000594
_0808E744: .4byte 0x000004CA
_0808E748: .4byte 0x0000012B
_0808E74C: .4byte 0x000001C1
_0808E750: .4byte 0x000001F3
_0808E754: .4byte 0x06012400
_0808E758: .4byte sub_0808E75C

	thumb_func_start sub_0808E75C
sub_0808E75C: @ 0x0808E75C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov sl, r2
	lsls r3, r3, #0x10
	lsrs r5, r3, #0x10
	bl sub_0806F020
	adds r6, r0, #0
	ldr r7, _0808E814 @ =gUnk_02010800
	adds r4, r5, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	str r4, [sp]
	mov r0, sb
	lsls r0, r0, #1
	mov r8, r0
	ldr r1, _0808E818 @ =0x00000594
	adds r0, r6, r1
	add r0, r8
	ldrh r0, [r0]
	str r0, [sp, #4]
	movs r0, #5
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldr r3, _0808E81C @ =gUnk_080BFFF0
	adds r0, r7, #0
	movs r1, #0x19
	adds r2, r4, #0
	bl sub_08001284
	adds r0, r6, #0
	adds r0, #0xa
	bl sub_08008D30
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, sb
	bne _0808E854
	movs r0, #1
	bl sub_080012D4
	ldr r3, _0808E820 @ =gUnk_080BFFA4
	adds r0, r7, #0
	movs r1, #0x16
	adds r2, r5, #0
	bl sub_08001284
	movs r2, #0xce
	lsls r2, r2, #2
	adds r0, r6, r2
	add r0, r8
	ldrh r1, [r0]
	ldr r0, _0808E824 @ =0x0000012B
	cmp r1, r0
	bls _0808E82C
	ldr r2, _0808E828 @ =0xFFFFFED4
	adds r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r5, [sp]
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x17
	bl sub_0806F2D0
	b _0808E84C
	.align 2, 0
_0808E814: .4byte gUnk_02010800
_0808E818: .4byte 0x00000594
_0808E81C: .4byte gUnk_080BFFF0
_0808E820: .4byte gUnk_080BFFA4
_0808E824: .4byte 0x0000012B
_0808E828: .4byte 0xFFFFFED4
_0808E82C:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl GetCertainWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r5, [sp]
	str r0, [sp, #4]
	movs r0, #2
	str r0, [sp, #8]
	adds r0, r7, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x17
	bl sub_0806F2D0
_0808E84C:
	movs r0, #0
	bl sub_080012D4
	b _0808E860
_0808E854:
	ldr r3, _0808E89C @ =gUnk_080BFFA8
	adds r0, r7, #0
	movs r1, #0x16
	adds r2, r5, #0
	bl sub_08001284
_0808E860:
	mov r1, sb
	lsls r0, r1, #1
	movs r2, #0xce
	lsls r2, r2, #2
	adds r1, r6, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldr r0, _0808E8A0 @ =0x0000012B
	cmp r1, r0
	bls _0808E8AC
	ldr r2, _0808E8A4 @ =0xFFFFFED4
	adds r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063850
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0808E8A8 @ =gUnk_02010800
	mov r3, sl
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	ldr r1, [sp, #0xc]
	bl sub_08069DA8
	b _0808E8CC
	.align 2, 0
_0808E89C: .4byte gUnk_080BFFA8
_0808E8A0: .4byte 0x0000012B
_0808E8A4: .4byte 0xFFFFFED4
_0808E8A8: .4byte gUnk_02010800
_0808E8AC:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639E8
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldr r0, _0808E8DC @ =gUnk_02010800
	mov r3, sl
	subs r3, #2
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r5, [sp]
	ldr r1, [sp, #0xc]
	bl sub_08069DA8
_0808E8CC:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0808E8DC: .4byte gUnk_02010800

	thumb_func_start sub_0808E8E0
sub_0808E8E0: @ 0x0808E8E0
	push {r4, r5, r6, lr}
	sub sp, #0x14
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	lsls r4, r4, #1
	movs r1, #0xce
	lsls r1, r1, #2
	adds r0, r5, r1
	adds r0, r0, r4
	ldrh r6, [r0]
	bl sub_08018E50
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r0, _0808E958 @ =gUnk_02010800
	movs r2, #0x15
	str r2, [sp]
	movs r2, #1
	str r2, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r2, #7
	movs r3, #1
	bl sub_08069E74
	ldrh r0, [r5, #0xc]
	cmp r0, #0
	beq _0808E92A
	adds r0, r5, #0
	adds r0, #0xc
	bl sub_0800B4E4
_0808E92A:
	ldr r0, _0808E95C @ =0x0000012B
	cmp r6, r0
	bls _0808E964
	ldr r1, _0808E960 @ =0xFFFFFED4
	adds r0, r6, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08063820
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
	b _0808E986
	.align 2, 0
_0808E958: .4byte gUnk_02010800
_0808E95C: .4byte 0x0000012B
_0808E960: .4byte 0xFFFFFED4
_0808E964:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl sub_080639D0
	adds r2, r0, #0
	adds r0, r5, #0
	adds r0, #0xc
	movs r1, #0x11
	str r1, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r3, #1
	bl sub_0800B1AC
_0808E986:
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0808E990
sub_0808E990: @ 0x0808E990
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	movs r7, #1
	ldr r0, _0808E9AC @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0xb
	bls _0808E9A2
	b _0808EEDC
_0808E9A2:
	lsls r0, r0, #2
	ldr r1, _0808E9B0 @ =_0808E9B4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808E9AC: .4byte gUnk_03006B0C
_0808E9B0: .4byte _0808E9B4
_0808E9B4: @ jump table
	.4byte _0808E9E4 @ case 0
	.4byte _0808EA6C @ case 1
	.4byte _0808EA84 @ case 2
	.4byte _0808EBCC @ case 3
	.4byte _0808EC34 @ case 4
	.4byte _0808EC4C @ case 5
	.4byte _0808EE28 @ case 6
	.4byte _0808EEDC @ case 7
	.4byte _0808EEDC @ case 8
	.4byte _0808EEDC @ case 9
	.4byte _0808EEB4 @ case 10
	.4byte _0808EECC @ case 11
_0808E9E4:
	bl sub_0800EC34
	ldr r4, _0808EA24 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xf3
	bl sub_0800EC64
	ldr r0, _0808EA28 @ =gUnk_03006B20
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #3
	bne _0808EA30
	ldr r0, _0808EA2C @ =gUnk_08BD1B5E
	bl sub_0800ED08
	b _0808EA36
	.align 2, 0
_0808EA24: .4byte gUnk_03005610
_0808EA28: .4byte gUnk_03006B20
_0808EA2C: .4byte gUnk_08BD1B5E
_0808EA30:
	ldr r0, _0808EA58 @ =gUnk_08BD1B58
	bl sub_0800ED08
_0808EA36:
	ldr r0, _0808EA5C @ =gUnk_08BD1B4E
	bl sub_0800ECFC
	ldr r2, _0808EA60 @ =gUnk_03005610
	movs r0, #2
	movs r1, #0
	bl sub_0800ECAC
	ldr r1, _0808EA64 @ =gUnk_08BC9EAC
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	ldr r1, _0808EA68 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EA58: .4byte gUnk_08BD1B58
_0808EA5C: .4byte gUnk_08BD1B4E
_0808EA60: .4byte gUnk_03005610
_0808EA64: .4byte gUnk_08BC9EAC
_0808EA68: .4byte gUnk_03006B0C
_0808EA6C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808EA78
	b _0808EEDC
_0808EA78:
	ldr r1, _0808EA80 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EA80: .4byte gUnk_03006B0C
_0808EA84:
	ldr r4, _0808EAAC @ =gUnk_08BD1B40
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x17
	adds r0, #2
	adds r0, r0, r4
	ldrh r1, [r0]
	movs r2, #0
	ldrsh r4, [r0, r2]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r4, r0
	bne _0808EAB0
	movs r0, #0xe2
	lsls r0, r0, #1
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	b _0808EE10
	.align 2, 0
_0808EAAC: .4byte gUnk_08BD1B40
_0808EAB0:
	cmp r4, #0
	bne _0808EAD4
	ldr r0, _0808EACC @ =gUnk_03006B24
	strh r4, [r0]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	ldr r0, _0808EAD0 @ =gUnk_03006B0C
	strh r4, [r0]
	movs r7, #0
	b _0808EEDC
	.align 2, 0
_0808EACC: .4byte gUnk_03006B24
_0808EAD0: .4byte gUnk_03006B0C
_0808EAD4:
	cmp r4, #1
	bne _0808EBB4
	ldr r0, _0808EAEC @ =gUnk_03006B20
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #3
	bne _0808EAF4
	ldr r1, _0808EAF0 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EAEC: .4byte gUnk_03006B20
_0808EAF0: .4byte gUnk_03006B0C
_0808EAF4:
	movs r5, #0
	ldr r0, _0808EBA8 @ =gUnk_03006B24
	movs r1, #3
	strh r1, [r0]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #3
	bl sub_08012F0C
	movs r6, #0
_0808EB08:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB28
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808EB28
	adds r5, #1
_0808EB28:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB4A
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808EB4A
	adds r5, #1
_0808EB4A:
	adds r0, r6, #2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB6C
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808EB6C
	adds r5, #1
_0808EB6C:
	adds r0, r6, #3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808EB8E
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808EB8E
	adds r5, #1
_0808EB8E:
	adds r6, #4
	cmp r6, #0xc7
	bls _0808EB08
	cmp r5, #0
	beq _0808EB9A
	b _0808EE14
_0808EB9A:
	ldr r0, _0808EBAC @ =gUnk_08BC9EF0
	ldr r0, [r0]
	bl sub_0800EE5C
	ldr r1, _0808EBB0 @ =gUnk_03006B0C
	movs r0, #0xa
	b _0808EEDA
	.align 2, 0
_0808EBA8: .4byte gUnk_03006B24
_0808EBAC: .4byte gUnk_08BC9EF0
_0808EBB0: .4byte gUnk_03006B0C
_0808EBB4:
	cmp r4, #2
	beq _0808EBBA
	b _0808EEDC
_0808EBBA:
	ldr r0, _0808EBC8 @ =gUnk_03006B24
	strh r4, [r0]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #2
	b _0808EE10
	.align 2, 0
_0808EBC8: .4byte gUnk_03006B24
_0808EBCC:
	bl sub_0800EC34
	ldr r4, _0808EC20 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xf1
	bl sub_0800EC64
	ldr r0, _0808EC24 @ =gUnk_08BD1B64
	bl sub_0800ED08
	ldr r0, _0808EC28 @ =gUnk_08BD1B54
	bl sub_0800ECFC
	movs r0, #2
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800ECAC
	ldr r1, _0808EC2C @ =gUnk_08BC9EBC
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	ldr r1, _0808EC30 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EC20: .4byte gUnk_03005610
_0808EC24: .4byte gUnk_08BD1B64
_0808EC28: .4byte gUnk_08BD1B54
_0808EC2C: .4byte gUnk_08BC9EBC
_0808EC30: .4byte gUnk_03006B0C
_0808EC34:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808EC40
	b _0808EEDC
_0808EC40:
	ldr r1, _0808EC48 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EC48: .4byte gUnk_03006B0C
_0808EC4C:
	ldr r4, _0808EC70 @ =gUnk_08BD1B48
	bl sub_0800ED38
	lsls r0, r0, #0x18
	asrs r0, r0, #0x17
	adds r0, #2
	adds r0, r0, r4
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0808EC78
	ldr r1, _0808EC74 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	b _0808EEDA
	.align 2, 0
_0808EC70: .4byte gUnk_08BD1B48
_0808EC74: .4byte gUnk_03006B0C
_0808EC78:
	cmp r1, #3
	bne _0808ED4C
	movs r5, #0
	ldr r0, _0808ED2C @ =gUnk_03006B24
	strh r1, [r0]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #3
	bl sub_08012F0C
	movs r6, #0
_0808EC8E:
	lsls r0, r6, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808ECAE
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808ECAE
	adds r5, #1
_0808ECAE:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808ECD0
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808ECD0
	adds r5, #1
_0808ECD0:
	adds r0, r6, #2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808ECF2
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808ECF2
	adds r5, #1
_0808ECF2:
	adds r0, r6, #3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808ED14
	adds r0, r4, #0
	bl sub_08063868
	movs r1, #4
	ands r1, r0
	cmp r1, #0
	bne _0808ED14
	adds r5, #1
_0808ED14:
	adds r6, #4
	cmp r6, #0xc7
	bls _0808EC8E
	cmp r5, #0
	bne _0808ED38
	ldr r0, _0808ED30 @ =gUnk_08BC9EF0
	ldr r0, [r0]
	bl sub_0800EE5C
	ldr r1, _0808ED34 @ =gUnk_03006B0C
	movs r0, #0xb
	b _0808EEDA
	.align 2, 0
_0808ED2C: .4byte gUnk_03006B24
_0808ED30: .4byte gUnk_08BC9EF0
_0808ED34: .4byte gUnk_03006B0C
_0808ED38:
	ldr r1, _0808ED48 @ =gUnk_03006B24
	movs r0, #3
	strh r0, [r1]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #3
	b _0808EE10
	.align 2, 0
_0808ED48: .4byte gUnk_03006B24
_0808ED4C:
	cmp r1, #4
	beq _0808ED52
	b _0808EEDC
_0808ED52:
	movs r5, #0
	movs r6, #0
_0808ED56:
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808ED84
	cmp r0, #0xef
	bhi _0808ED84
	adds r0, r4, #0
	bl sub_0801885C
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0808ED84
	adds r5, #1
_0808ED84:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808EDB4
	cmp r0, #0xef
	bhi _0808EDB4
	adds r0, r4, #0
	bl sub_0801885C
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0808EDB4
	adds r5, #1
_0808EDB4:
	adds r0, r6, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_0801870C
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	adds r0, r4, #0
	bl GetWeaponType
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _0808EDE4
	cmp r0, #0xef
	bhi _0808EDE4
	adds r0, r4, #0
	bl sub_0801885C
	movs r1, #2
	ands r1, r0
	cmp r1, #0
	bne _0808EDE4
	adds r5, #1
_0808EDE4:
	adds r6, #3
	cmp r6, #0x1d
	bls _0808ED56
	cmp r5, #0
	bne _0808EE04
	ldr r0, _0808EDFC @ =gUnk_08BC9EF0
	ldr r0, [r0]
	bl sub_0800EE5C
	ldr r1, _0808EE00 @ =gUnk_03006B0C
	movs r0, #0xb
	b _0808EEDA
	.align 2, 0
_0808EDFC: .4byte gUnk_08BC9EF0
_0808EE00: .4byte gUnk_03006B0C
_0808EE04:
	ldr r1, _0808EE20 @ =gUnk_03006B24
	movs r0, #4
	strh r0, [r1]
	movs r0, #0xe2
	lsls r0, r0, #1
	movs r1, #4
_0808EE10:
	bl sub_08012F0C
_0808EE14:
	ldr r1, _0808EE24 @ =gUnk_03006B0C
	movs r0, #0
	strh r0, [r1]
	movs r7, #0
	b _0808EEDC
	.align 2, 0
_0808EE20: .4byte gUnk_03006B24
_0808EE24: .4byte gUnk_03006B0C
_0808EE28:
	bl sub_0800EC34
	ldr r4, _0808EE68 @ =gUnk_03005610
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xf1
	bl sub_0800EC64
	ldr r0, _0808EE6C @ =gUnk_03006B20
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #3
	bne _0808EE74
	ldr r0, _0808EE70 @ =gUnk_08BD1B5E
	bl sub_0800ED08
	b _0808EE7A
	.align 2, 0
_0808EE68: .4byte gUnk_03005610
_0808EE6C: .4byte gUnk_03006B20
_0808EE70: .4byte gUnk_08BD1B5E
_0808EE74:
	ldr r0, _0808EEA0 @ =gUnk_08BD1B58
	bl sub_0800ED08
_0808EE7A:
	ldr r0, _0808EEA4 @ =gUnk_08BD1B4E
	bl sub_0800ECFC
	ldr r2, _0808EEA8 @ =gUnk_03005610
	movs r0, #2
	movs r1, #0
	bl sub_0800ECAC
	ldr r1, _0808EEAC @ =gUnk_08BC9EAC
	movs r0, #0
	movs r2, #0
	bl sub_0800ED14
	movs r0, #1
	bl sub_0800ED48
	ldr r1, _0808EEB0 @ =gUnk_03006B0C
	movs r0, #1
	b _0808EEDA
	.align 2, 0
_0808EEA0: .4byte gUnk_08BD1B58
_0808EEA4: .4byte gUnk_08BD1B4E
_0808EEA8: .4byte gUnk_03005610
_0808EEAC: .4byte gUnk_08BC9EAC
_0808EEB0: .4byte gUnk_03006B0C
_0808EEB4:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _0808EEDC
	ldr r0, _0808EEC8 @ =gUnk_03006B0C
	strh r1, [r0]
	b _0808EEDC
	.align 2, 0
_0808EEC8: .4byte gUnk_03006B0C
_0808EECC:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808EEDC
	ldr r1, _0808EEE8 @ =gUnk_03006B0C
	movs r0, #3
_0808EEDA:
	strh r0, [r1]
_0808EEDC:
	adds r0, r7, #0
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808EEE8: .4byte gUnk_03006B0C

	thumb_func_start sub_0808EEEC
sub_0808EEEC: @ 0x0808EEEC
	push {r4, lr}
	ldr r4, _0808EF04 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808EF20
	cmp r0, #1
	bgt _0808EF08
	cmp r0, #0
	beq _0808EF12
	b _0808EFCA
	.align 2, 0
_0808EF04: .4byte gUnk_03006B0C
_0808EF08:
	cmp r0, #2
	beq _0808EF6C
	cmp r0, #3
	beq _0808EF7C
	b _0808EFCA
_0808EF12:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r4]
	adds r0, #1
	b _0808EFC8
_0808EF20:
	ldr r0, _0808EF30 @ =gUnk_03006B24
	ldrh r0, [r0]
	cmp r0, #0
	bne _0808EF34
	movs r0, #0x14
	bl sub_0806EF98
	b _0808EF5E
	.align 2, 0
_0808EF30: .4byte gUnk_03006B24
_0808EF34:
	cmp r0, #3
	bne _0808EF48
	movs r0, #0x15
	bl sub_0806EF98
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	b _0808EF5E
_0808EF48:
	cmp r0, #4
	bne _0808EF54
	movs r0, #0x16
	bl sub_0806EF98
	b _0808EF5E
_0808EF54:
	cmp r0, #2
	bne _0808EF5E
	movs r0, #0x17
	bl sub_0806EF98
_0808EF5E:
	ldr r1, _0808EF68 @ =gUnk_03006B0C
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _0808EFCA
	.align 2, 0
_0808EF68: .4byte gUnk_03006B0C
_0808EF6C:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808EFCA
	ldrh r0, [r4]
	adds r0, #1
	b _0808EFC8
_0808EF7C:
	movs r0, #0
	bl sub_0806F0B4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0808EFBC @ =0x0000FFFF
	cmp r1, r0
	bne _0808EFC0
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0808EFC8
	.align 2, 0
_0808EFBC: .4byte 0x0000FFFF
_0808EFC0:
	adds r0, r1, #0
	bl sub_0806EF98
	movs r0, #2
_0808EFC8:
	strh r0, [r4]
_0808EFCA:
	ldr r0, _0808EFD8 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808EFD8: .4byte gUnk_03006B0C

	thumb_func_start sub_0808EFDC
sub_0808EFDC: @ 0x0808EFDC
	push {r4, lr}
	ldr r4, _0808EFF4 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _0808F010
	cmp r0, #1
	bgt _0808EFF8
	cmp r0, #0
	beq _0808F002
	b _0808F0AE
	.align 2, 0
_0808EFF4: .4byte gUnk_03006B0C
_0808EFF8:
	cmp r0, #2
	beq _0808F050
	cmp r0, #3
	beq _0808F060
	b _0808F0AE
_0808F002:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r4]
	adds r0, #1
	b _0808F0AC
_0808F010:
	movs r0, #0x15
	bl sub_0806EF98
	movs r0, #1
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	ldr r0, _0808F048 @ =gUnk_03006B20
	movs r1, #0
	ldrsh r0, [r0, r1]
	bl sub_0806F038
	ldr r0, _0808F04C @ =gUnk_03006B28
	ldrh r0, [r0]
	bl sub_0806F038
	ldrh r0, [r4]
	adds r0, #1
	b _0808F0AC
	.align 2, 0
_0808F048: .4byte gUnk_03006B20
_0808F04C: .4byte gUnk_03006B28
_0808F050:
	bl sub_08069C54
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808F0AE
	ldrh r0, [r4]
	adds r0, #1
	b _0808F0AC
_0808F060:
	movs r0, #0
	bl sub_0806F0B4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0808F0A0 @ =0x0000FFFF
	cmp r1, r0
	bne _0808F0A4
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	b _0808F0AC
	.align 2, 0
_0808F0A0: .4byte 0x0000FFFF
_0808F0A4:
	adds r0, r1, #0
	bl sub_0806EF98
	movs r0, #2
_0808F0AC:
	strh r0, [r4]
_0808F0AE:
	ldr r0, _0808F0BC @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F0BC: .4byte gUnk_03006B0C

	thumb_func_start sub_0808F0C0
sub_0808F0C0: @ 0x0808F0C0
	push {r4, r5, lr}
	ldr r5, _0808F0D8 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _0808F0FC
	cmp r0, #1
	bgt _0808F0DC
	cmp r0, #0
	beq _0808F0E2
	b _0808F162
	.align 2, 0
_0808F0D8: .4byte gUnk_03006B0C
_0808F0DC:
	cmp r0, #2
	beq _0808F108
	b _0808F162
_0808F0E2:
	ldr r4, _0808F0F8 @ =gUnk_03006B28
	bl sub_08012578
	strh r0, [r4]
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldrh r0, [r5]
	adds r0, #1
	b _0808F160
	.align 2, 0
_0808F0F8: .4byte gUnk_03006B28
_0808F0FC:
	movs r0, #0x1e
	bl sub_0806EF98
	ldrh r0, [r5]
	adds r0, #1
	b _0808F160
_0808F108:
	bl sub_08069C54
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _0808F162
	movs r0, #0
	bl sub_0806F0B4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0808F154 @ =0x0000FFFF
	cmp r1, r0
	bne _0808F158
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	strh r4, [r5]
	b _0808F162
	.align 2, 0
_0808F154: .4byte 0x0000FFFF
_0808F158:
	adds r0, r1, #0
	bl sub_0806EF98
	movs r0, #1
_0808F160:
	strh r0, [r5]
_0808F162:
	ldr r0, _0808F170 @ =gUnk_03006B0C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0808F170: .4byte gUnk_03006B0C

	thumb_func_start sub_0808F174
sub_0808F174: @ 0x0808F174
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r4, _0808F244 @ =0x0000080C
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #0x15
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808F244: .4byte 0x0000080C

	thumb_func_start sub_0808F248
sub_0808F248: @ 0x0808F248
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r1
	mov sb, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r0, sb
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #0x9a
	lsls r4, r4, #3
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r0, r8
	strh r0, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #0x17
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0808F318
sub_0808F318: @ 0x0808F318
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0xc
	adds r6, r1, #0
	mov r8, r2
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r4, _0808F3D8 @ =0x00000D0C
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r0, #0
	mov sb, r0
	mov r0, sb
	strh r0, [r5, #4]
	strh r6, [r5, #6]
	mov r0, r8
	strh r0, [r5, #8]
	movs r0, #0x18
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sb
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808F3D8: .4byte 0x00000D0C

	thumb_func_start sub_0808F3DC
sub_0808F3DC: @ 0x0808F3DC
	push {r4, r5, r6, lr}
	sub sp, #0xc
	movs r4, #0x99
	lsls r4, r4, #4
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	movs r6, #0
	strh r6, [r5, #4]
	strh r6, [r5, #6]
	movs r0, #0x1b
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0808F474
sub_0808F474: @ 0x0808F474
	push {r4, lr}
	ldr r4, _0808F4A4 @ =gUnk_03006B20
	bl sub_08012578
	strh r0, [r4]
	ldr r4, _0808F4A8 @ =gUnk_03006B28
	bl sub_08012578
	strh r0, [r4]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bls _0808F492
	movs r0, #0xc
	strh r0, [r4]
_0808F492:
	ldr r0, _0808F4AC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F4A4: .4byte gUnk_03006B20
_0808F4A8: .4byte gUnk_03006B28
_0808F4AC: .4byte gUnk_03006578

	thumb_func_start sub_0808F4B0
sub_0808F4B0: @ 0x0808F4B0
	push {r4, lr}
	ldr r4, _0808F4D8 @ =gUnk_03006B20
	bl sub_08012578
	ldr r1, _0808F4DC @ =0xFFFFFED4
	adds r0, r0, r1
	strh r0, [r4]
	ldr r4, _0808F4E0 @ =gUnk_03006B28
	bl sub_08012578
	strh r0, [r4]
	ldr r0, _0808F4E4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_0808F4D8: .4byte gUnk_03006B20
_0808F4DC: .4byte 0xFFFFFED4
_0808F4E0: .4byte gUnk_03006B28
_0808F4E4: .4byte gUnk_03006578

	thumb_func_start sub_0808F4E8
sub_0808F4E8: @ 0x0808F4E8
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0xc
	adds r6, r0, #0
	mov r8, r2
	mov sb, r3
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	mov r0, r8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	mov r1, sb
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	ldr r4, _0808F5D0 @ =0x00001198
	adds r0, r4, #0
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	lsrs r4, r4, #1
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r4, r0
	adds r0, r1, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	ldr r0, _0808F5D4 @ =gUnk_02020000
	str r0, [r5, #0x24]
	movs r0, #0
	mov sl, r0
	strh r6, [r5, #4]
	mov r1, r8
	strh r1, [r5, #6]
	mov r0, sb
	strh r0, [r5, #8]
	movs r0, #0x14
	bl sub_08069D04
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r0, sl
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	mov r1, sl
	str r1, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_08006A04
	ldr r0, _0808F5D8 @ =gUnk_03006B38
	mov r1, sl
	strh r1, [r0]
	bl sub_080145BC
	movs r0, #0
	bl sub_08001B14
	add sp, #0xc
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0808F5D0: .4byte 0x00001198
_0808F5D4: .4byte gUnk_02020000
_0808F5D8: .4byte gUnk_03006B38

	thumb_func_start sub_0808F5DC
sub_0808F5DC: @ 0x0808F5DC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	bl sub_0806F020
	adds r7, r0, #0
	movs r0, #1
	mov sb, r0
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _0808F60C
	cmp r0, #1
	bgt _0808F600
	cmp r0, #0
	beq _0808F606
	b _0808F7D0
_0808F600:
	cmp r0, #2
	beq _0808F638
	b _0808F7D0
_0808F606:
	bl sub_0808F924
	b _0808F628
_0808F60C:
	ldrh r0, [r7, #4]
	cmp r0, #2
	bhi _0808F618
	bl sub_0808FC64
	b _0808F628
_0808F618:
	subs r0, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bls _0808F624
	b _0808F7D0
_0808F624:
	bl sub_080903EC
_0808F628:
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808F630
	b _0808F7D0
_0808F630:
	ldrh r0, [r7]
	adds r0, #1
	strh r0, [r7]
	b _0808F7D0
_0808F638:
	bl sub_08090BEC
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808F644
	b _0808F7D0
_0808F644:
	ldrh r0, [r7, #4]
	cmp r0, #2
	bhi _0808F654
	movs r2, #0
	mov sb, r2
	mov r0, sb
	strh r0, [r7]
	b _0808F7A8
_0808F654:
	subs r0, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bls _0808F660
	b _0808F7CA
_0808F660:
	movs r1, #0xc
	ldrsh r0, [r7, r1]
	cmp r0, #1
	beq _0808F66A
	b _0808F7B8
_0808F66A:
	ldr r0, [r7, #0x24]
	ldrh r1, [r7, #0xa]
	ldrh r2, [r7, #4]
	bl sub_08092050
	ldrh r1, [r7, #4]
	subs r0, r1, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0808F69E
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	bl sub_08012F0C
	movs r0, #0xc0
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	movs r0, #0
	bl sub_08001AEC
	b _0808F7CA
_0808F69E:
	subs r0, r1, #5
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0808F778
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r7]
	movs r2, #0xc0
	lsls r2, r2, #1
	mov r8, r2
	mov r0, r8
	movs r1, #1
	bl sub_08012F0C
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	bl sub_08012F0C
	ldr r4, _0808F768 @ =0x0000C083
	bl GetSavedPlayerName
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
	ldr r4, _0808F76C @ =0x0000C183
	bl sub_08018908
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
	ldr r4, _0808F770 @ =0x0000C283
	bl sub_08018414
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
	movs r0, #0x84
	bl sub_08012F60
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0x83
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r6, r6, #0x10
	orrs r6, r0
	movs r0, #0x86
	bl sub_08012F60
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #0x85
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r5, r5, #0x10
	orrs r5, r0
	movs r0, #0x88
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x87
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	orrs r4, r0
	movs r0, #0
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08010ED0
	ldr r0, _0808F774 @ =0x000001C1
	bl sub_08012F60
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_08010F80
	bl sub_080136CC
	mov r0, r8
	movs r1, #0
	b _0808F7A4
	.align 2, 0
_0808F768: .4byte 0x0000C083
_0808F76C: .4byte 0x0000C183
_0808F770: .4byte 0x0000C283
_0808F774: .4byte 0x000001C1
_0808F778:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bne _0808F7CA
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r7]
	movs r0, #0xc0
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r2, #0xa
	ldrsh r1, [r7, r2]
	bl sub_08012F0C
	movs r0, #0xe8
	lsls r0, r0, #1
	movs r1, #1
_0808F7A4:
	bl sub_08012F0C
_0808F7A8:
	ldr r0, _0808F7B4 @ =0x00001198
	bl sub_0806EFF0
	bl sub_080145E8
	b _0808F7CA
	.align 2, 0
_0808F7B4: .4byte 0x00001198
_0808F7B8:
	movs r0, #0
	mov sb, r0
	mov r1, sb
	strh r1, [r7]
	ldr r0, _0808F8EC @ =0x00001198
	bl sub_0806EFF0
	bl sub_080145E8
_0808F7CA:
	movs r0, #1
	bl sub_08001B14
_0808F7D0:
	mov r2, sb
	lsls r6, r2, #0x10
	ldr r0, _0808F8F0 @ =0x000010F4
	adds r4, r7, r0
	ldr r1, _0808F8F4 @ =0x00001194
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F7F2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F7F2:
	ldr r2, _0808F8F8 @ =0x0000111C
	adds r4, r7, r2
	ldr r1, _0808F8FC @ =0x00001195
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F810
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F810:
	ldr r2, _0808F900 @ =0x00001144
	adds r4, r7, r2
	ldr r1, _0808F904 @ =0x00001196
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F82E
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F82E:
	ldr r2, _0808F908 @ =0x0000116C
	adds r4, r7, r2
	ldr r1, _0808F90C @ =0x00001197
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F84C
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F84C:
	ldr r2, _0808F910 @ =0x00001028
	adds r5, r7, r2
	movs r1, #0xa
	ldrsh r0, [r7, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	movs r0, #0x80
	lsls r0, r0, #0xe
	adds r2, r2, r0
	asrs r2, r2, #0x10
	adds r0, r5, #0
	movs r1, #4
	bl sub_0800A678
	ldr r1, _0808F914 @ =0x00001050
	adds r4, r7, r1
	movs r2, #0xa
	ldrsh r0, [r7, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	movs r0, #0x80
	lsls r0, r0, #0xe
	adds r2, r2, r0
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #0xe4
	bl sub_0800A678
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r5, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	ldr r1, _0808F918 @ =0x000010F0
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F8C0
	movs r2, #0x85
	lsls r2, r2, #5
	adds r4, r7, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F8C0:
	ldr r1, _0808F91C @ =0x000010F1
	adds r0, r7, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808F8DE
	ldr r2, _0808F920 @ =0x000010C8
	adds r4, r7, r2
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
_0808F8DE:
	asrs r0, r6, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0808F8EC: .4byte 0x00001198
_0808F8F0: .4byte 0x000010F4
_0808F8F4: .4byte 0x00001194
_0808F8F8: .4byte 0x0000111C
_0808F8FC: .4byte 0x00001195
_0808F900: .4byte 0x00001144
_0808F904: .4byte 0x00001196
_0808F908: .4byte 0x0000116C
_0808F90C: .4byte 0x00001197
_0808F910: .4byte 0x00001028
_0808F914: .4byte 0x00001050
_0808F918: .4byte 0x000010F0
_0808F91C: .4byte 0x000010F1
_0808F920: .4byte 0x000010C8

	thumb_func_start sub_0808F924
sub_0808F924: @ 0x0808F924
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x24
	bl sub_0806F020
	adds r6, r0, #0
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #7
	bls _0808F940
	b _0808FC50
_0808F940:
	lsls r0, r0, #2
	ldr r1, _0808F94C @ =_0808F950
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808F94C: .4byte _0808F950
_0808F950: @ jump table
	.4byte _0808F970 @ case 0
	.4byte _0808FB00 @ case 1
	.4byte _0808FB14 @ case 2
	.4byte _0808FB2A @ case 3
	.4byte _0808FB48 @ case 4
	.4byte _0808FC08 @ case 5
	.4byte _0808FC3C @ case 6
	.4byte _0808FC4C @ case 7
_0808F970:
	movs r0, #3
	movs r1, #0x15
	bl sub_08001D3C
	adds r4, r0, #0
	add r1, sp, #8
	bl sub_08001CBC
	ldr r5, _0808FAE4 @ =0x06011000
	movs r0, #3
	add r1, sp, #8
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x18]
	ldr r2, [sp, #0xc]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r2, r1
	adds r1, r5, #0
	bl CpuSet
	movs r0, #3
	movs r1, #0x16
	bl sub_08001D3C
	adds r2, r0, #0
	movs r0, #3
	movs r1, #3
	bl sub_0800A630
	ldr r0, [sp, #0x1c]
	add r1, sp, #8
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	ldr r0, _0808FAE8 @ =gUnk_08BD1B68
	ldr r1, _0808FAEC @ =gUnk_0200FD00
	movs r2, #0x10
	bl CpuSet
	movs r0, #0x20
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	movs r2, #0
	mov sl, r2
	movs r3, #0x20
	mov sb, r3
	movs r0, #0
	movs r1, #0xa
	mov r8, r1
	ldr r2, _0808FAF0 @ =gUnk_02010000
	mov ip, r2
_0808F9F2:
	mov r2, sl
	mov r3, sb
	adds r1, r2, r3
	adds r7, r0, #1
	cmp r2, r1
	bhs _0808FA46
	ldr r3, _0808FAF4 @ =0x0000E368
	adds r4, r3, #0
	adds r5, r1, #0
	lsls r0, r0, #6
	mov r3, ip
	adds r1, r3, r0
	subs r3, r5, r2
	movs r0, #3
	ands r3, r0
	cmp r2, r5
	bge _0808FA2C
	cmp r3, #0
	beq _0808FA36
	cmp r3, #1
	ble _0808FA2C
	cmp r3, #2
	ble _0808FA26
	strh r4, [r1]
	adds r1, #2
	adds r2, #1
_0808FA26:
	strh r4, [r1]
	adds r1, #2
	adds r2, #1
_0808FA2C:
	strh r4, [r1]
	adds r1, #2
	adds r2, #1
	cmp r2, r5
	bhs _0808FA46
_0808FA36:
	strh r4, [r1]
	strh r4, [r1, #2]
	strh r4, [r1, #4]
	strh r4, [r1, #6]
	adds r1, #8
	adds r2, #4
	cmp r2, r5
	blo _0808FA36
_0808FA46:
	adds r0, r7, #0
	cmp r0, r8
	blo _0808F9F2
	movs r0, #0
	movs r1, #0xe
	movs r2, #0xf
	bl sub_0800F224
	movs r0, #0x40
	bl sub_08004840
	movs r0, #2
	bl sub_0800485C
	movs r0, #0xe0
	lsls r0, r0, #5
	bl sub_08004878
	movs r0, #8
	bl sub_08004894
	movs r0, #8
	bl sub_080048B0
	ldr r0, _0808FAF8 @ =0x00001028
	adds r4, r6, r0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xd
	movs r3, #0
	bl sub_08009F50
	ldr r1, _0808FAFC @ =0x00001050
	adds r5, r6, r1
	adds r0, r5, #0
	movs r1, #0
	movs r2, #0xe
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	movs r2, #0xa
	ldrsh r0, [r6, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	movs r3, #0x80
	lsls r3, r3, #0xe
	adds r2, r2, r3
	asrs r2, r2, #0x10
	adds r0, r4, #0
	movs r1, #4
	bl sub_0800A678
	movs r1, #0xa
	ldrsh r0, [r6, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	movs r3, #0x80
	lsls r3, r3, #0xe
	adds r2, r2, r3
	asrs r2, r2, #0x10
	adds r0, r5, #0
	movs r1, #0xe4
	bl sub_0800A678
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
	.align 2, 0
_0808FAE4: .4byte 0x06011000
_0808FAE8: .4byte gUnk_08BD1B68
_0808FAEC: .4byte gUnk_0200FD00
_0808FAF0: .4byte gUnk_02010000
_0808FAF4: .4byte 0x0000E368
_0808FAF8: .4byte 0x00001028
_0808FAFC: .4byte 0x00001050
_0808FB00:
	ldr r0, [r6, #0x24]
	bl sub_08092288
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808FB0E
	b _0808FC50
_0808FB0E:
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
_0808FB14:
	ldr r0, [r6, #0x24]
	adds r0, #0x10
	bl sub_0809237C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808FB24
	b _0808FC50
_0808FB24:
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
_0808FB2A:
	ldr r0, [r6, #0x24]
	ldr r1, _0808FB44 @ =0x00001EC8
	adds r0, r0, r1
	bl sub_0809258C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808FB3C
	b _0808FC50
_0808FB3C:
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
	.align 2, 0
_0808FB44: .4byte 0x00001EC8
_0808FB48:
	ldr r0, [r6, #0x24]
	ldr r2, _0808FB78 @ =0x00001EC8
	adds r0, r0, r2
	bl sub_0809392C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0808FB5E
	ldr r0, [r6, #0x24]
	bl sub_0809143C
_0808FB5E:
	ldrh r0, [r6, #4]
	lsls r1, r0, #0x10
	lsrs r0, r1, #0x10
	cmp r0, #2
	bls _0808FB6E
	asrs r0, r1, #0x10
	cmp r0, #4
	bne _0808FB7C
_0808FB6E:
	movs r0, #0xe6
	lsls r0, r0, #1
	bl sub_08012F60
	b _0808FB94
	.align 2, 0
_0808FB78: .4byte 0x00001EC8
_0808FB7C:
	cmp r0, #3
	beq _0808FB8C
	cmp r0, #5
	beq _0808FB8C
	cmp r0, #6
	beq _0808FB8C
	cmp r0, #7
	bne _0808FB96
_0808FB8C:
	ldr r0, [r6, #0x24]
	ldr r3, _0808FBF8 @ =0x00001ECA
	adds r0, r0, r3
	ldrh r0, [r0]
_0808FB94:
	strh r0, [r6, #0xa]
_0808FB96:
	ldrh r0, [r6, #0xa]
	cmp r0, #1
	bls _0808FBA0
	movs r0, #0
	strh r0, [r6, #0xa]
_0808FBA0:
	ldr r1, _0808FBFC @ =0x00001028
	adds r0, r6, r1
	movs r2, #0xa
	ldrsh r1, [r6, r2]
	lsls r2, r1, #2
	adds r2, r2, r1
	lsls r2, r2, #0x14
	movs r3, #0x80
	lsls r3, r3, #0xe
	adds r2, r2, r3
	asrs r2, r2, #0x10
	movs r1, #4
	bl sub_0800A678
	ldr r1, _0808FC00 @ =0x00001050
	adds r0, r6, r1
	movs r2, #0xa
	ldrsh r1, [r6, r2]
	lsls r2, r1, #2
	adds r2, r2, r1
	lsls r2, r2, #0x14
	movs r3, #0x80
	lsls r3, r3, #0xe
	adds r2, r2, r3
	asrs r2, r2, #0x10
	movs r1, #0xe4
	bl sub_0800A678
	movs r1, #0xa
	ldrsh r0, [r6, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	ldr r3, _0808FC04 @ =0xFFB00000
	adds r2, r2, r3
	asrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0
	bl sub_08005E18
	bl sub_08090CFC
	movs r0, #5
	b _0808FC4E
	.align 2, 0
_0808FBF8: .4byte 0x00001ECA
_0808FBFC: .4byte 0x00001028
_0808FC00: .4byte 0x00001050
_0808FC04: .4byte 0xFFB00000
_0808FC08:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
_0808FC3C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0808FC50
	ldrh r0, [r6, #2]
	adds r0, #1
	b _0808FC4E
_0808FC4C:
	movs r0, #0
_0808FC4E:
	strh r0, [r6, #2]
_0808FC50:
	movs r1, #2
	ldrsh r0, [r6, r1]
	add sp, #0x24
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0808FC64
sub_0808FC64: @ 0x0808FC64
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	movs r7, #1
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x32
	bls _0808FC7A
	b _080903E0
_0808FC7A:
	lsls r0, r0, #2
	ldr r1, _0808FC84 @ =_0808FC88
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0808FC84: .4byte _0808FC88
_0808FC88: @ jump table
	.4byte _0808FD54 @ case 0
	.4byte _080903E0 @ case 1
	.4byte _080903E0 @ case 2
	.4byte _080903E0 @ case 3
	.4byte _080903E0 @ case 4
	.4byte _0808FEEC @ case 5
	.4byte _0808FF4C @ case 6
	.4byte _0808FF68 @ case 7
	.4byte _0808FFC8 @ case 8
	.4byte _0809001C @ case 9
	.4byte _080903E0 @ case 10
	.4byte _080903E0 @ case 11
	.4byte _080903E0 @ case 12
	.4byte _080903E0 @ case 13
	.4byte _080903E0 @ case 14
	.4byte _0809008C @ case 15
	.4byte _080900EC @ case 16
	.4byte _080903E0 @ case 17
	.4byte _080903E0 @ case 18
	.4byte _080903E0 @ case 19
	.4byte _0809010C @ case 20
	.4byte _08090170 @ case 21
	.4byte _080903E0 @ case 22
	.4byte _080903E0 @ case 23
	.4byte _080903E0 @ case 24
	.4byte _080903E0 @ case 25
	.4byte _080903E0 @ case 26
	.4byte _080903E0 @ case 27
	.4byte _080903E0 @ case 28
	.4byte _080903E0 @ case 29
	.4byte _08090258 @ case 30
	.4byte _080902B8 @ case 31
	.4byte _080902D8 @ case 32
	.4byte _0809034C @ case 33
	.4byte _08090324 @ case 34
	.4byte _080903E0 @ case 35
	.4byte _080903E0 @ case 36
	.4byte _080903E0 @ case 37
	.4byte _080903E0 @ case 38
	.4byte _080903E0 @ case 39
	.4byte _080902EA @ case 40
	.4byte _080902F4 @ case 41
	.4byte _0809031A @ case 42
	.4byte _08090324 @ case 43
	.4byte _08090334 @ case 44
	.4byte _0809033C @ case 45
	.4byte _0809034C @ case 46
	.4byte _08090360 @ case 47
	.4byte _080903E0 @ case 48
	.4byte _080903E0 @ case 49
	.4byte _0809037A @ case 50
_0808FD54:
	ldr r0, _0808FD7C @ =gKeyHeld
	ldrh r2, [r0]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r1, #0
	ands r0, r2
	cmp r0, r1
	bne _0808FD80
	ldr r0, [r5, #0x20]
	adds r0, #1
	str r0, [r5, #0x20]
	subs r1, #0xc8
	cmp r0, r1
	bne _0808FDB6
	movs r0, #0
	str r0, [r5, #0x20]
	movs r0, #5
	strh r0, [r5, #2]
	b _0808FDB6
	.align 2, 0
_0808FD7C: .4byte gKeyHeld
_0808FD80:
	movs r1, #0xc0
	lsls r1, r1, #2
	adds r0, r1, #0
	ands r0, r2
	cmp r0, r1
	bne _0808FDB2
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0808FDB2
	movs r0, #0x10
	ands r0, r2
	cmp r0, #0
	beq _0808FDB2
	ldr r0, [r5, #0x20]
	adds r0, #1
	str r0, [r5, #0x20]
	subs r1, #0xa8
	cmp r0, r1
	bne _0808FDB6
	movs r0, #0
	str r0, [r5, #0x20]
	movs r0, #0x1e
	strh r0, [r5, #2]
	b _0808FDB6
_0808FDB2:
	movs r0, #0
	str r0, [r5, #0x20]
_0808FDB6:
	ldr r0, _0808FDDC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0808FDE0
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #1
	beq _0808FDCC
	b _0808FECC
_0808FDCC:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #0xa]
	subs r0, #1
	strh r0, [r5, #0xa]
	b _0808FECC
	.align 2, 0
_0808FDDC: .4byte gKeyNewPress
_0808FDE0:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0808FE00
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _0808FECC
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	b _0808FECC
_0808FE00:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0808FE32
	movs r2, #0xa
	ldrsh r1, [r5, r2]
	lsls r1, r1, #1
	ldr r2, _0808FE24 @ =0x00001194
	adds r0, r5, r2
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _0808FE28
	movs r0, #0xf
	strh r0, [r5, #2]
	b _0808FECC
	.align 2, 0
_0808FE24: .4byte 0x00001194
_0808FE28:
	cmp r0, #0
	bne _0808FECC
	movs r0, #0x14
	strh r0, [r5, #2]
	b _0808FECC
_0808FE32:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0808FECC
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _0808FE6C
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #6
	ldrsh r1, [r5, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	b _0808FE8C
_0808FE6C:
	cmp r0, #2
	bne _0808FE9A
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #5
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
_0808FE8C:
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _0808FEC8
_0808FE9A:
	cmp r0, #0
	bne _0808FEC8
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_0808FEC8:
	movs r7, #0
	strh r7, [r5, #2]
_0808FECC:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	ldr r0, _0808FEE8 @ =0xFFB00000
	adds r2, r2, r0
	asrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0
	bl sub_08005E18
	b _080903E0
	.align 2, 0
_0808FEE8: .4byte 0xFFB00000
_0808FEEC:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r1, _0808FF38 @ =0x00001078
	adds r2, r5, r1
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _0808FF3C @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _0808FF40 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _0808FF44 @ =gUnk_08BC9F28
	ldr r0, [r0]
	ldr r1, _0808FF48 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x14
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	b _08090354
	.align 2, 0
_0808FF38: .4byte 0x00001078
_0808FF3C: .4byte gUnk_08BD1BBC
_0808FF40: .4byte gUnk_08BD1BC0
_0808FF44: .4byte gUnk_08BC9F28
_0808FF48: .4byte gUnk_08BC9F6C
_0808FF4C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0808FF5A
	b _080903E0
_0808FF5A:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0808FF66
	b _08090354
_0808FF66:
	b _08090376
_0808FF68:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _0808FFB4 @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _0808FFB8 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _0808FFBC @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _0808FFC0 @ =gUnk_08BC9F2C
	ldr r0, [r0]
	ldr r1, _0808FFC4 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x2c
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	b _08090354
	.align 2, 0
_0808FFB4: .4byte 0x00001078
_0808FFB8: .4byte gUnk_08BD1BBC
_0808FFBC: .4byte gUnk_08BD1BC0
_0808FFC0: .4byte gUnk_08BC9F2C
_0808FFC4: .4byte gUnk_08BC9F6C
_0808FFC8:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0808FFD6
	b _080903E0
_0808FFD6:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0808FFE2
	b _08090376
_0808FFE2:
	ldrh r0, [r5, #0xa]
	ldr r1, _08090014 @ =gUnk_08BC9F4C
	ldr r1, [r1]
	bl sub_08091338
	ldr r0, _08090018 @ =gUnk_02010800
	movs r1, #0xa
	ldrsh r2, [r5, r1]
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #0x11
	movs r2, #0xc0
	lsls r2, r2, #0xb
	adds r1, r1, r2
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x68
	movs r2, #0x12
	movs r3, #5
	bl sub_0806F0E0
	bl sub_08006A54
	b _08090354
	.align 2, 0
_08090014: .4byte gUnk_08BC9F4C
_08090018: .4byte gUnk_02010800
_0809001C:
	ldr r0, [r5, #0x24]
	bl sub_08091BA8
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _08090076
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	movs r4, #0xa
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809006C
	b _080901E6
_0809006C:
	bl sub_08090CFC
	movs r0, #0x2e
	strh r0, [r5, #2]
	b _080903E0
_08090076:
	bl sub_08006A48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08090088 @ =gUnk_0200F800
	movs r3, #0x80
	lsls r3, r3, #6
	b _0809022A
	.align 2, 0
_08090088: .4byte gUnk_0200F800
_0809008C:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _080900D8 @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _080900DC @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _080900E0 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _080900E4 @ =gUnk_08BC9F18
	ldr r0, [r0]
	ldr r1, _080900E8 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x14
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	b _08090354
	.align 2, 0
_080900D8: .4byte 0x00001078
_080900DC: .4byte gUnk_08BD1BBC
_080900E0: .4byte gUnk_08BD1BC0
_080900E4: .4byte gUnk_08BC9F18
_080900E8: .4byte gUnk_08BC9F6C
_080900EC:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080900FA
	b _080903E0
_080900FA:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090106
	b _08090376
_08090106:
	movs r0, #0x14
	strh r0, [r5, #2]
	b _080903E0
_0809010C:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _08090128
	movs r0, #0xa
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0xa
	bl SetItemQuantity
_08090128:
	ldrh r0, [r5, #0xa]
	ldr r1, _08090168 @ =gUnk_08BC9F48
	ldr r1, [r1]
	bl sub_08091338
	ldr r0, _0809016C @ =gUnk_02010800
	movs r1, #0xa
	ldrsh r2, [r5, r1]
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #0x11
	movs r2, #0xc0
	lsls r2, r2, #0xb
	adds r1, r1, r2
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x68
	movs r2, #0x12
	movs r3, #5
	bl sub_0806F0E0
	bl sub_08006A54
	ldr r0, [r5, #0x24]
	adds r1, r5, #0
	adds r1, #0x28
	ldrh r2, [r5, #0xa]
	movs r3, #0
	bl sub_08091538
	b _08090354
	.align 2, 0
_08090168: .4byte gUnk_08BC9F48
_0809016C: .4byte gUnk_02010800
_08090170:
	ldr r0, [r5, #0x24]
	ldrh r1, [r5, #0xa]
	bl sub_08091D10
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _080901F0
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	movs r4, #0xa
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080901CA
	bl sub_08090CFC
	movs r0, #0x28
	strh r0, [r5, #2]
	b _080903E0
_080901CA:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _080901E6
	movs r0, #0xa
	bl sub_08018B50
	adds r1, r0, #0
	adds r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0xa
	bl SetItemQuantity
_080901E6:
	bl sub_08090CFC
	movs r0, #0x2a
	strh r0, [r5, #2]
	b _080903E0
_080901F0:
	ldr r0, _08090210 @ =gUnk_03006B38
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #4
	bgt _080901FC
	b _080903E0
_080901FC:
	movs r4, #0
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _08090214
	ldr r0, [r5, #0x24]
	adds r4, r0, #0
	adds r4, #0x10
	b _0809021E
	.align 2, 0
_08090210: .4byte gUnk_03006B38
_08090214:
	cmp r0, #1
	bne _0809021E
	ldr r0, [r5, #0x24]
	adds r4, r0, #0
	adds r4, #0x54
_0809021E:
	bl sub_08006A48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08090254 @ =gUnk_0200F800
	ldrh r3, [r4, #8]
_0809022A:
	str r0, [sp]
	movs r0, #6
	str r0, [sp, #4]
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #0x11
	movs r1, #0xc0
	lsls r1, r1, #0xb
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r2, #0
	movs r1, #0x58
	movs r2, #0x90
	bl sub_0806F174
	b _080903E0
	.align 2, 0
_08090254: .4byte gUnk_0200F800
_08090258:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _080902A4 @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _080902A8 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _080902AC @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _080902B0 @ =gUnk_08BC9F30
	ldr r0, [r0]
	ldr r1, _080902B4 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x40
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	b _08090354
	.align 2, 0
_080902A4: .4byte 0x00001078
_080902A8: .4byte gUnk_08BD1BBC
_080902AC: .4byte gUnk_08BD1BC0
_080902B0: .4byte gUnk_08BC9F30
_080902B4: .4byte gUnk_08BC9F6C
_080902B8:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080902C6
	b _080903E0
_080902C6:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08090376
	ldr r0, [r5, #0x24]
	bl sub_0809143C
	b _08090354
_080902D8:
	bl sub_08092F1C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080902E4
	b _080903E0
_080902E4:
	bl sub_08090CFC
	b _08090354
_080902EA:
	ldr r0, _080902F0 @ =gUnk_08BC9F54
	b _0809034E
	.align 2, 0
_080902F0: .4byte gUnk_08BC9F54
_080902F4:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080903E0
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r2, #0xa
	ldrsh r1, [r5, r2]
	bl sub_08012F0C
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #1
	bne _08090376
	movs r0, #0x2c
	strh r0, [r5, #2]
	b _080903E0
_0809031A:
	ldr r0, _08090320 @ =gUnk_08BC9F60
	b _0809034E
	.align 2, 0
_08090320: .4byte gUnk_08BC9F60
_08090324:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080903E0
	strh r0, [r5, #2]
	b _080903E0
_08090334:
	ldr r0, _08090338 @ =gUnk_08BC9F68
	b _0809034E
	.align 2, 0
_08090338: .4byte gUnk_08BC9F68
_0809033C:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080903E0
	movs r0, #0x32
	strh r0, [r5, #2]
	b _080903E0
_0809034C:
	ldr r0, _0809035C @ =gUnk_08BC9F5C
_0809034E:
	ldr r0, [r0]
	bl sub_0800EE5C
_08090354:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	b _080903E0
	.align 2, 0
_0809035C: .4byte gUnk_08BC9F5C
_08090360:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080903E0
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
_08090376:
	strh r4, [r5, #2]
	b _080903E0
_0809037A:
	bl sub_08018B6C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080903AE
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _080903DA
_080903AE:
	movs r0, #0
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #6
	ldrsh r1, [r5, r2]
	movs r0, #2
	bl sub_0806F0CC
	movs r0, #8
	ldrsh r1, [r5, r0]
	movs r0, #3
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_080903DA:
	movs r0, #0
	strh r0, [r5, #2]
	movs r7, #0
_080903E0:
	adds r0, r7, #0
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080903EC
sub_080903EC: @ 0x080903EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x10
	bl sub_0806F020
	adds r5, r0, #0
	movs r0, #1
	mov r8, r0
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #0x38
	bls _0809040A
	bl _08090BDE
_0809040A:
	lsls r0, r0, #2
	ldr r1, _08090414 @ =_08090418
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08090414: .4byte _08090418
_08090418: @ jump table
	.4byte _080904FC @ case 0
	.4byte _08090BDE @ case 1
	.4byte _08090BDE @ case 2
	.4byte _08090BDE @ case 3
	.4byte _08090BDE @ case 4
	.4byte _080906B8 @ case 5
	.4byte _0809071C @ case 6
	.4byte _0809073C @ case 7
	.4byte _080907A0 @ case 8
	.4byte _080907F4 @ case 9
	.4byte _08090884 @ case 10
	.4byte _08090BDE @ case 11
	.4byte _08090BDE @ case 12
	.4byte _08090BDE @ case 13
	.4byte _08090BDE @ case 14
	.4byte _080908A0 @ case 15
	.4byte _08090904 @ case 16
	.4byte _08090BDE @ case 17
	.4byte _08090BDE @ case 18
	.4byte _08090BDE @ case 19
	.4byte _08090958 @ case 20
	.4byte _08090BDE @ case 21
	.4byte _08090BDE @ case 22
	.4byte _08090BDE @ case 23
	.4byte _08090BDE @ case 24
	.4byte _08090BDE @ case 25
	.4byte _08090BDE @ case 26
	.4byte _08090BDE @ case 27
	.4byte _08090BDE @ case 28
	.4byte _08090BDE @ case 29
	.4byte _08090BDE @ case 30
	.4byte _08090BDE @ case 31
	.4byte _08090BDE @ case 32
	.4byte _08090BDE @ case 33
	.4byte _08090BDE @ case 34
	.4byte _08090BDE @ case 35
	.4byte _08090BDE @ case 36
	.4byte _08090BDE @ case 37
	.4byte _08090BDE @ case 38
	.4byte _08090BDE @ case 39
	.4byte _08090A44 @ case 40
	.4byte _08090A58 @ case 41
	.4byte _08090AE0 @ case 42
	.4byte _08090AF4 @ case 43
	.4byte _08090B02 @ case 44
	.4byte _08090B14 @ case 45
	.4byte _08090BDE @ case 46
	.4byte _08090BDE @ case 47
	.4byte _08090BDE @ case 48
	.4byte _08090BDE @ case 49
	.4byte _08090B22 @ case 50
	.4byte _08090B84 @ case 51
	.4byte _08090BA8 @ case 52
	.4byte _08090BDE @ case 53
	.4byte _08090BDE @ case 54
	.4byte _08090BBE @ case 55
	.4byte _08090BD0 @ case 56
_080904FC:
	ldr r0, _08090524 @ =gKeyHeld
	ldrh r2, [r0]
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r1, #0
	ands r0, r2
	cmp r0, r1
	bne _08090528
	ldr r0, [r5, #0x20]
	adds r0, #1
	str r0, [r5, #0x20]
	subs r1, #0xc8
	cmp r0, r1
	bne _0809052C
	movs r0, #0
	str r0, [r5, #0x20]
	movs r0, #5
	strh r0, [r5, #2]
	b _0809052C
	.align 2, 0
_08090524: .4byte gKeyHeld
_08090528:
	movs r0, #0
	str r0, [r5, #0x20]
_0809052C:
	ldr r0, _08090554 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _08090558
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #1
	beq _08090542
	b _0809069A
_08090542:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #0xa]
	subs r0, #1
	strh r0, [r5, #0xa]
	b _0809069A
	.align 2, 0
_08090554: .4byte gKeyNewPress
_08090558:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809057A
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _0809056A
	b _0809069A
_0809056A:
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5, #0xa]
	adds r0, #1
	strh r0, [r5, #0xa]
	b _0809069A
_0809057A:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080905F6
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	lsls r0, r0, #1
	ldr r2, _080905AC @ =0x00001194
	adds r1, r5, r2
	adds r1, r1, r0
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #1
	beq _08090598
	b _0809069A
_08090598:
	movs r2, #0
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bne _080905B0
	ldr r0, [r5, #0x24]
	adds r2, r0, #0
	adds r2, #0x10
	b _080905BA
	.align 2, 0
_080905AC: .4byte 0x00001194
_080905B0:
	cmp r0, #1
	bne _080905BA
	ldr r0, [r5, #0x24]
	adds r2, r0, #0
	adds r2, #0x54
_080905BA:
	ldrh r1, [r5, #4]
	subs r0, r1, #5
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080905CE
	ldrb r0, [r2, #3]
	cmp r0, #1
	bls _080905DC
	b _080905F0
_080905CE:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	bne _080905F0
	ldrb r0, [r2, #3]
	cmp r0, #0x62
	bhi _080905F0
_080905DC:
	ldr r0, _080905EC @ =gUnk_08BD1B98
	ldr r0, [r0]
	bl sub_0800EE5C
	movs r0, #0x37
	strh r0, [r5, #2]
	b _0809069A
	.align 2, 0
_080905EC: .4byte gUnk_08BD1B98
_080905F0:
	movs r0, #0xf
	strh r0, [r5, #2]
	b _0809069A
_080905F6:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809069A
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #3
	beq _0809061A
	cmp r0, #5
	beq _0809061A
	cmp r0, #6
	beq _0809061A
	cmp r0, #7
	bne _08090664
_0809061A:
	ldrh r0, [r5, #4]
	subs r0, #5
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0809062E
	movs r0, #0x98
	movs r1, #0xff
	bl sub_08012F0C
_0809062E:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #0
	mov r8, r0
	mov r1, r8
	strh r1, [r5, #2]
	strh r1, [r5, #0xc]
	b _0809069A
_08090664:
	cmp r0, #4
	bne _0809069A
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #6
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	movs r2, #0
	mov r8, r2
	mov r0, r8
	strh r0, [r5, #2]
	strh r0, [r5, #0xc]
_0809069A:
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x14
	ldr r0, _080906B4 @ =0xFFB00000
	adds r2, r2, r0
	asrs r2, r2, #0x10
	movs r0, #1
	movs r1, #0
	bl sub_08005E18
	b _08090BDE
	.align 2, 0
_080906B4: .4byte 0xFFB00000
_080906B8:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r1, _08090708 @ =0x00001078
	adds r2, r5, r1
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _0809070C @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _08090710 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _08090714 @ =gUnk_08BC9F28
	ldr r0, [r0]
	ldr r1, _08090718 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x14
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090708: .4byte 0x00001078
_0809070C: .4byte gUnk_08BD1BBC
_08090710: .4byte gUnk_08BD1BC0
_08090714: .4byte gUnk_08BC9F28
_08090718: .4byte gUnk_08BC9F6C
_0809071C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _0809072A
	b _08090BDE
_0809072A:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08090736
	b _0809089C
_08090736:
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
_0809073C:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _0809078C @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _08090790 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _08090794 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _08090798 @ =gUnk_08BC9F2C
	ldr r0, [r0]
	ldr r1, _0809079C @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x2c
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_0809078C: .4byte 0x00001078
_08090790: .4byte gUnk_08BD1BBC
_08090794: .4byte gUnk_08BD1BC0
_08090798: .4byte gUnk_08BC9F2C
_0809079C: .4byte gUnk_08BC9F6C
_080907A0:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080907AE
	b _08090BDE
_080907AE:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809089C
	ldrh r0, [r5, #0xa]
	ldr r1, _080907EC @ =gUnk_08BC9F4C
	ldr r1, [r1]
	bl sub_08091338
	ldr r0, _080907F0 @ =gUnk_02010800
	movs r1, #0xa
	ldrsh r2, [r5, r1]
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #0x11
	movs r2, #0xc0
	lsls r2, r2, #0xb
	adds r1, r1, r2
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x68
	movs r2, #0x12
	movs r3, #5
	bl sub_0806F0E0
	bl sub_08006A54
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_080907EC: .4byte gUnk_08BC9F4C
_080907F0: .4byte gUnk_02010800
_080907F4:
	ldr r0, [r5, #0x24]
	bl sub_08091BA8
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _08090870
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	movs r4, #0xa
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08090858
	bl sub_08090CFC
	ldr r0, _08090854 @ =gUnk_08BC9F5C
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090854: .4byte gUnk_08BC9F5C
_08090858:
	bl sub_08090CFC
	ldr r0, _0809086C @ =gUnk_08BC9F60
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_0809086C: .4byte gUnk_08BC9F60
_08090870:
	bl sub_08006A48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08090880 @ =gUnk_0200F800
	movs r3, #0x80
	lsls r3, r3, #6
	b _08090A16
	.align 2, 0
_08090880: .4byte gUnk_0200F800
_08090884:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _08090892
	b _08090BDE
_08090892:
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
_0809089C:
	strh r4, [r5, #2]
	b _08090BDE
_080908A0:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _080908F0 @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _080908F4 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _080908F8 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _080908FC @ =gUnk_08BC9F1C
	ldr r0, [r0]
	ldr r1, _08090900 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x14
	bl sub_0800ECF0
	movs r0, #0
	bl sub_0800ED48
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_080908F0: .4byte 0x00001078
_080908F4: .4byte gUnk_08BD1BBC
_080908F8: .4byte gUnk_08BD1BC0
_080908FC: .4byte gUnk_08BC9F1C
_08090900: .4byte gUnk_08BC9F6C
_08090904:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _08090912
	b _08090BDE
_08090912:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809089C
	ldrh r0, [r5, #0xa]
	ldr r1, _08090950 @ =gUnk_08BC9F50
	ldr r1, [r1]
	bl sub_08091338
	ldr r0, _08090954 @ =gUnk_02010800
	movs r1, #0xa
	ldrsh r2, [r5, r1]
	lsls r1, r2, #2
	adds r1, r1, r2
	lsls r1, r1, #0x11
	movs r2, #0xc0
	lsls r2, r2, #0xb
	adds r1, r1, r2
	lsrs r1, r1, #0x10
	str r1, [sp]
	movs r1, #0x68
	movs r2, #0x12
	movs r3, #5
	bl sub_0806F0E0
	bl sub_08006A54
	movs r0, #0x14
	b _08090BDC
	.align 2, 0
_08090950: .4byte gUnk_08BC9F50
_08090954: .4byte gUnk_02010800
_08090958:
	movs r7, #0
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	cmp r1, #0
	bne _0809096A
	ldr r0, [r5, #0x24]
	adds r7, r0, #0
	adds r7, #0x98
	b _08090976
_0809096A:
	ldr r0, [r5, #0x24]
	cmp r1, #1
	bne _08090976
	movs r1, #0xfb
	lsls r1, r1, #4
	adds r7, r0, r1
_08090976:
	adds r2, r5, #0
	adds r2, #0x28
	ldrh r3, [r5, #0xa]
	adds r1, r7, #0
	bl sub_08092478
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
	cmp r6, #0
	bne _080909EE
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	movs r4, #0xa
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r1, #0xa
	ldrsh r0, [r5, r1]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #0x19
	asrs r2, r2, #0x18
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080909EA
	adds r0, r7, #0
	bl sub_080938F0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080909E0
	bl sub_08090CFC
	movs r0, #0x28
	b _08090BDC
_080909E0:
	cmp r0, #2
	beq _080909E6
	b _08090BDE
_080909E6:
	movs r0, #0x2c
	b _08090BDC
_080909EA:
	movs r0, #0x2a
	b _08090BDC
_080909EE:
	movs r4, #0
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _08090A00
	ldr r0, [r5, #0x24]
	adds r4, r0, #0
	adds r4, #0x10
	b _08090A0A
_08090A00:
	cmp r0, #1
	bne _08090A0A
	ldr r0, [r5, #0x24]
	adds r4, r0, #0
	adds r4, #0x54
_08090A0A:
	bl sub_08006A48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08090A40 @ =gUnk_0200F800
	ldrh r3, [r4, #8]
_08090A16:
	str r0, [sp]
	movs r0, #6
	str r0, [sp, #4]
	movs r0, #0xa
	ldrsh r1, [r5, r0]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #0x11
	movs r1, #0xc0
	lsls r1, r1, #0xb
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
	movs r0, #0
	str r0, [sp, #0xc]
	adds r0, r2, #0
	movs r1, #0x58
	movs r2, #0x90
	bl sub_0806F174
	b _08090BDE
	.align 2, 0
_08090A40: .4byte gUnk_0200F800
_08090A44:
	ldr r0, _08090A54 @ =gUnk_08BC9F58
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090A54: .4byte gUnk_08BC9F58
_08090A58:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090A64
	b _08090BDE
_08090A64:
	movs r2, #4
	ldrsh r0, [r5, r2]
	cmp r0, #6
	bne _08090A7A
	movs r0, #0
	movs r1, #0x20
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #1
	b _08090A8A
_08090A7A:
	cmp r0, #5
	bne _08090AA8
	movs r0, #0
	movs r1, #0x21
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
_08090A8A:
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _08090AD2
_08090AA8:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
_08090AD2:
	movs r0, #0
	mov r8, r0
	mov r1, r8
	strh r1, [r5, #2]
	movs r0, #1
	strh r0, [r5, #0xc]
	b _08090BDE
_08090AE0:
	ldr r0, _08090AF0 @ =gUnk_08BC9F64
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090AF0: .4byte gUnk_08BC9F64
_08090AF4:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08090BDE
	movs r0, #0x32
	b _08090BDC
_08090B02:
	ldr r0, _08090B10 @ =gUnk_08BC9F38
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090B10: .4byte gUnk_08BC9F38
_08090B14:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08090BDE
	movs r0, #0x32
	b _08090BDC
_08090B22:
	bl sub_0800EC34
	movs r0, #0
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xed
	bl sub_0800EC64
	ldr r0, _08090B70 @ =0x00001078
	adds r2, r5, r0
	movs r0, #0
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _08090B74 @ =gUnk_08BD1BBC
	bl sub_0800ECFC
	ldr r0, _08090B78 @ =gUnk_08BD1BC0
	bl sub_0800ED08
	ldr r0, _08090B7C @ =gUnk_08BC9F24
	ldr r0, [r0]
	ldr r1, _08090B80 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x14
	bl sub_0800ECF0
	movs r0, #1
	bl sub_0800ED48
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090B70: .4byte 0x00001078
_08090B74: .4byte gUnk_08BD1BBC
_08090B78: .4byte gUnk_08BD1BC0
_08090B7C: .4byte gUnk_08BC9F24
_08090B80: .4byte gUnk_08BC9F6C
_08090B84:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08090BDE
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _08090BB8
	ldr r0, [r5, #0x24]
	ldrh r1, [r5, #0xa]
	bl sub_080937B8
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
_08090BA8:
	ldr r0, [r5, #0x24]
	ldrh r1, [r5, #0xa]
	bl sub_08091F14
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _08090BDE
_08090BB8:
	bl sub_08090CFC
	b _0809089C
_08090BBE:
	ldr r0, _08090BCC @ =gUnk_08BD1B98
	ldr r0, [r0]
	bl sub_0800EE5C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _08090BDC
	.align 2, 0
_08090BCC: .4byte gUnk_08BD1B98
_08090BD0:
	bl sub_0800E23C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _08090BDE
_08090BDC:
	strh r0, [r5, #2]
_08090BDE:
	mov r0, r8
	add sp, #0x10
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08090BEC
sub_08090BEC: @ 0x08090BEC
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _08090C1C
	cmp r0, #1
	bgt _08090C08
	cmp r0, #0
	beq _08090C12
	b _08090CF4
_08090C08:
	cmp r0, #2
	beq _08090CD8
	cmp r0, #3
	beq _08090CF0
	b _08090CF4
_08090C12:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	b _08090CE8
_08090C1C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08090CF4
	adds r5, r4, #0
	adds r5, #0x12
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090C3C
	adds r0, r5, #0
	bl sub_0800B4E4
_08090C3C:
	adds r5, r4, #0
	adds r5, #0x16
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090C52
	adds r0, r5, #0
	bl sub_0800B4E4
_08090C52:
	adds r5, r4, #0
	adds r5, #0x18
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090C68
	adds r0, r5, #0
	bl sub_0800B4E4
_08090C68:
	adds r5, r4, #0
	adds r5, #0xe
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090C7E
	adds r0, r5, #0
	bl sub_0800B4E4
_08090C7E:
	adds r5, r4, #0
	adds r5, #0x14
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090C94
	adds r0, r5, #0
	bl sub_0800B4E4
_08090C94:
	adds r5, r4, #0
	adds r5, #0x1a
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090CAA
	adds r0, r5, #0
	bl sub_0800B4E4
_08090CAA:
	adds r5, r4, #0
	adds r5, #0x1c
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090CC0
	adds r0, r5, #0
	bl sub_0800B4E4
_08090CC0:
	adds r5, r4, #0
	adds r5, #0x10
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090CE8
	adds r0, r5, #0
	bl sub_0800B4E4
	b _08090CE8
_08090CD8:
	movs r0, #0
	bl sub_08004840
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
_08090CE8:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _08090CF4
_08090CF0:
	movs r6, #0
	strh r6, [r4, #2]
_08090CF4:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08090CFC
sub_08090CFC: @ 0x08090CFC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	bl sub_0806F020
	adds r6, r0, #0
	adds r4, r6, #0
	adds r4, #0x12
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090D24
	adds r0, r4, #0
	bl sub_0800B4E4
_08090D24:
	adds r4, r6, #0
	adds r4, #0x16
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	str r4, [sp, #0x20]
	cmp r0, #0
	beq _08090D3C
	adds r0, r4, #0
	bl sub_0800B4E4
_08090D3C:
	adds r0, r6, #0
	adds r0, #0x18
	str r0, [sp, #0x14]
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090D52
	ldr r0, [sp, #0x14]
	bl sub_0800B4E4
_08090D52:
	movs r1, #0xe
	adds r1, r1, r6
	mov sl, r1
	mov r0, sl
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090D6A
	mov r0, sl
	bl sub_0800B4E4
_08090D6A:
	adds r4, r6, #0
	adds r4, #0x14
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	str r4, [sp, #0x1c]
	cmp r0, #0
	beq _08090D82
	adds r0, r4, #0
	bl sub_0800B4E4
_08090D82:
	adds r4, r6, #0
	adds r4, #0x1a
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	str r4, [sp, #0x24]
	cmp r0, #0
	beq _08090D9A
	adds r0, r4, #0
	bl sub_0800B4E4
_08090D9A:
	adds r4, r6, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	str r4, [sp, #0x28]
	cmp r0, #0
	beq _08090DB2
	adds r0, r4, #0
	bl sub_0800B4E4
_08090DB2:
	adds r4, r6, #0
	adds r4, #0x10
	adds r0, r4, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	str r4, [sp, #0x18]
	cmp r0, #0
	beq _08090DCA
	adds r0, r4, #0
	bl sub_0800B4E4
_08090DCA:
	ldr r0, _08090F48 @ =gUnk_02010800
	mov sb, r0
	ldr r5, _08090F4C @ =gUnk_080C011C
	movs r1, #0xd
	movs r2, #2
	adds r3, r5, #0
	bl sub_08001284
	ldr r4, _08090F50 @ =gUnk_080C0124
	mov r0, sb
	movs r1, #0x10
	movs r2, #8
	adds r3, r4, #0
	bl sub_08001284
	mov r0, sb
	movs r1, #0xd
	movs r2, #0xc
	adds r3, r5, #0
	bl sub_08001284
	mov r0, sb
	movs r1, #0x10
	movs r2, #0x12
	adds r3, r4, #0
	bl sub_08001284
	ldr r1, _08090F54 @ =0x00001194
	adds r7, r6, r1
	movs r5, #0
	strb r5, [r7]
	ldr r0, _08090F58 @ =0x00001195
	adds r4, r6, r0
	strb r5, [r4]
	adds r1, #2
	adds r0, r6, r1
	strb r5, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r5, [r0]
	ldr r0, _08090F5C @ =0x000010F0
	adds r0, r0, r6
	mov r8, r0
	strb r5, [r0]
	subs r1, #0xa6
	adds r0, r6, r1
	strb r5, [r0]
	ldr r0, [r6, #0x24]
	movs r1, #0
	bl sub_08093848
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08090E38
	b _08091058
_08090E38:
	ldr r0, [r6, #0x24]
	adds r0, #0x10
	bl sub_080938B0
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _08090E4A
	b _08091014
_08090E4A:
	ldr r7, [r6, #0x24]
	movs r0, #0x10
	adds r0, r0, r7
	mov sl, r0
	ldrb r0, [r0, #3]
	cmp r0, #0x63
	bne _08090E5E
	movs r0, #1
	mov r1, r8
	strb r0, [r1]
_08090E5E:
	movs r0, #0x85
	lsls r0, r0, #5
	adds r4, r6, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #3
	movs r2, #7
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x50
	movs r2, #0
	bl sub_0800A678
	adds r0, r6, #0
	adds r0, #0x12
	adds r2, r7, #0
	adds r2, #0x1a
	movs r4, #2
	str r4, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	movs r1, #2
	movs r3, #0x13
	bl sub_0800B1AC
	adds r2, r7, #0
	adds r2, #0x28
	movs r0, #4
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x20]
	movs r1, #2
	movs r3, #0xd
	bl sub_0800B1AC
	adds r2, r7, #0
	adds r2, #0x3c
	movs r0, #6
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r4, [sp, #0xc]
	str r5, [sp, #0x10]
	ldr r0, [sp, #0x14]
	movs r1, #2
	movs r3, #0xd
	bl sub_0800B1AC
	movs r0, #0
	bl sub_080012D4
	ldr r3, _08090F60 @ =gUnk_080C0134
	mov r0, sb
	movs r1, #0xd
	movs r2, #2
	bl sub_08001284
	str r4, [sp]
	mov r1, sl
	ldrb r0, [r1, #2]
	str r0, [sp, #4]
	str r4, [sp, #8]
	mov r0, sb
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _08090F64 @ =gUnk_080C0138
	mov r0, sb
	movs r1, #0x10
	movs r2, #8
	bl sub_08001284
	mov r0, sl
	ldr r1, [r0, #0x40]
	mov r0, sb
	movs r2, #0x15
	movs r3, #8
	bl sub_0806F448
	ldr r1, _08090F68 @ =0x000010F4
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	mov r1, sl
	ldrb r0, [r1, #6]
	cmp r0, #0
	bne _08090F6C
	adds r0, r4, #0
	movs r1, #3
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	b _08090F78
	.align 2, 0
_08090F48: .4byte gUnk_02010800
_08090F4C: .4byte gUnk_080C011C
_08090F50: .4byte gUnk_080C0124
_08090F54: .4byte 0x00001194
_08090F58: .4byte 0x00001195
_08090F5C: .4byte 0x000010F0
_08090F60: .4byte gUnk_080C0134
_08090F64: .4byte gUnk_080C0138
_08090F68: .4byte 0x000010F4
_08090F6C:
	adds r0, r4, #0
	movs r1, #3
	movs r2, #2
	movs r3, #0
	bl sub_08009F50
_08090F78:
	ldr r0, _08090FC8 @ =0x000010F4
	adds r4, r6, r0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #8
	movs r2, #0x10
	bl sub_0800A678
	ldr r0, _08090FCC @ =0x00001194
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	ldr r1, _08090FD0 @ =0x0000111C
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	mov r0, sl
	ldrb r2, [r0, #7]
	adds r0, r2, #0
	cmp r0, #0xff
	beq _08090FD4
	adds r2, #3
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #3
	movs r3, #0
	bl sub_08009F50
	b _08090FE0
	.align 2, 0
_08090FC8: .4byte 0x000010F4
_08090FCC: .4byte 0x00001194
_08090FD0: .4byte 0x0000111C
_08090FD4:
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
_08090FE0:
	ldr r1, _0809100C @ =0x0000111C
	adds r4, r6, r1
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x38
	movs r2, #0x10
	bl sub_0800A678
	ldr r0, _08091010 @ =0x00001195
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	b _08091098
	.align 2, 0
_0809100C: .4byte 0x0000111C
_08091010: .4byte 0x00001195
_08091014:
	cmp r1, #2
	bne _08091034
	ldr r0, _08091030 @ =gUnk_08BC9F38
	ldr r2, [r0]
	movs r0, #4
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	str r1, [sp, #0xc]
	str r5, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	movs r3, #7
	b _08091090
	.align 2, 0
_08091030: .4byte gUnk_08BC9F38
_08091034:
	cmp r1, #3
	bne _08091098
	ldr r0, _08091054 @ =gUnk_08BC9F3C
	ldr r2, [r0]
	movs r0, #4
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	movs r3, #7
	b _08091090
	.align 2, 0
_08091054: .4byte gUnk_08BC9F3C
_08091058:
	ldr r0, [r6, #0x24]
	movs r1, #0
	bl sub_08093848
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _08091078
	ldr r0, [r6, #0x24]
	movs r1, #0
	bl sub_08093848
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bne _08091098
_08091078:
	ldr r0, _080911C0 @ =gUnk_08BC9F34
	ldr r2, [r0]
	movs r0, #4
	str r0, [sp]
	str r5, [sp, #4]
	str r5, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r5, [sp, #0x10]
	mov r0, sl
	movs r1, #2
	movs r3, #0xb
_08091090:
	bl sub_0800B1AC
	strb r5, [r7]
	strb r5, [r4]
_08091098:
	ldr r0, [r6, #0x24]
	movs r1, #1
	bl sub_08093848
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _080910AA
	b _080912D4
_080910AA:
	ldr r0, [r6, #0x24]
	adds r0, #0x54
	bl sub_080938B0
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _080910BC
	b _08091284
_080910BC:
	ldr r1, [r6, #0x24]
	mov r8, r1
	movs r0, #0x54
	add r0, r8
	mov sb, r0
	ldrb r0, [r0, #3]
	cmp r0, #0x63
	bne _080910D4
	ldr r0, _080911C4 @ =0x000010F1
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
_080910D4:
	ldr r1, _080911C8 @ =0x000010C8
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #3
	movs r2, #7
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x50
	movs r2, #0x50
	bl sub_0800A678
	mov r2, r8
	adds r2, #0x5e
	movs r0, #0xc
	mov sl, r0
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r7, [sp, #0x10]
	ldr r0, [sp, #0x1c]
	movs r1, #2
	movs r3, #0x13
	bl sub_0800B1AC
	mov r2, r8
	adds r2, #0x6c
	movs r0, #0xe
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	str r5, [sp, #0xc]
	str r7, [sp, #0x10]
	ldr r0, [sp, #0x24]
	movs r1, #2
	movs r3, #0xd
	bl sub_0800B1AC
	mov r2, r8
	adds r2, #0x80
	movs r0, #0x10
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	str r5, [sp, #0xc]
	str r7, [sp, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #2
	movs r3, #0xd
	bl sub_0800B1AC
	movs r0, #0
	bl sub_080012D4
	ldr r4, _080911CC @ =gUnk_02010800
	ldr r3, _080911D0 @ =gUnk_080C0134
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #0xc
	bl sub_08001284
	mov r1, sl
	str r1, [sp]
	mov r1, sb
	ldrb r0, [r1, #2]
	str r0, [sp, #4]
	str r5, [sp, #8]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x10
	bl sub_0806F2D0
	ldr r3, _080911D4 @ =gUnk_080C0138
	adds r0, r4, #0
	movs r1, #0x10
	movs r2, #0x12
	bl sub_08001284
	mov r0, sb
	ldr r1, [r0, #0x40]
	adds r0, r4, #0
	movs r2, #0x15
	movs r3, #0x12
	bl sub_0806F448
	ldr r1, _080911D8 @ =0x00001144
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	mov r1, sb
	ldrb r0, [r1, #6]
	cmp r0, #0
	bne _080911DC
	adds r0, r4, #0
	movs r1, #3
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	b _080911E8
	.align 2, 0
_080911C0: .4byte gUnk_08BC9F34
_080911C4: .4byte 0x000010F1
_080911C8: .4byte 0x000010C8
_080911CC: .4byte gUnk_02010800
_080911D0: .4byte gUnk_080C0134
_080911D4: .4byte gUnk_080C0138
_080911D8: .4byte 0x00001144
_080911DC:
	adds r0, r4, #0
	movs r1, #3
	movs r2, #2
	movs r3, #0
	bl sub_08009F50
_080911E8:
	ldr r0, _08091238 @ =0x00001144
	adds r4, r6, r0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #8
	movs r2, #0x60
	bl sub_0800A678
	ldr r0, _0809123C @ =0x00001196
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	ldr r1, _08091240 @ =0x0000116C
	adds r4, r6, r1
	adds r0, r4, #0
	bl sub_08009F0C
	mov r0, sb
	ldrb r2, [r0, #7]
	adds r0, r2, #0
	cmp r0, #0xff
	beq _08091244
	adds r2, #3
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #3
	movs r3, #0
	bl sub_08009F50
	b _08091250
	.align 2, 0
_08091238: .4byte 0x00001144
_0809123C: .4byte 0x00001196
_08091240: .4byte 0x0000116C
_08091244:
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
_08091250:
	ldr r1, _0809127C @ =0x0000116C
	adds r4, r6, r1
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x38
	movs r2, #0x60
	bl sub_0800A678
	ldr r0, _08091280 @ =0x00001197
	adds r1, r6, r0
	movs r0, #1
	strb r0, [r1]
	b _0809131E
	.align 2, 0
_0809127C: .4byte 0x0000116C
_08091280: .4byte 0x00001197
_08091284:
	cmp r1, #2
	bne _0809129C
	ldr r0, _08091298 @ =gUnk_08BC9F38
	ldr r2, [r0]
	movs r0, #0xe
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	str r1, [sp, #0xc]
	b _080912B0
	.align 2, 0
_08091298: .4byte gUnk_08BC9F38
_0809129C:
	cmp r1, #3
	bne _0809131E
	ldr r0, _080912CC @ =gUnk_08BC9F3C
	ldr r2, [r0]
	movs r0, #0xe
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
_080912B0:
	str r7, [sp, #0x10]
	ldr r0, [sp, #0x18]
	movs r1, #2
	movs r3, #7
	bl sub_0800B1AC
	ldr r1, _080912D0 @ =0x00001196
	adds r0, r6, r1
	strb r7, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r7, [r0]
	b _0809131E
	.align 2, 0
_080912CC: .4byte gUnk_08BC9F3C
_080912D0: .4byte 0x00001196
_080912D4:
	ldr r0, [r6, #0x24]
	movs r1, #1
	bl sub_08093848
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _080912F4
	ldr r0, [r6, #0x24]
	movs r1, #1
	bl sub_08093848
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bne _0809131E
_080912F4:
	ldr r0, _08091330 @ =gUnk_08BC9F34
	ldr r2, [r0]
	movs r0, #0xe
	str r0, [sp]
	movs r4, #0
	str r4, [sp, #4]
	str r4, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x18]
	movs r1, #2
	movs r3, #0xb
	bl sub_0800B1AC
	ldr r1, _08091334 @ =0x00001196
	adds r0, r6, r1
	strb r4, [r0]
	adds r1, #1
	adds r0, r6, r1
	strb r4, [r0]
_0809131E:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091330: .4byte gUnk_08BC9F34
_08091334: .4byte 0x00001196

	thumb_func_start sub_08091338
sub_08091338: @ 0x08091338
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	mov sl, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov sb, r4
	bl sub_0806F020
	adds r6, r0, #0
	lsls r0, r4, #1
	mov r8, r0
	adds r0, #0x12
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809136C
	adds r0, r5, #0
	bl sub_0800B4E4
_0809136C:
	lsls r4, r4, #2
	adds r0, r4, #0
	adds r0, #0x16
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08091386
	adds r0, r5, #0
	bl sub_0800B4E4
_08091386:
	adds r0, r4, #0
	adds r0, #0x18
	adds r5, r6, r0
	adds r0, r5, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809139E
	adds r0, r5, #0
	bl sub_0800B4E4
_0809139E:
	mov r0, r8
	adds r0, #0xe
	adds r7, r6, r0
	adds r0, r7, #0
	bl sub_0800E7E0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080913B6
	adds r0, r7, #0
	bl sub_0800B4E4
_080913B6:
	ldr r5, _08091428 @ =gUnk_02010800
	add r4, sb
	lsls r4, r4, #1
	adds r2, r4, #2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r3, _0809142C @ =gUnk_080C011C
	adds r0, r5, #0
	movs r1, #0xd
	bl sub_08001284
	adds r2, r4, #0
	adds r2, #8
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r3, _08091430 @ =gUnk_080C0124
	adds r0, r5, #0
	movs r1, #0x10
	bl sub_08001284
	ldr r2, _08091434 @ =0x00001194
	adds r1, r6, r2
	mov r2, r8
	adds r0, r1, r2
	movs r2, #0
	strb r2, [r0]
	mov r0, r8
	adds r0, #1
	adds r1, r1, r0
	strb r2, [r1]
	ldr r1, _08091438 @ =0x000010F0
	adds r0, r6, r1
	add r0, r8
	strb r2, [r0]
	adds r4, #4
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	str r2, [sp, #4]
	str r2, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r2, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #2
	mov r2, sl
	movs r3, #6
	bl sub_0800B1AC
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091428: .4byte gUnk_02010800
_0809142C: .4byte gUnk_080C011C
_08091430: .4byte gUnk_080C0124
_08091434: .4byte 0x00001194
_08091438: .4byte 0x000010F0

	thumb_func_start sub_0809143C
sub_0809143C: @ 0x0809143C
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r0, _080914F4 @ =0x00001EC8
	adds r5, r4, r0
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _080914F8 @ =0x01000014
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	ldr r0, _080914FC @ =0x00001ED0
	adds r1, r4, r0
	ldr r2, _08091500 @ =gUnk_08BD1B94
	ldr r0, [r2]
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r0, _08091504 @ =0x00001ED1
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #1]
	strb r0, [r1]
	ldr r0, _08091508 @ =0x00001ED2
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #2]
	strb r0, [r1]
	ldr r0, _0809150C @ =0x00001ED3
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #3]
	strb r0, [r1]
	ldr r0, _08091510 @ =0x00001ED4
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #4]
	strb r0, [r1]
	ldr r0, _08091514 @ =0x00001ED5
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #5]
	strb r0, [r1]
	ldr r0, _08091518 @ =0x00001ED6
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #6]
	strb r0, [r1]
	ldr r0, _0809151C @ =0x00001ED7
	adds r1, r4, r0
	ldr r0, [r2]
	ldrb r0, [r0, #7]
	strb r0, [r1]
	ldr r0, _08091520 @ =0x00001EDC
	adds r2, r4, r0
	ldr r3, _08091524 @ =gUnk_03006B30
	ldr r1, _08091528 @ =gUnk_08BD1BD4
	ldr r0, [r1]
	str r0, [r2]
	movs r0, #0xf7
	lsls r0, r0, #5
	adds r2, r4, r0
	ldr r0, [r1, #4]
	str r0, [r2]
	ldr r0, _0809152C @ =0x00001EE4
	adds r2, r4, r0
	ldr r0, [r1, #8]
	str r0, [r2]
	ldr r0, _08091530 @ =0x00001EE8
	adds r2, r4, r0
	ldr r0, [r1, #0xc]
	str r0, [r2]
	ldr r0, _08091534 @ =0x00001EEC
	adds r2, r4, r0
	ldr r0, [r1, #0x10]
	str r0, [r2]
	ldr r1, [r3]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _080914EC
	adds r1, #0x98
	adds r0, r5, #0
	movs r2, #0x14
	bl CpuSet
_080914EC:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080914F4: .4byte 0x00001EC8
_080914F8: .4byte 0x01000014
_080914FC: .4byte 0x00001ED0
_08091500: .4byte gUnk_08BD1B94
_08091504: .4byte 0x00001ED1
_08091508: .4byte 0x00001ED2
_0809150C: .4byte 0x00001ED3
_08091510: .4byte 0x00001ED4
_08091514: .4byte 0x00001ED5
_08091518: .4byte 0x00001ED6
_0809151C: .4byte 0x00001ED7
_08091520: .4byte 0x00001EDC
_08091524: .4byte gUnk_03006B30
_08091528: .4byte gUnk_08BD1BD4
_0809152C: .4byte 0x00001EE4
_08091530: .4byte 0x00001EE8
_08091534: .4byte 0x00001EEC

	thumb_func_start sub_08091538
sub_08091538: @ 0x08091538
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	mov sl, r0
	str r1, [sp, #0xc]
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #0x10]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	str r3, [sp, #0x14]
	movs r2, #0
	mov sb, r2
	movs r0, #0
	str r0, [sp, #0x18]
	ldr r1, [sp, #0x10]
	cmp r1, #0
	bne _08091566
	mov r2, sl
	b _08091570
_08091566:
	ldr r3, [sp, #0x10]
	cmp r3, #1
	bne _08091570
	mov r2, sl
	adds r2, #8
_08091570:
	ldr r0, [sp, #0x10]
	lsls r1, r0, #2
	mov r3, sp
	adds r3, #8
	str r3, [sp, #0x1c]
	ldr r0, _080915BC @ =gUnk_08BD1B88
	adds r1, r1, r0
	ldr r0, [r1]
	ldrb r0, [r0]
	strb r0, [r2]
	ldr r0, [r1]
	ldrb r0, [r0, #1]
	strb r0, [r2, #1]
	ldr r0, [r1]
	ldrb r0, [r0, #2]
	strb r0, [r2, #2]
	ldr r0, [r1]
	ldrb r0, [r0, #3]
	strb r0, [r2, #3]
	ldr r0, [r1]
	ldrb r0, [r0, #4]
	strb r0, [r2, #4]
	ldr r0, [r1]
	ldrb r0, [r0, #5]
	strb r0, [r2, #5]
	ldr r0, [r1]
	ldrb r0, [r0, #6]
	strb r0, [r2, #6]
	ldr r0, [r1]
	ldrb r0, [r0, #7]
	strb r0, [r2, #7]
	ldr r0, [sp, #0x10]
	cmp r0, #0
	bne _080915C6
	movs r1, #0x10
	add r1, sl
	mov sb, r1
	b _080915D2
	.align 2, 0
_080915BC: .4byte gUnk_08BD1B88
_080915C0:
	movs r0, #0
_080915C2:
	strh r0, [r4]
	b _080916D0
_080915C6:
	ldr r2, [sp, #0x10]
	cmp r2, #1
	bne _080915D2
	movs r3, #0x54
	add r3, sl
	mov sb, r3
_080915D2:
	add r0, sp, #4
	movs r4, #0
	strh r4, [r0]
	ldr r2, _08091700 @ =0x01000022
	mov r1, sb
	bl CpuSet
	movs r0, #0x12
	mov r1, sb
	strb r0, [r1, #4]
	strb r4, [r1, #5]
	ldr r0, _08091704 @ =0x00000F18
	strh r0, [r1, #8]
	bl GetPlayerLevel
	mov r2, sb
	strb r0, [r2, #2]
	bl GetPlayerGender
	mov r3, sb
	strb r0, [r3, #6]
	bl sub_08018914
	mov r1, sb
	strb r0, [r1, #7]
	ldr r0, _08091708 @ =0x00000177
	bl sub_08012F60
	mov r2, sb
	strb r0, [r2, #3]
	ldr r0, _0809170C @ =gUnk_03003364
	ldr r0, [r0]
	str r0, [r2, #0x40]
	mov r4, sb
	adds r4, #0x18
	adds r2, #2
	str r2, [sp, #0x20]
	bl GetSavedPlayerName
	ldrh r0, [r0]
	mov r3, sb
	strh r0, [r3, #0xa]
	bl GetSavedPlayerName
	ldrh r0, [r0, #2]
	mov r1, sb
	strh r0, [r1, #0xc]
	bl GetSavedPlayerName
	ldrh r0, [r0, #4]
	mov r2, sb
	strh r0, [r2, #0xe]
	bl GetSavedPlayerName
	ldrh r0, [r0, #6]
	mov r3, sb
	strh r0, [r3, #0x10]
	bl GetSavedPlayerName
	ldrh r0, [r0, #8]
	mov r1, sb
	strh r0, [r1, #0x12]
	bl GetSavedPlayerName
	ldrh r0, [r0, #0xa]
	mov r2, sb
	strh r0, [r2, #0x14]
	bl GetSavedPlayerName
	ldrh r0, [r0, #0xc]
	mov r3, sb
	strh r0, [r3, #0x16]
	movs r0, #0
	mov r8, r0
	adds r6, r4, #0
_08091668:
	bl sub_08018E64
	mov r1, r8
	lsls r5, r1, #1
	adds r4, r6, #0
	adds r0, r5, r0
	ldrh r0, [r0]
	strh r0, [r6]
	bl sub_08018E64
	adds r0, r5, r0
	ldr r7, _08091710 @ =gUnk_080C0140
	ldrh r0, [r0]
	ldrh r2, [r7]
	cmp r0, r2
	beq _080915C0
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _080915C2
	adds r4, r6, #2
	movs r3, #1
	add r8, r3
	bl sub_08018E64
	mov r1, r8
	lsls r5, r1, #1
	adds r0, r5, r0
	ldrh r0, [r0]
	strh r0, [r6, #2]
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	beq _080915C0
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080916C4
	b _080915C2
_080916C4:
	adds r6, #4
	movs r2, #1
	add r8, r2
	mov r3, r8
	cmp r3, #9
	bls _08091668
_080916D0:
	movs r0, #0
	mov r1, sb
	strh r0, [r1, #0x2a]
	bl sub_08018E64
	mov r3, r8
	lsls r2, r3, #1
	adds r0, r2, r0
	ldrh r3, [r0]
	cmp r3, #0
	bne _0809171A
	mov r1, sb
	adds r1, #0x2c
	adds r2, r1, r2
	ldr r0, _08091710 @ =gUnk_080C0140
	ldrh r0, [r0]
	strh r0, [r2]
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	strh r3, [r1]
	b _08091798
	.align 2, 0
_08091700: .4byte 0x01000022
_08091704: .4byte 0x00000F18
_08091708: .4byte 0x00000177
_0809170C: .4byte gUnk_03003364
_08091710: .4byte gUnk_080C0140
_08091714:
	movs r0, #0
_08091716:
	strh r0, [r6]
	b _08091798
_0809171A:
	mov r5, r8
	adds r5, #1
	mov r0, r8
	adds r0, #0xb
	str r0, [sp, #0x24]
	cmp r5, r0
	bhs _08091798
_08091728:
	bl sub_08018E64
	subs r1, r5, #1
	mov r2, r8
	subs r1, r1, r2
	lsls r1, r1, #1
	mov r7, sb
	adds r7, #0x2c
	adds r6, r7, r1
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6]
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	ldr r3, _080917B8 @ =gUnk_080C0140
	ldrh r3, [r3]
	cmp r0, r3
	beq _08091714
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08091716
	adds r4, r5, #1
	bl sub_08018E64
	mov r2, r8
	subs r1, r5, r2
	lsls r1, r1, #1
	adds r6, r7, r1
	lsls r4, r4, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6]
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	ldr r3, _080917B8 @ =gUnk_080C0140
	ldrh r3, [r3]
	cmp r0, r3
	beq _08091714
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08091716
	adds r5, #2
	ldr r0, [sp, #0x24]
	cmp r5, r0
	blo _08091728
_08091798:
	movs r0, #0
	mov r1, sb
	strh r0, [r1, #0x3e]
	ldr r0, [sp, #0x20]
	movs r1, #0x42
	bl sub_080018D8
	mov r2, sb
	strh r0, [r2]
	ldr r3, [sp, #0x10]
	cmp r3, #0
	bne _080917BC
	mov r0, sl
	adds r0, #0x98
	str r0, [sp, #0x18]
	b _080917CA
	.align 2, 0
_080917B8: .4byte gUnk_080C0140
_080917BC:
	ldr r1, [sp, #0x10]
	cmp r1, #1
	bne _080917CA
	movs r2, #0xfb
	lsls r2, r2, #4
	add r2, sl
	str r2, [sp, #0x18]
_080917CA:
	ldr r5, _08091B1C @ =0x00000F18
	ldr r3, [sp, #0x14]
	cmp r3, #0
	bne _080917E6
	mov r0, sp
	adds r0, #6
	strh r3, [r0]
	lsrs r2, r5, #1
	movs r1, #0x80
	lsls r1, r1, #0x11
	orrs r2, r1
	ldr r1, [sp, #0x18]
	bl CpuSet
_080917E6:
	movs r4, #0
	ldr r2, [sp, #0x18]
	strh r4, [r2, #2]
	ldr r3, [sp, #0x14]
	cmp r3, #0
	bne _08091850
	movs r0, #0x80
	lsls r0, r0, #0x12
	adds r1, r2, #0
	adds r1, #4
	ldr r2, _08091B20 @ =0x04000040
	bl CpuSet
	ldr r0, _08091B24 @ =gUnk_02000180
	ldr r2, [sp, #0x18]
	movs r3, #0x82
	lsls r3, r3, #1
	adds r1, r2, r3
	ldr r2, _08091B28 @ =0x04000008
	bl CpuSet
	ldr r0, _08091B2C @ =gUnk_020001C0
	ldr r2, [sp, #0x18]
	movs r3, #0x92
	lsls r3, r3, #1
	adds r1, r2, r3
	ldr r2, _08091B30 @ =0x04000004
	bl CpuSet
	ldr r0, _08091B34 @ =gUnk_02000200
	ldr r2, [sp, #0x18]
	movs r3, #0x9a
	lsls r3, r3, #1
	adds r1, r2, r3
	ldr r2, _08091B38 @ =0x04000060
	bl CpuSet
	ldr r0, _08091B3C @ =gUnk_02000380
	ldr r2, [sp, #0x18]
	movs r3, #0xad
	lsls r3, r3, #2
	adds r1, r2, r3
	ldr r2, _08091B40 @ =0x04000020
	bl CpuSet
	ldr r0, _08091B44 @ =gUnk_02000540
	ldr r2, [sp, #0x18]
	movs r3, #0xcd
	lsls r3, r3, #2
	adds r1, r2, r3
	ldr r2, _08091B48 @ =0x04000079
	bl CpuSet
_08091850:
	ldr r0, _08091B4C @ =gSaveBlock1
	ldr r2, [sp, #0x18]
	ldr r3, _08091B50 @ =0x0000051C
	adds r1, r2, r3
	ldr r2, _08091B54 @ =0x04000176
	bl CpuSet
	ldr r0, [sp, #0x14]
	cmp r0, #0
	bne _08091880
	ldr r0, _08091B58 @ =gUnk_02002800
	ldr r2, [sp, #0x18]
	ldr r3, _08091B5C @ =0x00000AF4
	adds r1, r2, r3
	ldr r2, _08091B60 @ =0x04000078
	bl CpuSet
	ldr r0, _08091B64 @ =gUnk_02002C00
	ldr r2, [sp, #0x18]
	ldr r3, _08091B68 @ =0x00000CD4
	adds r1, r2, r3
	ldr r2, _08091B6C @ =0x04000091
	bl CpuSet
_08091880:
	ldr r0, [sp, #0x18]
	adds r0, #2
	ldr r1, _08091B70 @ =0x00000F16
	bl sub_080018D8
	ldr r1, [sp, #0x18]
	strh r0, [r1]
	str r4, [sp, #8]
	ldr r2, _08091B74 @ =0x01000400
	ldr r0, [sp, #0x1c]
	ldr r1, [sp, #0xc]
	bl CpuFastSet
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0x20
	str r0, [sp]
	ldr r0, [sp, #0xc]
	ldr r2, [sp, #0x18]
	adds r3, r5, #0
	bl sub_08000F9C
	adds r4, r0, #0
	cmp r4, #0
	beq _080918E8
	lsrs r0, r4, #3
	cmp r0, #0
	beq _080918BC
	adds r0, #1
	lsls r4, r0, #3
_080918BC:
	ldr r0, _08091B78 @ =0x00000F17
	cmp r4, r0
	bhi _080918E8
	movs r0, #1
	mov r2, sb
	strb r0, [r2, #5]
	strh r4, [r2, #8]
	ldr r0, [sp, #0x20]
	movs r1, #0x42
	bl sub_080018D8
	mov r3, sb
	strh r0, [r3]
	lsls r2, r4, #9
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	ldr r0, [sp, #0xc]
	ldr r1, [sp, #0x18]
	bl CpuSet
_080918E8:
	ldr r4, _08091B7C @ =0x00001EC8
	add r4, sl
	ldr r1, _08091B80 @ =0x00001ED0
	add r1, sl
	ldr r2, _08091B84 @ =gUnk_08BD1B94
	ldr r0, [r2]
	ldrb r0, [r0]
	strb r0, [r1]
	ldr r1, _08091B88 @ =0x00001ED1
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #1]
	strb r0, [r1]
	ldr r1, _08091B8C @ =0x00001ED2
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #2]
	strb r0, [r1]
	ldr r1, _08091B90 @ =0x00001ED3
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #3]
	strb r0, [r1]
	ldr r1, _08091B94 @ =0x00001ED4
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #4]
	strb r0, [r1]
	ldr r1, _08091B98 @ =0x00001ED5
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #5]
	strb r0, [r1]
	ldr r1, _08091B9C @ =0x00001ED6
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #6]
	strb r0, [r1]
	ldr r1, _08091BA0 @ =0x00001ED7
	add r1, sl
	ldr r0, [r2]
	ldrb r0, [r0, #7]
	strb r0, [r1]
	movs r0, #8
	mov r8, r0
	movs r0, #0xe0
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091956
	ldr r0, [r4, #0x10]
	movs r1, #1
	orrs r0, r1
	str r0, [r4, #0x10]
_08091956:
	movs r0, #0xe1
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809196A
	ldr r0, [r4, #0x10]
	movs r1, #2
	orrs r0, r1
	str r0, [r4, #0x10]
_0809196A:
	movs r0, #0xe2
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809197E
	ldr r0, [r4, #0x10]
	movs r1, #4
	orrs r0, r1
	str r0, [r4, #0x10]
_0809197E:
	movs r0, #0xe3
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091992
	ldr r0, [r4, #0x10]
	mov r1, r8
	orrs r0, r1
	str r0, [r4, #0x10]
_08091992:
	movs r0, #0xe4
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080919A6
	ldr r0, [r4, #0x10]
	movs r1, #0x10
	orrs r0, r1
	str r0, [r4, #0x10]
_080919A6:
	movs r0, #0xe5
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080919BA
	ldr r0, [r4, #0x10]
	movs r1, #0x20
	orrs r0, r1
	str r0, [r4, #0x10]
_080919BA:
	ldr r5, _08091BA4 @ =0x00000177
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #5
	ble _080919CE
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	orrs r0, r1
	str r0, [r4, #0x10]
_080919CE:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #4
	ble _080919E2
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	str r0, [r4, #0x10]
_080919E2:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #7
	ble _080919F6
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #2
	orrs r0, r1
	str r0, [r4, #0x10]
_080919F6:
	movs r0, #0xe6
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091A0C
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #3
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A0C:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #3
	ble _08091A20
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #4
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A20:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #2
	ble _08091A34
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #5
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A34:
	movs r0, #0xeb
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091A4A
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #6
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A4A:
	movs r0, #0xec
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091A60
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #7
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A60:
	movs r0, #0xe9
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091A76
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #8
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A76:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #0x62
	ble _08091A8A
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #9
	orrs r0, r1
	str r0, [r4, #0x10]
_08091A8A:
	movs r0, #0xea
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091AA0
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xa
	orrs r0, r1
	str r0, [r4, #0x10]
_08091AA0:
	adds r0, r5, #0
	bl sub_08012F60
	cmp r0, #0x62
	ble _08091AB4
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r4, #0x10]
_08091AB4:
	movs r0, #0xe7
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091ACA
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xd
	orrs r0, r1
	str r0, [r4, #0x10]
_08091ACA:
	movs r0, #0xc8
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091AE0
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xe
	orrs r0, r1
	str r0, [r4, #0x10]
_08091AE0:
	movs r0, #0xcb
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08091AF6
	ldr r0, [r4, #0x10]
	movs r1, #0x80
	lsls r1, r1, #0xf
	orrs r0, r1
	str r0, [r4, #0x10]
_08091AF6:
	movs r0, #0
	mov r2, sp
	ldrh r2, [r2, #0x10]
	strh r2, [r4, #2]
	str r0, [r4, #4]
	adds r0, r4, #2
	movs r1, #0x26
	bl sub_080018D8
	strh r0, [r4]
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08091B1C: .4byte 0x00000F18
_08091B20: .4byte 0x04000040
_08091B24: .4byte gUnk_02000180
_08091B28: .4byte 0x04000008
_08091B2C: .4byte gUnk_020001C0
_08091B30: .4byte 0x04000004
_08091B34: .4byte gUnk_02000200
_08091B38: .4byte 0x04000060
_08091B3C: .4byte gUnk_02000380
_08091B40: .4byte 0x04000020
_08091B44: .4byte gUnk_02000540
_08091B48: .4byte 0x04000079
_08091B4C: .4byte gSaveBlock1
_08091B50: .4byte 0x0000051C
_08091B54: .4byte 0x04000176
_08091B58: .4byte gUnk_02002800
_08091B5C: .4byte 0x00000AF4
_08091B60: .4byte 0x04000078
_08091B64: .4byte gUnk_02002C00
_08091B68: .4byte 0x00000CD4
_08091B6C: .4byte 0x04000091
_08091B70: .4byte 0x00000F16
_08091B74: .4byte 0x01000400
_08091B78: .4byte 0x00000F17
_08091B7C: .4byte 0x00001EC8
_08091B80: .4byte 0x00001ED0
_08091B84: .4byte gUnk_08BD1B94
_08091B88: .4byte 0x00001ED1
_08091B8C: .4byte 0x00001ED2
_08091B90: .4byte 0x00001ED3
_08091B94: .4byte 0x00001ED4
_08091B98: .4byte 0x00001ED5
_08091B9C: .4byte 0x00001ED6
_08091BA0: .4byte 0x00001ED7
_08091BA4: .4byte 0x00000177

	thumb_func_start sub_08091BA8
sub_08091BA8: @ 0x08091BA8
	push {r4, r5, lr}
	sub sp, #4
	adds r5, r0, #0
	ldr r0, _08091BC4 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x12
	bls _08091BBA
	b _08091CFE
_08091BBA:
	lsls r0, r0, #2
	ldr r1, _08091BC8 @ =_08091BCC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091BC4: .4byte gUnk_03006B38
_08091BC8: .4byte _08091BCC
_08091BCC: @ jump table
	.4byte _08091C18 @ case 0
	.4byte _08091C3C @ case 1
	.4byte _08091C4C @ case 2
	.4byte _08091C70 @ case 3
	.4byte _08091CFE @ case 4
	.4byte _08091CFE @ case 5
	.4byte _08091CFE @ case 6
	.4byte _08091CFE @ case 7
	.4byte _08091CFE @ case 8
	.4byte _08091CFE @ case 9
	.4byte _08091CFE @ case 10
	.4byte _08091CFE @ case 11
	.4byte _08091CFE @ case 12
	.4byte _08091CFE @ case 13
	.4byte _08091CFE @ case 14
	.4byte _08091CFE @ case 15
	.4byte _08091CDC @ case 16
	.4byte _08091CEC @ case 17
	.4byte _08091CF8 @ case 18
_08091C18:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08091C38 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091CFC
	.align 2, 0
_08091C38: .4byte gUnk_03006B38
_08091C3C:
	bl m4aSoundVSyncOff
	ldr r1, _08091C48 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091CFC
	.align 2, 0
_08091C48: .4byte gUnk_03006B38
_08091C4C:
	movs r0, #0
	str r0, [sp]
	ldr r2, _08091C68 @ =0x05000800
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	adds r0, r5, #0
	bl sub_0809143C
	ldr r1, _08091C6C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091CFC
	.align 2, 0
_08091C68: .4byte 0x05000800
_08091C6C: .4byte gUnk_03006B38
_08091C70:
	movs r2, #0x80
	lsls r2, r2, #6
	movs r0, #0
	adds r1, r5, #0
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091CFE
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091CD0
	ldr r4, _08091CC4 @ =gUnk_03006B30
	ldr r1, [r4]
	adds r0, r5, #0
	movs r2, #8
	bl CpuSet
	adds r0, r5, #0
	adds r0, #0x10
	ldr r1, [r4]
	adds r1, #0x10
	movs r2, #0x44
	bl CpuSet
	ldr r1, _08091CC8 @ =0x00001EC8
	adds r0, r5, r1
	ldr r1, [r4]
	adds r1, #0x98
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0xc0
	movs r1, #1
	str r1, [r0]
	ldr r1, _08091CCC @ =gUnk_03006B38
	movs r0, #0x10
	b _08091CFC
	.align 2, 0
_08091CC4: .4byte gUnk_03006B30
_08091CC8: .4byte 0x00001EC8
_08091CCC: .4byte gUnk_03006B38
_08091CD0:
	ldr r1, _08091CD8 @ =gUnk_03006B38
	movs r0, #0x10
	b _08091CFC
	.align 2, 0
_08091CD8: .4byte gUnk_03006B38
_08091CDC:
	bl m4aSoundVSyncOn
	ldr r1, _08091CE8 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091CFC
	.align 2, 0
_08091CE8: .4byte gUnk_03006B38
_08091CEC:
	ldr r1, _08091CF4 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091CFC
	.align 2, 0
_08091CF4: .4byte gUnk_03006B38
_08091CF8:
	ldr r1, _08091D0C @ =gUnk_03006B38
	movs r0, #0
_08091CFC:
	strh r0, [r1]
_08091CFE:
	ldr r0, _08091D0C @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #4
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08091D0C: .4byte gUnk_03006B38

	thumb_func_start sub_08091D10
sub_08091D10: @ 0x08091D10
	push {r4, r5, lr}
	adds r5, r0, #0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	ldr r0, _08091D30 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x12
	bls _08091D24
	b _08091F02
_08091D24:
	lsls r0, r0, #2
	ldr r1, _08091D34 @ =_08091D38
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091D30: .4byte gUnk_03006B38
_08091D34: .4byte _08091D38
_08091D38: @ jump table
	.4byte _08091D84 @ case 0
	.4byte _08091DA8 @ case 1
	.4byte _08091DB8 @ case 2
	.4byte _08091DEC @ case 3
	.4byte _08091E20 @ case 4
	.4byte _08091E58 @ case 5
	.4byte _08091F02 @ case 6
	.4byte _08091F02 @ case 7
	.4byte _08091F02 @ case 8
	.4byte _08091F02 @ case 9
	.4byte _08091F02 @ case 10
	.4byte _08091F02 @ case 11
	.4byte _08091F02 @ case 12
	.4byte _08091F02 @ case 13
	.4byte _08091F02 @ case 14
	.4byte _08091F02 @ case 15
	.4byte _08091EE0 @ case 16
	.4byte _08091EF0 @ case 17
	.4byte _08091EFC @ case 18
_08091D84:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08091DA4 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091F00
	.align 2, 0
_08091DA4: .4byte gUnk_03006B38
_08091DA8:
	bl m4aSoundVSyncOff
	ldr r1, _08091DB4 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091F00
	.align 2, 0
_08091DB4: .4byte gUnk_03006B38
_08091DB8:
	movs r0, #0
	adds r1, r5, #0
	movs r2, #0x10
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08091DCA
	b _08091F02
_08091DCA:
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091DE0
	ldr r1, _08091DDC @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091F00
	.align 2, 0
_08091DDC: .4byte gUnk_03006B38
_08091DE0:
	ldr r1, _08091DE8 @ =gUnk_03006B38
	movs r0, #0x10
	b _08091F00
	.align 2, 0
_08091DE8: .4byte gUnk_03006B38
_08091DEC:
	adds r1, r5, #0
	adds r1, #0x10
	movs r0, #0x10
	movs r2, #0x88
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08091E00
	b _08091F02
_08091E00:
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091E14
	ldr r1, _08091E10 @ =gUnk_03006B38
	movs r0, #4
	b _08091F00
	.align 2, 0
_08091E10: .4byte gUnk_03006B38
_08091E14:
	ldr r1, _08091E1C @ =gUnk_03006B38
	movs r0, #0x10
	b _08091F00
	.align 2, 0
_08091E1C: .4byte gUnk_03006B38
_08091E20:
	ldr r0, _08091E44 @ =0x00001EC8
	adds r1, r5, r0
	movs r2, #0x28
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091F02
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091E4C
	bl sub_08006A54
	ldr r1, _08091E48 @ =gUnk_03006B38
	movs r0, #5
	b _08091F00
	.align 2, 0
_08091E44: .4byte 0x00001EC8
_08091E48: .4byte gUnk_03006B38
_08091E4C:
	ldr r1, _08091E54 @ =gUnk_03006B38
	movs r0, #0x10
	b _08091F00
	.align 2, 0
_08091E54: .4byte gUnk_03006B38
_08091E58:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	cmp r3, #0
	bne _08091E6E
	movs r0, #0x98
	adds r1, r5, #0
	adds r1, #0x98
	adds r2, r5, #0
	adds r2, #0x10
	b _08091E7C
_08091E6E:
	cmp r3, #1
	bne _08091E7C
	movs r0, #0xfb
	lsls r0, r0, #4
	adds r1, r5, r0
	adds r2, r5, #0
	adds r2, #0x54
_08091E7C:
	ldrh r2, [r2, #8]
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091F02
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091ED4
	ldr r4, _08091EC8 @ =gUnk_03006B30
	ldr r1, [r4]
	adds r0, r5, #0
	movs r2, #8
	bl CpuSet
	adds r0, r5, #0
	adds r0, #0x10
	ldr r1, [r4]
	adds r1, #0x10
	movs r2, #0x44
	bl CpuSet
	ldr r1, _08091ECC @ =0x00001EC8
	adds r0, r5, r1
	ldr r1, [r4]
	adds r1, #0x98
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0xc0
	movs r1, #1
	str r1, [r0]
	ldr r1, _08091ED0 @ =gUnk_03006B38
	movs r0, #0x10
	b _08091F00
	.align 2, 0
_08091EC8: .4byte gUnk_03006B30
_08091ECC: .4byte 0x00001EC8
_08091ED0: .4byte gUnk_03006B38
_08091ED4:
	ldr r1, _08091EDC @ =gUnk_03006B38
	movs r0, #0x10
	b _08091F00
	.align 2, 0
_08091EDC: .4byte gUnk_03006B38
_08091EE0:
	bl m4aSoundVSyncOn
	ldr r1, _08091EEC @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091F00
	.align 2, 0
_08091EEC: .4byte gUnk_03006B38
_08091EF0:
	ldr r1, _08091EF8 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08091F00
	.align 2, 0
_08091EF8: .4byte gUnk_03006B38
_08091EFC:
	ldr r1, _08091F10 @ =gUnk_03006B38
	movs r0, #0
_08091F00:
	strh r0, [r1]
_08091F02:
	ldr r0, _08091F10 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_08091F10: .4byte gUnk_03006B38

	thumb_func_start sub_08091F14
sub_08091F14: @ 0x08091F14
	push {lr}
	adds r2, r0, #0
	ldr r0, _08091F30 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x12
	bls _08091F24
	b _08092042
_08091F24:
	lsls r0, r0, #2
	ldr r1, _08091F34 @ =_08091F38
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08091F30: .4byte gUnk_03006B38
_08091F34: .4byte _08091F38
_08091F38: @ jump table
	.4byte _08091F84 @ case 0
	.4byte _08091FA8 @ case 1
	.4byte _08091FB8 @ case 2
	.4byte _08091FEC @ case 3
	.4byte _08092042 @ case 4
	.4byte _08092042 @ case 5
	.4byte _08092042 @ case 6
	.4byte _08092042 @ case 7
	.4byte _08092042 @ case 8
	.4byte _08092042 @ case 9
	.4byte _08092042 @ case 10
	.4byte _08092042 @ case 11
	.4byte _08092042 @ case 12
	.4byte _08092042 @ case 13
	.4byte _08092042 @ case 14
	.4byte _08092042 @ case 15
	.4byte _08092020 @ case 16
	.4byte _08092030 @ case 17
	.4byte _0809203C @ case 18
_08091F84:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08091FA4 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092040
	.align 2, 0
_08091FA4: .4byte gUnk_03006B38
_08091FA8:
	bl m4aSoundVSyncOff
	ldr r1, _08091FB4 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092040
	.align 2, 0
_08091FB4: .4byte gUnk_03006B38
_08091FB8:
	movs r0, #0
	adds r1, r2, #0
	movs r2, #0x10
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092042
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08091FE0
	ldr r1, _08091FDC @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092040
	.align 2, 0
_08091FDC: .4byte gUnk_03006B38
_08091FE0:
	ldr r1, _08091FE8 @ =gUnk_03006B38
	movs r0, #0x10
	b _08092040
	.align 2, 0
_08091FE8: .4byte gUnk_03006B38
_08091FEC:
	adds r1, r2, #0
	adds r1, #0x10
	movs r0, #0x10
	movs r2, #0x88
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092042
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092014
	ldr r1, _08092010 @ =gUnk_03006B38
	movs r0, #0x10
	b _08092040
	.align 2, 0
_08092010: .4byte gUnk_03006B38
_08092014:
	ldr r1, _0809201C @ =gUnk_03006B38
	movs r0, #0x10
	b _08092040
	.align 2, 0
_0809201C: .4byte gUnk_03006B38
_08092020:
	bl m4aSoundVSyncOn
	ldr r1, _0809202C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092040
	.align 2, 0
_0809202C: .4byte gUnk_03006B38
_08092030:
	ldr r1, _08092038 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092040
	.align 2, 0
_08092038: .4byte gUnk_03006B38
_0809203C:
	ldr r1, _0809204C @ =gUnk_03006B38
	movs r0, #0
_08092040:
	strh r0, [r1]
_08092042:
	ldr r0, _0809204C @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r1}
	bx r1
	.align 2, 0
_0809204C: .4byte gUnk_03006B38

	thumb_func_start sub_08092050
sub_08092050: @ 0x08092050
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	movs r0, #0
	movs r6, #0
	cmp r3, #0
	bne _08092072
	adds r0, r4, #0
	adds r0, #0x10
	b _0809207A
_08092072:
	cmp r3, #1
	bne _0809207A
	adds r0, r4, #0
	adds r0, #0x54
_0809207A:
	cmp r5, #7
	beq _08092088
	ldr r1, _08092084 @ =gUnk_03003364
	ldr r0, [r0, #0x40]
	b _0809208C
	.align 2, 0
_08092084: .4byte gUnk_03003364
_08092088:
	ldr r1, _08092098 @ =gUnk_03003364
	movs r0, #0
_0809208C:
	str r0, [r1]
	cmp r3, #0
	bne _0809209C
	adds r6, r4, #0
	adds r6, #0x98
	b _080920A6
	.align 2, 0
_08092098: .4byte gUnk_03003364
_0809209C:
	cmp r3, #1
	bne _080920A6
	movs r0, #0xfb
	lsls r0, r0, #4
	adds r6, r4, r0
_080920A6:
	cmp r5, #7
	bne _080920AC
	b _080921C4
_080920AC:
	movs r0, #4
	bl sub_08012F60
	adds r7, r0, #0
	movs r0, #5
	bl sub_08012F60
	mov r8, r0
	movs r0, #6
	bl sub_08012F60
	mov sb, r0
	movs r0, #7
	bl sub_08012F60
	mov sl, r0
	adds r0, r6, #4
	movs r1, #0x80
	lsls r1, r1, #0x12
	ldr r2, _08092174 @ =0x04000040
	bl CpuSet
	movs r1, #0x82
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, _08092178 @ =gUnk_02000180
	ldr r2, _0809217C @ =0x04000008
	bl CpuSet
	movs r2, #0x92
	lsls r2, r2, #1
	adds r0, r6, r2
	ldr r1, _08092180 @ =gUnk_020001C0
	ldr r2, _08092184 @ =0x04000004
	bl CpuSet
	movs r1, #0x9a
	lsls r1, r1, #1
	adds r0, r6, r1
	ldr r1, _08092188 @ =gUnk_02000200
	ldr r2, _0809218C @ =0x04000060
	bl CpuSet
	movs r2, #0xad
	lsls r2, r2, #2
	adds r0, r6, r2
	ldr r1, _08092190 @ =gUnk_02000380
	ldr r2, _08092194 @ =0x04000020
	bl CpuSet
	movs r1, #0xcd
	lsls r1, r1, #2
	adds r0, r6, r1
	ldr r1, _08092198 @ =gUnk_02000540
	ldr r2, _0809219C @ =0x04000079
	bl CpuSet
	subs r0, r5, #5
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #1
	bhi _08092148
	movs r0, #4
	adds r1, r7, #0
	bl sub_08012F0C
	movs r0, #5
	mov r1, r8
	bl sub_08012F0C
	movs r0, #6
	mov r1, sb
	bl sub_08012F0C
	movs r0, #7
	mov r1, sl
	bl sub_08012F0C
_08092148:
	ldr r2, _080921A0 @ =0x0000051C
	adds r0, r6, r2
	ldr r1, _080921A4 @ =gSaveBlock1
	ldr r2, _080921A8 @ =0x04000176
	bl CpuSet
	cmp r4, #1
	bhi _0809215A
	b _0809226E
_0809215A:
	ldr r1, _080921AC @ =0x00000AF4
	adds r0, r6, r1
	ldr r1, _080921B0 @ =gUnk_02002800
	ldr r2, _080921B4 @ =0x04000078
	bl CpuSet
	ldr r2, _080921B8 @ =0x00000CD4
	adds r0, r6, r2
	ldr r1, _080921BC @ =gUnk_02002C00
	ldr r2, _080921C0 @ =0x04000091
	bl CpuSet
	b _0809226E
	.align 2, 0
_08092174: .4byte 0x04000040
_08092178: .4byte gUnk_02000180
_0809217C: .4byte 0x04000008
_08092180: .4byte gUnk_020001C0
_08092184: .4byte 0x04000004
_08092188: .4byte gUnk_02000200
_0809218C: .4byte 0x04000060
_08092190: .4byte gUnk_02000380
_08092194: .4byte 0x04000020
_08092198: .4byte gUnk_02000540
_0809219C: .4byte 0x04000079
_080921A0: .4byte 0x0000051C
_080921A4: .4byte gSaveBlock1
_080921A8: .4byte 0x04000176
_080921AC: .4byte 0x00000AF4
_080921B0: .4byte gUnk_02002800
_080921B4: .4byte 0x04000078
_080921B8: .4byte 0x00000CD4
_080921BC: .4byte gUnk_02002C00
_080921C0: .4byte 0x04000091
_080921C4:
	ldr r1, _0809227C @ =0x000002B5
	adds r0, r6, r1
	ldrb r1, [r0]
	cmp r1, #0xfe
	bhi _080921D4
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
_080921D4:
	ldr r0, _08092280 @ =0x00000181
	bl sub_08012F0C
	movs r7, #0
	adds r4, r6, #0
	adds r4, #0x5c
	movs r5, #0xb0
	lsls r5, r5, #0xd
_080921E4:
	lsrs r0, r5, #0x10
	ldr r1, [r4]
	bl sub_08012F0C
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r5, r2
	lsrs r0, r0, #0x10
	ldr r1, [r4, #4]
	bl sub_08012F0C
	movs r1, #0x80
	lsls r1, r1, #0xa
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldr r1, [r4, #8]
	bl sub_08012F0C
	movs r2, #0xc0
	lsls r2, r2, #0xa
	adds r0, r5, r2
	lsrs r0, r0, #0x10
	ldr r1, [r4, #0xc]
	bl sub_08012F0C
	movs r1, #0x80
	lsls r1, r1, #0xb
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldr r1, [r4, #0x10]
	bl sub_08012F0C
	movs r2, #0xa0
	lsls r2, r2, #0xb
	adds r0, r5, r2
	lsrs r0, r0, #0x10
	ldr r1, [r4, #0x14]
	bl sub_08012F0C
	movs r1, #0xc0
	lsls r1, r1, #0xb
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldr r1, [r4, #0x18]
	bl sub_08012F0C
	adds r4, #0x1c
	movs r2, #0xe0
	lsls r2, r2, #0xb
	adds r5, r5, r2
	adds r7, #7
	cmp r7, #0x29
	ble _080921E4
	ldr r1, [r6, #0x34]
	movs r0, #0xc
	bl sub_08012F0C
	movs r1, #0x8d
	lsls r1, r1, #1
	adds r0, r6, r1
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0x8b
	bl sub_08012F0C
	ldr r1, _08092284 @ =0x0000051C
	adds r0, r6, r1
	bl sub_08017174
_0809226E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809227C: .4byte 0x000002B5
_08092280: .4byte 0x00000181
_08092284: .4byte 0x0000051C

	thumb_func_start sub_08092288
sub_08092288: @ 0x08092288
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080922A8 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _080922AC
	adds r0, r1, #0
	adds r1, r4, #0
	movs r2, #8
	bl CpuSet
	movs r0, #0
	b _0809236E
	.align 2, 0
_080922A8: .4byte gUnk_03006B30
_080922AC:
	ldr r0, _080922C0 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #5
	bhi _08092368
	lsls r0, r0, #2
	ldr r1, _080922C4 @ =_080922C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080922C0: .4byte gUnk_03006B38
_080922C4: .4byte _080922C8
_080922C8: @ jump table
	.4byte _080922E0 @ case 0
	.4byte _08092304 @ case 1
	.4byte _08092314 @ case 2
	.4byte _08092330 @ case 3
	.4byte _08092340 @ case 4
	.4byte _0809234C @ case 5
_080922E0:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08092300 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092366
	.align 2, 0
_08092300: .4byte gUnk_03006B38
_08092304:
	bl m4aSoundVSyncOff
	ldr r1, _08092310 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092366
	.align 2, 0
_08092310: .4byte gUnk_03006B38
_08092314:
	movs r0, #0
	adds r1, r4, #0
	movs r2, #0x10
	bl sub_080068A4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092368
	ldr r1, _0809232C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092366
	.align 2, 0
_0809232C: .4byte gUnk_03006B38
_08092330:
	bl m4aSoundVSyncOn
	ldr r1, _0809233C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092366
	.align 2, 0
_0809233C: .4byte gUnk_03006B38
_08092340:
	ldr r1, _08092348 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092366
	.align 2, 0
_08092348: .4byte gUnk_03006B38
_0809234C:
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092362
	ldr r0, _08092374 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r4, #0
	movs r2, #8
	bl CpuSet
_08092362:
	ldr r1, _08092378 @ =gUnk_03006B38
	movs r0, #0
_08092366:
	strh r0, [r1]
_08092368:
	ldr r0, _08092378 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
_0809236E:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08092374: .4byte gUnk_03006B30
_08092378: .4byte gUnk_03006B38

	thumb_func_start sub_0809237C
sub_0809237C: @ 0x0809237C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080923A0 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _080923A4
	adds r0, r1, #0
	adds r0, #0x10
	adds r1, r4, #0
	movs r2, #0x44
	bl CpuSet
	movs r0, #0
	b _08092468
	.align 2, 0
_080923A0: .4byte gUnk_03006B30
_080923A4:
	ldr r0, _080923B8 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #5
	bhi _08092462
	lsls r0, r0, #2
	ldr r1, _080923BC @ =_080923C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080923B8: .4byte gUnk_03006B38
_080923BC: .4byte _080923C0
_080923C0: @ jump table
	.4byte _080923D8 @ case 0
	.4byte _080923FC @ case 1
	.4byte _0809240C @ case 2
	.4byte _08092428 @ case 3
	.4byte _08092438 @ case 4
	.4byte _08092444 @ case 5
_080923D8:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _080923F8 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092460
	.align 2, 0
_080923F8: .4byte gUnk_03006B38
_080923FC:
	bl m4aSoundVSyncOff
	ldr r1, _08092408 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092460
	.align 2, 0
_08092408: .4byte gUnk_03006B38
_0809240C:
	movs r0, #0x10
	adds r1, r4, #0
	movs r2, #0x88
	bl sub_080068A4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092462
	ldr r1, _08092424 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092460
	.align 2, 0
_08092424: .4byte gUnk_03006B38
_08092428:
	bl m4aSoundVSyncOn
	ldr r1, _08092434 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092460
	.align 2, 0
_08092434: .4byte gUnk_03006B38
_08092438:
	ldr r1, _08092440 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092460
	.align 2, 0
_08092440: .4byte gUnk_03006B38
_08092444:
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809245C
	ldr r0, _08092470 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r1, #0x10
	adds r0, r4, #0
	movs r2, #0x44
	bl CpuSet
_0809245C:
	ldr r1, _08092474 @ =gUnk_03006B38
	movs r0, #0
_08092460:
	strh r0, [r1]
_08092462:
	ldr r0, _08092474 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
_08092468:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08092470: .4byte gUnk_03006B30
_08092474: .4byte gUnk_03006B38

	thumb_func_start sub_08092478
sub_08092478: @ 0x08092478
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	adds r7, r0, #0
	adds r5, r1, #0
	adds r6, r2, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	ldr r0, _0809249C @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #5
	bls _08092492
	b _0809257A
_08092492:
	lsls r0, r0, #2
	ldr r1, _080924A0 @ =_080924A4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809249C: .4byte gUnk_03006B38
_080924A0: .4byte _080924A4
_080924A4: @ jump table
	.4byte _080924BC @ case 0
	.4byte _080924E0 @ case 1
	.4byte _080924F0 @ case 2
	.4byte _08092558 @ case 3
	.4byte _08092568 @ case 4
	.4byte _08092574 @ case 5
_080924BC:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _080924DC @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092578
	.align 2, 0
_080924DC: .4byte gUnk_03006B38
_080924E0:
	bl m4aSoundVSyncOff
	ldr r1, _080924EC @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092578
	.align 2, 0
_080924EC: .4byte gUnk_03006B38
_080924F0:
	movs r0, #0
	movs r4, #0
	cmp r3, #0
	bne _08092500
	movs r0, #0x98
	adds r4, r7, #0
	adds r4, #0x10
	b _0809250C
_08092500:
	cmp r3, #1
	bne _0809250C
	movs r0, #0xfb
	lsls r0, r0, #4
	adds r4, r7, #0
	adds r4, #0x54
_0809250C:
	ldrh r2, [r4, #8]
	adds r1, r5, #0
	bl sub_080068A4
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _0809257A
	ldrb r0, [r4, #5]
	cmp r0, #1
	bne _08092548
	str r1, [sp]
	ldr r2, _08092550 @ =0x01000400
	mov r0, sp
	adds r1, r6, #0
	bl CpuFastSet
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r5, #0
	adds r1, r6, #0
	bl CpuSet
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08001918
_08092548:
	ldr r1, _08092554 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092578
	.align 2, 0
_08092550: .4byte 0x01000400
_08092554: .4byte gUnk_03006B38
_08092558:
	bl m4aSoundVSyncOn
	ldr r1, _08092564 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092578
	.align 2, 0
_08092564: .4byte gUnk_03006B38
_08092568:
	ldr r1, _08092570 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08092578
	.align 2, 0
_08092570: .4byte gUnk_03006B38
_08092574:
	ldr r1, _08092588 @ =gUnk_03006B38
	movs r0, #0
_08092578:
	strh r0, [r1]
_0809257A:
	ldr r0, _08092588 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08092588: .4byte gUnk_03006B38

	thumb_func_start sub_0809258C
sub_0809258C: @ 0x0809258C
	push {r4, r5, lr}
	adds r5, r0, #0
	ldr r0, _080925B0 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _080925B4
	adds r0, r1, #0
	adds r0, #0x98
	adds r1, r5, #0
	movs r2, #0x14
	bl CpuSet
	movs r0, #0
	b _08092674
	.align 2, 0
_080925B0: .4byte gUnk_03006B30
_080925B4:
	ldr r0, _080925C8 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #4
	bhi _0809266E
	lsls r0, r0, #2
	ldr r1, _080925CC @ =_080925D0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080925C8: .4byte gUnk_03006B38
_080925CC: .4byte _080925D0
_080925D0: @ jump table
	.4byte _080925E4 @ case 0
	.4byte _08092608 @ case 1
	.4byte _08092618 @ case 2
	.4byte _08092638 @ case 3
	.4byte _08092648 @ case 4
_080925E4:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08092604 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _0809266C
	.align 2, 0
_08092604: .4byte gUnk_03006B38
_08092608:
	bl m4aSoundVSyncOff
	ldr r1, _08092614 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _0809266C
	.align 2, 0
_08092614: .4byte gUnk_03006B38
_08092618:
	ldr r0, _08092630 @ =0x00001EC8
	adds r1, r5, #0
	movs r2, #0x28
	bl sub_080068A4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809266E
	ldr r1, _08092634 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _0809266C
	.align 2, 0
_08092630: .4byte 0x00001EC8
_08092634: .4byte gUnk_03006B38
_08092638:
	bl m4aSoundVSyncOn
	ldr r1, _08092644 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _0809266C
	.align 2, 0
_08092644: .4byte gUnk_03006B38
_08092648:
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092668
	ldr r4, _0809267C @ =gUnk_03006B30
	ldr r1, [r4]
	adds r1, #0x98
	adds r0, r5, #0
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0xc0
	movs r1, #1
	str r1, [r0]
_08092668:
	ldr r1, _08092680 @ =gUnk_03006B38
	movs r0, #0
_0809266C:
	strh r0, [r1]
_0809266E:
	ldr r0, _08092680 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
_08092674:
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809267C: .4byte gUnk_03006B30
_08092680: .4byte gUnk_03006B38

	thumb_func_start sub_08092684
sub_08092684: @ 0x08092684
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080926A4
	cmp r0, #1
	bgt _0809269A
	cmp r0, #0
	beq _080926BA
	b _080926E0
_0809269A:
	cmp r0, #2
	beq _080926AC
	cmp r0, #3
	beq _080926C2
	b _080926E0
_080926A4:
	ldr r0, [r4, #0x24]
	bl sub_08092288
	b _080926B4
_080926AC:
	ldr r0, [r4, #0x24]
	adds r0, #0x10
	bl sub_0809237C
_080926B4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080926E0
_080926BA:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080926E0
_080926C2:
	ldr r0, [r4, #0x24]
	ldr r1, _080926EC @ =0x00001EC8
	adds r0, r0, r1
	bl sub_0809258C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080926E0
	strh r0, [r4]
	bl sub_080145E8
	movs r0, #1
	bl sub_08001B14
_080926E0:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080926EC: .4byte 0x00001EC8

	thumb_func_start sub_080926F0
sub_080926F0: @ 0x080926F0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	movs r7, #0
	mov r8, r0
	ldr r4, [r0, #0x24]
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08092712
	movs r5, #4
	b _080927A8
_08092712:
	movs r5, #0
	movs r3, #0
	ldr r0, _08092728 @ =gUnk_08BD1B88
	ldr r2, [r0]
	ldrb r1, [r4]
	mov ip, r0
	ldrb r2, [r2]
	cmp r1, r2
	beq _0809272C
	movs r5, #1
	b _080927A8
	.align 2, 0
_08092728: .4byte gUnk_08BD1B88
_0809272C:
	adds r3, #1
	cmp r3, #7
	bhi _08092744
	adds r0, r4, r3
	mov r2, ip
	ldr r1, [r2]
	adds r1, r1, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0809272C
	movs r5, #1
_08092744:
	cmp r5, #0
	bne _080927A8
	mov r6, r8
	ldr r4, [r6, #0x24]
	adds r6, r4, #0
	adds r6, #0x10
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r5, #4
	cmp r0, r1
	beq _08092784
	movs r5, #0
	adds r0, r4, #0
	adds r0, #0x12
	movs r1, #0x42
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r4, #0x10]
	cmp r1, r0
	beq _0809277C
	movs r5, #2
	b _080927A8
_0809277C:
	ldrb r0, [r6, #4]
	cmp r0, #0x12
	beq _08092784
	movs r5, #3
_08092784:
	cmp r5, #0
	bne _080927A8
	movs r0, #0x80
	lsls r0, r0, #0x17
	orrs r7, r0
	mov r1, r8
	ldr r0, [r1, #0x24]
	ldrb r1, [r0, #0x13]
	cmp r1, #1
	bls _0809279E
	movs r0, #0x80
	lsls r0, r0, #0x15
	orrs r7, r0
_0809279E:
	cmp r1, #0x63
	bne _080927A8
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r7, r0
_080927A8:
	mov r2, r8
	ldr r4, [r2, #0x24]
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _080927C4
	movs r5, #4
	mov r6, r8
	ldr r4, [r6, #0x24]
	b _08092802
_080927C4:
	movs r0, #8
	adds r0, r0, r4
	mov sb, r0
	movs r5, #0
	movs r3, #0
	ldr r0, _080927E4 @ =gUnk_08BD1B88
	ldr r2, [r0, #4]
	ldrb r1, [r4, #8]
	mov r6, r8
	ldr r4, [r6, #0x24]
	mov ip, r0
	ldrb r2, [r2]
	cmp r1, r2
	beq _080927E8
	movs r5, #1
	b _0809286A
	.align 2, 0
_080927E4: .4byte gUnk_08BD1B88
_080927E8:
	adds r3, #1
	cmp r3, #7
	bhi _08092802
	mov r1, sb
	adds r0, r1, r3
	mov r2, ip
	ldr r1, [r2, #4]
	adds r1, r1, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _080927E8
	movs r5, #1
_08092802:
	cmp r5, #0
	bne _0809286A
	mov r6, r8
	ldr r4, [r6, #0x24]
	adds r6, r4, #0
	adds r6, #0x54
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r5, #4
	cmp r0, r1
	beq _08092842
	movs r5, #0
	adds r0, r4, #0
	adds r0, #0x56
	movs r1, #0x42
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r6]
	cmp r1, r0
	beq _0809283A
	movs r5, #2
	b _08092842
_0809283A:
	ldrb r0, [r6, #4]
	cmp r0, #0x12
	beq _08092842
	movs r5, #3
_08092842:
	mov r0, r8
	ldr r4, [r0, #0x24]
	cmp r5, #0
	bne _0809286A
	movs r0, #0x80
	lsls r0, r0, #0x18
	orrs r7, r0
	adds r0, r4, #0
	adds r0, #0x57
	ldrb r1, [r0]
	cmp r1, #1
	bls _08092860
	movs r0, #0x80
	lsls r0, r0, #0x16
	orrs r7, r0
_08092860:
	cmp r1, #0x63
	bne _0809286A
	movs r0, #0x80
	lsls r0, r0, #0x14
	orrs r7, r0
_0809286A:
	ldr r1, _08092884 @ =0x00001EC8
	adds r1, r1, r4
	mov sb, r1
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08092888
	movs r5, #4
	b _080928E4
	.align 2, 0
_08092884: .4byte 0x00001EC8
_08092888:
	ldr r2, _080928F4 @ =0x00001ED0
	adds r4, r4, r2
	movs r5, #0
	movs r3, #0
	ldr r0, _080928F8 @ =gUnk_08BD1B94
	ldr r2, [r0]
	ldrb r1, [r4]
	adds r6, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _080928B2
_0809289E:
	adds r3, #1
	cmp r3, #7
	bhi _080928B4
	adds r0, r4, r3
	ldr r1, [r6]
	adds r1, r1, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0809289E
_080928B2:
	movs r5, #1
_080928B4:
	cmp r5, #1
	beq _080928D0
	mov r0, sb
	adds r0, #2
	movs r1, #0x26
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r6, sb
	ldrh r1, [r6]
	cmp r1, r0
	beq _080928D0
	movs r5, #2
_080928D0:
	cmp r5, #0
	bne _080928E4
	mov r1, r8
	ldr r0, [r1, #0x24]
	ldr r2, _080928FC @ =0x00001ED8
	adds r0, r0, r2
	ldr r0, [r0]
	ldr r1, _08092900 @ =0x03FFFFFF
	ands r0, r1
	orrs r7, r0
_080928E4:
	adds r0, r7, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080928F4: .4byte 0x00001ED0
_080928F8: .4byte gUnk_08BD1B94
_080928FC: .4byte 0x00001ED8
_08092900: .4byte 0x03FFFFFF

	thumb_func_start sub_08092904
sub_08092904: @ 0x08092904
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r5, _08092A98 @ =gUnk_02004200
	movs r6, #0
	mov r0, sp
	adds r0, #2
	str r0, [sp, #8]
	ldr r2, _08092A9C @ =gUnk_08BD1B88
	ldr r1, [r2, #8]
	ldrb r0, [r1]
	strb r0, [r5, #8]
	ldrb r0, [r1]
	strb r0, [r5]
	adds r3, r5, #1
	ldrb r0, [r1, #1]
	strb r0, [r3, #8]
	ldrb r0, [r1, #1]
	strb r0, [r5, #1]
	adds r3, r5, #2
	ldr r1, [r2, #8]
	ldrb r0, [r1, #2]
	strb r0, [r3, #8]
	ldrb r0, [r1, #2]
	strb r0, [r5, #2]
	adds r3, r5, #3
	ldr r1, [r2, #8]
	ldrb r0, [r1, #3]
	strb r0, [r3, #8]
	ldrb r0, [r1, #3]
	strb r0, [r5, #3]
	adds r3, r5, #4
	ldr r1, [r2, #8]
	ldrb r0, [r1, #4]
	strb r0, [r3, #8]
	ldrb r0, [r1, #4]
	strb r0, [r5, #4]
	adds r3, r5, #5
	ldr r1, [r2, #8]
	ldrb r0, [r1, #5]
	strb r0, [r3, #8]
	ldrb r0, [r1, #5]
	strb r0, [r5, #5]
	adds r3, r5, #6
	ldr r1, [r2, #8]
	ldrb r0, [r1, #6]
	strb r0, [r3, #8]
	ldrb r0, [r1, #6]
	strb r0, [r5, #6]
	adds r3, r5, #7
	ldr r1, [r2, #8]
	ldrb r0, [r1, #7]
	strb r0, [r3, #8]
	ldrb r0, [r1, #7]
	strb r0, [r5, #7]
	movs r1, #0x10
	adds r1, r1, r5
	mov sl, r1
	mov r0, sp
	movs r4, #0
	strh r6, [r0]
	ldr r2, _08092AA0 @ =0x01000022
	bl CpuSet
	movs r0, #0x12
	mov r2, sl
	strb r0, [r2, #4]
	strb r4, [r2, #5]
	ldr r0, _08092AA4 @ =0x00000F18
	strh r0, [r2, #8]
	bl GetPlayerLevel
	mov r1, sl
	strb r0, [r1, #2]
	bl GetPlayerGender
	mov r2, sl
	strb r0, [r2, #6]
	bl sub_08018914
	mov r1, sl
	strb r0, [r1, #7]
	ldr r0, _08092AA8 @ =0x00000177
	bl sub_08012F60
	mov r2, sl
	strb r0, [r2, #3]
	ldr r0, _08092AAC @ =gUnk_03003364
	ldr r0, [r0]
	str r0, [r2, #0x40]
	bl GetSavedPlayerName
	ldrh r0, [r0]
	strh r0, [r5, #0x1a]
	bl GetSavedPlayerName
	ldrh r0, [r0, #2]
	strh r0, [r5, #0x1c]
	bl GetSavedPlayerName
	ldrh r0, [r0, #4]
	strh r0, [r5, #0x1e]
	bl GetSavedPlayerName
	ldrh r0, [r0, #6]
	strh r0, [r5, #0x20]
	bl GetSavedPlayerName
	ldrh r0, [r0, #8]
	strh r0, [r5, #0x22]
	bl GetSavedPlayerName
	ldrh r0, [r0, #0xa]
	strh r0, [r5, #0x24]
	bl GetSavedPlayerName
	ldrh r0, [r0, #0xc]
	strh r0, [r5, #0x26]
	movs r0, #0
	mov r8, r0
	adds r0, r5, #0
	adds r0, #0x28
	adds r5, #0x12
	str r5, [sp, #0xc]
	adds r6, r0, #0
_08092A04:
	bl sub_08018E64
	mov r1, r8
	lsls r5, r1, #1
	adds r4, r6, #0
	adds r0, r5, r0
	ldrh r0, [r0]
	strh r0, [r4]
	bl sub_08018E64
	adds r0, r5, r0
	ldr r7, _08092AB0 @ =gUnk_080C0140
	ldrh r0, [r0]
	ldrh r2, [r7]
	cmp r0, r2
	beq _08092AB4
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08092AB6
	adds r4, #2
	movs r0, #1
	add r8, r0
	bl sub_08018E64
	mov r1, r8
	lsls r5, r1, #1
	adds r0, r5, r0
	ldrh r0, [r0]
	strh r0, [r4]
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	ldrh r7, [r7]
	cmp r0, r7
	beq _08092AB4
	bl sub_08018E64
	adds r0, r5, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08092AB6
	adds r6, #4
	movs r2, #1
	add r8, r2
	mov r0, r8
	cmp r0, #9
	bls _08092A04
_08092A6A:
	movs r0, #0
	mov r1, sl
	strh r0, [r1, #0x2a]
	bl sub_08018E64
	mov r1, r8
	lsls r2, r1, #1
	adds r0, r2, r0
	ldrh r3, [r0]
	cmp r3, #0
	bne _08092AC0
	mov r1, sl
	adds r1, #0x2c
	adds r2, r1, r2
	ldr r0, _08092AB0 @ =gUnk_080C0140
	ldrh r0, [r0]
	strh r0, [r2]
	mov r0, r8
	adds r0, #1
	lsls r0, r0, #1
	adds r1, r1, r0
	strh r3, [r1]
	b _08092B40
	.align 2, 0
_08092A98: .4byte gUnk_02004200
_08092A9C: .4byte gUnk_08BD1B88
_08092AA0: .4byte 0x01000022
_08092AA4: .4byte 0x00000F18
_08092AA8: .4byte 0x00000177
_08092AAC: .4byte gUnk_03003364
_08092AB0: .4byte gUnk_080C0140
_08092AB4:
	movs r0, #0
_08092AB6:
	strh r0, [r4]
	b _08092A6A
_08092ABA:
	movs r0, #0
_08092ABC:
	strh r0, [r6]
	b _08092B40
_08092AC0:
	mov r5, r8
	adds r5, #1
	mov r2, r8
	adds r2, #0xb
	str r2, [sp, #4]
	cmp r5, r2
	bhs _08092B40
_08092ACE:
	bl sub_08018E64
	subs r1, r5, #1
	mov r2, r8
	subs r1, r1, r2
	lsls r1, r1, #1
	mov r7, sl
	adds r7, #0x2c
	adds r6, r7, r1
	lsls r4, r5, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6]
	bl sub_08018E64
	adds r0, r4, r0
	ldr r1, _08092BDC @ =gUnk_080C0140
	mov sb, r1
	ldrh r0, [r0]
	ldrh r2, [r1]
	cmp r0, r2
	beq _08092ABA
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08092ABC
	adds r4, r5, #1
	bl sub_08018E64
	mov r2, r8
	subs r1, r5, r2
	lsls r1, r1, #1
	adds r6, r7, r1
	lsls r4, r4, #1
	adds r0, r4, r0
	ldrh r0, [r0]
	strh r0, [r6]
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	mov r1, sb
	ldrh r1, [r1]
	cmp r0, r1
	beq _08092ABA
	bl sub_08018E64
	adds r0, r4, r0
	ldrh r0, [r0]
	cmp r0, #0
	beq _08092ABC
	adds r5, #2
	ldr r2, [sp, #4]
	cmp r5, r2
	blo _08092ACE
_08092B40:
	movs r4, #0
	mov r0, sl
	strh r4, [r0, #0x3e]
	ldr r0, [sp, #0xc]
	movs r1, #0x42
	bl sub_080018D8
	mov r1, sl
	strh r0, [r1]
	ldr r6, _08092BE0 @ =gUnk_02004254
	ldr r2, [sp, #8]
	strh r4, [r2]
	ldr r2, _08092BE4 @ =0x0100078C
	ldr r0, [sp, #8]
	adds r1, r6, #0
	bl CpuSet
	strh r4, [r6, #2]
	movs r0, #0x80
	lsls r0, r0, #0x12
	ldr r2, _08092BE8 @ =0x04000040
	ldr r1, _08092BEC @ =gUnk_02004258
	bl CpuSet
	ldr r0, _08092BF0 @ =gUnk_02000180
	ldr r2, _08092BF4 @ =0x04000008
	ldr r1, _08092BF8 @ =gUnk_02004358
	bl CpuSet
	ldr r0, _08092BFC @ =gUnk_020001C0
	ldr r2, _08092C00 @ =0x04000004
	ldr r1, _08092C04 @ =gUnk_02004378
	bl CpuSet
	ldr r0, _08092C08 @ =gUnk_02000200
	ldr r2, _08092C0C @ =0x04000060
	ldr r1, _08092C10 @ =gUnk_02004388
	bl CpuSet
	ldr r0, _08092C14 @ =gUnk_02000380
	ldr r2, _08092C18 @ =0x04000020
	ldr r1, _08092C1C @ =gUnk_02004508
	bl CpuSet
	ldr r0, _08092C20 @ =gUnk_02000540
	ldr r2, _08092C24 @ =0x04000079
	ldr r1, _08092C28 @ =gUnk_02004588
	bl CpuSet
	ldr r0, _08092C2C @ =gSaveBlock1
	ldr r2, _08092C30 @ =0x04000176
	ldr r1, _08092C34 @ =gUnk_02004770
	bl CpuSet
	ldr r0, _08092C38 @ =gUnk_02002800
	ldr r2, _08092C3C @ =0x04000078
	ldr r1, _08092C40 @ =gUnk_02004D48
	bl CpuSet
	ldr r0, _08092C44 @ =gUnk_02002C00
	ldr r2, _08092C48 @ =0x04000091
	ldr r1, _08092C4C @ =gUnk_02004F28
	bl CpuSet
	ldr r1, _08092C50 @ =0x00000F16
	ldr r0, _08092C54 @ =gUnk_02004256
	bl sub_080018D8
	strh r0, [r6]
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08092BDC: .4byte gUnk_080C0140
_08092BE0: .4byte gUnk_02004254
_08092BE4: .4byte 0x0100078C
_08092BE8: .4byte 0x04000040
_08092BEC: .4byte gUnk_02004258
_08092BF0: .4byte gUnk_02000180
_08092BF4: .4byte 0x04000008
_08092BF8: .4byte gUnk_02004358
_08092BFC: .4byte gUnk_020001C0
_08092C00: .4byte 0x04000004
_08092C04: .4byte gUnk_02004378
_08092C08: .4byte gUnk_02000200
_08092C0C: .4byte 0x04000060
_08092C10: .4byte gUnk_02004388
_08092C14: .4byte gUnk_02000380
_08092C18: .4byte 0x04000020
_08092C1C: .4byte gUnk_02004508
_08092C20: .4byte gUnk_02000540
_08092C24: .4byte 0x04000079
_08092C28: .4byte gUnk_02004588
_08092C2C: .4byte gSaveBlock1
_08092C30: .4byte 0x04000176
_08092C34: .4byte gUnk_02004770
_08092C38: .4byte gUnk_02002800
_08092C3C: .4byte 0x04000078
_08092C40: .4byte gUnk_02004D48
_08092C44: .4byte gUnk_02002C00
_08092C48: .4byte 0x04000091
_08092C4C: .4byte gUnk_02004F28
_08092C50: .4byte 0x00000F16
_08092C54: .4byte gUnk_02004256

	thumb_func_start sub_08092C58
sub_08092C58: @ 0x08092C58
	push {r4, lr}
	ldr r4, _08092CF8 @ =gUnk_02004200
	adds r0, r4, #0
	adds r0, #0x10
	ldr r1, _08092CFC @ =gUnk_03003364
	ldr r0, [r0, #0x40]
	str r0, [r1]
	adds r0, r4, #0
	adds r0, #0x58
	movs r1, #0x80
	lsls r1, r1, #0x12
	ldr r2, _08092D00 @ =0x04000040
	bl CpuSet
	movs r1, #0xac
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08092D04 @ =gUnk_02000180
	ldr r2, _08092D08 @ =0x04000008
	bl CpuSet
	movs r1, #0xbc
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08092D0C @ =gUnk_020001C0
	ldr r2, _08092D10 @ =0x04000004
	bl CpuSet
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r1, _08092D14 @ =gUnk_02000200
	ldr r2, _08092D18 @ =0x04000060
	bl CpuSet
	movs r1, #0xc2
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _08092D1C @ =gUnk_02000380
	ldr r2, _08092D20 @ =0x04000020
	bl CpuSet
	movs r1, #0xe2
	lsls r1, r1, #2
	adds r0, r4, r1
	ldr r1, _08092D24 @ =gUnk_02000540
	ldr r2, _08092D28 @ =0x04000079
	bl CpuSet
	movs r1, #0xae
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r1, _08092D2C @ =gSaveBlock1
	ldr r2, _08092D30 @ =0x04000176
	bl CpuSet
	ldr r1, _08092D34 @ =0x00000B48
	adds r0, r4, r1
	ldr r1, _08092D38 @ =gUnk_02002800
	ldr r2, _08092D3C @ =0x04000078
	bl CpuSet
	ldr r1, _08092D40 @ =0x00000D28
	adds r0, r4, r1
	ldr r1, _08092D44 @ =gUnk_02002C00
	ldr r2, _08092D48 @ =0x04000091
	bl CpuSet
	movs r0, #0xc0
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	movs r0, #0
	bl sub_08001AEC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08092CF8: .4byte gUnk_02004200
_08092CFC: .4byte gUnk_03003364
_08092D00: .4byte 0x04000040
_08092D04: .4byte gUnk_02000180
_08092D08: .4byte 0x04000008
_08092D0C: .4byte gUnk_020001C0
_08092D10: .4byte 0x04000004
_08092D14: .4byte gUnk_02000200
_08092D18: .4byte 0x04000060
_08092D1C: .4byte gUnk_02000380
_08092D20: .4byte 0x04000020
_08092D24: .4byte gUnk_02000540
_08092D28: .4byte 0x04000079
_08092D2C: .4byte gSaveBlock1
_08092D30: .4byte 0x04000176
_08092D34: .4byte 0x00000B48
_08092D38: .4byte gUnk_02002800
_08092D3C: .4byte 0x04000078
_08092D40: .4byte 0x00000D28
_08092D44: .4byte gUnk_02002C00
_08092D48: .4byte 0x04000091

	thumb_func_start sub_08092D4C
sub_08092D4C: @ 0x08092D4C
	push {r4, r5, r6, lr}
	ldr r6, _08092DA4 @ =gUnk_02004200
	movs r3, #0
	ldr r0, _08092DA8 @ =gUnk_08BD1B88
	ldr r2, [r0, #8]
	adds r5, r6, #0
	adds r4, r6, #0
_08092D5A:
	adds r0, r2, r3
	ldrb r1, [r4]
	ldrb r0, [r0]
	cmp r1, r0
	bne _08092DA0
	ldrb r0, [r5, #8]
	cmp r0, r1
	bne _08092DA0
	adds r0, r3, #1
	adds r0, r2, r0
	ldrb r1, [r4, #1]
	ldrb r0, [r0]
	cmp r1, r0
	bne _08092DA0
	ldrb r0, [r5, #9]
	cmp r0, r1
	bne _08092DA0
	adds r0, r3, #2
	adds r0, r2, r0
	ldrb r1, [r4, #2]
	ldrb r0, [r0]
	cmp r1, r0
	bne _08092DA0
	ldrb r0, [r5, #0xa]
	cmp r0, r1
	bne _08092DA0
	adds r0, r3, #3
	adds r0, r2, r0
	ldrb r1, [r4, #3]
	ldrb r0, [r0]
	cmp r1, r0
	bne _08092DA0
	ldrb r0, [r5, #0xb]
	cmp r0, r1
	beq _08092DAC
_08092DA0:
	movs r0, #1
	b _08092DF6
	.align 2, 0
_08092DA4: .4byte gUnk_02004200
_08092DA8: .4byte gUnk_08BD1B88
_08092DAC:
	adds r5, #4
	adds r4, #4
	adds r3, #4
	cmp r3, #7
	bls _08092D5A
	adds r0, r6, #0
	adds r0, #0x12
	movs r1, #0x42
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldrh r0, [r6, #0x10]
	cmp r0, r1
	bne _08092DF4
	ldrb r0, [r6, #0x14]
	cmp r0, #0x12
	beq _08092DD4
	movs r0, #3
	b _08092DF6
_08092DD4:
	adds r0, r6, #0
	adds r0, #0x56
	ldr r1, _08092DF0 @ =0x00000F16
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	adds r0, r6, #0
	adds r0, #0x54
	ldrh r0, [r0]
	cmp r0, r1
	bne _08092DF4
	movs r0, #0
	b _08092DF6
	.align 2, 0
_08092DF0: .4byte 0x00000F16
_08092DF4:
	movs r0, #2
_08092DF6:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08092DFC
sub_08092DFC: @ 0x08092DFC
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	movs r7, #1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08092EDC
	cmp r0, #1
	bgt _08092E14
	cmp r0, #0
	beq _08092E1E
	b _08092F14
_08092E14:
	cmp r0, #2
	beq _08092EEC
	cmp r0, #3
	beq _08092F0C
	b _08092F14
_08092E1E:
	movs r6, #0
	movs r2, #0xa
	ldrsh r0, [r5, r2]
	cmp r0, #0
	bne _08092E32
	ldr r0, [r5, #0x24]
	adds r6, r0, #0
	adds r6, #0x98
	adds r1, r0, #0
	b _08092E3E
_08092E32:
	ldr r1, [r5, #0x24]
	cmp r0, #1
	bne _08092E3E
	movs r0, #0xfb
	lsls r0, r0, #4
	adds r6, r1, r0
_08092E3E:
	ldr r4, _08092EC4 @ =gUnk_03006B30
	ldr r0, [r4]
	movs r2, #8
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0x10
	ldr r1, [r5, #0x24]
	adds r1, #0x10
	movs r2, #0x44
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0x98
	ldr r1, [r5, #0x24]
	ldr r2, _08092EC8 @ =0x00001EC8
	adds r1, r1, r2
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r5, #0x24]
	adds r2, r5, #0
	adds r2, #0x28
	ldrh r3, [r5, #0xa]
	adds r1, r6, #0
	bl sub_08092478
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092F14
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092ED0
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r2, #4
	cmp r0, r1
	beq _08092EB0
	adds r0, r6, #2
	ldr r1, _08092ECC @ =0x00000F16
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r6]
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	asrs r2, r0, #0x1f
	movs r0, #2
	ands r2, r0
_08092EB0:
	adds r4, r2, #0
	cmp r4, #0
	beq _08092F04
	cmp r4, #2
	bne _08092F14
	bl sub_080145E8
	movs r7, #0
	strh r4, [r5, #0xc]
	b _08092F14
	.align 2, 0
_08092EC4: .4byte gUnk_03006B30
_08092EC8: .4byte 0x00001EC8
_08092ECC: .4byte 0x00000F16
_08092ED0:
	bl sub_080145E8
	movs r7, #0
	movs r0, #4
	strh r0, [r5, #0xc]
	b _08092F14
_08092EDC:
	ldr r0, [r5, #0x24]
	adds r1, r5, #0
	adds r1, #0x28
	ldrh r2, [r5, #0xa]
	movs r3, #1
	bl sub_08091538
	b _08092F04
_08092EEC:
	ldr r0, [r5, #0x24]
	ldrh r1, [r5, #0xa]
	bl sub_08091D10
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092F14
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092F14
_08092F04:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _08092F14
_08092F0C:
	bl sub_080145E8
	movs r7, #0
	strh r7, [r5, #0xc]
_08092F14:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08092F1C
sub_08092F1C: @ 0x08092F1C
	push {r4, lr}
	ldr r0, _08092F34 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0x12
	bls _08092F2A
	b _08093026
_08092F2A:
	lsls r0, r0, #2
	ldr r1, _08092F38 @ =_08092F3C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08092F34: .4byte gUnk_03006B38
_08092F38: .4byte _08092F3C
_08092F3C: @ jump table
	.4byte _08092F88 @ case 0
	.4byte _08092FAC @ case 1
	.4byte _08092FBC @ case 2
	.4byte _08093026 @ case 3
	.4byte _08093026 @ case 4
	.4byte _08093026 @ case 5
	.4byte _08093026 @ case 6
	.4byte _08093026 @ case 7
	.4byte _08093026 @ case 8
	.4byte _08093026 @ case 9
	.4byte _08093026 @ case 10
	.4byte _08093026 @ case 11
	.4byte _08093026 @ case 12
	.4byte _08093026 @ case 13
	.4byte _08093026 @ case 14
	.4byte _08093026 @ case 15
	.4byte _08093000 @ case 16
	.4byte _08093010 @ case 17
	.4byte _08093020 @ case 18
_08092F88:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	ldr r1, _08092FA8 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08093024
	.align 2, 0
_08092FA8: .4byte gUnk_03006B38
_08092FAC:
	bl m4aSoundVSyncOff
	ldr r1, _08092FB8 @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08093024
	.align 2, 0
_08092FB8: .4byte gUnk_03006B38
_08092FBC:
	ldr r0, _08092FE8 @ =0x00001EC8
	ldr r4, _08092FEC @ =gUnk_03006B30
	ldr r1, [r4]
	adds r1, #0x98
	movs r2, #0x28
	bl sub_08006790
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08093026
	bl sub_08006A3C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08092FF4
	ldr r0, [r4]
	adds r0, #0xc0
	movs r1, #1
	str r1, [r0]
	ldr r1, _08092FF0 @ =gUnk_03006B38
	movs r0, #0x10
	b _08093024
	.align 2, 0
_08092FE8: .4byte 0x00001EC8
_08092FEC: .4byte gUnk_03006B30
_08092FF0: .4byte gUnk_03006B38
_08092FF4:
	ldr r1, _08092FFC @ =gUnk_03006B38
	movs r0, #0x10
	b _08093024
	.align 2, 0
_08092FFC: .4byte gUnk_03006B38
_08093000:
	bl m4aSoundVSyncOn
	ldr r1, _0809300C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08093024
	.align 2, 0
_0809300C: .4byte gUnk_03006B38
_08093010:
	bl sub_080145E8
	ldr r1, _0809301C @ =gUnk_03006B38
	ldrh r0, [r1]
	adds r0, #1
	b _08093024
	.align 2, 0
_0809301C: .4byte gUnk_03006B38
_08093020:
	ldr r1, _08093034 @ =gUnk_03006B38
	movs r0, #0
_08093024:
	strh r0, [r1]
_08093026:
	ldr r0, _08093034 @ =gUnk_03006B38
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08093034: .4byte gUnk_03006B38

	thumb_func_start sub_08093038
sub_08093038: @ 0x08093038
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x2c
	movs r7, #1
	ldr r0, _0809305C @ =gUnk_03006B50
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #0xa
	bls _08093050
	b _080933FE
_08093050:
	lsls r0, r0, #2
	ldr r1, _08093060 @ =_08093064
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809305C: .4byte gUnk_03006B50
_08093060: .4byte _08093064
_08093064: @ jump table
	.4byte _08093090 @ case 0
	.4byte _080930D8 @ case 1
	.4byte _08093100 @ case 2
	.4byte _0809318C @ case 3
	.4byte _080931B0 @ case 4
	.4byte _08093204 @ case 5
	.4byte _08093304 @ case 6
	.4byte _08093368 @ case 7
	.4byte _08093374 @ case 8
	.4byte _080933A4 @ case 9
	.4byte _080933BC @ case 10
_08093090:
	ldr r5, _080930C4 @ =gUnk_02020000
	add r0, sp, #0x14
	movs r4, #0
	strh r4, [r0]
	adds r1, r5, #0
	ldr r2, _080930C8 @ =0x010008CC
	bl CpuSet
	ldr r1, _080930CC @ =gUnk_02022000
	str r1, [r5, #0x24]
	mov r0, sp
	adds r0, #0x16
	strh r4, [r0]
	ldr r2, _080930D0 @ =0x01000F78
	bl CpuSet
	bl sub_08006A04
	ldr r0, _080930D4 @ =gUnk_03006B38
	strh r4, [r0]
	bl sub_080145BC
	movs r0, #0
	bl sub_08001B14
	b _080933AE
	.align 2, 0
_080930C4: .4byte gUnk_02020000
_080930C8: .4byte 0x010008CC
_080930CC: .4byte gUnk_02022000
_080930D0: .4byte 0x01000F78
_080930D4: .4byte gUnk_03006B38
_080930D8:
	ldr r4, _080930FC @ =gUnk_02020000
	adds r0, r4, #0
	bl sub_08092684
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080930E8
	b _080933FE
_080930E8:
	adds r0, r4, #0
	bl sub_080926F0
	movs r1, #0xc0
	lsls r1, r1, #0x14
	ands r1, r0
	cmp r1, #0
	beq _080930FA
	b _080933AE
_080930FA:
	b _080931A4
	.align 2, 0
_080930FC: .4byte gUnk_02020000
_08093100:
	bl sub_0800EC34
	movs r5, #0
	str r5, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0xff
	movs r2, #0xff
	movs r3, #0xec
	bl sub_0800EC64
	ldr r2, _08093178 @ =gUnk_03005610
	movs r0, #2
	movs r1, #0
	bl sub_0800ECAC
	ldr r0, _0809317C @ =gUnk_08BD1BC8
	bl sub_0800ECFC
	ldr r0, _08093180 @ =gUnk_08BD1BD0
	bl sub_0800ED08
	ldr r0, _08093184 @ =gUnk_08BD1B9C
	ldr r0, [r0]
	ldr r1, _08093188 @ =gUnk_08BC9F6C
	movs r2, #0
	bl sub_0800ED14
	movs r0, #0x3c
	bl sub_0800ECF0
	movs r0, #0
	bl sub_0800ED48
	movs r4, #0x14
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	b _080933AE
	.align 2, 0
_08093178: .4byte gUnk_03005610
_0809317C: .4byte gUnk_08BD1BC8
_08093180: .4byte gUnk_08BD1BD0
_08093184: .4byte gUnk_08BD1B9C
_08093188: .4byte gUnk_08BC9F6C
_0809318C:
	bl sub_0800B8F4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _08093198
	b _080933FE
_08093198:
	bl sub_0800ED38
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080931A4
	b _080933AE
_080931A4:
	movs r7, #0
	ldr r0, _080931AC @ =gUnk_03006B50
	strh r7, [r0]
	b _080933FE
	.align 2, 0
_080931AC: .4byte gUnk_03006B50
_080931B0:
	ldr r5, _080931FC @ =gUnk_03006B34
	movs r2, #0
	strh r2, [r5]
	ldr r0, _08093200 @ =gUnk_03006B40
	movs r1, #0
	strh r1, [r0]
	strh r1, [r0, #2]
	strh r1, [r0, #4]
	strh r1, [r0, #6]
	strh r1, [r0, #8]
	strh r1, [r0, #0xa]
	strh r1, [r0, #0xc]
	strh r1, [r0, #0xe]
	add r4, sp, #0x18
	movs r0, #0x1a
	strb r0, [r4, #4]
	movs r0, #0x10
	strb r0, [r4, #5]
	movs r0, #2
	strb r0, [r4, #2]
	strb r0, [r4, #3]
	strb r2, [r4, #1]
	strb r2, [r4, #6]
	strb r2, [r4]
	strb r0, [r4, #7]
	movs r0, #8
	strb r0, [r4, #8]
	strb r2, [r4, #9]
	str r1, [r4, #0xc]
	str r1, [r4, #0x10]
	movs r0, #0x6a
	bl sub_080147B8
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08019944
	b _080933AE
	.align 2, 0
_080931FC: .4byte gUnk_03006B34
_08093200: .4byte gUnk_03006B40
_08093204:
	ldr r4, _080932F4 @ =gUnk_03006B34
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08093216
	b _080933FE
_08093216:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r5, _080932F8 @ =gUnk_03006B40
	ldr r0, _080932FC @ =gUnk_08BD1BA0
	mov sb, r0
	ldr r2, [r0]
	movs r0, #3
	str r0, [sp]
	ldr r1, _08093300 @ =0x44444444
	mov r8, r1
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r6, #2
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r5, #2
	mov r1, sb
	ldr r2, [r1, #4]
	movs r1, #5
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r5, #4
	mov r1, sb
	ldr r2, [r1, #8]
	movs r1, #7
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r5, #6
	mov r1, sb
	ldr r2, [r1, #0xc]
	movs r1, #9
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r5, #0
	adds r0, #8
	mov r1, sb
	ldr r2, [r1, #0x10]
	movs r1, #0xb
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r0, r5, #0
	adds r0, #0xa
	mov r1, sb
	ldr r2, [r1, #0x14]
	movs r1, #0xd
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	adds r5, #0xc
	mov r0, sb
	ldr r2, [r0, #0x18]
	movs r0, #0xf
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	str r6, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r5, #0
	movs r1, #0
	movs r3, #3
	bl sub_0800B1AC
	b _080933AE
	.align 2, 0
_080932F4: .4byte gUnk_03006B34
_080932F8: .4byte gUnk_03006B40
_080932FC: .4byte gUnk_08BD1BA0
_08093300: .4byte 0x44444444
_08093304:
	ldr r0, _0809335C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08093318
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080933FE
_08093318:
	ldr r4, _08093360 @ =gUnk_03006B40
	adds r0, r4, #0
	bl sub_0800B4E4
	adds r0, r4, #2
	bl sub_0800B4E4
	adds r0, r4, #4
	bl sub_0800B4E4
	adds r0, r4, #6
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #8
	bl sub_0800B4E4
	adds r0, r4, #0
	adds r0, #0xa
	bl sub_0800B4E4
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_0800B4E4
	ldr r0, _08093364 @ =gUnk_03006B34
	bl sub_0801BA7C
	movs r0, #0x6b
	movs r1, #0
	bl sub_080147B8
	b _080933AE
	.align 2, 0
_0809335C: .4byte gKeyNewPress
_08093360: .4byte gUnk_03006B40
_08093364: .4byte gUnk_03006B34
_08093368:
	ldr r0, _08093370 @ =gUnk_03006B34
	bl sub_0801BAD8
	b _080933A8
	.align 2, 0
_08093370: .4byte gUnk_03006B34
_08093374:
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	movs r0, #0x18
	bl sub_0806EF98
	movs r0, #1
	movs r1, #7
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #3
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #4
	movs r1, #0
	bl sub_0806F0CC
	b _080933AE
_080933A4:
	bl sub_08069C54
_080933A8:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080933FE
_080933AE:
	ldr r1, _080933B8 @ =gUnk_03006B50
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _080933FE
	.align 2, 0
_080933B8: .4byte gUnk_03006B50
_080933BC:
	movs r0, #0
	bl sub_0806F0B4
	lsls r0, r0, #0x10
	ldr r1, _08093410 @ =0xFFFF0000
	cmp r0, r1
	bne _080933FE
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	ldr r1, _08093414 @ =gUnk_03006B50
	movs r0, #0
	strh r0, [r1]
	movs r7, #0
_080933FE:
	adds r0, r7, #0
	add sp, #0x2c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08093410: .4byte 0xFFFF0000
_08093414: .4byte gUnk_03006B50

	thumb_func_start sub_08093418
sub_08093418: @ 0x08093418
	push {r4, lr}
	sub sp, #4
	ldr r4, _08093448 @ =gUnk_03006B30
	ldr r1, _0809344C @ =gUnk_02003000
	str r1, [r4]
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _08093450 @ =0x01000062
	mov r0, sp
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0xc0
	movs r4, #0
	str r4, [r0]
	bl sub_080934A8
	ldr r0, _08093454 @ =gUnk_03006B38
	strh r4, [r0]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08093448: .4byte gUnk_03006B30
_0809344C: .4byte gUnk_02003000
_08093450: .4byte 0x01000062
_08093454: .4byte gUnk_03006B38

	thumb_func_start sub_08093458
sub_08093458: @ 0x08093458
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	mov r0, sp
	movs r5, #0
	strh r5, [r0]
	ldr r2, _0809349C @ =0x010008CC
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0x80
	lsls r0, r0, #6
	adds r1, r4, r0
	str r1, [r4, #0x24]
	mov r0, sp
	adds r0, #2
	strh r5, [r0]
	ldr r2, _080934A0 @ =0x01000F78
	bl CpuSet
	bl sub_08006A04
	ldr r0, _080934A4 @ =gUnk_03006B38
	strh r5, [r0]
	bl sub_080145BC
	movs r0, #0
	bl sub_08001B14
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809349C: .4byte 0x010008CC
_080934A0: .4byte 0x01000F78
_080934A4: .4byte gUnk_03006B38

	thumb_func_start sub_080934A8
sub_080934A8: @ 0x080934A8
	push {lr}
	sub sp, #4
	ldr r1, _080934C0 @ =gUnk_02004200
	movs r0, #0
	str r0, [sp]
	ldr r2, _080934C4 @ =0x050003DB
	mov r0, sp
	bl CpuSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080934C0: .4byte gUnk_02004200
_080934C4: .4byte 0x050003DB

	thumb_func_start sub_080934C8
sub_080934C8: @ 0x080934C8
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	mov r0, sp
	movs r5, #0
	strh r5, [r0]
	ldr r2, _08093508 @ =0x010008CC
	adds r1, r4, #0
	bl CpuSet
	movs r1, #0x80
	lsls r1, r1, #6
	adds r0, r4, r1
	str r0, [r4, #0x24]
	bl sub_08006A04
	ldr r0, _0809350C @ =gUnk_03006B38
	strh r5, [r0]
	bl sub_080145BC
	movs r0, #0
	bl sub_08001B14
	movs r0, #0xe6
	lsls r0, r0, #1
	bl sub_08012F60
	strh r0, [r4, #0xa]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093508: .4byte 0x010008CC
_0809350C: .4byte gUnk_03006B38

	thumb_func_start sub_08093510
sub_08093510: @ 0x08093510
	push {lr}
	bl sub_080145BC
	bl sub_08006A04
	ldr r1, _08093524 @ =gUnk_03006B38
	movs r0, #0
	strh r0, [r1]
	pop {r0}
	bx r0
	.align 2, 0
_08093524: .4byte gUnk_03006B38

	thumb_func_start sub_08093528
sub_08093528: @ 0x08093528
	push {r4, lr}
	sub sp, #0x28
	adds r4, r0, #0
	ldr r0, _08093540 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	beq _08093544
	movs r0, #0
	b _0809355C
	.align 2, 0
_08093540: .4byte gUnk_03006B30
_08093544:
	adds r0, r1, #0
	adds r0, #0x98
	mov r1, sp
	movs r2, #0x14
	bl CpuSet
	add r0, sp, #0x14
	adds r1, r4, #0
	movs r2, #0xa
	bl CpuSet
	movs r0, #1
_0809355C:
	add sp, #0x28
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_08093564
sub_08093564: @ 0x08093564
	push {r4, r5, lr}
	sub sp, #0x28
	adds r5, r0, #0
	ldr r4, _0809357C @ =gUnk_03006B30
	ldr r1, [r4]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	beq _08093580
	movs r0, #0
	b _080935B4
	.align 2, 0
_0809357C: .4byte gUnk_03006B30
_08093580:
	adds r0, r1, #0
	adds r0, #0x98
	mov r1, sp
	movs r2, #0x14
	bl CpuSet
	add r1, sp, #0x14
	adds r0, r5, #0
	movs r2, #0xa
	bl CpuSet
	ldr r1, [r4]
	adds r1, #0x98
	mov r0, sp
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0x9a
	movs r1, #0x26
	bl sub_080018D8
	ldr r1, [r4]
	adds r1, #0x98
	strh r0, [r1]
	movs r0, #1
_080935B4:
	add sp, #0x28
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080935BC
sub_080935BC: @ 0x080935BC
	push {lr}
	ldr r0, _080935D0 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	beq _080935D4
	movs r0, #0
	b _080935DA
	.align 2, 0
_080935D0: .4byte gUnk_03006B30
_080935D4:
	adds r0, r1, #0
	adds r0, #0xa8
	ldr r0, [r0]
_080935DA:
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080935E0
sub_080935E0: @ 0x080935E0
	push {r4, lr}
	sub sp, #0x2c
	str r0, [sp, #0x28]
	ldr r4, _080935F8 @ =gUnk_03006B30
	ldr r1, [r4]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	beq _080935FC
	movs r0, #0
	b _08093630
	.align 2, 0
_080935F8: .4byte gUnk_03006B30
_080935FC:
	adds r0, r1, #0
	adds r0, #0x98
	mov r1, sp
	movs r2, #0x14
	bl CpuSet
	add r0, sp, #0x28
	add r1, sp, #0x10
	movs r2, #2
	bl CpuSet
	ldr r1, [r4]
	adds r1, #0x98
	mov r0, sp
	movs r2, #0x14
	bl CpuSet
	ldr r0, [r4]
	adds r0, #0x9a
	movs r1, #0x26
	bl sub_080018D8
	ldr r1, [r4]
	adds r1, #0x98
	strh r0, [r1]
	movs r0, #1
_08093630:
	add sp, #0x2c
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_08093638
sub_08093638: @ 0x08093638
	push {lr}
	movs r2, #0
	movs r3, #0
	bl sub_08091538
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08093648
sub_08093648: @ 0x08093648
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08093660
	movs r0, #0xa0
	movs r1, #0x3f
	bl sub_08012F0C
	bl sub_08093D28
_08093660:
	bl sub_08092904
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809366C
sub_0809366C: @ 0x0809366C
	push {lr}
	bl sub_08092D4C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809367C
	bl sub_08092C58
_0809367C:
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08093684
sub_08093684: @ 0x08093684
	push {lr}
	sub sp, #4
	movs r0, #0
	str r0, [sp]
	mov r0, sp
	ldr r1, _080936A0 @ =gUnk_02004200
	ldr r2, _080936A4 @ =0x050003DB
	bl CpuSet
	movs r0, #0
	add sp, #4
	pop {r1}
	bx r1
	.align 2, 0
_080936A0: .4byte gUnk_02004200
_080936A4: .4byte 0x050003DB

	thumb_func_start sub_080936A8
sub_080936A8: @ 0x080936A8
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08092D4C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08012F0C
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080936CC
sub_080936CC: @ 0x080936CC
	push {r4, r5, r6, lr}
	sub sp, #4
	movs r0, #0
	str r0, [sp]
	ldr r4, _0809372C @ =gUnk_02022000
	ldr r2, _08093730 @ =0x01000400
	mov r0, sp
	adds r1, r4, #0
	bl CpuFastSet
	ldr r5, _08093734 @ =gUnk_02020098
	ldr r6, _08093738 @ =gUnk_02020000
	ldrh r2, [r6, #0x18]
	lsrs r2, r2, #2
	movs r0, #0x80
	lsls r0, r0, #0x13
	orrs r2, r0
	adds r0, r5, #0
	adds r1, r4, #0
	bl CpuSet
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001918
	adds r0, r6, #0
	movs r1, #0
	movs r2, #3
	bl sub_08092050
	movs r0, #0xe6
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	movs r0, #0xc0
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	movs r0, #0
	bl sub_08001AEC
	movs r0, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809372C: .4byte gUnk_02022000
_08093730: .4byte 0x01000400
_08093734: .4byte gUnk_02020098
_08093738: .4byte gUnk_02020000

	thumb_func_start sub_0809373C
sub_0809373C: @ 0x0809373C
	push {lr}
	movs r0, #0xc0
	lsls r0, r0, #0x12
	bl sub_08069884
	ldr r0, _0809375C @ =gUnk_02011000
	movs r1, #0xc0
	lsls r1, r1, #6
	bl sub_0800E6B0
	ldr r1, _08093760 @ =gUnk_03006B50
	movs r0, #0
	strh r0, [r1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_0809375C: .4byte gUnk_02011000
_08093760: .4byte gUnk_03006B50

	thumb_func_start sub_08093764
sub_08093764: @ 0x08093764
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r0, _08093784 @ =gUnk_03006B30
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _08093788
	adds r0, r1, #0
	adds r0, #0xa8
	ldr r1, [r0]
	b _0809378A
	.align 2, 0
_08093784: .4byte gUnk_03006B30
_08093788:
	movs r1, #0
_0809378A:
	movs r0, #0x40
	ands r1, r0
	cmp r1, #0
	beq _0809379C
	adds r0, r2, #0
	movs r1, #1
	bl sub_08012F0C
	b _080937A4
_0809379C:
	adds r0, r2, #0
	movs r1, #0
	bl sub_08012F0C
_080937A4:
	ldr r0, _080937B4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080937B4: .4byte gUnk_03006578

	thumb_func_start sub_080937B8
sub_080937B8: @ 0x080937B8
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r3, #0
	cmp r1, #0
	bne _080937DC
	movs r0, #0xff
	strb r0, [r4]
	strb r0, [r4, #1]
	strb r0, [r4, #2]
	strb r0, [r4, #3]
	strb r0, [r4, #4]
	strb r0, [r4, #5]
	strb r0, [r4, #6]
	strb r0, [r4, #7]
	b _080937F2
_080937DC:
	cmp r1, #1
	bne _080937F2
	movs r0, #0xff
	strb r0, [r4, #8]
	strb r0, [r4, #9]
	strb r0, [r4, #0xa]
	strb r0, [r4, #0xb]
	strb r0, [r4, #0xc]
	strb r0, [r4, #0xd]
	strb r0, [r4, #0xe]
	strb r0, [r4, #0xf]
_080937F2:
	cmp r1, #0
	bne _080937FC
	adds r3, r4, #0
	adds r3, #0x10
	b _08093804
_080937FC:
	cmp r1, #1
	bne _08093804
	adds r3, r4, #0
	adds r3, #0x54
_08093804:
	mov r1, sp
	movs r0, #0
	strh r0, [r1]
	ldr r2, _08093840 @ =0x01000022
	mov r0, sp
	adds r1, r3, #0
	bl CpuSet
	ldr r5, _08093844 @ =gUnk_03006B30
	ldr r1, [r5]
	adds r0, r1, #0
	adds r0, #0xc0
	ldr r0, [r0]
	cmp r0, #1
	bne _08093838
	adds r0, r4, #0
	movs r2, #8
	bl CpuSet
	adds r0, r4, #0
	adds r0, #0x10
	ldr r1, [r5]
	adds r1, #0x10
	movs r2, #0x44
	bl CpuSet
_08093838:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093840: .4byte 0x01000022
_08093844: .4byte gUnk_03006B30

	thumb_func_start sub_08093848
sub_08093848: @ 0x08093848
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	movs r7, #0
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08093866
	movs r6, #4
	b _080938A4
_08093866:
	cmp r5, #0
	bne _0809386E
	adds r7, r4, #0
	b _08093876
_0809386E:
	cmp r5, #1
	bne _08093876
	adds r7, r4, #0
	adds r7, #8
_08093876:
	movs r6, #0
	movs r4, #0
	ldr r1, _080938AC @ =gUnk_08BD1B88
	lsls r2, r5, #2
	adds r0, r2, r1
	ldr r3, [r0]
	ldrb r0, [r7]
	adds r5, r1, #0
	ldrb r3, [r3]
	cmp r0, r3
	bne _080938A2
_0809388C:
	adds r4, #1
	cmp r4, #7
	bhi _080938A4
	adds r1, r7, r4
	adds r0, r2, r5
	ldr r0, [r0]
	adds r0, r0, r4
	ldrb r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	beq _0809388C
_080938A2:
	movs r6, #1
_080938A4:
	adds r0, r6, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080938AC: .4byte gUnk_08BD1B88

	thumb_func_start sub_080938B0
sub_080938B0: @ 0x080938B0
	push {r4, r5, lr}
	adds r4, r0, #0
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r5, #4
	cmp r0, r1
	beq _080938E6
	movs r5, #0
	adds r0, r4, #2
	movs r1, #0x42
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r4]
	cmp r1, r0
	beq _080938DE
	movs r5, #2
	b _080938E6
_080938DE:
	ldrb r0, [r4, #4]
	cmp r0, #0x12
	beq _080938E6
	movs r5, #3
_080938E6:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080938F0
sub_080938F0: @ 0x080938F0
	push {r4, lr}
	adds r4, r0, #0
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	movs r2, #4
	cmp r0, r1
	beq _08093920
	adds r0, r4, #2
	ldr r1, _08093928 @ =0x00000F16
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r4]
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	asrs r2, r0, #0x1f
	movs r0, #2
	ands r2, r0
_08093920:
	adds r0, r2, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_08093928: .4byte 0x00000F16

	thumb_func_start sub_0809392C
sub_0809392C: @ 0x0809392C
	push {r4, r5, r6, r7, lr}
	adds r5, r0, #0
	bl sub_08006A3C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, r1
	bne _08093944
	movs r4, #4
	b _08093988
_08093944:
	adds r6, r5, #0
	adds r6, #8
	movs r4, #0
	movs r3, #0
	ldr r0, _08093990 @ =gUnk_08BD1B94
	ldr r2, [r0]
	ldrb r1, [r5, #8]
	adds r7, r0, #0
	ldrb r2, [r2]
	cmp r1, r2
	bne _0809396E
_0809395A:
	adds r3, #1
	cmp r3, #7
	bhi _08093970
	adds r0, r6, r3
	ldr r1, [r7]
	adds r1, r1, r3
	ldrb r0, [r0]
	ldrb r1, [r1]
	cmp r0, r1
	beq _0809395A
_0809396E:
	movs r4, #1
_08093970:
	cmp r4, #1
	beq _08093988
	adds r0, r5, #2
	movs r1, #0x26
	bl sub_080018D8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r5]
	cmp r1, r0
	beq _08093988
	movs r4, #2
_08093988:
	adds r0, r4, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08093990: .4byte gUnk_08BD1B94

	thumb_func_start sub_08093994
sub_08093994: @ 0x08093994
	push {r4, r5, lr}
	ldr r5, _08093A14 @ =gUnk_03006B54
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	cmp r0, #0
	bne _080939E4
	movs r4, #1
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080939E4
	bl sub_080947B0
	ldr r0, [r5]
	ldrh r1, [r0]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080939E4
	bl sub_080A4680
	ldr r0, [r5]
	ldrh r1, [r0]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080939E4
	bl sub_0809D934
	ldr r0, [r5]
	ldrh r1, [r0]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080939E4
	bl sub_0809B8EC
_080939E4:
	ldr r4, _08093A14 @ =gUnk_03006B54
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _080939FA
	bl sub_080A4724
	bl sub_0809E204
_080939FA:
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08093A18
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_080123E4
	b _08093A22
	.align 2, 0
_08093A14: .4byte gUnk_03006B54
_08093A18:
	movs r0, #0
	movs r1, #0
	movs r2, #1
	bl sub_080123E4
_08093A22:
	ldr r4, _08093A94 @ =gUnk_03006B54
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _08093A34
	bl sub_0809F1D8
_08093A34:
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r5, #0x40
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08093A46
	bl sub_080A4408
_08093A46:
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08093A56
	bl sub_0809741C
_08093A56:
	ldr r0, [r4]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08093A68
	bl sub_0809B5C0
_08093A68:
	bl sub_080A50F4
	bl sub_080A5170
	ldr r0, [r4]
	ldrh r1, [r0]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _08093A9C
	ldr r0, _08093A98 @ =0x0000FFFF
	bl sub_08096BEC
	bl sub_08094CC8
	bl sub_0809FB0C
	bl sub_0809E7BC
	bl sub_08094844
	b _08093AA0
	.align 2, 0
_08093A94: .4byte gUnk_03006B54
_08093A98: .4byte 0x0000FFFF
_08093A9C:
	bl sub_080A0250
_08093AA0:
	movs r0, #0xfc
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	bne _08093AB6
	ldr r0, _08093AC0 @ =0x000001F9
	bl sub_08012F60
	cmp r0, #0
	beq _08093ABA
_08093AB6:
	bl sub_08094630
_08093ABA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08093AC0: .4byte 0x000001F9

	thumb_func_start sub_08093AC4
sub_08093AC4: @ 0x08093AC4
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x2c
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	bl sub_080047C4
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	movs r0, #3
	movs r1, #3
	bl sub_08001D3C
	adds r6, r0, #0
	add r1, sp, #8
	bl sub_08001CBC
	ldr r4, _08093BB8 @ =0x06013000
	movs r0, #2
	add r1, sp, #8
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_08009334
	ldr r0, [sp, #0x18]
	ldr r2, [sp, #0xc]
	adds r1, r4, #0
	bl sub_08006BA4
	movs r0, #3
	movs r1, #4
	bl sub_08001D3C
	adds r6, r0, #0
	movs r0, #2
	movs r1, #2
	adds r2, r6, #0
	bl sub_0800A630
	ldr r0, [sp, #0x1c]
	add r1, sp, #8
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	cmp r5, #0
	beq _08093BC0
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	movs r1, #2
	bl sub_08001D78
	adds r6, r0, #0
	add r1, sp, #8
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	add r1, sp, #8
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	ldr r0, [sp, #0x18]
	ldr r4, _08093BBC @ =0x06015000
	ldr r2, [sp, #0xc]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r2, r1
	adds r1, r4, #0
	bl CpuSet
	movs r0, #3
	add r1, sp, #8
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_08009334
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	movs r1, #3
	bl sub_08001D78
	adds r6, r0, #0
	movs r0, #3
	movs r1, #3
	adds r2, r6, #0
	bl sub_0800A630
	b _08093C20
	.align 2, 0
_08093BB8: .4byte 0x06013000
_08093BBC: .4byte 0x06015000
_08093BC0:
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	movs r1, #0
	bl sub_08001D78
	adds r6, r0, #0
	add r1, sp, #8
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	add r1, sp, #8
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x11
	bl sub_08010D40
	ldr r0, [sp, #0x18]
	ldr r4, _08093D10 @ =0x06017800
	ldr r2, [sp, #0xc]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r2, r1
	adds r1, r4, #0
	bl CpuSet
	movs r0, #3
	add r1, sp, #8
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_08009334
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	movs r1, #1
	bl sub_08001D78
	adds r6, r0, #0
	movs r0, #3
	movs r1, #3
	adds r2, r6, #0
	bl sub_0800A630
_08093C20:
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #5
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	movs r1, #1
	bl sub_080045E4
	movs r6, #0
	str r6, [sp, #0x24]
	add r0, sp, #0x24
	ldr r5, _08093D14 @ =gUnk_02012800
	ldr r4, _08093D18 @ =0x05000200
	adds r1, r5, #0
	adds r2, r4, #0
	bl CpuSet
	str r6, [sp, #0x28]
	add r0, sp, #0x28
	ldr r1, _08093D1C @ =gUnk_02013000
	mov r8, r1
	adds r2, r4, #0
	bl CpuSet
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r0, r4, #0
	bl sub_08004570
	movs r0, #0
	adds r1, r4, #0
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	adds r0, r5, #0
	bl sub_080016D4
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #0
	adds r1, r5, #0
	bl sub_0800E6F0
	ldr r0, _08093D20 @ =0x06000CC0
	movs r1, #0xd8
	lsls r1, r1, #5
	bl sub_0800E690
	movs r4, #0x80
	lsls r4, r4, #4
	mov r0, r8
	adds r1, r4, #0
	bl sub_0800E6B0
	movs r0, #0
	bl sub_0800E9DC
	movs r0, #0x45
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #0
	bl sub_0801B9EC
	movs r0, #0
	adds r1, r4, #0
	bl sub_0801B9BC
	movs r0, #0x14
	str r0, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	bl sub_0809E568
	ldr r0, _08093D24 @ =gUnk_03006B54
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0x18
	adds r1, #0xe8
	bl sub_0805FCEC
	add sp, #0x2c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08093D10: .4byte 0x06017800
_08093D14: .4byte gUnk_02012800
_08093D18: .4byte 0x05000200
_08093D1C: .4byte gUnk_02013000
_08093D20: .4byte 0x06000CC0
_08093D24: .4byte gUnk_03006B54

	thumb_func_start sub_08093D28
sub_08093D28: @ 0x08093D28
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r0, _08093EA0 @ =gUnk_02002800
	mov r8, r0
	movs r4, #0
	str r4, [sp]
	ldr r2, _08093EA4 @ =0x05000078
	mov r0, sp
	mov r1, r8
	bl CpuSet
	ldr r3, _08093EA8 @ =gUnk_03006B54
	ldr r0, [r3]
	ldr r1, _08093EAC @ =0x00001EB8
	adds r0, r0, r1
	strb r4, [r0, #0x10]
	strb r4, [r0, #0x11]
	strb r4, [r0, #0x12]
	ldrh r1, [r0]
	mov r2, r8
	strh r1, [r2]
	ldrh r1, [r0, #2]
	strh r1, [r2, #2]
	ldrh r1, [r0, #4]
	strh r1, [r2, #4]
	ldrh r1, [r0, #6]
	strh r1, [r2, #6]
	ldrh r1, [r0, #8]
	strh r1, [r2, #8]
	ldrb r1, [r0, #0xc]
	strb r1, [r2, #0xc]
	ldrb r1, [r0, #0xd]
	strb r1, [r2, #0xd]
	ldrb r1, [r0, #0xe]
	strb r1, [r2, #0xe]
	ldrb r1, [r0, #0xf]
	strb r1, [r2, #0xf]
	ldrb r1, [r0, #0x10]
	strb r1, [r2, #0x10]
	ldrb r1, [r0, #0x11]
	strb r1, [r2, #0x11]
	ldrb r0, [r0, #0x12]
	strb r0, [r2, #0x12]
	ldr r1, [r3]
	ldr r4, _08093EB0 @ =0x00001FA8
	adds r1, r1, r4
	adds r2, #0x14
	ldrb r0, [r1, #0x11]
	strb r0, [r2, #0xb]
	ldr r0, [r1, #0xc]
	str r0, [r2, #4]
	ldr r0, [r1, #8]
	mov r4, r8
	str r0, [r4, #0x14]
	ldrb r0, [r1, #0x10]
	strb r0, [r2, #0xa]
	movs r6, #0
_08093DA0:
	movs r0, #0x54
	muls r0, r6, r0
	ldr r1, _08093EB4 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r3]
	adds r2, r1, r0
	ldrh r1, [r2, #0xe]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08093DDC
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x20
	add r0, r8
	ldrh r1, [r2]
	strh r1, [r0]
	ldrh r1, [r2, #2]
	strh r1, [r0, #2]
	ldrh r1, [r2, #4]
	strh r1, [r0, #4]
	ldrh r1, [r2, #6]
	strh r1, [r0, #6]
	ldrh r1, [r2, #0xe]
	strh r1, [r0, #8]
	ldrb r1, [r2, #9]
	strb r1, [r0, #0xa]
	ldrb r1, [r2, #8]
	strb r1, [r0, #0xb]
_08093DDC:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08093DA0
	movs r7, #0
	movs r6, #0
	ldr r2, _08093EA8 @ =gUnk_03006B54
	mov sb, r2
_08093DEE:
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r4, _08093EB8 @ =0x00001538
	adds r0, r0, r4
	mov r2, sb
	ldr r1, [r2]
	adds r5, r1, r0
	ldrh r1, [r5, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08093E40
	ldrb r0, [r5, #4]
	cmp r0, #8
	bne _08093E40
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #2
	movs r0, #0xd0
	lsls r0, r0, #1
	adds r4, r4, r0
	add r4, r8
	adds r2, r4, #2
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_080A0644
	ldrh r0, [r4]
	lsls r0, r0, #4
	strh r0, [r4]
	ldrh r0, [r4, #2]
	lsls r0, r0, #4
	strh r0, [r4, #2]
	ldrh r0, [r5, #0x10]
	strh r0, [r4, #4]
	ldrh r0, [r5, #8]
	strh r0, [r4, #6]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_08093E40:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08093DEE
	movs r7, #0
	movs r6, #0
	ldr r4, _08093EA8 @ =gUnk_03006B54
	movs r5, #0x80
	lsls r5, r5, #8
_08093E54:
	lsls r0, r6, #4
	ldr r1, _08093EBC @ =0x00001CB8
	adds r0, r0, r1
	ldr r1, [r4]
	adds r2, r1, r0
	ldrh r3, [r2, #0xa]
	movs r0, #1
	ands r0, r3
	cmp r0, #0
	beq _08093E88
	ldrh r1, [r2, #0xc]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08093E88
	lsls r0, r7, #2
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r0, r0, r1
	add r0, r8
	strh r3, [r0]
	ldrb r1, [r2, #8]
	strb r1, [r0, #2]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_08093E88:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08093E54
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08093EA0: .4byte gUnk_02002800
_08093EA4: .4byte 0x05000078
_08093EA8: .4byte gUnk_03006B54
_08093EAC: .4byte 0x00001EB8
_08093EB0: .4byte 0x00001FA8
_08093EB4: .4byte 0x00000AB8
_08093EB8: .4byte 0x00001538
_08093EBC: .4byte 0x00001CB8

	thumb_func_start sub_08093EC0
sub_08093EC0: @ 0x08093EC0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r0, #0xa0
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r0, _08093FA4 @ =gUnk_02002800
	mov r8, r0
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08093F4C
	ldr r0, _08093FA8 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r2, _08093FAC @ =0x00001EB8
	adds r4, r0, r2
	mov r3, r8
	ldrh r0, [r3]
	strh r0, [r4]
	ldrh r0, [r3, #2]
	strh r0, [r4, #2]
	ldrh r0, [r3, #4]
	strh r0, [r4, #4]
	ldrh r0, [r3, #6]
	strh r0, [r4, #6]
	ldrh r0, [r3, #8]
	strh r0, [r4, #8]
	ldrb r0, [r3, #0xc]
	strb r0, [r4, #0xc]
	ldrb r0, [r3, #0xd]
	strb r0, [r4, #0xd]
	ldrb r0, [r3, #0xe]
	strb r0, [r4, #0xe]
	ldrb r0, [r3, #0xf]
	strb r0, [r4, #0xf]
	ldrb r0, [r3, #0x10]
	strb r0, [r4, #0x10]
	ldrb r0, [r3, #0x11]
	strb r0, [r4, #0x11]
	ldrb r0, [r3, #0x12]
	strb r0, [r4, #0x12]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _08093F4C
	ldrh r0, [r3, #4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _08093FB0 @ =gUnk_02002820
	adds r4, r1, r2
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	bl sub_0809F734
	mov r3, r8
	ldrh r0, [r3, #4]
	ldrb r1, [r4, #0xa]
	bl sub_080A47D0
_08093F4C:
	ldr r5, _08093FA8 @ =gUnk_03006B54
	ldr r0, [r5]
	ldr r1, _08093FAC @ =0x00001EB8
	adds r4, r0, r1
	bl sub_080184F0
	strb r0, [r4, #0xf]
	movs r0, #0xf2
	lsls r0, r0, #1
	ldrb r1, [r4, #0xf]
	bl sub_08012F0C
	movs r0, #0x20
	mov r2, sb
	ands r0, r2
	cmp r0, #0
	beq _08093F80
	ldr r0, [r5]
	ldr r3, _08093FB4 @ =0x00001FA8
	adds r2, r0, r3
	mov r1, r8
	adds r1, #0x14
	ldrb r0, [r1, #0xb]
	strb r0, [r2, #0x11]
	ldr r0, [r1, #4]
	str r0, [r2, #0xc]
_08093F80:
	bl sub_080A4AD4
	movs r0, #0x10
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08093FB8
	ldr r0, [r5]
	ldr r3, _08093FB4 @ =0x00001FA8
	adds r2, r0, r3
	mov r1, r8
	adds r1, #0x14
	mov r3, r8
	ldr r0, [r3, #0x14]
	str r0, [r2, #8]
	ldrb r0, [r1, #0xa]
	strb r0, [r2, #0x10]
	b _08093FBC
	.align 2, 0
_08093FA4: .4byte gUnk_02002800
_08093FA8: .4byte gUnk_03006B54
_08093FAC: .4byte 0x00001EB8
_08093FB0: .4byte gUnk_02002820
_08093FB4: .4byte 0x00001FA8
_08093FB8:
	bl sub_080A406C
_08093FBC:
	movs r0, #2
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08094080
	movs r6, #0
_08093FC8:
	ldr r1, _08094188 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _0809418C @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x20
	mov r3, r8
	adds r4, r3, r0
	lsls r0, r6, #4
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r7, r1, r0
	ldrh r3, [r5, #0xe]
	movs r1, #1
	adds r0, r1, #0
	ands r0, r3
	cmp r0, #0
	beq _08094076
	ldrh r2, [r4, #8]
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	beq _08094076
	ldr r0, _08094190 @ =0x0000FFF0
	adds r1, r0, #0
	ands r1, r2
	ands r0, r3
	cmp r0, r1
	bne _08094014
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #0xe]
_08094014:
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	adds r0, r6, #0
	bl sub_0809F734
	ldrh r0, [r7, #2]
	adds r1, r0, #0
	cmp r1, #0
	beq _0809404A
	cmp r1, #0x14
	beq _0809404A
	subs r0, #0x28
	lsls r0, r0, #0x10
	ldr r1, _08094194 @ =0x022F0000
	cmp r0, r1
	bhi _08094052
	ldrh r0, [r7, #2]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08094052
_0809404A:
	ldrb r1, [r4, #0xa]
	adds r0, r6, #0
	bl sub_080A47D0
_08094052:
	ldrh r0, [r4, #4]
	strh r0, [r5, #4]
	ldrh r0, [r4, #6]
	strh r0, [r5, #6]
	ldrb r0, [r4, #0xb]
	strb r0, [r5, #8]
	ldrh r0, [r5, #0xe]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _08094076
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_080A2718
_08094076:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08093FC8
_08094080:
	movs r0, #4
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08094100
	movs r7, #0
	movs r6, #0
	ldr r2, _08094188 @ =gUnk_03006B54
	mov sl, r2
_08094092:
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r3, _08094198 @ =0x00001538
	adds r0, r0, r3
	mov r2, sl
	ldr r1, [r2]
	adds r5, r1, r0
	ldrh r2, [r5, #8]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _080940F6
	ldrb r0, [r5, #4]
	cmp r0, #8
	bne _080940F6
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #2
	movs r3, #0xd0
	lsls r3, r3, #1
	adds r4, r4, r3
	add r4, r8
	ldrh r0, [r4, #6]
	movs r3, #0xf0
	lsls r3, r3, #4
	adds r1, r3, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r5, #8]
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x17
	strh r1, [r4]
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x17
	strh r2, [r4, #2]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r0, r6, #0
	bl sub_080A0570
	ldrh r0, [r4, #4]
	strh r0, [r5, #0x10]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_080940F6:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08094092
_08094100:
	movs r0, #8
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _08094172
	movs r7, #0
	movs r6, #0
	ldr r2, _08094188 @ =gUnk_03006B54
	mov sl, r2
	movs r5, #1
	movs r3, #0x80
	lsls r3, r3, #8
	mov ip, r3
	movs r0, #0xf0
	lsls r0, r0, #4
	mov sb, r0
_08094120:
	lsls r0, r6, #4
	ldr r1, _0809419C @ =0x00001CB8
	adds r0, r0, r1
	mov r2, sl
	ldr r1, [r2]
	adds r3, r1, r0
	ldrh r4, [r3, #0xa]
	adds r0, r5, #0
	ands r0, r4
	cmp r0, #0
	beq _08094168
	ldrh r1, [r3, #0xc]
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	beq _08094168
	lsls r0, r7, #2
	movs r1, #0xe8
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r1, r8
	adds r2, r1, r0
	ldrh r1, [r2]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08094168
	mov r0, sb
	ands r0, r1
	orrs r0, r4
	strh r0, [r3, #0xa]
	ldrb r0, [r2, #2]
	strb r0, [r3, #8]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_08094168:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08094120
_08094172:
	movs r0, #0xa0
	movs r1, #0
	bl sub_08012F0C
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094188: .4byte gUnk_03006B54
_0809418C: .4byte 0x00000AB8
_08094190: .4byte 0x0000FFF0
_08094194: .4byte 0x022F0000
_08094198: .4byte 0x00001538
_0809419C: .4byte 0x00001CB8

	thumb_func_start sub_080941A0
sub_080941A0: @ 0x080941A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _08094388 @ =gUnk_02002C00
	mov r8, r0
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809438C @ =0x05000091
	mov r0, sp
	mov r1, r8
	bl CpuSet
	movs r1, #0
	movs r0, #1
	mov r2, r8
	strh r0, [r2]
	ldr r3, _08094390 @ =gUnk_03006B54
	ldr r0, [r3]
	ldr r4, _08094394 @ =0x00001EB8
	adds r0, r0, r4
	strb r1, [r0, #0x10]
	strb r1, [r0, #0x11]
	strb r1, [r0, #0x12]
	adds r2, #0x24
	ldrh r1, [r0]
	mov r4, r8
	strh r1, [r4, #0x24]
	ldrh r1, [r0, #2]
	strh r1, [r2, #2]
	ldrh r1, [r0, #4]
	strh r1, [r2, #4]
	ldrh r1, [r0, #6]
	strh r1, [r2, #6]
	ldrh r1, [r0, #8]
	strh r1, [r2, #8]
	ldrb r1, [r0, #0xc]
	strb r1, [r2, #0xc]
	ldrb r1, [r0, #0xd]
	strb r1, [r2, #0xd]
	ldrb r1, [r0, #0xe]
	strb r1, [r2, #0xe]
	ldrb r1, [r0, #0xf]
	strb r1, [r2, #0xf]
	ldrb r1, [r0, #0x10]
	strb r1, [r2, #0x10]
	ldrb r1, [r0, #0x11]
	strb r1, [r2, #0x11]
	ldrb r0, [r0, #0x12]
	strb r0, [r2, #0x12]
	ldr r0, [r3]
	ldr r1, _08094398 @ =0x00001FA8
	adds r0, r0, r1
	adds r2, #0x14
	ldr r1, [r0, #8]
	str r1, [r4, #0x38]
	ldrb r0, [r0, #0x10]
	strb r0, [r2, #0xa]
	movs r6, #0
_0809421A:
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _0809439C @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r3]
	adds r2, r1, r0
	ldrh r1, [r2, #0xe]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08094256
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x44
	add r0, r8
	ldrh r1, [r2]
	strh r1, [r0]
	ldrh r1, [r2, #2]
	strh r1, [r0, #2]
	ldrh r1, [r2, #4]
	strh r1, [r0, #4]
	ldrh r1, [r2, #6]
	strh r1, [r0, #6]
	ldrh r1, [r2, #0xe]
	strh r1, [r0, #8]
	ldrb r1, [r2, #9]
	strb r1, [r0, #0xa]
	ldrb r1, [r2, #8]
	strb r1, [r0, #0xb]
_08094256:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _0809421A
	movs r7, #0
	movs r6, #0
	movs r4, #4
	add r4, r8
	mov sl, r4
	ldr r0, _08094390 @ =gUnk_03006B54
	mov sb, r0
_0809426E:
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r1, _080943A0 @ =0x00001538
	adds r0, r0, r1
	mov r2, sb
	ldr r1, [r2]
	adds r5, r1, r0
	ldrh r1, [r5, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080942C6
	ldrb r0, [r5, #4]
	cmp r0, #8
	bne _080942C6
	lsls r4, r7, #1
	adds r4, r4, r7
	lsls r4, r4, #2
	movs r0, #0xe2
	lsls r0, r0, #1
	adds r4, r4, r0
	add r4, r8
	adds r2, r4, #2
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_080A0644
	ldrh r0, [r4]
	lsls r0, r0, #4
	strh r0, [r4]
	ldrh r0, [r4, #2]
	lsls r0, r0, #4
	strh r0, [r4, #2]
	ldrh r0, [r5, #0x10]
	strh r0, [r4, #4]
	ldrh r0, [r5, #8]
	strh r0, [r4, #6]
	ldrb r0, [r5, #4]
	strh r0, [r4, #8]
	strh r6, [r4, #0xa]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_080942C6:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _0809426E
	movs r7, #0
	movs r6, #0
	ldr r4, _08094390 @ =gUnk_03006B54
	movs r5, #0x80
	lsls r5, r5, #8
_080942DA:
	lsls r0, r6, #4
	ldr r1, _080943A4 @ =0x00001CB8
	adds r0, r0, r1
	ldr r1, [r4]
	adds r2, r1, r0
	ldrh r3, [r2, #0xa]
	movs r0, #1
	ands r0, r3
	cmp r0, #0
	beq _08094310
	ldrh r1, [r2, #0xc]
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _08094310
	lsls r0, r7, #2
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r0, r0, r1
	add r0, r8
	strh r3, [r0]
	ldrb r1, [r2, #8]
	strb r1, [r0, #2]
	strb r6, [r0, #3]
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_08094310:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _080942DA
	movs r0, #0xa4
	bl sub_08012F60
	mov r2, r8
	strh r0, [r2, #2]
	movs r6, #0
_08094326:
	adds r0, r6, #0
	adds r0, #0xd0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r1, r6, #1
	add r1, sl
	strh r0, [r1]
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0xf
	bls _08094326
	movs r6, #0
_08094344:
	lsls r5, r6, #2
	movs r4, #0x81
	lsls r4, r4, #2
	adds r5, r5, r4
	add r5, r8
	lsls r4, r6, #1
	adds r0, r4, #0
	adds r0, #0xe0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08012F60
	strh r0, [r5]
	adds r4, #0xe1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	bl sub_08012F60
	strh r0, [r5, #2]
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0xf
	bls _08094344
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094388: .4byte gUnk_02002C00
_0809438C: .4byte 0x05000091
_08094390: .4byte gUnk_03006B54
_08094394: .4byte 0x00001EB8
_08094398: .4byte 0x00001FA8
_0809439C: .4byte 0x00000AB8
_080943A0: .4byte 0x00001538
_080943A4: .4byte 0x00001CB8

	thumb_func_start sub_080943A8
sub_080943A8: @ 0x080943A8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08094600 @ =gUnk_02002C00
	mov r8, r0
	ldrh r0, [r0]
	cmp r0, #2
	beq _080943BE
	b _080945F2
_080943BE:
	ldr r4, _08094604 @ =gUnk_03006B54
	ldr r0, [r4]
	ldr r2, _08094608 @ =0x00001EB8
	adds r5, r0, r2
	ldr r1, _0809460C @ =gUnk_02002C24
	mov r3, r8
	ldrh r0, [r3, #0x24]
	strh r0, [r5]
	ldrh r0, [r1, #2]
	strh r0, [r5, #2]
	ldrh r0, [r1, #4]
	strh r0, [r5, #4]
	ldrh r0, [r1, #6]
	strh r0, [r5, #6]
	ldrh r0, [r1, #8]
	strh r0, [r5, #8]
	ldrb r0, [r1, #0xc]
	strb r0, [r5, #0xc]
	ldrb r0, [r1, #0xd]
	strb r0, [r5, #0xd]
	ldrb r0, [r1, #0xe]
	strb r0, [r5, #0xe]
	ldrb r0, [r1, #0xf]
	strb r0, [r5, #0xf]
	ldrb r0, [r1, #0x10]
	strb r0, [r5, #0x10]
	ldrb r0, [r1, #0x11]
	strb r0, [r5, #0x11]
	ldrb r0, [r1, #0x12]
	strb r0, [r5, #0x12]
	ldr r0, [r4]
	adds r5, r0, r2
	bl sub_080184F0
	strb r0, [r5, #0xf]
	movs r0, #0xf2
	lsls r0, r0, #1
	ldrb r1, [r5, #0xf]
	bl sub_08012F0C
	ldr r4, [r4]
	ldr r0, _08094610 @ =0x00001FA8
	adds r4, r4, r0
	ldr r1, _08094614 @ =gUnk_02002814
	ldrb r0, [r1, #0xb]
	strb r0, [r4, #0x11]
	ldr r0, [r1, #4]
	str r0, [r4, #0xc]
	bl sub_080A4AD4
	mov r1, r8
	ldr r0, [r1, #0x38]
	str r0, [r4, #8]
	movs r6, #0
	ldr r2, _08094618 @ =gUnk_02002C04
	mov sl, r2
	ldr r3, _0809461C @ =0x0000022F
	mov sb, r3
_08094432:
	ldr r1, _08094604 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _08094620 @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, #0x44
	mov r3, r8
	adds r4, r3, r0
	lsls r0, r6, #4
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r7, r1, r0
	ldrh r2, [r4, #8]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _080944D6
	ldrh r3, [r5, #0xe]
	ldr r0, _08094624 @ =0x0000FFF0
	adds r1, r0, #0
	ands r1, r2
	ands r0, r3
	cmp r0, r1
	bne _08094474
	adds r0, r1, #0
	orrs r0, r3
	strh r0, [r5, #0xe]
_08094474:
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	adds r0, r6, #0
	bl sub_0809F734
	ldrh r0, [r7, #2]
	adds r1, r0, #0
	cmp r1, #0
	beq _080944AA
	cmp r1, #0x14
	beq _080944AA
	subs r0, #0x28
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, sb
	bhi _080944B2
	ldrh r0, [r7, #2]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080944B2
_080944AA:
	ldrb r1, [r4, #0xa]
	adds r0, r6, #0
	bl sub_080A47D0
_080944B2:
	ldrh r0, [r4, #4]
	strh r0, [r5, #4]
	ldrh r0, [r4, #6]
	strh r0, [r5, #6]
	ldrb r0, [r4, #0xb]
	strb r0, [r5, #8]
	ldrh r0, [r5, #0xe]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080944D6
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_080A2718
_080944D6:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0x1f
	bls _08094432
	movs r6, #0
	ldr r7, _08094604 @ =gUnk_03006B54
_080944E4:
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	movs r1, #0xe2
	lsls r1, r1, #1
	adds r0, r0, r1
	mov r2, r8
	adds r5, r2, r0
	ldrh r2, [r5, #6]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08094548
	ldrh r0, [r5, #8]
	cmp r0, #8
	bne _08094548
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r3, _08094628 @ =0x00001538
	adds r0, r0, r3
	ldr r4, [r7]
	adds r4, r4, r0
	movs r1, #0xf0
	lsls r1, r1, #4
	adds r0, r1, #0
	ands r0, r2
	ldrh r1, [r4, #8]
	orrs r0, r1
	strh r0, [r4, #8]
	ldrh r1, [r5]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x17
	strh r1, [r5]
	ldrh r2, [r5, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x17
	strh r2, [r5, #2]
	ldrh r0, [r5, #0xa]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	bl sub_080A0570
	ldrh r0, [r5, #4]
	strh r0, [r4, #0x10]
	ldrh r0, [r5, #8]
	strb r0, [r4, #4]
_08094548:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _080944E4
	movs r6, #0
	ldr r4, _08094604 @ =gUnk_03006B54
	movs r5, #0xf0
	lsls r5, r5, #4
_0809455A:
	lsls r0, r6, #2
	movs r2, #0xfa
	lsls r2, r2, #1
	adds r0, r0, r2
	mov r1, r8
	adds r3, r1, r0
	ldrh r1, [r3]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809458A
	ldrb r0, [r3, #3]
	lsls r0, r0, #4
	ldr r2, _0809462C @ =0x00001CB8
	adds r0, r0, r2
	ldr r2, [r4]
	adds r2, r2, r0
	adds r0, r5, #0
	ands r0, r1
	ldrh r1, [r2, #0xa]
	orrs r0, r1
	strh r0, [r2, #0xa]
	ldrb r0, [r3, #2]
	strb r0, [r2, #8]
_0809458A:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _0809455A
	movs r6, #0
_08094596:
	adds r0, r6, #0
	adds r0, #0xd0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r6, #1
	add r1, sl
	movs r3, #0
	ldrsh r1, [r1, r3]
	bl sub_08012F0C
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0xf
	bls _08094596
	movs r6, #0
_080945B6:
	lsls r5, r6, #2
	movs r0, #0x81
	lsls r0, r0, #2
	adds r5, r5, r0
	add r5, r8
	lsls r4, r6, #1
	adds r0, r4, #0
	adds r0, #0xe0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r5, r2]
	bl sub_08012F0C
	adds r4, #0xe1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r3, #2
	ldrsh r1, [r5, r3]
	adds r0, r4, #0
	bl sub_08012F0C
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0xf
	bls _080945B6
	movs r0, #3
	mov r1, r8
	strh r0, [r1]
_080945F2:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094600: .4byte gUnk_02002C00
_08094604: .4byte gUnk_03006B54
_08094608: .4byte 0x00001EB8
_0809460C: .4byte gUnk_02002C24
_08094610: .4byte 0x00001FA8
_08094614: .4byte gUnk_02002814
_08094618: .4byte gUnk_02002C04
_0809461C: .4byte 0x0000022F
_08094620: .4byte 0x00000AB8
_08094624: .4byte 0x0000FFF0
_08094628: .4byte 0x00001538
_0809462C: .4byte 0x00001CB8

	thumb_func_start sub_08094630
sub_08094630: @ 0x08094630
	push {r4, r5, r6, lr}
	movs r0, #0xfc
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r6, r4, #0
	ldr r0, _08094658 @ =0x000001F9
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r4, #2
	beq _0809466E
	cmp r4, #2
	bgt _0809465C
	cmp r4, #1
	beq _08094666
	b _08094684
	.align 2, 0
_08094658: .4byte 0x000001F9
_0809465C:
	cmp r6, #3
	beq _08094676
	cmp r6, #4
	beq _0809467E
	b _08094684
_08094666:
	movs r0, #0
	bl sub_08094878
	b _08094684
_0809466E:
	movs r0, #0
	bl sub_080948CC
	b _08094684
_08094676:
	movs r0, #0
	bl sub_08094958
	b _08094684
_0809467E:
	movs r0, #0
	bl sub_080949DC
_08094684:
	cmp r5, #2
	beq _080946A4
	cmp r5, #2
	bgt _08094692
	cmp r5, #1
	beq _0809469C
	b _080946BA
_08094692:
	cmp r5, #3
	beq _080946AC
	cmp r5, #4
	beq _080946B4
	b _080946BA
_0809469C:
	movs r0, #1
	bl sub_08094878
	b _080946BA
_080946A4:
	movs r0, #1
	bl sub_080948CC
	b _080946BA
_080946AC:
	movs r0, #1
	bl sub_08094958
	b _080946BA
_080946B4:
	movs r0, #1
	bl sub_080949DC
_080946BA:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080946C0
sub_080946C0: @ 0x080946C0
	push {r4, r5, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r5, _08094718 @ =gUnk_03006B54
	ldr r1, _0809471C @ =gUnk_0200E000
	str r1, [r5]
	movs r0, #0
	str r0, [sp]
	ldr r2, _08094720 @ =0x050008A1
	mov r0, sp
	bl CpuSet
	ldr r0, [r5]
	strh r4, [r0, #8]
	bl sub_080A54FC
	bl sub_0809B09C
	ldr r0, [r5]
	ldrh r0, [r0, #8]
	bl sub_0809AF24
	bl sub_080971E4
	ldr r0, [r5]
	ldrh r0, [r0, #8]
	bl sub_08093AC4
	bl sub_0809B750
	bl sub_080A406C
	bl sub_080A56C8
	movs r0, #1
	bl sub_0800480C
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_08094718: .4byte gUnk_03006B54
_0809471C: .4byte gUnk_0200E000
_08094720: .4byte 0x050008A1

	thumb_func_start sub_08094724
sub_08094724: @ 0x08094724
	push {r4, r5, lr}
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	bl sub_08004A8C
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	bl sub_08097264
	bl sub_080A56C8
	bl sub_0809B7CC
	movs r0, #0xa0
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x3f
	beq _080947A0
	movs r4, #0
	ldr r0, _080947A8 @ =0x00000574
	adds r5, r0, #0
_0809478A:
	adds r0, r4, r5
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl sub_08012FB8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0xf
	bls _0809478A
_080947A0:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080947A8: .4byte 0x00000574

	thumb_func_start nullsub_7
nullsub_7: @ 0x080947AC
	bx lr
	.align 2, 0

	thumb_func_start sub_080947B0
sub_080947B0: @ 0x080947B0
	push {lr}
	ldr r0, _080947DC @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r1, _080947E0 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #8]
	movs r0, #0xf8
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080947F8
	ldr r0, _080947E4 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080947E8
	ldrh r0, [r2, #4]
	movs r1, #1
	bl sub_080A4564
	b _080947F8
	.align 2, 0
_080947DC: .4byte gUnk_03006B54
_080947E0: .4byte 0x00001EB8
_080947E4: .4byte gKeyNewPress
_080947E8:
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080947F8
	ldrh r0, [r2, #6]
	movs r1, #1
	bl sub_080A4564
_080947F8:
	pop {r0}
	bx r0

	thumb_func_start sub_080947FC
sub_080947FC: @ 0x080947FC
	ldr r0, _08094808 @ =gUnk_02002C00
	movs r1, #2
	strh r1, [r0]
	ldrh r0, [r0, #2]
	bx lr
	.align 2, 0
_08094808: .4byte gUnk_02002C00

	thumb_func_start sub_0809480C
sub_0809480C: @ 0x0809480C
	ldr r0, _08094814 @ =gUnk_02002C00
	ldrh r0, [r0]
	bx lr
	.align 2, 0
_08094814: .4byte gUnk_02002C00

	thumb_func_start sub_08094818
sub_08094818: @ 0x08094818
	push {r4, r5, lr}
	sub sp, #4
	ldr r5, _0809483C @ =gUnk_02002C00
	ldrh r0, [r5]
	cmp r0, #3
	bne _08094834
	movs r4, #0
	str r4, [sp]
	ldr r2, _08094840 @ =0x05000091
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	strh r4, [r5]
_08094834:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809483C: .4byte gUnk_02002C00
_08094840: .4byte 0x05000091

	thumb_func_start sub_08094844
sub_08094844: @ 0x08094844
	push {r4, lr}
	ldr r4, _08094874 @ =gUnk_03006B54
	ldr r0, [r4]
	adds r0, #0x18
	bl sub_08060654
	ldr r0, [r4]
	adds r0, #0x80
	bl sub_08060654
	ldr r0, [r4]
	adds r0, #0xe8
	bl sub_080606EC
	ldr r0, [r4]
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r0, r1
	bl sub_080606EC
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08094874: .4byte gUnk_03006B54

	thumb_func_start sub_08094878
sub_08094878: @ 0x08094878
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080948BC @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080948C0 @ =0x00001FA8
	adds r0, r0, r1
	ldr r0, [r0, #8]
	asrs r0, r0, #4
	mov r1, sp
	movs r2, #4
	movs r3, #0
	bl sub_08001314
	ldr r5, _080948C4 @ =gUnk_02012800
	ldr r3, _080948C8 @ =gUnk_080C0144
	adds r0, r5, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #4
	adds r2, r4, #0
	mov r3, sp
	bl sub_08001284
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080948BC: .4byte gUnk_03006B54
_080948C0: .4byte 0x00001FA8
_080948C4: .4byte gUnk_02012800
_080948C8: .4byte gUnk_080C0144

	thumb_func_start sub_080948CC
sub_080948CC: @ 0x080948CC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r0, _0809494C @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r0, [r2, #8]
	movs r5, #0x40
	cmp r0, #0
	beq _080948E2
	movs r5, #0x18
_080948E2:
	movs r4, #0
	movs r1, #0
	add r7, sp, #4
	cmp r4, r5
	bhs _08094906
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r2, r2, r0
_080948F2:
	adds r0, r2, r1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080948FC
	adds r4, #1
_080948FC:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r5
	blo _080948F2
_08094906:
	adds r0, r5, #0
	mov r1, sp
	movs r2, #2
	movs r3, #0
	bl sub_08001314
	subs r0, r5, r4
	adds r1, r7, #0
	movs r2, #2
	movs r3, #0
	bl sub_08001314
	ldr r4, _08094950 @ =gUnk_02012800
	ldr r3, _08094954 @ =gUnk_080C014C
	adds r0, r4, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #5
	adds r2, r6, #0
	adds r3, r7, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #8
	adds r2, r6, #0
	mov r3, sp
	bl sub_08001284
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809494C: .4byte gUnk_03006B54
_08094950: .4byte gUnk_02012800
_08094954: .4byte gUnk_080C014C

	thumb_func_start sub_08094958
sub_08094958: @ 0x08094958
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _080949C8 @ =gUnk_03006B54
	ldr r4, [r0]
	ldr r1, _080949CC @ =0x00001EB8
	adds r0, r4, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080949D0 @ =0x00000AB8
	adds r0, r0, r1
	adds r4, r4, r0
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r1, sp
	movs r2, #4
	movs r3, #0
	bl sub_08001314
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	add r6, sp, #8
	adds r1, r6, #0
	movs r2, #4
	movs r3, #0
	bl sub_08001314
	ldr r4, _080949D4 @ =gUnk_02012800
	ldr r3, _080949D8 @ =gUnk_080C0158
	adds r0, r4, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #5
	adds r2, r5, #0
	mov r3, sp
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08001284
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080949C8: .4byte gUnk_03006B54
_080949CC: .4byte 0x00001EB8
_080949D0: .4byte 0x00000AB8
_080949D4: .4byte gUnk_02012800
_080949D8: .4byte gUnk_080C0158

	thumb_func_start sub_080949DC
sub_080949DC: @ 0x080949DC
	push {r4, r5, r6, lr}
	sub sp, #0x10
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _08094A40 @ =gUnk_03006B54
	ldr r4, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r4, r4, r0
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r1, sp
	movs r2, #4
	movs r3, #0
	bl sub_08001314
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	add r6, sp, #8
	adds r1, r6, #0
	movs r2, #4
	movs r3, #0
	bl sub_08001314
	ldr r4, _08094A44 @ =gUnk_02012800
	ldr r3, _08094A48 @ =gUnk_080C0168
	adds r0, r4, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #5
	adds r2, r5, #0
	mov r3, sp
	bl sub_08001284
	adds r0, r4, #0
	movs r1, #0xb
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08001284
	add sp, #0x10
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08094A40: .4byte gUnk_03006B54
_08094A44: .4byte gUnk_02012800
_08094A48: .4byte gUnk_080C0168

	thumb_func_start sub_08094A4C
sub_08094A4C: @ 0x08094A4C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	ldr r0, _08094ADC @ =0x06004800
	str r0, [sp, #0x38]
	movs r1, #0
	mov sb, r1
	ldr r2, _08094AE0 @ =gUnk_03006B54
	mov sl, r2
	movs r6, #0x2c
	ldr r5, _08094AE4 @ =0x0000FFFF
_08094A68:
	mov r0, sb
	muls r0, r6, r0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	mov r2, sl
	ldr r1, [r2]
	adds r7, r1, r0
	ldrh r0, [r7, #0x1a]
	cmp r0, r5
	beq _08094AFE
	mov r0, sb
	bl sub_0809B5E4
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r5
	bne _08094AEC
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	ldrh r1, [r7, #0x1a]
	bl sub_08001D78
	mov r8, r0
	ldr r4, _08094AE8 @ =gUnk_02017400
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #5
	bl sub_08010D40
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r2, r1
	ldr r1, [sp, #0x38]
	bl CpuSet
	ldr r0, [sp, #0x38]
	str r0, [r7, #0x20]
	ldr r0, [sp, #0x10]
	ldr r1, [sp, #0x38]
	adds r1, r1, r0
	str r1, [sp, #0x38]
	b _08094AFE
	.align 2, 0
_08094ADC: .4byte 0x06004800
_08094AE0: .4byte gUnk_03006B54
_08094AE4: .4byte 0x0000FFFF
_08094AE8: .4byte gUnk_02017400
_08094AEC:
	mov r2, sl
	ldr r0, [r2]
	muls r1, r6, r1
	movs r2, #0xa0
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r7, #0x20]
_08094AFE:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #2
	bls _08094A68
	ldr r0, _08094CB0 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, [sp, #0x38]
	str r1, [r0, #0xc]
	ldr r2, _08094CB4 @ =gUnk_02017400
	str r2, [sp, #0x3c]
	movs r0, #0
	mov sb, r0
	add r1, sp, #0x28
	mov sl, r1
_08094B20:
	movs r0, #0x2c
	mov r2, sb
	muls r2, r0, r2
	adds r0, r2, #0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r2, _08094CB0 @ =gUnk_03006B54
	ldr r1, [r2]
	adds r7, r1, r0
	ldrh r0, [r7, #0x1c]
	ldr r1, _08094CB8 @ =0x0000FFFF
	cmp r0, r1
	beq _08094BD0
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	ldrh r1, [r7, #0x1c]
	bl sub_08001D78
	mov r8, r0
	ldr r1, [sp, #0x3c]
	bl LZ77UnCompWram
	mov r2, sb
	lsls r5, r2, #0xb
	movs r0, #0xc0
	lsls r0, r0, #0x12
	adds r6, r5, r0
	ldr r1, _08094CBC @ =0x06003000
	adds r1, r5, r1
	str r1, [sp, #0x38]
	ldr r0, [sp, #0x3c]
	mov r1, sl
	bl sub_08001DC4
	mov r4, sb
	adds r4, #1
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	ldr r1, [sp, #0x3c]
	adds r2, r6, #0
	ldr r3, [sp, #0x38]
	bl sub_08005CF4
	ldr r0, [r7, #0x20]
	lsls r0, r0, #0x12
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsrs r0, r0, #0x17
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r4, #0
	ldr r1, [sp, #0x3c]
	adds r2, r6, #0
	movs r3, #5
	bl sub_08005F14
	ldr r2, _08094CC0 @ =gUnk_03000020
	adds r5, r5, r2
	adds r0, r5, #0
	ldr r1, [sp, #0x38]
	ldr r2, _08094CC4 @ =0x04000200
	bl CpuSet
	mov r1, sl
	ldr r0, [r1, #0xc]
	str r0, [r7, #0x28]
	ldr r2, [sp, #0x38]
	str r2, [r7, #0x24]
	mov r0, r8
	bl sub_080017B8
	adds r0, #4
	movs r1, #4
	rsbs r1, r1, #0
	ands r0, r1
	ldr r1, [sp, #0x3c]
	adds r1, r1, r0
	str r1, [sp, #0x3c]
	mov r2, sl
	ldrh r0, [r2, #4]
	strh r0, [r7, #0xc]
	ldrh r0, [r2, #6]
	strh r0, [r7, #0xe]
_08094BD0:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #2
	bls _08094B20
	ldr r1, _08094CB0 @ =gUnk_03006B54
	ldr r0, [r1]
	ldr r2, [sp, #0x3c]
	str r2, [r0, #0x14]
	movs r0, #0
	mov sb, r0
	adds r5, r1, #0
	ldr r4, _08094CB8 @ =0x0000FFFF
_08094BEE:
	movs r0, #0x2c
	mov r1, sb
	muls r1, r0, r1
	adds r0, r1, #0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r5]
	adds r7, r1, r0
	ldrh r0, [r7, #0x1e]
	cmp r0, r4
	beq _08094C24
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	ldrh r1, [r7, #0x1e]
	bl sub_08001D78
	mov r8, r0
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, r8
	bl sub_08005D6C
_08094C24:
	mov r0, sb
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #2
	bls _08094BEE
	movs r0, #0
	mov sb, r0
	movs r1, #0xfa
	lsls r1, r1, #0x18
	mov sl, r1
_08094C3C:
	movs r0, #0x2c
	mov r2, sb
	muls r2, r0, r2
	adds r0, r2, #0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r2, _08094CB0 @ =gUnk_03006B54
	ldr r1, [r2]
	adds r7, r1, r0
	ldrh r1, [r7, #0x18]
	movs r0, #1
	ands r0, r1
	movs r1, #1
	add r1, sb
	mov r8, r1
	cmp r0, #0
	beq _08094C92
	ldr r6, [r7, #0x24]
	add r6, sl
	movs r0, #0xf8
	lsls r0, r0, #8
	ands r6, r0
	lsrs r6, r6, #0xb
	ldr r5, [r7, #0x20]
	add r5, sl
	movs r0, #0xc0
	lsls r0, r0, #8
	ands r5, r0
	lsrs r5, r5, #0xe
	lsls r4, r1, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	movs r1, #0
	adds r2, r4, #0
	movs r3, #0
	bl sub_08004744
	adds r0, r4, #0
	adds r1, r6, #0
	adds r2, r5, #0
	bl sub_0800476C
_08094C92:
	mov r2, r8
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #2
	bls _08094C3C
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08094CB0: .4byte gUnk_03006B54
_08094CB4: .4byte gUnk_02017400
_08094CB8: .4byte 0x0000FFFF
_08094CBC: .4byte 0x06003000
_08094CC0: .4byte gUnk_03000020
_08094CC4: .4byte 0x04000200

	thumb_func_start sub_08094CC8
sub_08094CC8: @ 0x08094CC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	ldr r0, _08094D68 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r0, r1
	str r1, [sp, #4]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r2, r0, r2
	str r2, [sp, #8]
	movs r3, #0
	mov sl, r3
	mov sb, sp
_08094CEE:
	ldr r1, _08094D68 @ =gUnk_03006B54
	movs r0, #0x2c
	mov r4, sl
	muls r4, r0, r4
	adds r0, r4, #0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r1]
	adds r6, r1, r0
	ldrh r1, [r6, #0x18]
	movs r0, #1
	ands r0, r1
	mov r3, sl
	adds r3, #1
	str r3, [sp, #0xc]
	cmp r0, #0
	bne _08094D14
	b _08094ED4
_08094D14:
	ldrh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r4, sb
	strh r0, [r4]
	ldrb r1, [r6, #0x14]
	movs r0, #1
	ands r0, r1
	movs r2, #2
	add r2, sp
	mov r8, r2
	cmp r0, #0
	beq _08094DC2
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08094D72
	ldrh r0, [r6, #4]
	ldrh r3, [r6]
	adds r0, r0, r3
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	movs r4, #2
	ldrsh r2, [r6, r4]
	mov r0, sl
	cmp r0, #4
	bne _08094D6C
	movs r4, #0
	lsls r7, r1, #0x10
	lsls r5, r2, #0x10
_08094D50:
	adds r0, r4, #0
	asrs r1, r7, #0x10
	asrs r2, r5, #0x10
	bl sub_0809B688
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #2
	bls _08094D50
	b _08094D72
	.align 2, 0
_08094D68: .4byte gUnk_03006B54
_08094D6C:
	mov r0, sl
	bl sub_0809B688
_08094D72:
	movs r7, #0x10
	movs r1, #0x10
	ldrsh r0, [r6, r1]
	cmp r0, #0
	ble _08094DA8
	ldr r2, [sp, #4]
	movs r3, #4
	ldrsh r4, [r2, r3]
	lsls r4, r4, #4
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl __modsi3
	cmp r0, #0
	beq _08094DA8
	lsls r0, r7, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r7, r0, #0x10
_08094DA8:
	ldr r2, [sp, #8]
	movs r3, #0
	ldrsh r0, [r2, r3]
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl __divsi3
	ldrh r1, [r6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r0, r1
	mov r4, sb
	strh r0, [r4]
_08094DC2:
	ldrh r2, [r6, #2]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x14
	mov r1, r8
	strh r0, [r1]
	ldrb r1, [r6, #0x15]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08094E62
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _08094E12
	movs r3, #0
	ldrsh r1, [r6, r3]
	ldrh r0, [r6, #6]
	adds r0, r2, r0
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	mov r4, sl
	cmp r4, #4
	bne _08094E0C
	movs r4, #0
	lsls r7, r1, #0x10
	lsls r5, r2, #0x10
_08094DF6:
	adds r0, r4, #0
	asrs r1, r7, #0x10
	asrs r2, r5, #0x10
	bl sub_0809B688
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #2
	bls _08094DF6
	b _08094E12
_08094E0C:
	mov r0, sl
	bl sub_0809B688
_08094E12:
	movs r7, #0x10
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	cmp r0, #0
	ble _08094E48
	ldr r2, [sp, #4]
	movs r3, #6
	ldrsh r4, [r2, r3]
	lsls r4, r4, #4
	adds r5, r0, #0
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl __modsi3
	cmp r0, #0
	beq _08094E48
	lsls r0, r7, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r7, r0, #0x10
_08094E48:
	ldr r2, [sp, #8]
	movs r3, #2
	ldrsh r0, [r2, r3]
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl __divsi3
	ldrh r1, [r6, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r0, r1
	mov r4, r8
	strh r0, [r4]
_08094E62:
	ldrh r1, [r6, #0x18]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08094EBE
	ldrh r0, [r6, #8]
	bl sub_08001850
	mov r2, sb
	movs r3, #0
	ldrsh r1, [r2, r3]
	adds r1, r1, r0
	strh r1, [r2]
	ldrh r0, [r6, #0xa]
	bl sub_08001850
	mov r4, r8
	movs r2, #0
	ldrsh r1, [r4, r2]
	adds r1, r1, r0
	strh r1, [r4]
	mov r3, sb
	movs r4, #0
	ldrsh r0, [r3, r4]
	lsls r0, r0, #4
	strh r0, [r3]
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r0, r0, #4
	strh r0, [r1]
	mov r0, sl
	mov r1, sp
	mov r2, r8
	bl sub_08094EF4
	mov r3, sb
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r3]
	mov r4, r8
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r4]
_08094EBE:
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	mov r2, sb
	movs r3, #0
	ldrsh r1, [r2, r3]
	mov r4, r8
	movs r3, #0
	ldrsh r2, [r4, r3]
	bl sub_08005E18
_08094ED4:
	ldr r4, [sp, #0xc]
	lsls r0, r4, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	cmp r0, #2
	bhi _08094EE2
	b _08094CEE
_08094EE2:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_08094EF4
sub_08094EF4: @ 0x08094EF4
	push {r4, r5, r6, lr}
	adds r3, r1, #0
	adds r4, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _08094F54 @ =gUnk_03006B54
	movs r1, #0x2c
	muls r0, r1, r0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r2]
	adds r6, r1, r0
	ldrh r1, [r6, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08094FC2
	ldrh r0, [r6, #0xc]
	lsls r0, r0, #0x14
	lsrs r5, r0, #0x10
	adds r2, r5, #0
	ldrb r1, [r6, #0x14]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _08094F58
	ldrh r2, [r3]
	movs r1, #0
	ldrsh r0, [r3, r1]
	lsls r1, r5, #0x10
	cmp r0, #0
	bge _08094F40
	asrs r0, r1, #0x10
	adds r0, r0, r2
	strh r0, [r3]
_08094F40:
	ldrh r2, [r3]
	movs r5, #0
	ldrsh r0, [r3, r5]
	asrs r1, r1, #0x10
	cmp r0, r1
	ble _08094F70
	subs r0, r2, r1
	strh r0, [r3]
	b _08094F70
	.align 2, 0
_08094F54: .4byte gUnk_03006B54
_08094F58:
	movs r5, #0
	ldrsh r0, [r3, r5]
	cmp r0, #0
	bge _08094F62
	strh r1, [r3]
_08094F62:
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08094F70
	strh r2, [r3]
_08094F70:
	ldrh r0, [r6, #0xe]
	lsls r0, r0, #0x14
	lsrs r3, r0, #0x10
	adds r2, r3, #0
	ldrb r1, [r6, #0x15]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _08094FAA
	ldrh r2, [r4]
	movs r1, #0
	ldrsh r0, [r4, r1]
	lsls r1, r3, #0x10
	cmp r0, #0
	bge _08094F98
	asrs r0, r1, #0x10
	adds r0, r0, r2
	strh r0, [r4]
_08094F98:
	ldrh r2, [r4]
	movs r3, #0
	ldrsh r0, [r4, r3]
	asrs r1, r1, #0x10
	cmp r0, r1
	ble _08094FC2
	subs r0, r2, r1
	strh r0, [r4]
	b _08094FC2
_08094FAA:
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r0, #0
	bge _08094FB4
	strh r1, [r4]
_08094FB4:
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08094FC2
	strh r2, [r4]
_08094FC2:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_08094FC8
sub_08094FC8: @ 0x08094FC8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	mov r8, r1
	str r2, [sp]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080950D8 @ =gUnk_03006B54
	ldr r2, [r1]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r1, r2
	mov sb, r1
	movs r1, #0x98
	lsls r1, r1, #3
	adds r1, r1, r2
	mov sl, r1
	movs r1, #0x2c
	muls r0, r1, r0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r6, r2, r0
	ldrh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r2, r8
	strh r0, [r2]
	ldrb r1, [r6, #0x14]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095062
	movs r7, #0x10
	movs r1, #0x10
	ldrsh r0, [r6, r1]
	cmp r0, #0
	ble _08095048
	mov r2, sb
	movs r0, #4
	ldrsh r4, [r2, r0]
	lsls r4, r4, #4
	movs r1, #0x10
	ldrsh r5, [r6, r1]
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl __modsi3
	cmp r0, #0
	beq _08095048
	lsls r0, r7, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r7, r0, #0x10
_08095048:
	mov r1, sl
	movs r2, #0
	ldrsh r0, [r1, r2]
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl __divsi3
	ldrh r1, [r6]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r0, r1
	mov r1, r8
	strh r0, [r1]
_08095062:
	ldrh r0, [r6, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldr r2, [sp]
	strh r0, [r2]
	ldrb r1, [r6, #0x15]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080950C8
	movs r7, #0x10
	movs r1, #0x12
	ldrsh r0, [r6, r1]
	cmp r0, #0
	ble _080950AE
	mov r2, sb
	movs r0, #6
	ldrsh r4, [r2, r0]
	lsls r4, r4, #4
	movs r1, #0x12
	ldrsh r5, [r6, r1]
	adds r0, r4, #0
	adds r1, r5, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl __modsi3
	cmp r0, #0
	beq _080950AE
	lsls r0, r7, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r7, r0, #0x10
_080950AE:
	mov r1, sl
	movs r2, #2
	ldrsh r0, [r1, r2]
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	bl __divsi3
	ldrh r1, [r6, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r0, r1
	ldr r1, [sp]
	strh r0, [r1]
_080950C8:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080950D8: .4byte gUnk_03006B54

	thumb_func_start sub_080950DC
sub_080950DC: @ 0x080950DC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x88
	movs r4, #0
	str r4, [sp, #0x54]
	add r0, sp, #0x54
	ldr r2, _080951B4 @ =0x01000005
	mov r1, sp
	bl CpuFastSet
	ldr r0, _080951B8 @ =gUnk_02017400
	str r0, [sp, #0x64]
	str r4, [sp, #0x58]
	add r0, sp, #0x58
	ldr r2, _080951BC @ =0x01002580
	ldr r1, [sp, #0x64]
	bl CpuFastSet
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	mov r1, sp
	adds r1, #0x10
	str r1, [sp, #0x74]
	mov r2, sp
	adds r2, #0x3c
	str r2, [sp, #0x84]
	movs r0, #0
	bl sub_0809B2F8
	movs r0, #1
	bl sub_0809B2F8
	movs r0, #2
	bl sub_0809B2F8
	movs r0, #3
	bl sub_0809B2F8
	movs r0, #0
	bl sub_0809B434
	movs r0, #1
	bl sub_0809B434
	movs r0, #2
	bl sub_0809B434
	movs r0, #3
	bl sub_0809B434
	movs r3, #0
	mov sl, r3
	movs r0, #0xff
	mov r8, r0
	ldr r6, _080951C0 @ =0x000001FF
	ldr r7, [sp, #0x74]
	mov r5, sp
	adds r5, #2
	mov r4, sp
	add r1, sp, #0x60
	mov sb, r1
_08095170:
	ldr r2, _080951C4 @ =gUnk_03006B54
	movs r0, #0x2c
	mov r1, sl
	muls r1, r0, r1
	movs r3, #0x9c
	lsls r3, r3, #3
	adds r1, r1, r3
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r7]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809520A
	mov r0, sl
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add r1, sp, #0x5c
	mov r2, sp
	adds r2, #0x5e
	mov r3, sb
	bl sub_08004658
	mov r0, sb
	ldrh r1, [r0]
	cmp r1, #0
	bne _080951C8
	mov r1, r8
	strh r1, [r4, #4]
	strh r1, [r4, #6]
	b _080951F2
	.align 2, 0
_080951B4: .4byte 0x01000005
_080951B8: .4byte gUnk_02017400
_080951BC: .4byte 0x01002580
_080951C0: .4byte 0x000001FF
_080951C4: .4byte gUnk_03006B54
_080951C8:
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r1, r0
	bne _080951D8
	strh r6, [r4, #4]
	mov r2, r8
	strh r2, [r4, #6]
	b _080951F2
_080951D8:
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	bne _080951E6
	mov r3, r8
	strh r3, [r4, #4]
	b _080951F0
_080951E6:
	movs r0, #0xc0
	lsls r0, r0, #8
	cmp r1, r0
	bne _080951F2
	strh r6, [r4, #4]
_080951F0:
	strh r6, [r4, #6]
_080951F2:
	mov r1, sl
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_08094FC8
	ldr r0, [r7]
	ldr r0, [r0, #0x20]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x17
	strh r0, [r4, #0xc]
_0809520A:
	adds r7, #0x14
	adds r5, #0x14
	adds r4, #0x14
	movs r2, #1
	add sl, r2
	mov r3, sl
	cmp r3, #2
	bls _08095170
	movs r2, #0
	mov r0, sp
	str r0, [sp, #0x68]
_08095220:
	ldr r0, [sp, #0x10]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095242
	ldr r3, [sp, #0x68]
	ldrh r1, [r3, #2]
	adds r1, r1, r2
	ldrh r0, [r3, #6]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	strh r0, [r3, #8]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0xa]
_08095242:
	ldr r0, [sp, #0x24]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095266
	ldr r0, [sp, #0x68]
	ldrh r1, [r0, #0x16]
	adds r1, r1, r2
	ldrh r0, [r0, #0x1a]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	ldr r3, [sp, #0x68]
	strh r0, [r3, #0x1c]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0x1e]
_08095266:
	ldr r0, [sp, #0x38]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809528A
	ldr r0, [sp, #0x68]
	ldrh r1, [r0, #0x2a]
	adds r1, r1, r2
	ldrh r0, [r0, #0x2e]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	ldr r3, [sp, #0x68]
	strh r0, [r3, #0x30]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0x32]
_0809528A:
	movs r0, #0
	mov sb, r0
	adds r2, #1
	str r2, [sp, #0x78]
	ldr r1, [sp, #0x74]
	str r1, [sp, #0x6c]
	ldr r2, [sp, #0x84]
	str r2, [sp, #0x70]
_0809529A:
	movs r3, #0
	mov sl, r3
	ldr r0, [sp, #0x64]
	adds r0, #8
	str r0, [sp, #0x80]
	mov r1, sb
	adds r1, #8
	str r1, [sp, #0x7c]
	ldr r2, [sp, #0x6c]
	mov r8, r2
	mov r7, sp
_080952B0:
	mov r3, r8
	ldr r6, [r3]
	ldrh r1, [r6, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080952C0
	b _0809594C
_080952C0:
	ldrh r0, [r7]
	mov r1, sb
	adds r5, r0, r1
	ldrh r0, [r7, #4]
	ands r5, r0
	ldrh r3, [r7, #0xa]
	ldrh r0, [r7, #8]
	lsrs r1, r5, #3
	ldr r2, [r6, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	movs r1, #7
	ands r5, r1
	lsls r0, r4, #0x14
	cmp r0, #0
	bge _080952EC
	eors r3, r1
_080952EC:
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r6, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r1, r0, #0x10
	adds r0, r0, r1
	lsls r6, r0, #4
	cmp r5, #0
	bne _08095380
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095348
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #0xc
	lsrs r1, r1, #0x1c
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsrs r0, r2, #0x1c
	b _0809592C
_08095348:
	lsrs r1, r2, #0x1c
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1c
	movs r0, #0xf0
	lsls r0, r0, #4
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x1c
	lsrs r0, r0, #4
	b _0809592E
_08095380:
	cmp r5, #1
	bne _0809544C
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _080953BC
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x1c
	movs r0, #0xf0
	lsls r0, r0, #4
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #8
	lsrs r1, r1, #0x1c
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x10
	b _080953EC
_080953BC:
	lsls r1, r2, #4
	lsrs r1, r1, #0x1c
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0xc
_080953EC:
	adds r1, r1, r0
	lsrs r0, r6, #8
	adds r5, r1, r0
	ldrh r1, [r7]
	add r1, sb
	adds r1, #7
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _0809541E
	ldrh r3, [r7, #0xa]
	b _08095424
_0809541E:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_08095424:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r0, r4, #0xc
	lsls r6, r0, #0x1c
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095446
	lsls r0, r2, #0x1c
	lsrs r0, r0, #4
	b _080955F0
_08095446:
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x18
	b _080955F0
_0809544C:
	cmp r5, #2
	bne _08095520
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095480
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #4
	lsrs r1, r1, #0x1c
	lsrs r0, r2, #0x1c
	lsls r0, r0, #8
	b _080954A8
_08095480:
	lsls r1, r2, #8
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x14
_080954A8:
	adds r1, r1, r0
	lsrs r0, r6, #0x10
	adds r5, r1, r0
	ldrh r1, [r7]
	add r1, sb
	adds r1, #6
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _080954DA
	ldrh r3, [r7, #0xa]
	b _080954E0
_080954DA:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_080954E0:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r6, r0, #0x14
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095512
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0xc
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	adds r5, r5, r1
	b _08095932
_08095512:
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x10
	movs r1, #0xf0
	lsls r1, r1, #0x14
	ands r2, r1
	adds r0, r0, r2
	b _080955F0
_08095520:
	cmp r5, #3
	bne _080955F6
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _0809554E
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0x14
	ands r0, r2
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsrs r1, r2, #0x1c
	b _08095572
_0809554E:
	lsls r1, r2, #0xc
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
_08095572:
	lsrs r0, r6, #0x18
	adds r5, r1, r0
	ldrh r1, [r7]
	add r1, sb
	adds r1, #5
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _080955A2
	ldrh r3, [r7, #0xa]
	b _080955A8
_080955A2:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_080955A8:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r0, r0, #8
	adds r0, r0, r1
	lsls r6, r0, #0xc
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _080955DC
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0x14
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x10
	adds r0, r0, r1
	lsls r1, r2, #0x14
	b _080955EA
_080955DC:
	lsrs r0, r2, #0x1c
	lsls r0, r0, #8
	lsls r1, r2, #4
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x10
	adds r0, r0, r1
	lsls r1, r2, #8
_080955EA:
	lsrs r1, r1, #0x1c
	lsls r1, r1, #0x18
	adds r0, r0, r1
_080955F0:
	adds r0, r0, r6
	adds r5, r5, r0
	b _08095932
_080955F6:
	cmp r5, #4
	bne _080956BC
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _0809561A
	lsls r1, r2, #0xc
	lsrs r1, r1, #0x1c
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x18
	b _08095632
_0809561A:
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1c
	movs r0, #0xf0
	lsls r0, r0, #4
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x1c
	lsrs r0, r0, #4
_08095632:
	adds r1, r1, r0
	adds r1, r1, r6
	mov ip, r1
	ldrh r1, [r7]
	add r1, sb
	adds r1, #4
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _08095664
	ldrh r3, [r7, #0xa]
	b _0809566A
_08095664:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_0809566A:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r1, r0, #0x10
	adds r0, r0, r1
	lsls r6, r0, #4
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _080956A6
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x10
	b _0809592A
_080956A6:
	lsrs r1, r2, #0x1c
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0xc
	b _0809592A
_080956BC:
	cmp r5, #5
	bne _0809578A
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _080956D8
	lsls r1, r2, #8
	lsrs r1, r1, #0x1c
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x10
	b _080956E8
_080956D8:
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x1c
	lsrs r0, r0, #0xc
_080956E8:
	adds r1, r1, r0
	lsrs r0, r6, #8
	adds r1, r1, r0
	mov ip, r1
	ldrh r1, [r7]
	add r1, sb
	adds r1, #3
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _0809571C
	ldrh r3, [r7, #0xa]
	b _08095722
_0809571C:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_08095722:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r1, r0, #0x10
	adds r1, r0, r1
	lsls r6, r1, #4
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095768
	lsls r0, r2, #0x1c
	lsrs r0, r0, #4
	lsls r1, r1, #0x1c
	adds r0, r0, r1
	add ip, r0
	lsls r1, r2, #0x18
	lsrs r1, r1, #0x1c
	movs r0, #0xf0
	lsls r0, r0, #4
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0xc
	b _0809592A
_08095768:
	lsrs r0, r2, #0x1c
	lsls r0, r0, #0x18
	lsls r1, r1, #0x1c
	adds r0, r0, r1
	add ip, r0
	lsls r1, r2, #4
	lsrs r1, r1, #0x1c
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #0x10
	b _0809592A
_0809578A:
	cmp r5, #6
	bne _08095858
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _0809579E
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsrs r1, r2, #0x1c
	lsls r1, r1, #8
	b _080957A6
_0809579E:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x14
_080957A6:
	adds r0, r0, r1
	lsrs r1, r6, #0x10
	adds r0, r0, r1
	mov ip, r0
	ldrh r1, [r7]
	add r1, sb
	adds r1, #2
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _080957DA
	ldrh r3, [r7, #0xa]
	b _080957E0
_080957DA:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_080957E0:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r1, r0, #0x10
	adds r3, r0, r1
	lsls r6, r3, #4
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _0809582E
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0xc
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r3, #0x14
	adds r1, r1, r0
	add ip, r1
	lsls r1, r2, #0x14
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0xc
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r2, #8
	b _0809592A
_0809582E:
	lsrs r1, r2, #0x1c
	lsls r1, r1, #0x10
	movs r0, #0xf0
	lsls r0, r0, #0x14
	ands r0, r2
	adds r1, r1, r0
	lsls r0, r3, #0x14
	adds r1, r1, r0
	add ip, r1
	lsls r1, r2, #8
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x14
	b _0809592A
_08095858:
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _08095862
	lsrs r1, r2, #0x1c
	b _08095866
_08095862:
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x1c
_08095866:
	lsrs r0, r6, #0x18
	adds r1, r1, r0
	mov ip, r1
	ldrh r1, [r7]
	add r1, sb
	adds r1, #1
	ldrh r0, [r7, #4]
	ands r1, r0
	mov r3, r8
	ldr r2, [r3]
	ldrh r0, [r7, #8]
	lsrs r1, r1, #3
	ldr r2, [r2, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	ldrh r0, [r7, #0xc]
	subs r4, r1, r0
	lsls r0, r4, #0x14
	cmp r0, #0
	blt _08095898
	ldrh r3, [r7, #0xa]
	b _0809589E
_08095898:
	ldrh r0, [r7, #0xa]
	movs r3, #7
	eors r3, r0
_0809589E:
	mov r1, r8
	ldr r0, [r1]
	lsls r1, r4, #0x16
	lsrs r1, r1, #0x11
	lsls r2, r3, #2
	ldr r0, [r0, #0x20]
	adds r0, r0, r1
	adds r0, r0, r2
	ldr r2, [r0]
	lsrs r1, r4, #0xc
	lsls r0, r1, #8
	adds r0, r0, r1
	lsls r1, r0, #0x10
	adds r3, r0, r1
	lsls r6, r3, #4
	lsls r0, r4, #0x15
	cmp r0, #0
	blt _080958FA
	lsls r1, r2, #0x1c
	lsrs r1, r1, #0x14
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r3, #0xc
	adds r1, r1, r0
	add ip, r1
	lsls r1, r2, #0x10
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0xc
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	movs r0, #0xf0
	lsls r0, r0, #0x14
	ands r2, r0
	adds r1, r1, r2
	b _08095930
_080958FA:
	lsrs r1, r2, #0x1c
	lsls r1, r1, #8
	lsls r0, r2, #4
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #8
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x18
	adds r1, r1, r0
	lsls r0, r3, #0xc
	adds r1, r1, r0
	add ip, r1
	lsls r1, r2, #0xc
	lsrs r1, r1, #0x1c
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x1c
	lsls r0, r0, #8
	adds r1, r1, r0
	lsls r0, r2, #0x14
	lsrs r0, r0, #0x1c
	lsls r0, r0, #0x10
	adds r1, r1, r0
	lsls r0, r2, #0x18
_0809592A:
	lsrs r0, r0, #0x1c
_0809592C:
	lsls r0, r0, #0x18
_0809592E:
	adds r1, r1, r0
_08095930:
	adds r5, r1, r6
_08095932:
	mov r2, sl
	lsls r4, r2, #3
	ldr r3, [sp, #0x70]
	adds r4, r3, r4
	adds r2, r5, #0
	adds r3, r2, #0
	movs r2, #0
	mov r0, ip
	movs r1, #0
	adds r2, r2, r0
	adcs r3, r1
	str r2, [r4]
	str r3, [r4, #4]
_0809594C:
	movs r0, #0x14
	add r8, r0
	adds r7, #0x14
	movs r1, #1
	add sl, r1
	mov r2, sl
	cmp r2, #2
	bhi _0809595E
	b _080952B0
_0809595E:
	ldr r7, [sp, #0x3c]
	ldr r0, [sp, #0x70]
	ldr r3, [r0, #8]
	ldr r1, [r0, #0x10]
	mov ip, r1
	ldr r0, _0809597C @ =0x0F0F0F0F
	ands r0, r7
	cmp r0, #0
	bne _080959C4
	lsls r0, r3, #0x1c
	cmp r0, #0
	bne _08095980
	lsls r0, r1, #0x18
	b _08095982
	.align 2, 0
_0809597C: .4byte 0x0F0F0F0F
_08095980:
	lsls r0, r3, #0x18
_08095982:
	lsrs r4, r0, #0x18
	lsrs r2, r3, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095996
	movs r0, #0xff
	lsls r0, r0, #8
	mov r2, ip
	ands r0, r2
	b _0809599A
_08095996:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x10
_0809599A:
	adds r4, r4, r0
	lsrs r2, r3, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _080959AE
	movs r0, #0xff
	lsls r0, r0, #0x10
	mov r1, ip
	ands r0, r1
	b _080959B2
_080959AE:
	lsls r0, r2, #0x18
	lsrs r0, r0, #8
_080959B2:
	adds r4, r4, r0
	lsrs r1, r3, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095A36
	mov r2, ip
	lsrs r0, r2, #0x18
	lsls r0, r0, #0x18
	b _08095A38
_080959C4:
	lsls r0, r7, #0x1c
	cmp r0, #0
	bne _080959D6
	lsls r0, r3, #0x1c
	cmp r0, #0
	bne _080959DA
	mov r1, ip
	lsls r0, r1, #0x18
	b _080959DC
_080959D6:
	lsls r0, r7, #0x18
	b _080959DC
_080959DA:
	lsls r0, r3, #0x18
_080959DC:
	lsrs r4, r0, #0x18
	lsrs r2, r7, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _080959F8
	lsrs r2, r3, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _080959F8
	movs r0, #0xff
	lsls r0, r0, #8
	mov r2, ip
	ands r0, r2
	b _080959FC
_080959F8:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x10
_080959FC:
	adds r4, r4, r0
	lsrs r2, r7, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095A18
	lsrs r2, r3, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095A18
	movs r0, #0xff
	lsls r0, r0, #0x10
	mov r1, ip
	ands r0, r1
	b _08095A1C
_08095A18:
	lsls r0, r2, #0x18
	lsrs r0, r0, #8
_08095A1C:
	adds r4, r4, r0
	lsrs r1, r7, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095A36
	lsrs r1, r3, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095A36
	mov r2, ip
	lsrs r0, r2, #0x18
	lsls r0, r0, #0x18
	b _08095A38
_08095A36:
	lsls r0, r1, #0x18
_08095A38:
	adds r4, r4, r0
	adds r5, r4, #0
	movs r6, #0
	ldr r0, [sp, #0x3c]
	ldr r1, [sp, #0x40]
	adds r0, r1, #0
	adds r7, r0, #0
	ldr r3, [sp, #0x70]
	ldr r0, [r3, #8]
	ldr r1, [r3, #0xc]
	adds r0, r1, #0
	adds r3, r0, #0
	ldr r2, [sp, #0x70]
	ldr r0, [r2, #0x10]
	ldr r1, [r2, #0x14]
	adds r0, r1, #0
	mov ip, r0
	ldr r0, _08095A70 @ =0x0F0F0F0F
	ands r0, r7
	cmp r0, #0
	bne _08095AB8
	lsls r0, r3, #0x1c
	cmp r0, #0
	bne _08095A74
	mov r1, ip
	lsls r0, r1, #0x18
	b _08095A76
	.align 2, 0
_08095A70: .4byte 0x0F0F0F0F
_08095A74:
	lsls r0, r3, #0x18
_08095A76:
	lsrs r4, r0, #0x18
	lsrs r2, r3, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095A8A
	movs r0, #0xff
	lsls r0, r0, #8
	mov r2, ip
	ands r0, r2
	b _08095A8E
_08095A8A:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x10
_08095A8E:
	adds r4, r4, r0
	lsrs r2, r3, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095AA2
	movs r0, #0xff
	lsls r0, r0, #0x10
	mov r1, ip
	ands r0, r1
	b _08095AA6
_08095AA2:
	lsls r0, r2, #0x18
	lsrs r0, r0, #8
_08095AA6:
	adds r4, r4, r0
	lsrs r1, r3, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095B2A
	mov r2, ip
	lsrs r0, r2, #0x18
	lsls r0, r0, #0x18
	b _08095B2C
_08095AB8:
	lsls r0, r7, #0x1c
	cmp r0, #0
	bne _08095ACA
	lsls r0, r3, #0x1c
	cmp r0, #0
	bne _08095ACE
	mov r1, ip
	lsls r0, r1, #0x18
	b _08095AD0
_08095ACA:
	lsls r0, r7, #0x18
	b _08095AD0
_08095ACE:
	lsls r0, r3, #0x18
_08095AD0:
	lsrs r4, r0, #0x18
	lsrs r2, r7, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095AEC
	lsrs r2, r3, #8
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095AEC
	movs r0, #0xff
	lsls r0, r0, #8
	mov r2, ip
	ands r0, r2
	b _08095AF0
_08095AEC:
	lsls r0, r2, #0x18
	lsrs r0, r0, #0x10
_08095AF0:
	adds r4, r4, r0
	lsrs r2, r7, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095B0C
	lsrs r2, r3, #0x10
	lsls r0, r2, #0x1c
	cmp r0, #0
	bne _08095B0C
	movs r0, #0xff
	lsls r0, r0, #0x10
	mov r1, ip
	ands r0, r1
	b _08095B10
_08095B0C:
	lsls r0, r2, #0x18
	lsrs r0, r0, #8
_08095B10:
	adds r4, r4, r0
	lsrs r1, r7, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095B2A
	lsrs r1, r3, #0x18
	lsls r0, r1, #0x1c
	cmp r0, #0
	bne _08095B2A
	mov r2, ip
	lsrs r0, r2, #0x18
	lsls r0, r0, #0x18
	b _08095B2C
_08095B2A:
	lsls r0, r1, #0x18
_08095B2C:
	adds r4, r4, r0
	adds r0, r4, #0
	adds r1, r0, #0
	movs r0, #0
	adds r5, r5, r0
	adcs r6, r1
	ldr r3, [sp, #0x64]
	str r5, [r3]
	str r6, [r3, #4]
	ldr r0, [sp, #0x80]
	str r0, [sp, #0x64]
	ldr r1, [sp, #0x7c]
	mov sb, r1
	cmp r1, #0xef
	bhi _08095B4E
	bl _0809529A
_08095B4E:
	ldr r2, [sp, #0x78]
	cmp r2, #0x9f
	bhi _08095B58
	bl _08095220
_08095B58:
	movs r0, #0
	bl sub_08006C10
	ldr r0, _08095BCC @ =gUnk_02017400
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x96
	lsls r2, r2, #8
	bl sub_08006BA4
	movs r0, #1
	bl sub_08006C10
	movs r0, #4
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #2
	adds r1, r2, #0
	bl sub_080062E0
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x50
	bl sub_08005E18
	movs r1, #0xf0
	lsls r1, r1, #7
	movs r2, #0xa0
	lsls r2, r2, #7
	movs r0, #2
	bl sub_08006340
	add sp, #0x88
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08095BCC: .4byte gUnk_02017400

	thumb_func_start sub_08095BD0
sub_08095BD0: @ 0x08095BD0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x7c
	movs r0, #0xa0
	lsls r0, r0, #0x13
	mov sb, r0
	movs r4, #0
	str r4, [sp, #0x44]
	add r0, sp, #0x44
	ldr r2, _08095CAC @ =0x01000005
	mov r1, sp
	bl CpuFastSet
	ldr r1, _08095CB0 @ =gUnk_02017400
	str r1, [sp, #0x5c]
	str r4, [sp, #0x48]
	add r0, sp, #0x48
	ldr r2, _08095CB4 @ =0x01002000
	bl CpuFastSet
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	mov r2, sp
	adds r2, #0x10
	str r2, [sp, #0x64]
	mov r3, sp
	adds r3, #0x3c
	str r3, [sp, #0x74]
	movs r0, #0
	bl sub_0809B2F8
	movs r0, #1
	bl sub_0809B2F8
	movs r0, #2
	bl sub_0809B2F8
	movs r0, #3
	bl sub_0809B2F8
	movs r0, #0
	bl sub_0809B434
	movs r0, #1
	bl sub_0809B434
	movs r0, #2
	bl sub_0809B434
	movs r0, #3
	bl sub_0809B434
	movs r0, #0
	str r0, [sp, #0x54]
	movs r1, #0xff
	mov r8, r1
	ldr r6, _08095CB8 @ =0x000001FF
	ldr r7, [sp, #0x64]
	mov r5, sp
	adds r5, #2
	mov r4, sp
	add r2, sp, #0x50
	mov sl, r2
_08095C68:
	ldr r2, _08095CBC @ =gUnk_03006B54
	movs r0, #0x2c
	ldr r3, [sp, #0x54]
	adds r1, r3, #0
	muls r1, r0, r1
	movs r0, #0x9c
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	str r0, [r7]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095D02
	adds r0, r3, #0
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	add r1, sp, #0x4c
	mov r2, sp
	adds r2, #0x4e
	mov r3, sl
	bl sub_08004658
	mov r2, sl
	ldrh r1, [r2]
	cmp r1, #0
	bne _08095CC0
	mov r3, r8
	strh r3, [r4, #4]
	strh r3, [r4, #6]
	b _08095CEA
	.align 2, 0
_08095CAC: .4byte 0x01000005
_08095CB0: .4byte gUnk_02017400
_08095CB4: .4byte 0x01002000
_08095CB8: .4byte 0x000001FF
_08095CBC: .4byte gUnk_03006B54
_08095CC0:
	movs r0, #0x80
	lsls r0, r0, #7
	cmp r1, r0
	bne _08095CD0
	strh r6, [r4, #4]
	mov r0, r8
	strh r0, [r4, #6]
	b _08095CEA
_08095CD0:
	movs r0, #0x80
	lsls r0, r0, #8
	cmp r1, r0
	bne _08095CDE
	mov r1, r8
	strh r1, [r4, #4]
	b _08095CE8
_08095CDE:
	movs r0, #0xc0
	lsls r0, r0, #8
	cmp r1, r0
	bne _08095CEA
	strh r6, [r4, #4]
_08095CE8:
	strh r6, [r4, #6]
_08095CEA:
	ldr r2, [sp, #0x54]
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_08094FC8
	ldr r0, [r7]
	ldr r0, [r0, #0x20]
	lsls r0, r0, #0x12
	lsrs r0, r0, #0x17
	strh r0, [r4, #0xc]
_08095D02:
	adds r7, #0x14
	adds r5, #0x14
	adds r4, #0x14
	ldr r3, [sp, #0x54]
	adds r3, #1
	str r3, [sp, #0x54]
	cmp r3, #2
	bls _08095C68
	movs r2, #0
	mov sl, sp
_08095D16:
	ldr r0, [sp, #0x10]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095D3A
	mov r0, sl
	ldrh r1, [r0, #2]
	adds r1, r1, r2
	ldrh r0, [r0, #6]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	mov r3, sl
	strh r0, [r3, #8]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0xa]
_08095D3A:
	ldr r0, [sp, #0x24]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095D5E
	mov r0, sl
	ldrh r1, [r0, #0x16]
	adds r1, r1, r2
	ldrh r0, [r0, #0x1a]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	mov r3, sl
	strh r0, [r3, #0x1c]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0x1e]
_08095D5E:
	ldr r0, [sp, #0x38]
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08095D82
	mov r0, sl
	ldrh r1, [r0, #0x2a]
	adds r1, r1, r2
	ldrh r0, [r0, #0x2e]
	ands r1, r0
	lsrs r0, r1, #3
	lsls r0, r0, #5
	mov r3, sl
	strh r0, [r3, #0x30]
	movs r0, #7
	ands r0, r1
	strh r0, [r3, #0x32]
_08095D82:
	movs r0, #0
	str r0, [sp, #0x58]
	adds r2, #1
	str r2, [sp, #0x6c]
	ldr r1, [sp, #0x74]
	str r1, [sp, #0x60]
	ldr r2, _08095E20 @ =0x0000FFFF
	mov ip, r2
_08095D92:
	movs r3, #0
	str r3, [sp, #0x54]
	ldr r0, [sp, #0x5c]
	adds r0, #2
	str r0, [sp, #0x70]
	ldr r1, [sp, #0x58]
	adds r1, #1
	str r1, [sp, #0x68]
	ldr r5, [sp, #0x60]
	mov r8, sp
	movs r2, #0
	str r2, [sp, #0x78]
_08095DAA:
	ldr r3, [sp, #0x64]
	ldr r1, [sp, #0x78]
	adds r0, r3, r1
	ldr r7, [r0]
	ldrh r1, [r7, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08095DBE
	b _08095FEA
_08095DBE:
	mov r2, r8
	ldrh r0, [r2]
	ldr r3, [sp, #0x58]
	adds r4, r0, r3
	ldrh r0, [r2, #4]
	ands r4, r0
	ldrh r6, [r2, #0xa]
	ldrh r0, [r2, #8]
	lsrs r1, r4, #3
	ldr r2, [r7, #0x24]
	lsls r1, r1, #1
	lsls r0, r0, #1
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1]
	mov r2, r8
	ldrh r0, [r2, #0xc]
	subs r3, r1, r0
	movs r1, #7
	ands r4, r1
	lsls r0, r3, #0x14
	cmp r0, #0
	bge _08095DEE
	eors r6, r1
_08095DEE:
	lsls r0, r3, #0x16
	lsrs r0, r0, #0x11
	lsls r2, r6, #2
	ldr r1, [r7, #0x20]
	adds r1, r1, r0
	adds r1, r1, r2
	ldr r1, [r1]
	lsrs r2, r3, #0xc
	cmp r4, #0
	bne _08095E3E
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095E24
	lsls r0, r1, #0x1c
	lsrs r1, r0, #0x1c
	cmp r1, #0
	bne _08095E12
	b _08095FE2
_08095E12:
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
	.align 2, 0
_08095E20: .4byte 0x0000FFFF
_08095E24:
	lsrs r1, r1, #0x1c
	cmp r1, #0
	beq _08095E36
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095E36:
	ldrh r0, [r5]
	mov r1, ip
	orrs r0, r1
	b _08095FE8
_08095E3E:
	cmp r4, #1
	bne _08095E7A
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095E64
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095E5C
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095E5C:
	ldrh r0, [r5]
	mov r2, ip
	orrs r0, r2
	b _08095FE8
_08095E64:
	lsls r0, r1, #4
	lsrs r1, r0, #0x1c
	cmp r1, #0
	bne _08095E6E
	b _08095FE2
_08095E6E:
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095E7A:
	cmp r4, #2
	bne _08095EBC
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095EA0
	lsls r0, r1, #0x14
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095E98
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095E98:
	ldrh r0, [r5]
	mov r1, ip
	orrs r0, r1
	b _08095FE8
_08095EA0:
	lsls r0, r1, #8
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095EB4
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095EB4:
	ldrh r0, [r5]
	mov r2, ip
	orrs r0, r2
	b _08095FE8
_08095EBC:
	cmp r4, #3
	bne _08095EF8
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095EDC
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x1c
	cmp r1, #0
	bne _08095ED0
	b _08095FE2
_08095ED0:
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095EDC:
	lsls r0, r1, #0xc
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095EF0
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095EF0:
	ldrh r0, [r5]
	mov r1, ip
	orrs r0, r1
	b _08095FE8
_08095EF8:
	cmp r4, #4
	bne _08095F32
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095F1E
	lsls r0, r1, #0xc
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095F16
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095F16:
	ldrh r0, [r5]
	mov r2, ip
	orrs r0, r2
	b _08095FE8
_08095F1E:
	lsls r0, r1, #0x10
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095FE2
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095F32:
	cmp r4, #5
	bne _08095F74
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095F58
	lsls r0, r1, #8
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095F50
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095F50:
	ldrh r0, [r5]
	mov r1, ip
	orrs r0, r1
	b _08095FE8
_08095F58:
	lsls r0, r1, #0x14
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095F6C
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095F6C:
	ldrh r0, [r5]
	mov r2, ip
	orrs r0, r2
	b _08095FE8
_08095F74:
	cmp r4, #6
	bne _08095FAE
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095F92
	lsls r0, r1, #4
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095FE2
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095F92:
	lsls r0, r1, #0x18
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095FA6
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095FA6:
	ldrh r0, [r5]
	mov r1, ip
	orrs r0, r1
	b _08095FE8
_08095FAE:
	lsls r0, r3, #0x15
	cmp r0, #0
	blt _08095FCE
	lsrs r1, r1, #0x1c
	cmp r1, #0
	beq _08095FC6
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095FC6:
	ldrh r0, [r5]
	mov r2, ip
	orrs r0, r2
	b _08095FE8
_08095FCE:
	lsls r0, r1, #0x1c
	lsrs r1, r0, #0x1c
	cmp r1, #0
	beq _08095FE2
	lsls r0, r2, #5
	lsls r1, r1, #1
	add r1, sb
	adds r0, r0, r1
	ldrh r0, [r0]
	b _08095FE8
_08095FE2:
	ldrh r0, [r5]
	mov r3, ip
	orrs r0, r3
_08095FE8:
	strh r0, [r5]
_08095FEA:
	adds r5, #2
	movs r0, #0x14
	add r8, r0
	ldr r1, [sp, #0x78]
	adds r1, #0x14
	str r1, [sp, #0x78]
	ldr r2, [sp, #0x54]
	adds r2, #1
	str r2, [sp, #0x54]
	cmp r2, #2
	bhi _08096002
	b _08095DAA
_08096002:
	ldr r2, [sp, #0x74]
	ldrh r1, [r2]
	ldr r3, _08096010 @ =0x0000FFFF
	cmp r1, r3
	beq _08096014
	adds r0, r1, #0
	b _08096022
	.align 2, 0
_08096010: .4byte 0x0000FFFF
_08096014:
	ldrh r0, [r2, #2]
	cmp r0, r1
	beq _0809601E
	ldrh r0, [r2, #2]
	b _08096022
_0809601E:
	ldr r1, [sp, #0x74]
	ldrh r0, [r1, #4]
_08096022:
	ldr r2, [sp, #0x5c]
	strh r0, [r2]
	ldr r3, [sp, #0x70]
	str r3, [sp, #0x5c]
	ldr r0, [sp, #0x68]
	str r0, [sp, #0x58]
	cmp r0, #0xef
	bhi _08096034
	b _08095D92
_08096034:
	ldr r2, [sp, #0x6c]
	cmp r2, #0x9f
	bhi _0809603C
	b _08095D16
_0809603C:
	ldr r0, _080960A4 @ =gUnk_02017400
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x96
	lsls r2, r2, #9
	bl sub_08006BA4
	movs r0, #3
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r2, #0x80
	lsls r2, r2, #1
	movs r0, #2
	adds r1, r2, #0
	bl sub_080062E0
	movs r0, #2
	movs r1, #0x78
	movs r2, #0x50
	bl sub_08005E18
	movs r1, #0xf0
	lsls r1, r1, #7
	movs r2, #0xa0
	lsls r2, r2, #7
	movs r0, #2
	bl sub_08006340
	add sp, #0x7c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080960A4: .4byte gUnk_02017400

	thumb_func_start sub_080960A8
sub_080960A8: @ 0x080960A8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r0, _08096100 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r2, _08096104 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r2, r0, r2
	ldr r4, _08096108 @ =0x00000AB8
	adds r2, r2, r4
	adds r2, r1, r2
	movs r0, #0x98
	lsls r0, r0, #3
	adds r3, r1, r0
	ldr r4, _0809610C @ =0x00001FA8
	adds r6, r1, r4
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r4, #0
	ldrsh r1, [r3, r4]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r7, r0, #0x10
	movs r1, #2
	ldrsh r0, [r2, r1]
	movs r2, #2
	ldrsh r1, [r3, r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r0, r0, #0x10
	mov r8, r0
	ldrb r0, [r6, #0x13]
	cmp r0, #0
	bne _08096110
	movs r0, #0xe8
	lsls r0, r0, #1
	strh r0, [r6, #4]
	movs r4, #0
	mov sb, r4
	b _08096128
	.align 2, 0
_08096100: .4byte gUnk_03006B54
_08096104: .4byte 0x00001EB8
_08096108: .4byte 0x00000AB8
_0809610C: .4byte 0x00001FA8
_08096110:
	ldrh r0, [r6, #4]
	adds r0, #0x10
	strh r0, [r6, #4]
	ldrb r1, [r6, #0x13]
	lsls r1, r1, #4
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r0, r2, #0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
_08096128:
	ldrb r0, [r6, #0x13]
	lsrs r0, r0, #3
	lsls r5, r0, #1
	mov r4, sp
	adds r4, #2
	movs r0, #2
	mov r1, sp
	adds r2, r4, #0
	bl sub_08006270
	lsls r0, r7, #0x10
	asrs r1, r0, #0x10
	mov r0, sp
	movs r2, #0
	ldrsh r0, [r0, r2]
	subs r0, r1, r0
	cmp r0, #0
	ble _08096162
	cmp r0, r5
	ble _0809615C
	mov r1, sp
	mov r0, sp
	ldrh r0, [r0]
	adds r0, r0, r5
	strh r0, [r1]
	b _08096182
_0809615C:
	mov r0, sp
	strh r1, [r0]
	b _08096182
_08096162:
	cmp r0, #0
	bge _08096182
	cmn r0, r5
	bge _08096176
	mov r1, sp
	mov r0, sp
	ldrh r0, [r0]
	subs r0, r0, r5
	strh r0, [r1]
	b _08096182
_08096176:
	mov r2, sp
	mov r0, sp
	ldrh r0, [r0]
	subs r1, r1, r0
	subs r0, r0, r1
	strh r0, [r2]
_08096182:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	movs r2, #0
	ldrsh r0, [r4, r2]
	subs r0, r1, r0
	cmp r0, #0
	ble _080961A0
	cmp r0, r5
	ble _0809619C
	ldrh r0, [r4]
	adds r0, r0, r5
	b _080961B4
_0809619C:
	strh r1, [r4]
	b _080961B6
_080961A0:
	cmp r0, #0
	bge _080961B6
	cmn r0, r5
	bge _080961AE
	ldrh r0, [r4]
	subs r0, r0, r5
	b _080961B4
_080961AE:
	ldrh r0, [r4]
	subs r1, r1, r0
	subs r0, r0, r1
_080961B4:
	strh r0, [r4]
_080961B6:
	mov r0, sp
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0
	ldrsh r2, [r4, r0]
	movs r0, #2
	bl sub_08005E18
	movs r1, #4
	ldrsh r2, [r6, r1]
	movs r0, #2
	adds r1, r2, #0
	bl sub_080062E0
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r0, #2
	bl sub_08006394
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	beq _08096206
	cmp r0, #0x1e
	bls _0809621C
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809621C
	movs r0, #0
	strb r0, [r6, #0x13]
	movs r0, #1
	b _0809621E
_08096206:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
_0809621C:
	movs r0, #0
_0809621E:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809622C
sub_0809622C: @ 0x0809622C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	ldr r0, _08096284 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r2, _08096288 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r2, r0, r2
	ldr r4, _0809628C @ =0x00000AB8
	adds r2, r2, r4
	adds r2, r1, r2
	movs r0, #0x98
	lsls r0, r0, #3
	adds r3, r1, r0
	ldr r4, _08096290 @ =0x00001FA8
	adds r6, r1, r4
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r4, #0
	ldrsh r1, [r3, r4]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r7, r0, #0x10
	movs r1, #2
	ldrsh r0, [r2, r1]
	movs r2, #2
	ldrsh r1, [r3, r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r0, r0, #0x10
	mov r8, r0
	ldrb r0, [r6, #0x13]
	cmp r0, #0
	bne _08096294
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r6, #4]
	movs r4, #0
	mov sb, r4
	b _080962AC
	.align 2, 0
_08096284: .4byte gUnk_03006B54
_08096288: .4byte 0x00001EB8
_0809628C: .4byte 0x00000AB8
_08096290: .4byte 0x00001FA8
_08096294:
	ldrh r0, [r6, #4]
	subs r0, #7
	strh r0, [r6, #4]
	ldrb r1, [r6, #0x13]
	lsls r1, r1, #4
	movs r2, #0xb4
	lsls r2, r2, #1
	adds r0, r2, #0
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
_080962AC:
	ldrb r0, [r6, #0x13]
	lsrs r0, r0, #3
	lsls r5, r0, #1
	mov r4, sp
	adds r4, #2
	movs r0, #2
	mov r1, sp
	adds r2, r4, #0
	bl sub_08006270
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov r1, sp
	movs r2, #0
	ldrsh r1, [r1, r2]
	subs r0, r0, r1
	cmp r0, r5
	ble _080962DA
	mov r1, sp
	mov r0, sp
	ldrh r0, [r0]
	adds r0, r0, r5
	b _080962E6
_080962DA:
	cmn r0, r5
	bge _080962E8
	mov r1, sp
	mov r0, sp
	ldrh r0, [r0]
	subs r0, r0, r5
_080962E6:
	strh r0, [r1]
_080962E8:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r4, r2]
	subs r0, r0, r1
	cmp r0, r5
	ble _080962FE
	ldrh r0, [r4]
	adds r0, r0, r5
	b _08096306
_080962FE:
	cmn r0, r5
	bge _08096308
	ldrh r0, [r4]
	subs r0, r0, r5
_08096306:
	strh r0, [r4]
_08096308:
	mov r0, sp
	movs r2, #0
	ldrsh r1, [r0, r2]
	movs r0, #0
	ldrsh r2, [r4, r0]
	movs r0, #2
	bl sub_08005E18
	movs r1, #4
	ldrsh r2, [r6, r1]
	movs r0, #2
	adds r1, r2, #0
	bl sub_080062E0
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r0, #2
	bl sub_08006394
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	beq _08096358
	cmp r0, #0x1e
	bls _0809636E
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809636E
	movs r0, #0
	strb r0, [r6, #0x13]
	movs r0, #1
	b _08096370
_08096358:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
_0809636E:
	movs r0, #0
_08096370:
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08096380
sub_08096380: @ 0x08096380
	push {r4, lr}
	ldr r0, _080963AC @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080963B0 @ =0x00001FA8
	adds r4, r0, r1
	ldrb r0, [r4, #0x13]
	cmp r0, #0
	bne _08096398
	movs r0, #0x80
	lsls r0, r0, #1
	strh r0, [r4, #4]
	strh r0, [r4, #6]
_08096398:
	ldrb r0, [r4, #0x13]
	cmp r0, #7
	bhi _080963B4
	ldrh r0, [r4, #4]
	subs r0, #8
	strh r0, [r4, #4]
	ldrh r0, [r4, #6]
	adds r0, #8
	b _080963BE
	.align 2, 0
_080963AC: .4byte gUnk_03006B54
_080963B0: .4byte 0x00001FA8
_080963B4:
	ldrh r0, [r4, #4]
	adds r0, #8
	strh r0, [r4, #4]
	ldrh r0, [r4, #6]
	subs r0, #0x10
_080963BE:
	strh r0, [r4, #6]
	movs r0, #4
	ldrsh r1, [r4, r0]
	movs r0, #6
	ldrsh r2, [r4, r0]
	movs r0, #2
	bl sub_080062E0
	ldrb r0, [r4, #0x13]
	adds r0, #1
	strb r0, [r4, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1f
	bhi _080963E0
	movs r0, #0
	b _080963E6
_080963E0:
	movs r0, #0
	strb r0, [r4, #0x13]
	movs r0, #1
_080963E6:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080963EC
sub_080963EC: @ 0x080963EC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _08096478 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _0809647C @ =0x00001FA8
	adds r1, r1, r0
	mov r8, r1
	movs r7, #0x1d
	ldr r3, _08096480 @ =gUnk_08BD208E
	mov sb, r3
	movs r5, #0xc0
	lsls r5, r5, #0x13
	mov ip, r5
	ldr r6, _08096484 @ =gUnk_08BD2064
	mov sl, r6
_08096410:
	mov r1, r8
	ldrb r0, [r1, #0x13]
	adds r0, r0, r7
	subs r0, #0x1d
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	cmp r0, #0x14
	bhi _08096506
	lsls r1, r7, #0x10
	asrs r2, r1, #0x10
	movs r0, #1
	ands r0, r2
	adds r6, r1, #0
	cmp r0, #0
	beq _0809648C
	asrs r0, r4, #0xf
	add r0, sb
	movs r3, #0
	ldrsh r0, [r0, r3]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	lsls r0, r2, #2
	add r0, ip
	adds r2, r1, r0
	movs r3, #0
	adds r5, r4, #0
	movs r1, #0
_08096448:
	str r1, [r2]
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _08096448
	asrs r2, r6, #0xe
	ldr r6, _08096488 @ =gUnk_02017400
	adds r4, r2, r6
	asrs r0, r5, #0xf
	adds r0, #2
	add r0, sb
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	add r2, ip
	adds r2, r0, r2
	b _080964D6
	.align 2, 0
_08096478: .4byte gUnk_03006B54
_0809647C: .4byte 0x00001FA8
_08096480: .4byte gUnk_08BD208E
_08096484: .4byte gUnk_08BD2064
_08096488: .4byte gUnk_02017400
_0809648C:
	asrs r0, r4, #0xf
	adds r0, #2
	add r0, sl
	movs r5, #0
	ldrsh r0, [r0, r5]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	lsls r0, r2, #2
	add r0, ip
	adds r2, r1, r0
	movs r3, #0
	adds r5, r4, #0
	movs r1, #0
_080964A8:
	str r1, [r2]
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _080964A8
	asrs r0, r5, #0xf
	adds r0, #2
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	asrs r2, r6, #0xe
	ldr r3, _0809658C @ =gUnk_02017400
	adds r0, r2, r3
	adds r4, r1, r0
	add r2, ip
_080964D6:
	movs r3, #0
	asrs r0, r5, #0xf
	adds r0, #2
	mov r5, sl
	adds r1, r0, r5
	movs r6, #0
	ldrsh r0, [r1, r6]
	cmp r3, r0
	bge _08096506
	adds r5, r1, #0
_080964EA:
	ldr r0, [r4]
	str r0, [r2]
	adds r4, #0xf0
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	movs r6, #0
	ldrsh r1, [r5, r6]
	cmp r0, r1
	blt _080964EA
_08096506:
	lsls r0, r7, #0x10
	ldr r7, _08096590 @ =0xFFFF0000
	adds r0, r0, r7
	lsrs r7, r0, #0x10
	cmp r0, #0
	blt _08096514
	b _08096410
_08096514:
	movs r7, #0x1e
	ldr r0, _08096594 @ =gUnk_08BD208E
	mov sb, r0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	mov ip, r1
	ldr r3, _08096598 @ =gUnk_08BD2064
	mov sl, r3
_08096524:
	mov r5, r8
	ldrb r0, [r5, #0x13]
	adds r0, #0x1e
	lsls r1, r7, #0x10
	asrs r2, r1, #0x10
	subs r0, r0, r2
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	adds r6, r1, #0
	cmp r0, #0x14
	bhi _08096616
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _0809659C
	asrs r0, r4, #0xf
	add r0, sb
	movs r7, #0
	ldrsh r0, [r0, r7]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	lsls r0, r2, #2
	add r0, ip
	adds r2, r1, r0
	movs r3, #0
	adds r5, r4, #0
	movs r1, #0
_0809655C:
	str r1, [r2]
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _0809655C
	asrs r2, r6, #0xe
	ldr r7, _0809658C @ =gUnk_02017400
	adds r4, r2, r7
	asrs r0, r5, #0xf
	adds r0, #2
	add r0, sb
	movs r3, #0
	ldrsh r1, [r0, r3]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #4
	add r2, ip
	adds r2, r0, r2
	b _080965E6
	.align 2, 0
_0809658C: .4byte gUnk_02017400
_08096590: .4byte 0xFFFF0000
_08096594: .4byte gUnk_08BD208E
_08096598: .4byte gUnk_08BD2064
_0809659C:
	asrs r0, r4, #0xf
	adds r0, #2
	add r0, sl
	movs r5, #0
	ldrsh r0, [r0, r5]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	lsls r0, r2, #2
	add r0, ip
	adds r2, r1, r0
	movs r3, #0
	adds r5, r4, #0
	movs r1, #0
_080965B8:
	str r1, [r2]
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r7, #0x80
	lsls r7, r7, #9
	adds r0, r0, r7
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #7
	ble _080965B8
	asrs r0, r5, #0xf
	adds r0, #2
	add r0, sb
	movs r1, #0
	ldrsh r0, [r0, r1]
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #4
	asrs r2, r6, #0xe
	ldr r3, _08096654 @ =gUnk_02017400
	adds r0, r2, r3
	adds r4, r1, r0
	add r2, ip
_080965E6:
	movs r3, #0
	asrs r0, r5, #0xf
	adds r0, #2
	mov r5, sl
	adds r1, r0, r5
	movs r7, #0
	ldrsh r0, [r1, r7]
	cmp r3, r0
	bge _08096616
	adds r5, r1, #0
_080965FA:
	ldr r0, [r4]
	str r0, [r2]
	adds r4, #0xf0
	adds r2, #0xf0
	lsls r0, r3, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	movs r7, #0
	ldrsh r1, [r5, r7]
	cmp r0, r1
	blt _080965FA
_08096616:
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r6, r1
	lsrs r7, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3b
	bgt _08096626
	b _08096524
_08096626:
	mov r3, r8
	ldrb r0, [r3, #0x13]
	adds r0, #1
	strb r0, [r3, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	beq _08096658
	cmp r0, #0x1e
	bls _0809666E
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809666E
	movs r0, #0
	mov r5, r8
	strb r0, [r5, #0x13]
	movs r0, #1
	b _08096670
	.align 2, 0
_08096654: .4byte gUnk_02017400
_08096658:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
_0809666E:
	movs r0, #0
_08096670:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08096680
sub_08096680: @ 0x08096680
	push {r4, r5, r6, r7, lr}
	ldr r0, _08096738 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _0809673C @ =0x00001FA8
	adds r6, r0, r1
	movs r5, #0
	movs r7, #0xc0
	lsls r7, r7, #0x13
_08096690:
	ldrb r4, [r6, #0x13]
	adds r4, #2
	adds r0, r5, #0
	movs r1, #3
	bl __udivsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r4, r4, r0
	subs r2, r5, r4
	cmp r2, #0
	blt _080966C2
	cmp r4, #0
	ble _080966C2
	lsls r0, r5, #4
	subs r0, r0, r5
	lsls r0, r0, #4
	adds r0, r0, r7
	lsls r1, r2, #4
	subs r1, r1, r2
	lsls r1, r1, #4
	adds r1, r1, r7
	ldr r2, _08096740 @ =0x0400003C
	bl CpuSet
_080966C2:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x4f
	bls _08096690
	movs r5, #0x9f
	movs r7, #0xc0
	lsls r7, r7, #0x13
_080966D2:
	ldrb r4, [r6, #0x13]
	adds r4, #2
	movs r0, #0x9f
	subs r0, r0, r5
	movs r1, #3
	bl __divsi3
	subs r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r5, r4
	cmp r2, #0x9f
	bgt _08096706
	cmp r4, #0
	ble _08096706
	lsls r0, r5, #4
	subs r0, r0, r5
	lsls r0, r0, #4
	adds r0, r0, r7
	lsls r1, r2, #4
	subs r1, r1, r2
	lsls r1, r1, #4
	adds r1, r1, r7
	ldr r2, _08096740 @ =0x0400003C
	bl CpuSet
_08096706:
	subs r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x4f
	bhi _080966D2
	ldrb r0, [r6, #0x13]
	adds r0, #1
	strb r0, [r6, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	beq _08096744
	cmp r0, #0x1e
	bls _0809675A
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809675A
	movs r0, #0
	strb r0, [r6, #0x13]
	movs r0, #1
	b _0809675C
	.align 2, 0
_08096738: .4byte gUnk_03006B54
_0809673C: .4byte 0x00001FA8
_08096740: .4byte 0x0400003C
_08096744:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
_0809675A:
	movs r0, #0
_0809675C:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08096764
sub_08096764: @ 0x08096764
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _080967D8 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r2, _080967DC @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r2, r0, r2
	ldr r3, _080967E0 @ =0x00000AB8
	adds r2, r2, r3
	adds r2, r1, r2
	movs r4, #0x98
	lsls r4, r4, #3
	adds r3, r1, r4
	ldr r0, _080967E4 @ =0x00001FA8
	adds r7, r1, r0
	movs r4, #0
	ldrsh r1, [r2, r4]
	movs r4, #0
	ldrsh r0, [r3, r4]
	subs r1, r1, r0
	lsls r1, r1, #0xc
	movs r0, #2
	ldrsh r2, [r2, r0]
	movs r4, #2
	ldrsh r0, [r3, r4]
	subs r2, r2, r0
	lsls r2, r2, #0xc
	ldrb r0, [r7, #0x13]
	lsls r0, r0, #1
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	mov sl, r0
	ldrb r0, [r7, #0x13]
	lsls r0, r0, #4
	lsrs r3, r1, #0x10
	str r3, [sp, #4]
	asrs r1, r1, #0x10
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0xc]
	lsrs r4, r2, #0x10
	str r4, [sp, #8]
	asrs r2, r2, #0x10
	subs r2, r2, r0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	str r2, [sp, #0x10]
	movs r5, #0
	b _080968B4
	.align 2, 0
_080967D8: .4byte gUnk_03006B54
_080967DC: .4byte 0x00001EB8
_080967E0: .4byte 0x00000AB8
_080967E4: .4byte 0x00001FA8
_080967E8:
	lsls r1, r5, #4
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r3, r0, #0x10
	movs r4, #0x80
	lsls r4, r4, #0xc
	adds r0, r0, r4
	lsrs r0, r0, #0x10
	adds r2, r5, #1
	mov r8, r2
	cmp r0, #0xaf
	bhi _080968AE
	ldr r4, [sp, #8]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r3, r0
	ble _08096820
	subs r2, r3, r0
	cmp r2, #0
	blt _0809681C
	lsls r0, r2, #0xc
	b _0809682E
_0809681C:
	subs r0, r0, r3
	b _0809682C
_08096820:
	subs r2, r0, r3
	cmp r2, #0
	blt _0809682A
	lsls r0, r2, #0xc
	b _0809682E
_0809682A:
	subs r0, r3, r0
_0809682C:
	lsls r0, r0, #0xc
_0809682E:
	lsrs r0, r0, #0x10
	adds r6, r0, #0
	movs r4, #0
	adds r5, #1
	mov r8, r5
	cmp r4, sl
	bhs _080968AE
	lsls r1, r1, #0x10
	mov sb, r1
_08096840:
	lsls r1, r4, #4
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	asrs r2, r0, #0x10
	movs r3, #0x80
	lsls r3, r3, #0xc
	adds r0, r0, r3
	lsrs r0, r0, #0x10
	cmp r0, #0xff
	bhi _080968A4
	ldr r1, [sp, #4]
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	cmp r2, r1
	ble _08096870
	subs r0, r2, r1
	cmp r0, #0
	bge _08096878
	subs r0, r1, r2
	b _08096878
_08096870:
	subs r0, r1, r2
	cmp r0, #0
	bge _08096878
	subs r0, r2, r1
_08096878:
	lsls r0, r0, #0xc
	lsrs r0, r0, #0x10
	adds r0, r0, r6
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrb r0, [r7, #0x13]
	lsrs r3, r0, #1
	adds r1, r3, #0
	subs r0, r1, r2
	cmp r0, #7
	bgt _080968A4
	cmp r1, r2
	blo _080968A4
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	subs r2, r3, r2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov r3, sb
	asrs r1, r3, #0x10
	bl sub_0809690C
_080968A4:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, sl
	blo _08096840
_080968AE:
	mov r4, r8
	lsls r0, r4, #0x18
	lsrs r5, r0, #0x18
_080968B4:
	ldr r0, [sp]
	cmp r5, r0
	blo _080967E8
	ldrb r0, [r7, #0x13]
	adds r0, #1
	strb r0, [r7, #0x13]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x14
	beq _080968E2
	cmp r0, #0x1e
	bls _080968F8
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080968F8
	movs r0, #0
	strb r0, [r7, #0x13]
	movs r0, #1
	b _080968FA
_080968E2:
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
_080968F8:
	movs r0, #0
_080968FA:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809690C
sub_0809690C: @ 0x0809690C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r5, r2, #0x18
	cmp r5, #7
	bls _0809692A
	b _08096BDC
_0809692A:
	ldr r2, _0809699C @ =0x0000FFF8
	adds r1, r5, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r2, r0, r1
	lsls r2, r2, #0x10
	subs r3, r5, #7
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, r1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov ip, r1
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsrs r3, r2, #0x10
	mov sl, r3
	asrs r2, r2, #0x10
	cmp r2, #0xef
	ble _08096960
	b _08096BDC
_08096960:
	mov r1, r8
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	cmp r3, #0
	bge _0809696C
	b _08096BDC
_0809696C:
	mov r1, ip
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	adds r7, r0, #0
	cmp r1, #0x9f
	ble _0809697A
	b _08096BDC
_0809697A:
	mov r1, sb
	lsls r0, r1, #0x10
	adds r4, r0, #0
	cmp r4, #0
	bge _08096986
	b _08096BDC
_08096986:
	movs r6, #0
	lsls r1, r5, #1
	movs r0, #0x10
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r2, #0
	bge _080969A0
	mov sl, r6
	movs r6, #1
	b _080969AE
	.align 2, 0
_0809699C: .4byte 0x0000FFF8
_080969A0:
	cmp r2, #0xef
	bgt _080969AE
	cmp r3, #0xef
	ble _080969AE
	movs r2, #0xef
	mov r8, r2
	movs r6, #2
_080969AE:
	cmp r7, #0
	bge _080969C8
	asrs r0, r4, #0x10
	cmp r0, #0
	blt _080969C8
	movs r3, #0
	mov ip, r3
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x10
	orrs r6, r0
	b _080969E8
_080969C8:
	asrs r1, r7, #0x10
	cmp r1, #0x9f
	bgt _080969E8
	asrs r0, r4, #0x10
	cmp r0, #0x9f
	ble _080969E8
	movs r0, #0x9f
	mov sb, r0
	subs r0, r0, r1
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0x20
	orrs r6, r0
	lsls r0, r6, #0x18
	lsrs r6, r0, #0x18
_080969E8:
	movs r4, #1
	adds r0, r6, #0
	ands r0, r4
	cmp r0, #0
	bne _08096A36
	mov r2, ip
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #3
	lsls r1, r1, #7
	subs r1, r1, r0
	lsls r1, r1, #1
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r1, r3, r1
	mov r0, sl
	lsls r2, r0, #0x10
	asrs r0, r2, #0x11
	lsls r0, r0, #1
	adds r3, r1, r0
	lsls r0, r4, #0x10
	ands r0, r2
	movs r4, #0xff
	lsls r4, r4, #8
	cmp r0, #0
	beq _08096A1E
	movs r4, #0xff
_08096A1E:
	movs r1, #0
	cmp r1, r5
	bhs _08096A36
_08096A24:
	ldrh r0, [r3]
	ands r0, r4
	strh r0, [r3]
	adds r3, #0xf0
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r5
	blo _08096A24
_08096A36:
	movs r0, #2
	ands r0, r6
	cmp r0, #0
	bne _08096A84
	mov r1, ip
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	lsls r1, r0, #3
	lsls r0, r0, #7
	subs r0, r0, r1
	lsls r0, r0, #1
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r0, r2, r0
	mov r3, r8
	lsls r1, r3, #0x10
	asrs r2, r1, #0x10
	asrs r1, r1, #0x11
	lsls r1, r1, #1
	adds r3, r0, r1
	movs r0, #1
	ands r2, r0
	movs r4, #0xff
	lsls r4, r4, #8
	cmp r2, #0
	beq _08096A6C
	movs r4, #0xff
_08096A6C:
	movs r1, #0
	cmp r1, r5
	bhs _08096A84
_08096A72:
	ldrh r0, [r3]
	ands r0, r4
	strh r0, [r3]
	adds r3, #0xf0
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r5
	blo _08096A72
_08096A84:
	movs r0, #0x10
	ands r0, r6
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _08096B30
	mov r1, ip
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	lsls r1, r0, #3
	lsls r0, r0, #7
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	asrs r0, r0, #0xf
	movs r3, #0xc0
	lsls r3, r3, #0x13
	adds r0, r3, r0
	mov r3, sl
	lsls r1, r3, #0x10
	asrs r5, r1, #0x10
	asrs r1, r1, #0x11
	lsls r1, r1, #1
	adds r3, r0, r1
	movs r1, #1
	ands r1, r5
	cmp r1, #0
	beq _08096AE4
	ldrb r0, [r3]
	strh r0, [r3]
	mov r0, sp
	strh r2, [r0]
	adds r1, r3, #2
	mov r0, r8
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	subs r2, r2, r5
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	lsls r2, r2, #0xa
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	bl CpuSet
	b _08096B08
_08096AE4:
	mov r0, sp
	strh r1, [r0]
	mov r1, r8
	lsls r4, r1, #0x10
	asrs r2, r4, #0x10
	subs r2, r2, r5
	adds r2, #1
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	lsls r2, r2, #0xa
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	adds r1, r3, #0
	bl CpuSet
_08096B08:
	lsls r1, r7, #0x10
	asrs r1, r1, #0xf
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r2, r1
	asrs r2, r4, #0x10
	asrs r0, r4, #0x11
	lsls r0, r0, #1
	adds r3, r1, r0
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _08096B26
	ldrb r0, [r3]
	b _08096B2E
_08096B26:
	ldrh r1, [r3]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
_08096B2E:
	strh r0, [r3]
_08096B30:
	movs r0, #0x20
	ands r6, r0
	lsls r0, r6, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #0
	bne _08096BDC
	mov r3, sb
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r0, #3
	lsls r0, r0, #7
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	asrs r0, r0, #0xf
	movs r1, #0xc0
	lsls r1, r1, #0x13
	adds r0, r1, r0
	mov r3, sl
	lsls r1, r3, #0x10
	asrs r5, r1, #0x10
	asrs r1, r1, #0x11
	lsls r1, r1, #1
	adds r3, r0, r1
	movs r1, #1
	ands r1, r5
	cmp r1, #0
	beq _08096B90
	ldrb r0, [r3]
	strh r0, [r3]
	mov r0, sp
	strh r2, [r0]
	adds r1, r3, #2
	mov r0, r8
	lsls r4, r0, #0x10
	asrs r2, r4, #0x10
	subs r2, r2, r5
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	lsls r2, r2, #0xa
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	bl CpuSet
	b _08096BB4
_08096B90:
	mov r0, sp
	strh r1, [r0]
	mov r1, r8
	lsls r4, r1, #0x10
	asrs r2, r4, #0x10
	subs r2, r2, r5
	adds r2, #1
	lsrs r0, r2, #0x1f
	adds r2, r2, r0
	lsls r2, r2, #0xa
	lsrs r2, r2, #0xb
	movs r0, #0x80
	lsls r0, r0, #0x11
	orrs r2, r0
	mov r0, sp
	adds r1, r3, #0
	bl CpuSet
_08096BB4:
	lsls r1, r7, #0x10
	asrs r1, r1, #0xf
	movs r2, #0xc0
	lsls r2, r2, #0x13
	adds r1, r2, r1
	asrs r2, r4, #0x10
	asrs r0, r4, #0x11
	lsls r0, r0, #1
	adds r3, r1, r0
	movs r0, #1
	ands r2, r0
	cmp r2, #0
	beq _08096BD2
	ldrb r0, [r3]
	b _08096BDA
_08096BD2:
	ldrh r1, [r3]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
_08096BDA:
	strh r0, [r3]
_08096BDC:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08096BEC
sub_08096BEC: @ 0x08096BEC
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _08096C1C @ =gUnk_03006B54
	ldr r0, [r0]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r4, r0, r2
	ldrh r0, [r4, #4]
	strh r0, [r4]
	ldrh r0, [r4, #6]
	strh r0, [r4, #2]
	ldr r0, _08096C20 @ =0x0000FFFF
	cmp r1, r0
	bne _08096C0C
	ldrb r1, [r4, #0x1a]
_08096C0C:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _08096C24
	bl sub_08096F1C
	b _08096C4C
	.align 2, 0
_08096C1C: .4byte gUnk_03006B54
_08096C20: .4byte 0x0000FFFF
_08096C24:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _08096C32
	bl sub_0809702C
	b _08096C4C
_08096C32:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08096C40
	bl sub_0809B6D4
	b _08096C4C
_08096C40:
	movs r0, #2
	ands r1, r0
	cmp r1, #0
	beq _08096C4C
	bl sub_08096D18
_08096C4C:
	ldr r6, _08096D14 @ =gUnk_03006B54
	ldr r1, [r6]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x14
	lsrs r2, r0, #0x10
	ldrh r0, [r1, #6]
	lsls r0, r0, #0x14
	lsrs r3, r0, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08096C6E
	movs r0, #0
	strh r0, [r4]
_08096C6E:
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08096C7A
	movs r0, #0
	strh r0, [r4, #2]
_08096C7A:
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08096C88
	strh r2, [r4]
_08096C88:
	movs r2, #2
	ldrsh r1, [r4, r2]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08096C96
	strh r3, [r4, #2]
_08096C96:
	ldrh r0, [r4]
	movs r5, #0
	strh r0, [r4, #4]
	ldrh r0, [r4, #2]
	strh r0, [r4, #6]
	ldrh r1, [r4, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _08096D0C
	ldrh r0, [r4, #0xe]
	bl sub_08001850
	lsls r0, r0, #4
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	ldrh r0, [r4, #0x10]
	bl sub_08001850
	lsls r0, r0, #4
	ldrh r2, [r4, #2]
	adds r0, r0, r2
	strh r0, [r4, #2]
	ldr r1, [r6]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x14
	lsrs r2, r0, #0x10
	ldrh r0, [r1, #6]
	lsls r0, r0, #0x14
	lsrs r3, r0, #0x10
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08096CE6
	strh r5, [r4]
_08096CE6:
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _08096CF0
	strh r5, [r4, #2]
_08096CF0:
	movs r0, #0
	ldrsh r1, [r4, r0]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08096CFE
	strh r2, [r4]
_08096CFE:
	movs r2, #2
	ldrsh r1, [r4, r2]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _08096D0C
	strh r3, [r4, #2]
_08096D0C:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_08096D14: .4byte gUnk_03006B54

	thumb_func_start sub_08096D18
sub_08096D18: @ 0x08096D18
	push {r4, r5, r6, r7, lr}
	ldr r0, _08096D78 @ =gUnk_03006B54
	ldr r3, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r2, r3, r0
	ldrh r1, [r2, #0x1c]
	ldr r0, _08096D7C @ =0x0000FFFF
	cmp r1, r0
	bne _08096D2E
	b _08096E5E
_08096D2E:
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _08096D80 @ =0x00000AB8
	adds r0, r0, r1
	adds r3, r3, r0
	mov ip, r3
	movs r7, #2
	ldrsh r0, [r3, r7]
	movs r3, #2
	ldrsh r1, [r2, r3]
	subs r0, r0, r1
	asrs r1, r0, #4
	cmp r1, #0x4f
	bgt _08096D94
	movs r0, #0x50
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r6, #0x10
	movs r5, #0
_08096D56:
	lsls r0, r4, #0x10
	asrs r3, r0, #0x10
	subs r0, r6, r3
	asrs r0, r0, #3
	movs r7, #0x12
	ldrsh r1, [r2, r7]
	cmp r0, r1
	bgt _08096D84
	subs r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r2, #2]
	subs r0, #0x10
	strh r0, [r2, #2]
	strh r5, [r2, #0x12]
	b _08096D8A
	.align 2, 0
_08096D78: .4byte gUnk_03006B54
_08096D7C: .4byte 0x0000FFFF
_08096D80: .4byte 0x00000AB8
_08096D84:
	ldrh r0, [r2, #0x12]
	adds r0, #1
	strh r0, [r2, #0x12]
_08096D8A:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	bgt _08096D56
	b _08096DD2
_08096D94:
	cmp r1, #0x50
	ble _08096DD2
	adds r0, r1, #0
	subs r0, #0x50
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r6, #0x10
	movs r5, #0
_08096DA4:
	lsls r0, r4, #0x10
	asrs r3, r0, #0x10
	subs r0, r6, r3
	asrs r0, r0, #3
	movs r7, #0x14
	ldrsh r1, [r2, r7]
	cmp r0, r1
	bgt _08096DC4
	subs r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r2, #2]
	adds r0, #0x10
	strh r0, [r2, #2]
	strh r5, [r2, #0x14]
	b _08096DCA
_08096DC4:
	ldrh r0, [r2, #0x14]
	adds r0, #1
	strh r0, [r2, #0x14]
_08096DCA:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	bgt _08096DA4
_08096DD2:
	mov r1, ip
	movs r3, #0
	ldrsh r0, [r1, r3]
	movs r7, #0
	ldrsh r1, [r2, r7]
	subs r0, r0, r1
	asrs r1, r0, #4
	cmp r1, #0x77
	bgt _08096E20
	movs r0, #0x78
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r6, #0x10
	movs r5, #0
_08096DF0:
	lsls r0, r4, #0x10
	asrs r3, r0, #0x10
	subs r0, r6, r3
	asrs r0, r0, #3
	movs r7, #0x16
	ldrsh r1, [r2, r7]
	cmp r0, r1
	bgt _08096E10
	subs r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r2]
	subs r0, #0x10
	strh r0, [r2]
	strh r5, [r2, #0x16]
	b _08096E16
_08096E10:
	ldrh r0, [r2, #0x16]
	adds r0, #1
	strh r0, [r2, #0x16]
_08096E16:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	bgt _08096DF0
	b _08096E5E
_08096E20:
	cmp r1, #0x78
	ble _08096E5E
	adds r0, r1, #0
	subs r0, #0x78
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r6, #0x10
	movs r5, #0
_08096E30:
	lsls r0, r4, #0x10
	asrs r3, r0, #0x10
	subs r0, r6, r3
	asrs r0, r0, #3
	movs r7, #0x18
	ldrsh r1, [r2, r7]
	cmp r0, r1
	bgt _08096E50
	subs r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r2]
	adds r0, #0x10
	strh r0, [r2]
	strh r5, [r2, #0x18]
	b _08096E56
_08096E50:
	ldrh r0, [r2, #0x18]
	adds r0, #1
	strh r0, [r2, #0x18]
_08096E56:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x10
	bgt _08096E30
_08096E5E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08096E64
sub_08096E64: @ 0x08096E64
	push {r4, r5, r6, r7, lr}
	ldr r0, _08096F08 @ =gUnk_03006B54
	ldr r5, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r4, r5, r0
	ldrh r1, [r4, #0x1c]
	ldr r0, _08096F0C @ =0x0000FFFF
	cmp r1, r0
	beq _08096F14
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r3, r5, r1
	ldrh r1, [r4, #0x1c]
	movs r0, #0x54
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, _08096F10 @ =0x00000AB8
	adds r2, r2, r0
	adds r2, r5, r2
	movs r1, #0
	ldrsh r0, [r2, r1]
	movs r5, #0
	ldrsh r1, [r4, r5]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r6, r0, #0x10
	movs r1, #2
	ldrsh r0, [r2, r1]
	movs r2, #2
	ldrsh r1, [r4, r2]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	lsrs r2, r0, #0x10
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x14
	lsrs r7, r0, #0x10
	ldrh r0, [r3, #6]
	lsls r0, r0, #0x14
	lsrs r5, r0, #0x10
	adds r0, r1, #0
	ldrh r3, [r4, #2]
	cmp r0, #0
	ble _08096EC8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x50
	subs r0, r0, r1
	cmp r0, #0
	bgt _08096F02
_08096EC8:
	lsls r1, r3, #0x10
	lsls r0, r5, #0x10
	cmp r1, r0
	bge _08096EDA
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	subs r0, #0x50
	cmp r0, #0
	bgt _08096F02
_08096EDA:
	movs r2, #0
	ldrsh r0, [r4, r2]
	ldrh r2, [r4]
	cmp r0, #0
	ble _08096EF0
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x78
	subs r0, r0, r1
	cmp r0, #0
	bgt _08096F02
_08096EF0:
	lsls r1, r2, #0x10
	lsls r0, r7, #0x10
	cmp r1, r0
	bge _08096F14
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	subs r0, #0x78
	cmp r0, #0
	ble _08096F14
_08096F02:
	movs r0, #0
	b _08096F16
	.align 2, 0
_08096F08: .4byte gUnk_03006B54
_08096F0C: .4byte 0x0000FFFF
_08096F10: .4byte 0x00000AB8
_08096F14:
	movs r0, #1
_08096F16:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_08096F1C
sub_08096F1C: @ 0x08096F1C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08096F78 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x98
	lsls r1, r1, #3
	adds r4, r0, r1
	ldrh r2, [r4, #8]
	ldrh r0, [r4]
	subs r2, r2, r0
	lsls r2, r2, #0x10
	ldrh r0, [r4, #0xa]
	ldrh r1, [r4, #2]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsrs r7, r2, #0x10
	asrs r0, r2, #0x10
	cmp r0, #0
	bge _08096F48
	rsbs r0, r0, #0
_08096F48:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	mov r8, r0
	cmp r3, #0
	bge _08096F58
	rsbs r3, r3, #0
_08096F58:
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	lsls r0, r3, #0x10
	asrs r1, r0, #0x10
	cmp r2, r1
	blt _08096F7C
	ldrh r5, [r4, #0xc]
	movs r3, #0xc
	ldrsh r0, [r4, r3]
	muls r0, r1, r0
	adds r1, r2, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	b _08096F8C
	.align 2, 0
_08096F78: .4byte gUnk_03006B54
_08096F7C:
	movs r3, #0xc
	ldrsh r0, [r4, r3]
	muls r0, r2, r0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrh r6, [r4, #0xc]
_08096F8C:
	lsls r0, r7, #0x10
	adds r2, r0, #0
	cmp r2, #0
	ble _08096FAE
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	ldrh r7, [r4]
	adds r0, r0, r7
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r3, [r4, #8]
	movs r7, #8
	ldrsh r1, [r4, r7]
	cmp r0, r1
	blt _08096FAE
	strh r3, [r4]
_08096FAE:
	cmp r2, #0
	bge _08096FCC
	ldrh r0, [r4]
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	subs r0, r0, r1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r4, #8]
	movs r3, #8
	ldrsh r1, [r4, r3]
	cmp r0, r1
	bgt _08096FCC
	strh r2, [r4]
_08096FCC:
	mov r7, r8
	cmp r7, #0
	ble _08096FEC
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r4, #2]
	adds r0, r0, r1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r4, #0xa]
	movs r3, #0xa
	ldrsh r1, [r4, r3]
	cmp r0, r1
	blt _08096FEC
	strh r2, [r4, #2]
_08096FEC:
	mov r7, r8
	cmp r7, #0
	bge _0809700C
	ldrh r0, [r4, #2]
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	subs r0, r0, r1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r4, #0xa]
	movs r3, #0xa
	ldrsh r1, [r4, r3]
	cmp r0, r1
	bgt _0809700C
	strh r2, [r4, #2]
_0809700C:
	ldr r1, [r4]
	ldr r0, [r4, #8]
	cmp r1, r0
	bne _0809701C
	ldrh r1, [r4, #0x1a]
	ldr r0, _08097028 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r4, #0x1a]
_0809701C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097028: .4byte 0x0000FFEF

	thumb_func_start sub_0809702C
sub_0809702C: @ 0x0809702C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _08097104 @ =gUnk_03006B54
	ldr r3, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r4, r3, r0
	ldrh r1, [r4, #0x1c]
	movs r0, #0x54
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r1, _08097108 @ =0x00000AB8
	adds r2, r2, r1
	adds r2, r3, r2
	ldr r6, _0809710C @ =0xFFFFF880
	adds r0, r6, #0
	ldrh r1, [r2]
	adds r0, r0, r1
	mov r1, sp
	strh r0, [r1]
	ldr r6, _08097110 @ =0xFFFFFB00
	adds r0, r6, #0
	ldrh r2, [r2, #2]
	adds r0, r0, r2
	adds r1, #2
	strh r0, [r1]
	mov r2, sp
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r3, r3, r0
	ldrh r0, [r3, #4]
	lsls r0, r0, #0x14
	lsrs r5, r0, #0x10
	ldrh r0, [r3, #6]
	lsls r0, r0, #0x14
	lsrs r3, r0, #0x10
	movs r6, #0
	ldrsh r0, [r2, r6]
	adds r7, r1, #0
	cmp r0, #0
	bge _0809708A
	movs r0, #0
	strh r0, [r2]
_0809708A:
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #0
	bge _08097096
	movs r0, #0
	strh r0, [r7]
_08097096:
	movs r6, #0
	ldrsh r1, [r2, r6]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _080970A4
	strh r5, [r2]
_080970A4:
	movs r0, #0
	ldrsh r1, [r7, r0]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _080970B2
	strh r3, [r7]
_080970B2:
	mov r0, sp
	ldrh r1, [r0]
	ldrh r0, [r4]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	ldrh r0, [r7]
	ldrh r2, [r4, #2]
	subs r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	lsrs r6, r1, #0x10
	mov r8, r6
	asrs r0, r1, #0x10
	mov sl, r2
	cmp r0, #0
	bge _080970D4
	rsbs r0, r0, #0
_080970D4:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r3, #0x10
	asrs r2, r0, #0x10
	mov sb, r0
	cmp r2, #0
	bge _080970E4
	rsbs r2, r2, #0
_080970E4:
	lsls r0, r1, #0x10
	asrs r3, r0, #0x10
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	cmp r3, r1
	blt _08097114
	ldrh r5, [r4, #0xc]
	movs r2, #0xc
	ldrsh r0, [r4, r2]
	muls r0, r1, r0
	adds r1, r3, #0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	b _08097124
	.align 2, 0
_08097104: .4byte gUnk_03006B54
_08097108: .4byte 0x00000AB8
_0809710C: .4byte 0xFFFFF880
_08097110: .4byte 0xFFFFFB00
_08097114:
	movs r6, #0xc
	ldrsh r0, [r4, r6]
	muls r0, r3, r0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrh r6, [r4, #0xc]
_08097124:
	mov r1, r8
	lsls r0, r1, #0x10
	adds r3, r0, #0
	cmp r3, #0
	ble _0809714E
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r4]
	adds r0, r0, r2
	strh r0, [r4]
	mov r1, sp
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r1]
	mov r8, r2
	movs r2, #0
	ldrsh r1, [r1, r2]
	cmp r0, r1
	blt _0809714E
	mov r0, r8
	strh r0, [r4]
_0809714E:
	cmp r3, #0
	bge _0809716E
	ldrh r1, [r4]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	subs r1, r1, r0
	strh r1, [r4]
	mov r0, sp
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r0]
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bgt _0809716E
	strh r2, [r4]
_0809716E:
	mov r0, sb
	cmp r0, #0
	ble _0809718C
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	add r0, sl
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r7]
	movs r3, #0
	ldrsh r1, [r7, r3]
	cmp r0, r1
	blt _0809718C
	strh r2, [r4, #2]
_0809718C:
	mov r0, sb
	cmp r0, #0
	bge _080971AC
	ldrh r0, [r4, #2]
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	subs r0, r0, r1
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r7]
	movs r3, #0
	ldrsh r1, [r7, r3]
	cmp r0, r1
	bgt _080971AC
	strh r2, [r4, #2]
_080971AC:
	mov r0, sp
	movs r6, #0
	ldrsh r1, [r4, r6]
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r1, r0
	bne _080971CE
	movs r3, #2
	ldrsh r1, [r4, r3]
	movs r6, #0
	ldrsh r0, [r7, r6]
	cmp r1, r0
	bne _080971CE
	ldrh r1, [r4, #0x1a]
	ldr r0, _080971E0 @ =0x0000FFDF
	ands r0, r1
	strh r0, [r4, #0x1a]
_080971CE:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080971E0: .4byte 0x0000FFDF

	thumb_func_start sub_080971E4
sub_080971E4: @ 0x080971E4
	push {r4, lr}
	sub sp, #4
	ldr r4, _0809725C @ =gUnk_03006B54
	ldr r1, [r4]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r0, #0
	str r0, [sp]
	ldr r2, _08097260 @ =0x050000E2
	mov r0, sp
	bl CpuSet
	ldr r0, [r4]
	movs r1, #0xa8
	lsls r1, r1, #1
	adds r0, r0, r1
	movs r1, #0xff
	strb r1, [r0, #0xb]
	movs r0, #0
_0809720C:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	movs r1, #0
	bl sub_0809B280
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xb
	ble _0809720C
	movs r0, #0
_08097226:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_0809B2F8
	movs r1, #0x80
	lsls r1, r1, #9
	adds r4, r4, r1
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #3
	ble _08097226
	movs r0, #0
_0809723E:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_0809B434
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #3
	ble _0809723E
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809725C: .4byte gUnk_03006B54
_08097260: .4byte 0x050000E2

	thumb_func_start sub_08097264
sub_08097264: @ 0x08097264
	push {r4, lr}
	bl sub_0806DB00
	movs r0, #0
_0809726C:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	movs r1, #1
	bl sub_0809B280
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xb
	ble _0809726C
	movs r0, #0
_08097286:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_0809B2F8
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #3
	ble _08097286
	movs r0, #0
_0809729E:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_0809B434
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #3
	ble _0809729E
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080972BC
sub_080972BC: @ 0x080972BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	mov r8, r4
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r3, r2, #0
	ldr r1, _080972FC @ =gUnk_03006B54
	lsls r0, r7, #3
	movs r5, #0x90
	lsls r5, r5, #3
	adds r0, r0, r5
	ldr r1, [r1]
	adds r5, r1, r0
	movs r0, #0
	strh r4, [r5, #2]
	strb r2, [r5, #4]
	strb r0, [r5, #6]
	movs r6, #0
	cmp r2, #0xf
	bhi _08097300
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	adds r1, r4, #0
	b _0809732E
	.align 2, 0
_080972FC: .4byte gUnk_03006B54
_08097300:
	adds r0, r2, #0
	subs r0, #0x11
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _08097318
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	adds r1, r4, #0
	b _0809732E
_08097318:
	adds r0, r3, #0
	subs r0, #0x16
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #9
	bhi _08097334
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	mov r1, r8
_0809732E:
	bl sub_08001D78
	adds r6, r0, #0
_08097334:
	adds r0, r7, #0
	bl sub_080114AC
	lsls r4, r7, #0x18
	lsrs r4, r4, #0x18
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_080114D8
	adds r0, r7, #0
	bl sub_08011370
	ldrb r2, [r5, #4]
	adds r0, r7, #0
	adds r1, r4, #0
	bl sub_080113A0
	ldrh r1, [r5]
	movs r0, #1
	orrs r0, r1
	strh r0, [r5]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_08097368
sub_08097368: @ 0x08097368
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #4
	mov r8, r0
	adds r4, r1, #0
	adds r5, r2, #0
	adds r6, r3, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r1, _0809740C @ =gUnk_03006B54
	mov sb, r1
	ldr r0, [r1]
	movs r1, #0xa8
	lsls r1, r1, #1
	adds r7, r0, r1
	movs r0, #0
	str r0, [sp]
	ldr r2, _08097410 @ =0x05000003
	mov r0, sp
	adds r1, r7, #0
	bl CpuSet
	mov r0, r8
	strb r0, [r7, #0xb]
	strh r4, [r7, #2]
	strh r5, [r7, #4]
	strb r6, [r7, #0xa]
	mov r1, r8
	cmp r1, #0xd
	bhi _080973F0
	movs r0, #0xa0
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #2
	ands r0, r1
	cmp r0, #0
	beq _080973F0
	mov r1, sb
	ldr r0, [r1]
	ldr r1, _08097414 @ =0x00001EB8
	adds r0, r0, r1
	ldrh r0, [r0, #4]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _08097418 @ =gUnk_02002820
	adds r1, r1, r0
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r7, #2]
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r7, #4]
	ldrb r0, [r1, #0xa]
	strb r0, [r7, #0xa]
_080973F0:
	ldr r0, _0809740C @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	movs r0, #0x10
	orrs r0, r1
	strh r0, [r2]
	add sp, #4
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809740C: .4byte gUnk_03006B54
_08097410: .4byte 0x05000003
_08097414: .4byte 0x00001EB8
_08097418: .4byte gUnk_02002820

	thumb_func_start sub_0809741C
sub_0809741C: @ 0x0809741C
	push {r4, lr}
	ldr r0, _08097438 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0xa8
	lsls r1, r1, #1
	adds r4, r0, r1
	ldrb r0, [r4, #0xb]
	cmp r0, #0x1c
	bhi _080974F4
	lsls r0, r0, #2
	ldr r1, _0809743C @ =_08097440
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08097438: .4byte gUnk_03006B54
_0809743C: .4byte _08097440
_08097440: @ jump table
	.4byte _080974BA @ case 0
	.4byte _080974C0 @ case 1
	.4byte _080974C6 @ case 2
	.4byte _080974CC @ case 3
	.4byte _080974D2 @ case 4
	.4byte _080974D2 @ case 5
	.4byte _080974D8 @ case 6
	.4byte _080974F4 @ case 7
	.4byte _080974DE @ case 8
	.4byte _080974E4 @ case 9
	.4byte _080974F4 @ case 10
	.4byte _080974EA @ case 11
	.4byte _080974B4 @ case 12
	.4byte _080974F4 @ case 13
	.4byte _080974F4 @ case 14
	.4byte _080974F4 @ case 15
	.4byte _080974BA @ case 16
	.4byte _080974C0 @ case 17
	.4byte _080974C6 @ case 18
	.4byte _080974CC @ case 19
	.4byte _080974D2 @ case 20
	.4byte _080974D2 @ case 21
	.4byte _080974D8 @ case 22
	.4byte _080974F4 @ case 23
	.4byte _080974DE @ case 24
	.4byte _080974E4 @ case 25
	.4byte _080974F4 @ case 26
	.4byte _080974EA @ case 27
	.4byte _080974F0 @ case 28
_080974B4:
	bl sub_08098E8C
	b _080974F4
_080974BA:
	bl sub_0809752C
	b _080974F4
_080974C0:
	bl sub_08097690
	b _080974F4
_080974C6:
	bl sub_0809799C
	b _080974F4
_080974CC:
	bl sub_08097CA4
	b _080974F4
_080974D2:
	bl sub_080981A8
	b _080974F4
_080974D8:
	bl sub_080984AC
	b _080974F4
_080974DE:
	bl sub_0809874C
	b _080974F4
_080974E4:
	bl sub_08097EAC
	b _080974F4
_080974EA:
	bl sub_08098A70
	b _080974F4
_080974F0:
	bl sub_08098E8C
_080974F4:
	movs r0, #0
	ldrsh r1, [r4, r0]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _0809751E
	ldrb r0, [r4, #0xb]
	cmp r0, #0xd
	bhi _08097512
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
_08097512:
	ldr r0, _08097524 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _08097528 @ =0x0000FFEF
	ands r0, r1
	strh r0, [r2]
_0809751E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_08097524: .4byte gUnk_03006B54
_08097528: .4byte 0x0000FFEF

	thumb_func_start sub_0809752C
sub_0809752C: @ 0x0809752C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _08097570 @ =gUnk_03006B54
	mov sb, r0
	ldr r1, [r0]
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r4, r1, r2
	ldr r0, _08097574 @ =0x00001EB8
	adds r6, r1, r0
	ldrh r3, [r6, #4]
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _08097578 @ =0x00000AB8
	adds r0, r0, r2
	adds r0, r0, r1
	mov r8, r0
	movs r0, #0x98
	lsls r0, r0, #3
	adds r7, r1, r0
	ldrb r5, [r4, #0xb]
	cmp r5, #0
	bne _08097638
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080975F8
	cmp r0, #1
	bgt _0809757C
	cmp r0, #0
	beq _08097582
	b _0809767E
	.align 2, 0
_08097570: .4byte gUnk_03006B54
_08097574: .4byte 0x00001EB8
_08097578: .4byte 0x00000AB8
_0809757C:
	cmp r0, #2
	beq _0809761A
	b _0809767E
_08097582:
	movs r2, #2
	ldrsh r1, [r4, r2]
	movs r0, #4
	ldrsh r2, [r4, r0]
	adds r0, r3, #0
	bl sub_0809F734
	ldrh r1, [r7, #0x1c]
	ldr r0, _080975F4 @ =0x0000FFFF
	cmp r1, r0
	beq _080975BC
	ldrh r0, [r6, #4]
	movs r3, #2
	mov r2, sb
	ldr r1, [r2]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r1, r2
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r5, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
_080975BC:
	ldrh r0, [r6, #4]
	ldrb r1, [r4, #0xa]
	bl sub_080A47D0
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	mov r1, sb
	ldr r0, [r1]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080975EE
	movs r0, #0x2d
	strh r0, [r4, #6]
_080975EE:
	ldrh r0, [r4]
	adds r0, #1
	b _0809767C
	.align 2, 0
_080975F4: .4byte 0x0000FFFF
_080975F8:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0xc
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r4]
	adds r0, #1
	b _0809767C
_0809761A:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809767E
	mov r2, r8
	ldrh r1, [r2, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0809767E
	b _0809767A
_08097638:
	cmp r5, #0x10
	bne _0809767E
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _0809764A
	cmp r0, #1
	beq _0809766C
	b _0809767E
_0809764A:
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r4]
	adds r0, #1
	b _0809767C
_0809766C:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809767E
_0809767A:
	ldr r0, _0809768C @ =0x0000FFFF
_0809767C:
	strh r0, [r4]
_0809767E:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809768C: .4byte 0x0000FFFF

	thumb_func_start sub_08097690
sub_08097690: @ 0x08097690
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _080976D8 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r1, r0
	ldr r2, _080976DC @ =0x00001EB8
	adds r2, r2, r1
	mov r8, r2
	ldrh r2, [r2, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _080976E0 @ =0x00000AB8
	adds r0, r0, r3
	adds r4, r1, r0
	movs r7, #0x9c
	lsls r7, r7, #1
	adds r1, r1, r7
	movs r3, #0
	movs r2, #0
	movs r5, #0
	ldrb r0, [r6, #0xb]
	cmp r0, #1
	beq _080976C6
	b _08097866
_080976C6:
	movs r7, #0
	ldrsh r0, [r6, r7]
	cmp r0, #1
	beq _080977A0
	cmp r0, #1
	bgt _080976E4
	cmp r0, #0
	beq _080976F0
	b _0809798E
	.align 2, 0
_080976D8: .4byte gUnk_03006B54
_080976DC: .4byte 0x00001EB8
_080976E0: .4byte 0x00000AB8
_080976E4:
	cmp r0, #2
	beq _080977E0
	cmp r0, #3
	bne _080976EE
	b _08097846
_080976EE:
	b _0809798E
_080976F0:
	ldrb r0, [r6, #0xa]
	cmp r0, #2
	beq _08097720
	cmp r0, #2
	bgt _08097700
	cmp r0, #1
	beq _08097716
	b _0809772E
_08097700:
	cmp r0, #3
	beq _0809770A
	cmp r0, #4
	beq _0809772A
	b _0809772E
_0809770A:
	ldrh r3, [r6, #2]
	ldrh r0, [r1, #2]
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	b _0809772E
_08097716:
	ldrh r3, [r6, #2]
	ldr r2, _0809771C @ =0x0000FFFC
	b _0809772E
	.align 2, 0
_0809771C: .4byte 0x0000FFFC
_08097720:
	ldrh r0, [r1]
	adds r0, #0x18
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	b _0809772C
_0809772A:
	ldr r3, _08097798 @ =0x0000FFE8
_0809772C:
	ldrh r2, [r6, #4]
_0809772E:
	mov r1, r8
	ldrh r0, [r1, #4]
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0809F734
	mov r2, r8
	ldrh r0, [r2, #4]
	movs r3, #2
	ldr r5, _0809779C @ =gUnk_03006B54
	ldr r1, [r5]
	movs r7, #0x98
	lsls r7, r7, #3
	adds r1, r1, r7
	movs r4, #0
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	strh r4, [r6, #6]
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08097790
	movs r0, #0x2d
	strh r0, [r6, #6]
_08097790:
	ldrh r0, [r6]
	adds r0, #1
	b _0809798C
	.align 2, 0
_08097798: .4byte 0x0000FFE8
_0809779C: .4byte gUnk_03006B54
_080977A0:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _080977B0
	b _0809798E
_080977B0:
	movs r0, #6
	strb r0, [r4, #0xb]
	bl sub_080A4694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080977C2
	movs r0, #0xc
	strb r0, [r4, #0xb]
_080977C2:
	movs r0, #0
	strb r0, [r4, #0xc]
	mov r1, r8
	ldrh r0, [r1, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	movs r3, #1
	bl sub_080A4844
	strh r5, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _0809798C
_080977E0:
	ldrb r0, [r6, #0xa]
	cmp r0, #3
	bne _080977F0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r6, #4]
	b _08097818
_080977F0:
	cmp r0, #1
	bne _080977FE
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #4]
	b _08097818
_080977FE:
	cmp r0, #2
	bne _0809780C
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r6, #2]
	b _08097818
_0809780C:
	cmp r0, #4
	bne _0809781E
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #2]
_08097818:
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0809781E:
	cmp r5, #0x1e
	bls _08097824
	b _0809798E
_08097824:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _0809798C
_08097846:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08097856
	b _0809798E
_08097856:
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _08097864
	b _0809798E
_08097864:
	b _0809798A
_08097866:
	cmp r0, #0x11
	beq _0809786C
	b _0809798E
_0809786C:
	movs r7, #0
	ldrsh r0, [r6, r7]
	cmp r0, #1
	beq _08097904
	cmp r0, #1
	bgt _0809787E
	cmp r0, #0
	beq _08097884
	b _0809798E
_0809787E:
	cmp r0, #2
	beq _0809797C
	b _0809798E
_08097884:
	ldrb r0, [r6, #0xa]
	cmp r0, #2
	beq _080978BE
	cmp r0, #2
	bgt _08097894
	cmp r0, #1
	beq _080978B0
	b _080978D6
_08097894:
	cmp r0, #3
	beq _0809789E
	cmp r0, #4
	beq _080978C8
	b _080978D6
_0809789E:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r6, #2]
	ldr r0, _080978AC @ =0x0000FFFC
	b _080978D4
	.align 2, 0
_080978AC: .4byte 0x0000FFFC
_080978B0:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r6, #2]
	ldrh r0, [r1, #2]
	adds r0, #0x20
	b _080978D4
_080978BE:
	ldr r0, _080978C4 @ =0x0000FFE8
	b _080978CC
	.align 2, 0
_080978C4: .4byte 0x0000FFE8
_080978C8:
	ldrh r0, [r1]
	adds r0, #0x18
_080978CC:
	strh r0, [r6, #2]
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
_080978D4:
	strh r0, [r6, #4]
_080978D6:
	movs r0, #6
	strb r0, [r4, #0xb]
	bl sub_080A4694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080978E8
	movs r0, #0xc
	strb r0, [r4, #0xb]
_080978E8:
	movs r0, #0
	strb r0, [r4, #0xc]
	mov r1, r8
	ldrh r0, [r1, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	movs r3, #1
	bl sub_080A4844
	ldrh r0, [r6]
	adds r0, #1
	b _0809798C
_08097904:
	ldrb r0, [r6, #0xa]
	cmp r0, #3
	bne _0809791E
	movs r7, #4
	ldrsh r2, [r6, r7]
	cmp r2, #0
	bge _08097914
	rsbs r2, r2, #0
_08097914:
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r0, r2, r0
	b _08097952
_0809791E:
	cmp r0, #1
	bne _0809792C
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #4]
	b _08097950
_0809792C:
	cmp r0, #2
	bne _08097944
	movs r0, #2
	ldrsh r2, [r6, r0]
	cmp r2, #0
	bge _0809793A
	rsbs r2, r2, #0
_0809793A:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r0, r2, r0
	b _08097952
_08097944:
	cmp r0, #4
	bne _08097956
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #2]
_08097950:
	subs r0, r0, r1
_08097952:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_08097956:
	cmp r5, #0x18
	bhi _0809798E
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _0809798C
_0809797C:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809798E
_0809798A:
	ldr r0, _08097998 @ =0x0000FFFF
_0809798C:
	strh r0, [r6]
_0809798E:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097998: .4byte 0x0000FFFF

	thumb_func_start sub_0809799C
sub_0809799C: @ 0x0809799C
	push {r4, r5, r6, r7, lr}
	ldr r0, _080979D8 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r1, r0
	ldr r2, _080979DC @ =0x00001EB8
	adds r7, r1, r2
	ldrh r2, [r7, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _080979E0 @ =0x00000AB8
	adds r0, r0, r3
	adds r4, r1, r0
	movs r1, #0
	movs r2, #0
	movs r5, #0
	ldrb r0, [r6, #0xb]
	cmp r0, #2
	beq _080979C6
	b _08097B5C
_080979C6:
	movs r3, #0
	ldrsh r0, [r6, r3]
	cmp r0, #1
	beq _08097A98
	cmp r0, #1
	bgt _080979E4
	cmp r0, #0
	beq _080979F0
	b _08097C98
	.align 2, 0
_080979D8: .4byte gUnk_03006B54
_080979DC: .4byte 0x00001EB8
_080979E0: .4byte 0x00000AB8
_080979E4:
	cmp r0, #2
	beq _08097AD6
	cmp r0, #3
	bne _080979EE
	b _08097B3C
_080979EE:
	b _08097C98
_080979F0:
	ldrb r0, [r6, #0xa]
	cmp r0, #2
	beq _08097A1E
	cmp r0, #2
	bgt _08097A00
	cmp r0, #1
	beq _08097A12
	b _08097A2E
_08097A00:
	cmp r0, #3
	beq _08097A0A
	cmp r0, #4
	beq _08097A24
	b _08097A2E
_08097A0A:
	ldrh r1, [r6, #2]
	ldrh r0, [r6, #4]
	adds r0, #0x18
	b _08097A18
_08097A12:
	ldrh r1, [r6, #2]
	ldrh r0, [r6, #4]
	subs r0, #0x18
_08097A18:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	b _08097A2E
_08097A1E:
	ldrh r0, [r6, #2]
	adds r0, #0x18
	b _08097A28
_08097A24:
	ldrh r0, [r6, #2]
	subs r0, #0x18
_08097A28:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldrh r2, [r6, #4]
_08097A2E:
	ldrh r0, [r7, #4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0809F734
	ldrh r0, [r7, #4]
	movs r3, #2
	ldr r5, _08097A94 @ =gUnk_03006B54
	ldr r1, [r5]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r1, r2
	movs r4, #0
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	strh r4, [r6, #6]
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08097A8C
	movs r0, #0x2d
	strh r0, [r6, #6]
_08097A8C:
	ldrh r0, [r6]
	adds r0, #1
	b _08097C96
	.align 2, 0
_08097A94: .4byte gUnk_03006B54
_08097A98:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _08097AA8
	b _08097C98
_08097AA8:
	movs r0, #6
	strb r0, [r4, #0xb]
	bl sub_080A4694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08097ABA
	movs r0, #0xc
	strb r0, [r4, #0xb]
_08097ABA:
	movs r0, #0
	strb r0, [r4, #0xc]
	ldrh r0, [r7, #4]
	movs r3, #2
	ldrsh r1, [r6, r3]
	movs r3, #4
	ldrsh r2, [r6, r3]
	movs r3, #1
	bl sub_080A4844
	strh r5, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _08097C96
_08097AD6:
	ldrb r0, [r6, #0xa]
	cmp r0, #3
	bne _08097AE6
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r6, #4]
	b _08097B0E
_08097AE6:
	cmp r0, #1
	bne _08097AF4
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #4]
	b _08097B0E
_08097AF4:
	cmp r0, #2
	bne _08097B02
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r6, #2]
	b _08097B0E
_08097B02:
	cmp r0, #4
	bne _08097B14
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #2]
_08097B0E:
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_08097B14:
	cmp r5, #0x1e
	bls _08097B1A
	b _08097C98
_08097B1A:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _08097C96
_08097B3C:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08097B4C
	b _08097C98
_08097B4C:
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _08097B5A
	b _08097C98
_08097B5A:
	b _08097C94
_08097B5C:
	cmp r0, #0x12
	beq _08097B62
	b _08097C98
_08097B62:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _08097BEA
	cmp r0, #1
	bgt _08097B74
	cmp r0, #0
	beq _08097B7C
	b _08097C98
_08097B74:
	cmp r0, #2
	bne _08097B7A
	b _08097C86
_08097B7A:
	b _08097C98
_08097B7C:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r2, r0, #0x14
	strh r2, [r6, #2]
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r6, #4]
	ldrb r1, [r6, #0xa]
	cmp r1, #2
	beq _08097BB2
	cmp r1, #2
	bgt _08097B9C
	cmp r1, #1
	beq _08097BAC
	b _08097BBE
_08097B9C:
	cmp r1, #3
	beq _08097BA6
	cmp r1, #4
	beq _08097BB8
	b _08097BBE
_08097BA6:
	subs r0, #0x18
	strh r0, [r6, #4]
	b _08097BBE
_08097BAC:
	adds r0, #0x18
	strh r0, [r6, #4]
	b _08097BBE
_08097BB2:
	adds r0, r2, #0
	subs r0, #0x18
	b _08097BBC
_08097BB8:
	adds r0, r2, #0
	adds r0, #0x18
_08097BBC:
	strh r0, [r6, #2]
_08097BBE:
	movs r0, #6
	strb r0, [r4, #0xb]
	bl sub_080A4694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08097BD0
	movs r0, #0xc
	strb r0, [r4, #0xb]
_08097BD0:
	movs r0, #0
	strb r0, [r4, #0xc]
	ldrh r0, [r7, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	movs r3, #1
	bl sub_080A4844
	ldrh r0, [r6]
	adds r0, #1
	b _08097C96
_08097BEA:
	ldrb r0, [r6, #0xa]
	cmp r0, #3
	bne _08097C16
	ldrh r1, [r6, #4]
	movs r2, #4
	ldrsh r0, [r6, r2]
	cmp r0, #0
	bge _08097C0E
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x14
	movs r3, #4
	ldrsh r0, [r6, r3]
	cmp r0, #0
	bge _08097C0A
	rsbs r0, r0, #0
_08097C0A:
	adds r0, r1, r0
	b _08097C5C
_08097C0E:
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	b _08097C5A
_08097C16:
	cmp r0, #1
	bne _08097C24
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #4]
	b _08097C5A
_08097C24:
	cmp r0, #2
	bne _08097C4E
	ldrh r1, [r6, #2]
	movs r2, #2
	ldrsh r0, [r6, r2]
	cmp r0, #0
	bge _08097C46
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r1, r0, #0x14
	movs r3, #2
	ldrsh r0, [r6, r3]
	cmp r0, #0
	bge _08097C42
	rsbs r0, r0, #0
_08097C42:
	adds r0, r1, r0
	b _08097C5C
_08097C46:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	b _08097C5A
_08097C4E:
	cmp r0, #4
	bne _08097C60
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r6, #2]
_08097C5A:
	subs r0, r0, r1
_08097C5C:
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_08097C60:
	cmp r5, #0x18
	bhi _08097C98
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _08097C96
_08097C86:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08097C98
_08097C94:
	ldr r0, _08097CA0 @ =0x0000FFFF
_08097C96:
	strh r0, [r6]
_08097C98:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097CA0: .4byte 0x0000FFFF

	thumb_func_start sub_08097CA4
sub_08097CA4: @ 0x08097CA4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08097CE0 @ =gUnk_03006B54
	mov r8, r0
	ldr r1, [r0]
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r4, r1, r2
	ldr r3, _08097CE4 @ =0x00001EB8
	adds r7, r1, r3
	ldrh r3, [r7, #4]
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _08097CE8 @ =0x00000AB8
	adds r0, r0, r2
	adds r6, r1, r0
	ldrb r0, [r4, #0xb]
	cmp r0, #3
	beq _08097CCE
	b _08097DDC
_08097CCE:
	movs r0, #0
	ldrsh r5, [r4, r0]
	cmp r5, #1
	beq _08097D5E
	cmp r5, #1
	bgt _08097CEC
	cmp r5, #0
	beq _08097CF6
	b _08097E9C
	.align 2, 0
_08097CE0: .4byte gUnk_03006B54
_08097CE4: .4byte 0x00001EB8
_08097CE8: .4byte 0x00000AB8
_08097CEC:
	cmp r5, #2
	beq _08097D9E
	cmp r5, #3
	beq _08097DC0
	b _08097E9C
_08097CF6:
	movs r2, #2
	ldrsh r1, [r4, r2]
	ldrh r2, [r4, #4]
	subs r2, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r3, #0
	bl sub_0809F734
	ldrh r0, [r7, #4]
	movs r3, #2
	mov r2, r8
	ldr r1, [r2]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r1, r2
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r5, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	strh r5, [r4, #6]
	mov r3, r8
	ldr r0, [r3]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08097D58
	movs r0, #0x2d
	strh r0, [r4, #6]
_08097D58:
	ldrh r0, [r4]
	adds r0, #1
	b _08097E9A
_08097D5E:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _08097D6E
	b _08097E9C
_08097D6E:
	movs r0, #6
	strb r0, [r6, #0xb]
	bl sub_080A4694
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _08097D80
	movs r0, #0xc
	strb r0, [r6, #0xb]
_08097D80:
	movs r0, #0
	strb r0, [r6, #0xc]
	ldrh r0, [r7, #4]
	movs r2, #2
	ldrsh r1, [r4, r2]
	movs r3, #4
	ldrsh r2, [r4, r3]
	movs r3, #1
	bl sub_080A4844
	movs r0, #0
	strh r0, [r4, #6]
	ldrh r0, [r4]
	adds r0, #1
	b _08097E9A
_08097D9E:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r4]
	adds r0, #1
	b _08097E9A
_08097DC0:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08097E9C
	ldrh r1, [r6, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _08097E9C
	b _08097E98
_08097DDC:
	cmp r0, #0x13
	bne _08097E9C
	movs r0, #0
	ldrsh r5, [r4, r0]
	cmp r5, #1
	beq _08097E20
	cmp r5, #1
	bgt _08097DF2
	cmp r5, #0
	beq _08097DFC
	b _08097E9C
_08097DF2:
	cmp r5, #2
	beq _08097E5A
	cmp r5, #3
	beq _08097E8A
	b _08097E9C
_08097DFC:
	movs r0, #6
	strb r0, [r6, #0xb]
	strb r5, [r6, #0xc]
	ldrh r0, [r7, #4]
	movs r2, #2
	ldrsh r1, [r4, r2]
	ldrh r2, [r4, #4]
	subs r2, #0x24
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #0
	bl sub_080A4844
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	strh r5, [r4, #6]
	b _08097E9C
_08097E20:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xb
	ble _08097E9C
	movs r0, #3
	bl sub_08011104
	ldrh r0, [r6, #0x18]
	adds r0, #0x10
	lsls r5, r0
	movs r0, #3
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r0, #0
	strh r0, [r4, #6]
	b _08097E9C
_08097E5A:
	ldrh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xb
	ble _08097E9C
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r4]
	adds r0, #1
	b _08097E9A
_08097E8A:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08097E9C
_08097E98:
	ldr r0, _08097EA8 @ =0x0000FFFF
_08097E9A:
	strh r0, [r4]
_08097E9C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08097EA8: .4byte 0x0000FFFF

	thumb_func_start sub_08097EAC
sub_08097EAC: @ 0x08097EAC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08097EE8 @ =gUnk_03006B54
	ldr r2, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r2, r0
	ldr r1, _08097EEC @ =0x00001EB8
	adds r5, r2, r1
	ldrh r1, [r5, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r3, _08097EF0 @ =0x00000AB8
	adds r0, r0, r3
	adds r7, r2, r0
	ldrb r0, [r6, #0xb]
	cmp r0, #9
	beq _08097ED4
	b _0809807A
_08097ED4:
	movs r4, #0
	ldrsh r0, [r6, r4]
	cmp r0, #5
	bls _08097EDE
	b _0809819A
_08097EDE:
	lsls r0, r0, #2
	ldr r1, _08097EF4 @ =_08097EF8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08097EE8: .4byte gUnk_03006B54
_08097EEC: .4byte 0x00001EB8
_08097EF0: .4byte 0x00000AB8
_08097EF4: .4byte _08097EF8
_08097EF8: @ jump table
	.4byte _08097F10 @ case 0
	.4byte _08097F84 @ case 1
	.4byte _08097FBA @ case 2
	.4byte _08097FE8 @ case 3
	.4byte _0809802A @ case 4
	.4byte _0809805A @ case 5
_08097F10:
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r5, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	bl sub_0809F734
	ldrh r0, [r5, #4]
	movs r3, #2
	ldr r5, _08097F7C @ =gUnk_03006B54
	ldr r1, [r5]
	movs r4, #0x98
	lsls r4, r4, #3
	adds r1, r1, r4
	movs r4, #0
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	ldrh r1, [r7, #0xe]
	ldr r0, _08097F80 @ =0x0000FFCF
	ands r0, r1
	strh r0, [r7, #0xe]
	strh r4, [r6, #6]
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08097F76
	movs r0, #0x2d
	strh r0, [r6, #6]
_08097F76:
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
	.align 2, 0
_08097F7C: .4byte gUnk_03006B54
_08097F80: .4byte 0x0000FFCF
_08097F84:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2d
	bgt _08097F94
	b _0809819A
_08097F94:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	strh r0, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_08097FBA:
	movs r4, #0
	movs r0, #0x30
	strb r0, [r7, #0xb]
	movs r0, #1
	strb r0, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0x1c
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #0x30
	movs r3, #1
	bl sub_08009F50
	ldrh r1, [r7, #0xe]
	movs r0, #0x10
	orrs r0, r1
	strh r0, [r7, #0xe]
	strh r4, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_08097FE8:
	ldrb r0, [r6, #0xb]
	cmp r0, #5
	bne _0809800C
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2a
	bgt _08097FFE
	b _0809819A
_08097FFE:
	ldrh r0, [r7, #0xe]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r7, #0xe]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_0809800C:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x16
	bgt _0809801C
	b _0809819A
_0809801C:
	ldrh r0, [r7, #0xe]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r7, #0xe]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_0809802A:
	adds r4, r7, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809803C
	b _0809819A
_0809803C:
	movs r0, #0
	strb r0, [r7, #0xb]
	strb r0, [r7, #0xc]
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_0809805A:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0809806A
	b _0809819A
_0809806A:
	ldrh r1, [r7, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _08098078
	b _0809819A
_08098078:
	b _08098196
_0809807A:
	cmp r0, #0x19
	beq _08098080
	b _0809819A
_08098080:
	movs r0, #0
	ldrsh r4, [r6, r0]
	cmp r4, #1
	beq _080980D8
	cmp r4, #1
	bgt _08098092
	cmp r4, #0
	beq _0809809C
	b _0809819A
_08098092:
	cmp r4, #2
	beq _08098154
	cmp r4, #3
	beq _08098188
	b _0809819A
_0809809C:
	ldr r0, _080980D4 @ =0x0000FFFF
	movs r3, #2
	movs r4, #0x98
	lsls r4, r4, #3
	adds r1, r2, r4
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	subs r0, #0xff
	ands r0, r2
	movs r2, #0
	orrs r0, r3
	strh r0, [r1, #0x1a]
	movs r0, #6
	strb r0, [r7, #0xb]
	strb r2, [r7, #0xc]
	ldrh r0, [r5, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	ldrh r2, [r6, #4]
	adds r2, #7
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	bl sub_080A4844
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
	.align 2, 0
_080980D4: .4byte 0x0000FFFF
_080980D8:
	ldrh r1, [r7, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	cmp r0, #0
	bne _0809819A
	ldr r0, _0809814C @ =0x0000FFDF
	ands r0, r1
	ldr r1, _08098150 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r7, #0xe]
	movs r0, #0x2f
	strb r0, [r7, #0xb]
	strb r4, [r7, #0xc]
	ldrh r0, [r5, #4]
	movs r3, #2
	ldrsh r1, [r6, r3]
	ldrh r2, [r6, #4]
	adds r2, #8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0809F734
	adds r0, r7, #0
	adds r0, #0x1c
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r7, #0xb]
	ldrb r3, [r7, #0xc]
	bl sub_08009F50
	movs r0, #3
	bl sub_08011104
	ldrh r0, [r7, #0x18]
	adds r0, #0x10
	lsls r4, r0
	movs r0, #3
	adds r1, r4, #0
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	mov r4, r8
	strh r4, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
	.align 2, 0
_0809814C: .4byte 0x0000FFDF
_08098150: .4byte 0x0000FEFF
_08098154:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	ble _0809819A
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	strh r0, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _08098198
_08098188:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809819A
_08098196:
	ldr r0, _080981A4 @ =0x0000FFFF
_08098198:
	strh r0, [r6]
_0809819A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080981A4: .4byte 0x0000FFFF

	thumb_func_start sub_080981A8
sub_080981A8: @ 0x080981A8
	push {r4, r5, r6, r7, lr}
	ldr r0, _080981E8 @ =gUnk_03006B54
	ldr r2, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r2, r0
	ldr r1, _080981EC @ =0x00001EB8
	adds r5, r2, r1
	ldrh r1, [r5, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r3, _080981F0 @ =0x00000AB8
	adds r0, r0, r3
	adds r7, r2, r0
	ldrb r1, [r6, #0xb]
	subs r0, r1, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _080981D2
	b _0809838C
_080981D2:
	movs r4, #0
	ldrsh r0, [r6, r4]
	cmp r0, #5
	bls _080981DC
	b _080984A2
_080981DC:
	lsls r0, r0, #2
	ldr r1, _080981F4 @ =_080981F8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080981E8: .4byte gUnk_03006B54
_080981EC: .4byte 0x00001EB8
_080981F0: .4byte 0x00000AB8
_080981F4: .4byte _080981F8
_080981F8: @ jump table
	.4byte _08098210 @ case 0
	.4byte _08098284 @ case 1
	.4byte _080982BA @ case 2
	.4byte _080982FA @ case 3
	.4byte _0809833C @ case 4
	.4byte _0809836C @ case 5
_08098210:
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r5, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	bl sub_0809F734
	ldrh r0, [r5, #4]
	movs r3, #2
	ldr r5, _0809827C @ =gUnk_03006B54
	ldr r1, [r5]
	movs r4, #0x98
	lsls r4, r4, #3
	adds r1, r1, r4
	movs r4, #0
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r3
	strh r0, [r1, #0x1a]
	strh r4, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	ldrh r1, [r7, #0xe]
	ldr r0, _08098280 @ =0x0000FFCF
	ands r0, r1
	strh r0, [r7, #0xe]
	strh r4, [r6, #6]
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08098276
	movs r0, #0x2d
	strh r0, [r6, #6]
_08098276:
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
	.align 2, 0
_0809827C: .4byte gUnk_03006B54
_08098280: .4byte 0x0000FFCF
_08098284:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2d
	bgt _08098294
	b _080984A2
_08098294:
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	strh r0, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_080982BA:
	ldrb r0, [r6, #0xb]
	cmp r0, #4
	bne _080982C4
	movs r0, #0x2e
	b _080982C6
_080982C4:
	movs r0, #0x2b
_080982C6:
	strb r0, [r7, #0xb]
	movs r4, #0
	movs r0, #1
	strb r0, [r7, #0xc]
	adds r0, r7, #0
	adds r0, #0x1c
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r7, #0xb]
	movs r3, #1
	bl sub_08009F50
	movs r0, #0x6c
	movs r1, #0
	bl sub_080147B8
	ldrh r1, [r7, #0xe]
	movs r0, #0x10
	orrs r0, r1
	strh r0, [r7, #0xe]
	strh r4, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_080982FA:
	ldrb r0, [r6, #0xb]
	cmp r0, #5
	bne _0809831E
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2a
	bgt _08098310
	b _080984A2
_08098310:
	ldrh r0, [r7, #0xe]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r7, #0xe]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_0809831E:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x16
	bgt _0809832E
	b _080984A2
_0809832E:
	ldrh r0, [r7, #0xe]
	movs r1, #0x20
	orrs r0, r1
	strh r0, [r7, #0xe]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_0809833C:
	adds r4, r7, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809834E
	b _080984A2
_0809834E:
	movs r0, #0
	strb r0, [r7, #0xb]
	strb r0, [r7, #0xc]
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_0809836C:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0809837C
	b _080984A2
_0809837C:
	ldrh r1, [r7, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _0809838A
	b _080984A2
_0809838A:
	b _0809849E
_0809838C:
	adds r0, r1, #0
	subs r0, #0x14
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bls _0809839A
	b _080984A2
_0809839A:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #1
	beq _080983F4
	cmp r0, #1
	bgt _080983AC
	cmp r0, #0
	beq _080983B6
	b _080984A2
_080983AC:
	cmp r0, #2
	beq _0809845C
	cmp r0, #3
	beq _08098490
	b _080984A2
_080983B6:
	ldr r0, _080983F0 @ =0x0000FFFF
	movs r3, #2
	movs r4, #0x98
	lsls r4, r4, #3
	adds r1, r2, r4
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	subs r0, #0xff
	ands r0, r2
	movs r2, #0
	orrs r0, r3
	strh r0, [r1, #0x1a]
	movs r0, #6
	strb r0, [r7, #0xb]
	strb r2, [r7, #0xc]
	ldrh r0, [r5, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	ldrh r2, [r6, #4]
	adds r2, #7
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r3, #1
	bl sub_080A4844
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
	.align 2, 0
_080983F0: .4byte 0x0000FFFF
_080983F4:
	ldrh r1, [r7, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _080984A2
	ldr r0, _08098414 @ =0x0000FFDF
	ands r0, r1
	ldr r1, _08098418 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r7, #0xe]
	ldrb r0, [r6, #0xb]
	cmp r0, #0x14
	bne _0809841C
	movs r0, #0x2d
	b _0809841E
	.align 2, 0
_08098414: .4byte 0x0000FFDF
_08098418: .4byte 0x0000FEFF
_0809841C:
	movs r0, #0x2c
_0809841E:
	strb r0, [r7, #0xb]
	movs r4, #0
	movs r0, #1
	strb r0, [r7, #0xc]
	ldrh r0, [r5, #4]
	movs r3, #2
	ldrsh r1, [r6, r3]
	ldrh r2, [r6, #4]
	adds r2, #8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0809F734
	adds r0, r7, #0
	adds r0, #0x1c
	ldrb r1, [r7, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r7, #0xb]
	ldrb r3, [r7, #0xc]
	bl sub_08009F50
	movs r0, #0x6c
	movs r1, #0
	bl sub_080147B8
	strh r4, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_0809845C:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xc
	ble _080984A2
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x18
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	strh r0, [r6, #6]
	ldrh r0, [r6]
	adds r0, #1
	b _080984A0
_08098490:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080984A2
_0809849E:
	ldr r0, _080984A8 @ =0x0000FFFF
_080984A0:
	strh r0, [r6]
_080984A2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080984A8: .4byte 0x0000FFFF

	thumb_func_start sub_080984AC
sub_080984AC: @ 0x080984AC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _0809850C @ =0x0000017F
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r0, _08098510 @ =gUnk_03006B54
	mov sl, r0
	ldr r1, [r0]
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r5, r1, r2
	movs r0, #0x98
	lsls r0, r0, #3
	adds r7, r1, r0
	ldr r2, _08098514 @ =0x00001EB8
	adds r6, r1, r2
	ldrh r3, [r6, #4]
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _08098518 @ =0x00000AB8
	adds r0, r0, r2
	adds r4, r1, r0
	ldrb r0, [r5, #0xb]
	cmp r0, #6
	bne _080985F0
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _08098572
	cmp r0, #1
	bgt _0809851C
	cmp r0, #0
	beq _08098526
	b _0809873A
	.align 2, 0
_0809850C: .4byte 0x0000017F
_08098510: .4byte gUnk_03006B54
_08098514: .4byte 0x00001EB8
_08098518: .4byte 0x00000AB8
_0809851C:
	cmp r0, #2
	beq _080985D6
	cmp r0, #3
	beq _080985EA
	b _0809873A
_08098526:
	movs r2, #2
	ldrsh r1, [r5, r2]
	movs r0, #4
	ldrsh r2, [r5, r0]
	adds r0, r3, #0
	bl sub_0809F734
	ldrh r0, [r6, #4]
	ldrb r1, [r5, #0xa]
	bl sub_080A47D0
	movs r0, #1
	bl sub_08096BEC
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	mov r1, sl
	ldr r0, [r1]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809856C
	movs r0, #0x2d
	strh r0, [r5, #6]
_0809856C:
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_08098572:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _08098582
	b _0809873A
_08098582:
	movs r0, #3
	strb r0, [r4, #0xb]
	movs r0, #0
	strb r0, [r4, #0xc]
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r7]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	subs r0, r0, r1
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r7, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	subs r1, r1, r2
	movs r2, #1
	bl sub_080992A0
	bl sub_080993E4
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	strh r0, [r5, #6]
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_080985D6:
	bl sub_080993E4
	movs r1, #0x10
	ands r1, r0
	cmp r1, #0
	bne _080985E4
	b _0809873A
_080985E4:
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_080985EA:
	bl sub_0809B720
	b _08098736
_080985F0:
	cmp r0, #0x16
	beq _080985F6
	b _0809873A
_080985F6:
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #5
	bls _08098600
	b _0809873A
_08098600:
	lsls r0, r0, #2
	ldr r1, _0809860C @ =_08098610
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809860C: .4byte _08098610
_08098610: @ jump table
	.4byte _08098628 @ case 0
	.4byte _08098658 @ case 1
	.4byte _0809866C @ case 2
	.4byte _080986F0 @ case 3
	.4byte _0809871E @ case 4
	.4byte _08098728 @ case 5
_08098628:
	movs r1, #0
	movs r0, #3
	strb r0, [r4, #0xb]
	strb r1, [r4, #0xc]
	mov r0, sb
	subs r0, #0x32
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _08098646
	ldrh r0, [r6, #4]
	movs r1, #9
	bl sub_0809F9C8
	b _0809864E
_08098646:
	ldrh r0, [r6, #4]
	movs r1, #2
	bl sub_0809F9C8
_0809864E:
	movs r0, #0
	strh r0, [r5, #6]
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_08098658:
	ldrh r1, [r4, #0x16]
	ldr r0, _08098668 @ =0x0000FFFF
	cmp r1, r0
	bne _0809873A
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
	.align 2, 0
_08098668: .4byte 0x0000FFFF
_0809866C:
	bl sub_08096E64
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _0809873A
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r7]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	subs r0, r0, r1
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r7, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	subs r1, r1, r2
	movs r2, #2
	bl sub_080992A0
	movs r0, #0xff
	movs r1, #0
	bl sub_080147B8
	mov r0, sb
	subs r0, #0x32
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080986C4
	mov r0, r8
	cmp r0, #0
	bne _080986BC
	ldr r0, _080986B8 @ =0x000005CE
	b _080986CC
	.align 2, 0
_080986B8: .4byte 0x000005CE
_080986BC:
	ldr r0, _080986C0 @ =0x0000056D
	b _080986CC
	.align 2, 0
_080986C0: .4byte 0x0000056D
_080986C4:
	mov r1, r8
	cmp r1, #0
	bne _080986D8
	ldr r0, _080986D4 @ =0x000005CF
_080986CC:
	movs r1, #0
	bl sub_080147B8
	b _080986E0
	.align 2, 0
_080986D4: .4byte 0x000005CF
_080986D8:
	ldr r0, _080986EC @ =0x0000056E
	movs r1, #0
	bl sub_080147B8
_080986E0:
	movs r0, #0
	strh r0, [r5, #6]
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
	.align 2, 0
_080986EC: .4byte 0x0000056E
_080986F0:
	bl sub_080993E4
	movs r1, #0x10
	ands r1, r0
	cmp r1, #0
	beq _0809873A
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_0809871E:
	bl sub_0809B720
	ldrh r0, [r5]
	adds r0, #1
	b _08098738
_08098728:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809873A
_08098736:
	ldr r0, _08098748 @ =0x0000FFFF
_08098738:
	strh r0, [r5]
_0809873A:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098748: .4byte 0x0000FFFF

	thumb_func_start sub_0809874C
sub_0809874C: @ 0x0809874C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0809878C @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r1, r0
	ldr r2, _08098790 @ =0x00001EB8
	adds r2, r2, r1
	mov r8, r2
	ldrh r2, [r2, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _08098794 @ =0x00000AB8
	adds r0, r0, r3
	adds r5, r1, r0
	ldrb r0, [r6, #0xb]
	cmp r0, #8
	beq _08098776
	b _0809894C
_08098776:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #4
	bls _08098780
	b _08098A60
_08098780:
	lsls r0, r0, #2
	ldr r1, _08098798 @ =_0809879C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809878C: .4byte gUnk_03006B54
_08098790: .4byte 0x00001EB8
_08098794: .4byte 0x00000AB8
_08098798: .4byte _0809879C
_0809879C: @ jump table
	.4byte _080987B0 @ case 0
	.4byte _08098814 @ case 1
	.4byte _08098890 @ case 2
	.4byte _080988DC @ case 3
	.4byte _0809890C @ case 4
_080987B0:
	ldrb r0, [r6, #0xa]
	adds r0, #3
	movs r1, #3
	ands r0, r1
	adds r0, #1
	strb r0, [r6, #0xa]
	mov r2, r8
	ldrh r0, [r2, #4]
	movs r3, #2
	ldrsh r1, [r6, r3]
	movs r3, #4
	ldrsh r2, [r6, r3]
	bl sub_0809F734
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r6, #0xa]
	bl sub_080A47D0
	movs r0, #1
	bl sub_08096BEC
	movs r1, #0x10
	rsbs r1, r1, #0
	ldr r2, _0809880C @ =0x00007FFF
	movs r0, #2
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldr r0, _08098810 @ =gUnk_03006B54
	ldr r0, [r0]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08098806
	movs r0, #0x2d
	strh r0, [r6, #6]
_08098806:
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
	.align 2, 0
_0809880C: .4byte 0x00007FFF
_08098810: .4byte gUnk_03006B54
_08098814:
	ldrh r0, [r6, #6]
	adds r0, #1
	movs r4, #0
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _08098826
	b _08098A60
_08098826:
	movs r0, #3
	strb r0, [r5, #0xb]
	movs r0, #0
	strb r0, [r5, #0xc]
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0xf
	movs r1, #0xf
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #0xf
	movs r1, #0xf
	bl sub_08004828
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	ldr r2, _0809888C @ =0x00007FFF
	movs r0, #2
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #0x71
	movs r1, #0
	bl sub_080147B8
	strh r4, [r6, #6]
	strh r4, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
	.align 2, 0
_0809888C: .4byte 0x00007FFF
_08098890:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	movs r4, #0xf
	lsrs r7, r0, #0x10
	asrs r5, r0, #0x10
	subs r4, r4, r5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r2, r8
	ldrh r0, [r2, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	cmp r5, #0xe
	bgt _080988D0
	b _08098A60
_080988D0:
	lsls r0, r5, #3
	adds r0, #2
	strh r0, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
_080988DC:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	mov r3, r8
	ldrh r0, [r3, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x12
	bgt _08098906
	b _08098A60
_08098906:
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
_0809890C:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _0809891C
	b _08098A60
_0809891C:
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	b _08098A5C
_0809894C:
	cmp r0, #0x18
	beq _08098952
	b _08098A60
_08098952:
	movs r0, #0
	ldrsh r4, [r6, r0]
	cmp r4, #1
	beq _080989D4
	cmp r4, #1
	bgt _08098964
	cmp r4, #0
	beq _0809896A
	b _08098A60
_08098964:
	cmp r4, #2
	beq _08098A14
	b _08098A60
_0809896A:
	movs r0, #3
	strb r0, [r5, #0xb]
	strb r4, [r5, #0xc]
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080989D0 @ =0x00007FFF
	movs r0, #2
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0x71
	movs r1, #0
	bl sub_080147B8
	ldrb r0, [r5, #9]
	strb r0, [r6, #0xa]
	strh r4, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
	.align 2, 0
_080989D0: .4byte 0x00007FFF
_080989D4:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r5, r7, #0x10
	lsrs r4, r5, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	asrs r5, r5, #0x10
	cmp r5, #0xe
	ble _08098A60
	ldrh r0, [r6]
	adds r0, #1
	b _08098A5E
_08098A14:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08098A60
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	movs r0, #1
	bl sub_080139E8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08098A60
_08098A5C:
	ldr r0, _08098A6C @ =0x0000FFFF
_08098A5E:
	strh r0, [r6]
_08098A60:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098A6C: .4byte 0x0000FFFF

	thumb_func_start sub_08098A70
sub_08098A70: @ 0x08098A70
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08098AB0 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r6, r1, r0
	ldr r2, _08098AB4 @ =0x00001EB8
	adds r2, r2, r1
	mov r8, r2
	ldrh r2, [r2, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _08098AB8 @ =0x00000AB8
	adds r0, r0, r3
	adds r5, r1, r0
	ldrb r0, [r6, #0xb]
	cmp r0, #0xb
	beq _08098A9A
	b _08098D40
_08098A9A:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #5
	bls _08098AA4
	b _08098E7C
_08098AA4:
	lsls r0, r0, #2
	ldr r1, _08098ABC @ =_08098AC0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08098AB0: .4byte gUnk_03006B54
_08098AB4: .4byte 0x00001EB8
_08098AB8: .4byte 0x00000AB8
_08098ABC: .4byte _08098AC0
_08098AC0: @ jump table
	.4byte _08098AD8 @ case 0
	.4byte _08098B90 @ case 1
	.4byte _08098BF0 @ case 2
	.4byte _08098C72 @ case 3
	.4byte _08098CBE @ case 4
	.4byte _08098D08 @ case 5
_08098AD8:
	movs r2, #2
	ldrsh r0, [r6, r2]
	cmp r0, #0
	beq _08098AFA
	movs r3, #4
	ldrsh r0, [r6, r3]
	cmp r0, #0
	beq _08098AFA
	mov r1, r8
	ldrh r0, [r1, #4]
	movs r2, #2
	ldrsh r1, [r6, r2]
	movs r3, #4
	ldrsh r2, [r6, r3]
	bl sub_0809F734
	b _08098B0E
_08098AFA:
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrh r1, [r5]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r5, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	bl sub_0809F734
_08098B0E:
	mov r2, r8
	ldrh r0, [r2, #4]
	movs r4, #2
	ldr r5, _08098B8C @ =gUnk_03006B54
	ldr r1, [r5]
	movs r3, #0x98
	lsls r3, r3, #3
	adds r1, r1, r3
	movs r3, #0
	strh r0, [r1, #0x1c]
	ldrh r2, [r1, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r2
	orrs r0, r4
	strh r0, [r1, #0x1a]
	strh r3, [r1, #0xc]
	movs r0, #1
	bl sub_08096BEC
	ldrb r0, [r6, #0xa]
	cmp r0, #0
	bne _08098B46
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r6, #0xa]
	bl sub_080A47D0
_08098B46:
	movs r4, #0x10
	rsbs r4, r4, #0
	movs r0, #2
	adds r1, r4, #0
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #3
	adds r1, r4, #0
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #3
	movs r1, #0xa
	bl sub_08011174
	ldr r0, [r5]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08098B84
	movs r0, #0x2d
	strh r0, [r6, #6]
_08098B84:
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
	.align 2, 0
_08098B8C: .4byte gUnk_03006B54
_08098B90:
	ldrh r0, [r6, #6]
	adds r0, #1
	strh r0, [r6, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2d
	bgt _08098BA0
	b _08098E7C
_08098BA0:
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0xf
	movs r1, #0xf
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #0xf
	movs r1, #0xf
	bl sub_08004828
	movs r0, #2
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098BF0:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	movs r4, #0xf
	lsrs r7, r0, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r2, r8
	ldrh r0, [r2, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08098C3A
	b _08098E7C
_08098C3A:
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _08098C4A
	b _08098E7C
_08098C4A:
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r1, #0x10
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x28
	bl sub_0801015C
	movs r0, #3
	movs r1, #0xb
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098C72:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	movs r4, #0xf
	lsrs r7, r0, #0x10
	asrs r5, r0, #0x10
	subs r4, r4, r5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r3, r8
	ldrh r0, [r3, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	cmp r5, #0xe
	bgt _08098CB2
	b _08098E7C
_08098CB2:
	lsls r0, r5, #3
	adds r0, #2
	strh r0, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098CBE:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08098CF8
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
_08098CF8:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x12
	bgt _08098D02
	b _08098E7C
_08098D02:
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098D08:
	ldr r0, _08098D3C @ =0x0000FFFF
	strh r0, [r6]
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	b _08098E7C
	.align 2, 0
_08098D3C: .4byte 0x0000FFFF
_08098D40:
	cmp r0, #0x1b
	beq _08098D46
	b _08098E7C
_08098D46:
	movs r2, #0
	ldrsh r4, [r6, r2]
	cmp r4, #1
	beq _08098DC8
	cmp r4, #1
	bgt _08098D58
	cmp r4, #0
	beq _08098D64
	b _08098E7C
_08098D58:
	cmp r4, #2
	beq _08098E2A
	cmp r4, #3
	bne _08098D62
	b _08098E6A
_08098D62:
	b _08098E7C
_08098D64:
	movs r0, #3
	strb r0, [r5, #0xb]
	strb r4, [r5, #0xc]
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	movs r0, #3
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #3
	movs r2, #0
	movs r3, #0x28
	bl sub_0801015C
	movs r0, #3
	movs r1, #0xa
	bl sub_08011174
	movs r0, #0x90
	movs r1, #0
	bl sub_080147B8
	ldrb r0, [r5, #9]
	strb r0, [r6, #0xa]
	strh r4, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098DC8:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	adds r4, r7, #0
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r3, r8
	ldrh r0, [r3, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r4
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	movs r0, #3
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08098E7C
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098E2A:
	ldrh r0, [r6, #8]
	adds r1, r0, #1
	strh r1, [r6, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r5, r7, #0x10
	lsrs r4, r5, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r6, #0xa]
	adds r1, r1, r7
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	asrs r5, r5, #0x10
	cmp r5, #0xe
	ble _08098E7C
	ldrh r0, [r6]
	adds r0, #1
	b _08098E7A
_08098E6A:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08098E7C
	ldr r0, _08098E88 @ =0x0000FFFF
_08098E7A:
	strh r0, [r6]
_08098E7C:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08098E88: .4byte 0x0000FFFF

	thumb_func_start sub_08098E8C
sub_08098E8C: @ 0x08098E8C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _08098ECC @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r7, r1, r0
	ldr r2, _08098ED0 @ =0x00001EB8
	adds r2, r2, r1
	mov r8, r2
	ldrh r2, [r2, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _08098ED4 @ =0x00000AB8
	adds r0, r0, r3
	adds r5, r1, r0
	ldrb r0, [r7, #0xb]
	cmp r0, #0xc
	beq _08098EB6
	b _08099116
_08098EB6:
	movs r1, #0
	ldrsh r0, [r7, r1]
	cmp r0, #5
	bls _08098EC0
	b _08099290
_08098EC0:
	lsls r0, r0, #2
	ldr r1, _08098ED8 @ =_08098EDC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08098ECC: .4byte gUnk_03006B54
_08098ED0: .4byte 0x00001EB8
_08098ED4: .4byte 0x00000AB8
_08098ED8: .4byte _08098EDC
_08098EDC: @ jump table
	.4byte _08098EF4 @ case 0
	.4byte _08098F7C @ case 1
	.4byte _08098FF0 @ case 2
	.4byte _0809905A @ case 3
	.4byte _080990A6 @ case 4
	.4byte _080990D6 @ case 5
_08098EF4:
	ldrb r0, [r7, #0xa]
	adds r0, #3
	movs r1, #3
	ands r0, r1
	adds r0, #1
	strb r0, [r7, #0xa]
	mov r2, r8
	ldrh r0, [r2, #4]
	movs r3, #2
	ldrsh r1, [r7, r3]
	movs r3, #4
	ldrsh r2, [r7, r3]
	bl sub_0809F734
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r7, #0xa]
	bl sub_080A47D0
	movs r0, #1
	bl sub_08096BEC
	ldrh r0, [r5, #0x18]
	adds r0, #0x10
	movs r4, #1
	adds r1, r4, #0
	lsls r1, r0
	movs r0, #3
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r5, #0x18]
	adds r0, #0x10
	lsls r4, r0
	movs r0, #0x10
	rsbs r0, r0, #0
	eors r4, r0
	movs r0, #2
	adds r1, r4, #0
	movs r2, #0
	movs r3, #1
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldr r0, _08098F78 @ =gUnk_03006B54
	ldr r0, [r0]
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _08098F70
	movs r0, #0x2d
	strh r0, [r7, #6]
_08098F70:
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
	.align 2, 0
_08098F78: .4byte gUnk_03006B54
_08098F7C:
	ldrh r0, [r7, #6]
	adds r0, #1
	movs r4, #0
	strh r0, [r7, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x2c
	bgt _08098F8E
	b _08099290
_08098F8E:
	movs r0, #3
	strb r0, [r5, #0xb]
	movs r0, #0
	strb r0, [r5, #0xc]
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0xf
	movs r1, #0xf
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #7
	movs r1, #0xf
	bl sub_08004828
	ldrh r0, [r5, #0x18]
	adds r0, #0x10
	movs r1, #1
	lsls r1, r0
	movs r0, #3
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #3
	movs r1, #2
	bl sub_08011174
	movs r0, #0x71
	movs r1, #0
	bl sub_080147B8
	strh r4, [r7, #6]
	strh r4, [r7, #8]
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_08098FF0:
	ldrh r0, [r7, #8]
	adds r1, r0, #1
	strh r1, [r7, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	movs r4, #0xf
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r2, r8
	ldrh r0, [r2, #4]
	ldrb r1, [r7, #0xa]
	adds r1, r1, r6
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	movs r3, #8
	ldrsh r0, [r7, r3]
	cmp r0, #0x14
	beq _08099034
	b _08099290
_08099034:
	ldrh r0, [r5, #0x18]
	adds r0, #0x10
	movs r1, #1
	lsls r1, r0
	movs r0, #0x10
	rsbs r0, r0, #0
	eors r1, r0
	movs r0, #2
	movs r2, #0
	movs r3, #0x28
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_0809905A:
	ldrh r0, [r7, #8]
	adds r1, r0, #1
	strh r1, [r7, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	movs r4, #0xf
	lsrs r6, r0, #0x10
	asrs r5, r0, #0x10
	subs r4, r4, r5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r7, #0xa]
	adds r1, r1, r6
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	cmp r5, #0xe
	bgt _0809909A
	b _08099290
_0809909A:
	lsls r0, r5, #3
	adds r0, #2
	strh r0, [r7, #8]
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_080990A6:
	ldrh r0, [r7, #8]
	adds r1, r0, #1
	strh r1, [r7, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	mov r2, r8
	ldrh r0, [r2, #4]
	ldrb r1, [r7, #0xa]
	adds r1, r1, r6
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x12
	bgt _080990D0
	b _08099290
_080990D0:
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_080990D6:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080990E6
	b _08099290
_080990E6:
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	b _0809928C
_08099116:
	cmp r0, #0x1c
	beq _0809911C
	b _08099290
_0809911C:
	movs r3, #0
	ldrsh r4, [r7, r3]
	cmp r4, #1
	beq _080991A4
	cmp r4, #1
	bgt _0809912E
	cmp r4, #0
	beq _0809913A
	b _08099290
_0809912E:
	cmp r4, #2
	beq _08099204
	cmp r4, #3
	bne _08099138
	b _08099244
_08099138:
	b _08099290
_0809913A:
	movs r0, #3
	strb r0, [r5, #0xb]
	strb r4, [r5, #0xc]
	movs r0, #1
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #2
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #3
	movs r1, #0x40
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #1
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	movs r0, #0x71
	movs r1, #0
	bl sub_080147B8
	movs r0, #3
	bl sub_08011104
	ldrh r0, [r5, #0x18]
	adds r0, #0x10
	movs r1, #1
	lsls r1, r0
	mvns r1, r1
	movs r0, #3
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #3
	movs r1, #1
	bl sub_08011174
	ldrb r0, [r5, #9]
	strb r0, [r7, #0xa]
	strh r4, [r7, #8]
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_080991A4:
	ldrh r0, [r7, #8]
	adds r1, r0, #1
	strh r1, [r7, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r4, r6, #0
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r1, r8
	ldrh r0, [r1, #4]
	ldrb r1, [r7, #0xa]
	adds r1, r1, r4
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	movs r2, #8
	ldrsh r0, [r7, r2]
	cmp r0, #0x28
	bne _08099290
	movs r0, #2
	bl sub_08011104
	ldr r1, _08099200 @ =0xFFFF0000
	movs r0, #2
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
	.align 2, 0
_08099200: .4byte 0xFFFF0000
_08099204:
	ldrh r0, [r7, #8]
	adds r1, r0, #1
	strh r1, [r7, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r5, r6, #0x10
	lsrs r4, r5, #0x10
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_080047E8
	adds r0, r4, #0
	adds r1, r4, #0
	bl sub_08004828
	mov r3, r8
	ldrh r0, [r3, #4]
	ldrb r1, [r7, #0xa]
	adds r1, r1, r6
	movs r2, #3
	ands r1, r2
	adds r1, #1
	bl sub_080A47D0
	asrs r5, r5, #0x10
	cmp r5, #0xe
	ble _08099290
	ldrh r0, [r7]
	adds r0, #1
	b _0809928E
_08099244:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _08099290
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	bl sub_080A266C
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	movs r0, #1
	bl sub_080139E8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _08099290
_0809928C:
	ldr r0, _0809929C @ =0x0000FFFF
_0809928E:
	strh r0, [r7]
_08099290:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809929C: .4byte 0x0000FFFF

	thumb_func_start sub_080992A0
sub_080992A0: @ 0x080992A0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	movs r0, #1
	movs r1, #0
	bl sub_080048CC
	movs r0, #1
	ands r0, r7
	cmp r0, #0
	beq _080992E6
	movs r0, #0x1f
	bl sub_08004A34
	movs r0, #1
	bl sub_08004A60
	movs r0, #0
	movs r1, #0
	movs r2, #0xf0
	movs r3, #0xa0
	bl sub_0800493C
	b _08099306
_080992E6:
	movs r0, #2
	ands r0, r7
	cmp r0, #0
	beq _08099306
	movs r0, #1
	bl sub_08004A34
	movs r0, #0x1f
	bl sub_08004A60
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_0800493C
_08099306:
	mov r0, sl
	lsls r2, r0, #0x10
	asrs r2, r2, #0x10
	rsbs r0, r2, #0
	adds r4, r0, #0
	muls r4, r0, r4
	mov r1, sb
	lsls r3, r1, #0x10
	asrs r3, r3, #0x10
	rsbs r1, r3, #0
	lsls r0, r1, #2
	muls r1, r0, r1
	adds r0, r4, r1
	str r0, [sp]
	movs r0, #0xf0
	subs r0, r0, r2
	adds r2, r0, #0
	muls r2, r0, r2
	adds r1, r2, r1
	str r1, [sp, #4]
	movs r0, #0xa0
	subs r0, r0, r3
	lsls r1, r0, #2
	muls r0, r1, r0
	adds r4, r4, r0
	str r4, [sp, #8]
	adds r2, r2, r0
	str r2, [sp, #0xc]
	movs r5, #0
	movs r1, #0
	add r0, sp, #0x10
	mov r8, r0
_08099346:
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	lsls r0, r1, #2
	add r0, sp
	ldr r0, [r0]
	cmp r5, r0
	bge _08099356
	adds r5, r0, #0
_08099356:
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _08099346
	lsls r0, r5, #2
	bl Sqrt
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x11
	adds r5, r0, #0
	adds r5, #8
	ldr r0, _080993B0 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0xae
	lsls r1, r1, #1
	adds r4, r0, r1
	movs r6, #0
	str r6, [sp, #0x10]
	ldr r2, _080993B4 @ =0x050000A5
	mov r0, r8
	adds r1, r4, #0
	bl CpuSet
	ldrh r1, [r4, #0xc]
	adds r0, r7, #0
	orrs r0, r1
	strh r0, [r4, #0xc]
	strh r6, [r4, #0xa]
	mov r0, sl
	strh r0, [r4]
	mov r1, sb
	strh r1, [r4, #2]
	movs r0, #1
	strh r0, [r4, #8]
	adds r1, r7, #0
	ands r1, r0
	cmp r1, #0
	beq _080993B8
	movs r0, #8
	strh r0, [r4, #8]
	strh r6, [r4, #4]
	b _080993C6
	.align 2, 0
_080993B0: .4byte gUnk_03006B54
_080993B4: .4byte 0x050000A5
_080993B8:
	movs r0, #2
	ands r0, r7
	cmp r0, #0
	beq _080993C8
	movs r0, #0x40
	strh r0, [r4, #8]
	strh r1, [r4, #4]
_080993C6:
	strh r5, [r4, #6]
_080993C8:
	movs r0, #0
	bl sub_08014440
	bl sub_08006CA4
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080993E4
sub_080993E4: @ 0x080993E4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r0, _0809942C @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0xae
	lsls r1, r1, #1
	adds r4, r0, r1
	ldrh r2, [r4, #0xc]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _08099430
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	ldrh r3, [r4, #4]
	adds r0, r0, r3
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r3, [r4, #6]
	movs r5, #6
	ldrsh r1, [r4, r5]
	cmp r0, r1
	ble _0809946E
	strh r3, [r4, #4]
	movs r0, #0x10
	orrs r0, r2
	b _0809946C
	.align 2, 0
_0809942C: .4byte gUnk_03006B54
_08099430:
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _0809946E
	ldrh r0, [r4, #8]
	subs r0, #1
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x17
	bgt _0809944A
	movs r0, #0x18
	strh r0, [r4, #8]
_0809944A:
	ldrh r0, [r4, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	ldrh r1, [r4, #4]
	adds r0, r0, r1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r2, [r4, #6]
	movs r3, #6
	ldrsh r1, [r4, r3]
	cmp r0, r1
	ble _0809946E
	strh r2, [r4, #4]
	ldrh r0, [r4, #0xc]
	movs r1, #0x10
	orrs r0, r1
_0809946C:
	strh r0, [r4, #0xc]
_0809946E:
	bl sub_08007194
	movs r1, #1
	subs r1, r1, r0
	strh r1, [r4, #0xa]
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	movs r1, #0
	adds r5, r4, #0
	adds r5, #0x10
	str r5, [sp, #4]
	asrs r6, r0, #0x11
_08099486:
	lsls r1, r1, #0x10
	asrs r3, r1, #0x10
	movs r0, #2
	ldrsh r2, [r4, r0]
	subs r0, r2, r6
	mov ip, r1
	cmp r3, r0
	blt _080994B2
	adds r0, r2, r6
	cmp r3, r0
	bgt _080994B2
	ldrh r0, [r4, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r3
	lsls r1, r1, #1
	adds r1, r5, r1
	movs r0, #0xf0
	strh r0, [r1]
	b _080994CA
_080994B2:
	mov r1, ip
	asrs r2, r1, #0xf
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r2, r2, r0
	adds r2, r5, r2
	movs r0, #0
	strh r0, [r2]
_080994CA:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, ip
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x9f
	ble _08099486
	ldrh r2, [r4, #4]
	mov sb, r2
	lsls r1, r2, #1
	movs r0, #3
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	lsls r3, r2, #0x10
	movs r1, #0
	cmp r3, #0
	bge _080994F2
	b _080997DC
_080994F2:
	ldr r6, [sp, #4]
_080994F4:
	asrs r7, r3, #0x10
	asrs r0, r3, #0x11
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	lsls r2, r1, #0x10
	asrs r0, r2, #0x11
	lsls r0, r0, #0x10
	movs r3, #2
	ldrsh r1, [r4, r3]
	lsrs r5, r0, #0x10
	mov r8, r5
	asrs r5, r0, #0x10
	subs r3, r1, r5
	mov ip, r2
	cmp r3, #0x9f
	bhi _080995A4
	movs r1, #0
	ldrsh r0, [r4, r1]
	subs r0, r0, r7
	cmp r0, #0xef
	bhi _0809955A
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	ands r1, r2
	strh r1, [r0]
	movs r3, #2
	ldrsh r2, [r4, r3]
	subs r2, r2, r5
	ldrh r0, [r4, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r6, r1
	ldrh r0, [r4]
	subs r0, r0, r7
	lsls r0, r0, #8
	ldrh r2, [r1]
	orrs r0, r2
	strh r0, [r1]
_0809955A:
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r7
	cmp r0, #0xef
	bhi _080995A4
	movs r3, #2
	ldrsh r2, [r4, r3]
	subs r2, r2, r5
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r2
	strh r1, [r0]
	movs r0, #2
	ldrsh r2, [r4, r0]
	subs r2, r2, r5
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r1, [r4]
	adds r1, r7, r1
	ldrh r2, [r0]
	orrs r1, r2
	strh r1, [r0]
_080995A4:
	movs r2, #2
	ldrsh r1, [r4, r2]
	mov r3, r8
	lsls r0, r3, #0x10
	asrs r3, r0, #0x10
	adds r2, r1, r3
	cmp r2, #0x9f
	bhi _08099648
	movs r5, #0
	ldrsh r1, [r4, r5]
	mov r5, sb
	lsls r0, r5, #0x10
	asrs r5, r0, #0x10
	subs r1, r1, r5
	cmp r1, #0xef
	bhi _080995FE
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	ands r1, r2
	strh r1, [r0]
	movs r0, #2
	ldrsh r2, [r4, r0]
	adds r2, r2, r3
	ldrh r0, [r4, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r6, r1
	ldrh r0, [r4]
	subs r0, r0, r5
	lsls r0, r0, #8
	ldrh r2, [r1]
	orrs r0, r2
	strh r0, [r1]
_080995FE:
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r5
	cmp r0, #0xef
	bhi _08099648
	movs r0, #2
	ldrsh r2, [r4, r0]
	adds r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r2
	strh r1, [r0]
	movs r1, #2
	ldrsh r2, [r4, r1]
	adds r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r1, [r4]
	adds r1, r5, r1
	ldrh r2, [r0]
	orrs r1, r2
	strh r1, [r0]
_08099648:
	mov r2, sl
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	mov r8, r0
	cmp r1, #0
	bge _08099664
	mov r3, ip
	asrs r0, r3, #0xe
	adds r0, r1, r0
	adds r0, #6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	b _080997CA
_08099664:
	movs r5, #2
	ldrsh r1, [r4, r5]
	ldr r2, [sp]
	lsls r0, r2, #0x10
	asrs r3, r0, #0x10
	subs r2, r1, r3
	adds r7, r0, #0
	cmp r2, #0x9f
	bhi _08099708
	movs r5, #0
	ldrsh r0, [r4, r5]
	mov r1, ip
	asrs r5, r1, #0x10
	subs r0, r0, r5
	cmp r0, #0xef
	bhi _080996BE
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	ands r1, r2
	strh r1, [r0]
	movs r0, #2
	ldrsh r2, [r4, r0]
	subs r2, r2, r3
	ldrh r0, [r4, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r6, r1
	ldrh r0, [r4]
	subs r0, r0, r5
	lsls r0, r0, #8
	ldrh r2, [r1]
	orrs r0, r2
	strh r0, [r1]
_080996BE:
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r5
	cmp r0, #0xef
	bhi _08099708
	movs r0, #2
	ldrsh r2, [r4, r0]
	subs r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r2
	strh r1, [r0]
	movs r1, #2
	ldrsh r2, [r4, r1]
	subs r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r1, [r4]
	adds r1, r5, r1
	ldrh r2, [r0]
	orrs r1, r2
	strh r1, [r0]
_08099708:
	movs r2, #2
	ldrsh r0, [r4, r2]
	asrs r3, r7, #0x10
	adds r2, r0, r3
	cmp r2, #0x9f
	bhi _080997A6
	movs r5, #0
	ldrsh r0, [r4, r5]
	mov r1, ip
	asrs r5, r1, #0x10
	subs r0, r0, r5
	cmp r0, #0xef
	bhi _0809975C
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	ands r1, r2
	strh r1, [r0]
	movs r0, #2
	ldrsh r2, [r4, r0]
	adds r2, r2, r3
	ldrh r0, [r4, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r2
	lsls r1, r1, #1
	adds r1, r6, r1
	ldrh r0, [r4]
	subs r0, r0, r5
	lsls r0, r0, #8
	ldrh r2, [r1]
	orrs r0, r2
	strh r0, [r1]
_0809975C:
	movs r1, #0
	ldrsh r0, [r4, r1]
	adds r0, r0, r5
	cmp r0, #0xef
	bhi _080997A6
	movs r0, #2
	ldrsh r2, [r4, r0]
	adds r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r2, [r0]
	movs r1, #0xff
	lsls r1, r1, #8
	ands r1, r2
	strh r1, [r0]
	movs r1, #2
	ldrsh r2, [r4, r1]
	adds r2, r2, r3
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	ldrh r1, [r4]
	adds r1, r5, r1
	ldrh r2, [r0]
	orrs r1, r2
	strh r1, [r0]
_080997A6:
	mov r3, ip
	asrs r2, r3, #0x10
	mov r5, sb
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	subs r2, r2, r1
	lsls r2, r2, #2
	mov r3, r8
	asrs r0, r3, #0x10
	adds r0, r0, r2
	adds r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	subs r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
_080997CA:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, ip
	lsrs r1, r0, #0x10
	mov r5, sb
	lsls r3, r5, #0x10
	cmp r0, r3
	bgt _080997DC
	b _080994F4
_080997DC:
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r1, r4, r2
	adds r1, r1, r0
	ldr r3, [sp, #4]
	adds r0, r3, r0
	ldrh r0, [r0]
	strh r0, [r1]
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r1, [r0]
	lsrs r0, r1, #8
	movs r2, #0xff
	ands r2, r1
	movs r1, #0
	movs r3, #0xa0
	bl sub_0800493C
	ldr r1, _08099840 @ =0x04000040
	ldrh r0, [r4, #0xa]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #5
	adds r2, r2, r0
	lsls r2, r2, #1
	adds r2, r2, r4
	adds r2, #0x12
	movs r0, #0
	bl sub_080070F8
	ldrh r0, [r4, #0xc]
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08099840: .4byte 0x04000040

	thumb_func_start sub_08099844
sub_08099844: @ 0x08099844
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #1
	movs r1, #0
	bl sub_080048CC
	movs r0, #1
	ands r0, r6
	cmp r0, #0
	beq _08099876
	movs r0, #1
	bl sub_08004A34
	movs r0, #0x1f
	bl sub_08004A60
	movs r0, #0
	movs r1, #0
	movs r2, #0xf0
	movs r3, #0xa0
	bl sub_0800493C
	b _08099896
_08099876:
	movs r0, #2
	ands r0, r6
	cmp r0, #0
	beq _08099896
	movs r0, #0x1f
	bl sub_08004A34
	movs r0, #1
	bl sub_08004A60
	movs r0, #0
	movs r1, #0
	movs r2, #0xf0
	movs r3, #0xa0
	bl sub_0800493C
_08099896:
	ldr r0, _080998D0 @ =gUnk_03006B54
	ldr r4, [r0]
	movs r0, #0xae
	lsls r0, r0, #1
	adds r4, r4, r0
	movs r5, #0
	str r5, [sp]
	ldr r2, _080998D4 @ =0x050000A5
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldrh r1, [r4, #0xc]
	adds r0, r6, #0
	orrs r0, r1
	strh r0, [r4, #0xc]
	strh r5, [r4, #0xa]
	strh r5, [r4, #4]
	strh r5, [r4, #8]
	movs r0, #0
	bl sub_08014440
	bl sub_08006CA4
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080998D0: .4byte gUnk_03006B54
_080998D4: .4byte 0x050000A5

	thumb_func_start sub_080998D8
sub_080998D8: @ 0x080998D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _080999A4 @ =gUnk_03006B54
	ldr r4, [r0]
	movs r0, #0xae
	lsls r0, r0, #1
	adds r5, r4, r0
	bl sub_08007194
	movs r1, #1
	subs r1, r1, r0
	strh r1, [r5, #0xa]
	ldrh r1, [r5, #0xc]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _08099906
	ldrh r0, [r5, #8]
	adds r0, #1
	strh r0, [r5, #8]
_08099906:
	ldrh r0, [r5, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x12
	ldrh r1, [r5, #4]
	adds r0, r0, r1
	strh r0, [r5, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xf0
	lsls r1, r1, #1
	cmp r0, r1
	ble _08099928
	strh r1, [r5, #4]
	ldrh r0, [r5, #0xc]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r5, #0xc]
_08099928:
	movs r2, #0
	movs r3, #0xb6
	lsls r3, r3, #1
	adds r3, r3, r4
	mov sl, r3
	mov r6, sl
	movs r0, #0xf0
	mov r8, r0
	movs r1, #0x9f
	mov ip, r1
_0809993C:
	lsls r2, r2, #0x10
	lsls r0, r2, #1
	asrs r4, r0, #0x10
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r3, #4
	ldrsh r1, [r5, r3]
	ldr r3, _080999A8 @ =gUnk_08BD1D68
	adds r0, r3, r4
	ldrb r3, [r0]
	subs r1, r1, r3
	mov sb, r2
	cmp r1, #0
	blt _080999AC
	ldrh r0, [r5, #4]
	subs r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _0809996A
	movs r3, #0xf0
_0809996A:
	ldrh r0, [r5, #0xa]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r1, r1, r0
	adds r1, r1, r4
	lsls r1, r1, #1
	adds r1, r6, r1
	lsls r2, r3, #0x10
	asrs r2, r2, #0x10
	lsls r0, r2, #8
	mov r3, r8
	orrs r0, r3
	strh r0, [r1]
	mov r0, ip
	subs r3, r0, r4
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r6, r0
	mov r1, r8
	subs r2, r1, r2
	strh r2, [r0]
	b _080999D6
	.align 2, 0
_080999A4: .4byte gUnk_03006B54
_080999A8: .4byte gUnk_08BD1D68
_080999AC:
	movs r3, #0xf0
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r0, r6, r0
	strh r3, [r0]
	mov r0, ip
	subs r2, r0, r4
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	strh r3, [r0]
_080999D6:
	movs r1, #4
	ldrsh r0, [r5, r1]
	lsls r1, r7, #0x10
	asrs r4, r1, #0x10
	ldr r2, _08099A34 @ =gUnk_08BD1D68
	adds r1, r2, r4
	ldrb r1, [r1]
	subs r0, r0, r1
	cmp r0, #0
	blt _08099A38
	ldrh r0, [r5, #4]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf0
	ble _080999FA
	movs r3, #0xf0
_080999FA:
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r0, r6, r0
	lsls r2, r3, #0x10
	asrs r2, r2, #0x10
	mov r3, r8
	subs r1, r3, r2
	strh r1, [r0]
	mov r0, ip
	subs r3, r0, r4
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r3
	lsls r0, r0, #1
	adds r0, r6, r0
	lsls r2, r2, #8
	mov r1, r8
	orrs r2, r1
	strh r2, [r0]
	b _08099A62
	.align 2, 0
_08099A34: .4byte gUnk_08BD1D68
_08099A38:
	movs r3, #0xf0
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r4
	lsls r0, r0, #1
	adds r0, r6, r0
	strh r3, [r0]
	mov r0, ip
	subs r2, r0, r4
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	adds r0, r0, r2
	lsls r0, r0, #1
	adds r0, r6, r0
	strh r3, [r0]
_08099A62:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x27
	bgt _08099A72
	b _0809993C
_08099A72:
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	movs r2, #0xa8
	lsls r2, r2, #1
	adds r1, r5, r2
	adds r1, r1, r0
	add r0, sl
	ldrh r0, [r0]
	strh r0, [r1]
	ldrh r1, [r5, #0xa]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #5
	adds r0, r0, r1
	lsls r0, r0, #1
	add r0, sl
	ldrh r1, [r0]
	lsrs r0, r1, #8
	movs r2, #0xff
	ands r2, r1
	movs r1, #0
	movs r3, #0xa0
	bl sub_0800493C
	ldr r1, _08099AD4 @ =0x04000040
	ldrh r0, [r5, #0xa]
	lsls r2, r0, #2
	adds r2, r2, r0
	lsls r2, r2, #5
	adds r2, r2, r0
	lsls r2, r2, #1
	adds r2, r2, r5
	adds r2, #0x12
	movs r0, #0
	bl sub_080070F8
	ldrh r0, [r5, #0xc]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_08099AD4: .4byte 0x04000040

	thumb_func_start sub_08099AD8
sub_08099AD8: @ 0x08099AD8
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0xc
	ldr r0, _08099B80 @ =gUnk_03006B54
	mov sb, r0
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r5, r0, r1
	ldr r6, [r0, #0x14]
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	ldrh r1, [r5, #0xe]
	bl sub_08001D78
	mov r8, r0
	adds r1, r6, #0
	bl LZ77UnCompWram
	add r4, sp, #4
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001E4C
	ldr r0, [r4, #4]
	str r0, [r5, #0x10]
	ldrb r0, [r4]
	movs r7, #0
	strh r0, [r5, #8]
	ldrb r0, [r4, #1]
	strh r0, [r5, #0xa]
	ldrb r1, [r4]
	lsls r1, r1, #3
	strh r1, [r5]
	ldrb r0, [r4, #1]
	lsls r0, r0, #3
	strh r0, [r5, #2]
	subs r1, #0xf0
	strh r1, [r5, #4]
	cmp r1, #0
	bge _08099B34
	strh r7, [r5, #4]
_08099B34:
	ldrh r0, [r5, #2]
	subs r0, #0xa0
	strh r0, [r5, #6]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _08099B42
	strh r7, [r5, #6]
_08099B42:
	mov r0, r8
	bl sub_080017B8
	adds r6, r6, r0
	ldrh r1, [r5, #8]
	ldrh r0, [r5, #0xa]
	adds r2, r1, #0
	muls r2, r0, r2
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	str r6, [r5, #0x14]
	str r7, [sp]
	lsrs r2, r2, #0x12
	movs r0, #0xa0
	lsls r0, r0, #0x13
	orrs r2, r0
	mov r0, sp
	adds r1, r6, #0
	bl CpuSet
	adds r6, r6, r4
	mov r1, sb
	ldr r0, [r1]
	str r6, [r0, #0x14]
	add sp, #0xc
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_08099B80: .4byte gUnk_03006B54

	thumb_func_start sub_08099B84
sub_08099B84: @ 0x08099B84
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsls r3, r3, #0x10
	movs r4, #1
	movs r5, #5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsrs r7, r3, #0x10
	asrs r3, r3, #0x10
	cmp r1, r3
	bge _08099BAE
	movs r5, #2
	b _08099BB4
_08099BAE:
	cmp r1, r3
	ble _08099BB4
	movs r5, #8
_08099BB4:
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	lsls r0, r2, #0x10
	asrs r1, r0, #0x10
	adds r2, r0, #0
	cmp r3, r1
	bge _08099BC6
	adds r0, r5, #1
	b _08099BCC
_08099BC6:
	cmp r3, r1
	ble _08099BD0
	subs r0, r5, #1
_08099BCC:
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_08099BD0:
	subs r0, r5, #1
	cmp r0, #8
	bls _08099BD8
	b _08099E60
_08099BD8:
	lsls r0, r0, #2
	ldr r1, _08099BE4 @ =_08099BE8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_08099BE4: .4byte _08099BE8
_08099BE8: @ jump table
	.4byte _08099C0C @ case 0
	.4byte _08099C74 @ case 1
	.4byte _08099CC4 @ case 2
	.4byte _08099CF4 @ case 3
	.4byte _08099E60 @ case 4
	.4byte _08099D00 @ case 5
	.4byte _08099D34 @ case 6
	.4byte _08099DA4 @ case 7
	.4byte _08099DF8 @ case 8
_08099C0C:
	asrs r6, r2, #0x10
	ldr r0, _08099C6C @ =0xFF800000
	adds r4, r2, r0
	asrs r4, r4, #0x10
	lsls r1, r7, #0x10
	asrs r5, r1, #0x10
	ldr r0, _08099C70 @ =0xFFC00000
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08099E84
	mov sl, r0
	adds r5, #0x30
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08099E84
	adds r4, r0, #0
	adds r0, r6, #0
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r5, #0
	bl sub_08099E84
	mov sb, r0
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08099E84
	mov r8, r0
	adds r6, #0x70
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08099E84
	mov r1, sl
	ands r4, r1
	mov r1, sb
	ands r4, r1
	mov r1, r8
	ands r4, r1
	b _08099E5A
	.align 2, 0
_08099C6C: .4byte 0xFF800000
_08099C70: .4byte 0xFFC00000
_08099C74:
	asrs r5, r2, #0x10
	ldr r1, _08099CC0 @ =0xFF800000
	adds r0, r2, r1
	asrs r0, r0, #0x10
	lsls r6, r7, #0x10
	movs r1, #0xc0
	lsls r1, r1, #0xe
	adds r6, r6, r1
	asrs r6, r6, #0x10
	adds r1, r6, #0
	bl sub_08099E84
	mov sb, r0
	adds r0, r5, #0
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r6, #0
	bl sub_08099E84
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08099E84
	mov r8, r0
	adds r5, #0x70
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08099E84
	mov r1, sb
	ands r4, r1
	mov r1, r8
	ands r4, r1
	b _08099E5A
	.align 2, 0
_08099CC0: .4byte 0xFF800000
_08099CC4:
	asrs r0, r2, #0x10
	mov r8, r0
	movs r1, #0xe0
	lsls r1, r1, #0xf
	adds r4, r2, r1
	asrs r4, r4, #0x10
	lsls r1, r7, #0x10
	asrs r5, r1, #0x10
	ldr r0, _08099CF0 @ =0xFFC00000
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08099E84
	mov sl, r0
	adds r5, #0x30
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	b _08099E22
	.align 2, 0
_08099CF0: .4byte 0xFFC00000
_08099CF4:
	ldr r0, _08099CFC @ =0xFF800000
	adds r5, r2, r0
	b _08099D06
	.align 2, 0
_08099CFC: .4byte 0xFF800000
_08099D00:
	movs r1, #0xe0
	lsls r1, r1, #0xf
	adds r5, r2, r1
_08099D06:
	asrs r5, r5, #0x10
	lsls r1, r7, #0x10
	asrs r4, r1, #0x10
	ldr r0, _08099D30 @ =0xFFC00000
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl sub_08099E84
	adds r6, r0, #0
	adds r4, #0x30
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08099E84
	ands r0, r6
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	b _08099E60
	.align 2, 0
_08099D30: .4byte 0xFFC00000
_08099D34:
	asrs r6, r2, #0x10
	ldr r1, _08099D9C @ =0xFF800000
	adds r2, r2, r1
	asrs r2, r2, #0x10
	lsls r5, r7, #0x10
	asrs r4, r5, #0x10
	ldr r0, _08099DA0 @ =0xFFC00000
	adds r5, r5, r0
	asrs r5, r5, #0x10
	adds r0, r2, #0
	adds r1, r5, #0
	str r2, [sp]
	bl sub_08099E84
	mov sl, r0
	adds r4, #0x30
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	ldr r2, [sp]
	adds r0, r2, #0
	adds r1, r4, #0
	bl sub_08099E84
	adds r4, r0, #0
	adds r0, r6, #0
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r5, #0
	bl sub_08099E84
	mov sb, r0
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08099E84
	mov r8, r0
	adds r6, #0x70
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08099E84
	mov r1, sl
	ands r4, r1
	mov r1, sb
	ands r4, r1
	mov r1, r8
	ands r4, r1
	b _08099E5A
	.align 2, 0
_08099D9C: .4byte 0xFF800000
_08099DA0: .4byte 0xFFC00000
_08099DA4:
	asrs r5, r2, #0x10
	ldr r1, _08099DF0 @ =0xFF800000
	adds r0, r2, r1
	asrs r0, r0, #0x10
	lsls r6, r7, #0x10
	ldr r1, _08099DF4 @ =0xFFC00000
	adds r6, r6, r1
	asrs r6, r6, #0x10
	adds r1, r6, #0
	bl sub_08099E84
	mov sb, r0
	adds r0, r5, #0
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r6, #0
	bl sub_08099E84
	adds r4, r0, #0
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08099E84
	mov r8, r0
	adds r5, #0x70
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08099E84
	mov r1, sb
	ands r4, r1
	mov r1, r8
	ands r4, r1
	b _08099E5A
	.align 2, 0
_08099DF0: .4byte 0xFF800000
_08099DF4: .4byte 0xFFC00000
_08099DF8:
	asrs r0, r2, #0x10
	mov r8, r0
	movs r1, #0xe0
	lsls r1, r1, #0xf
	adds r6, r2, r1
	asrs r6, r6, #0x10
	lsls r5, r7, #0x10
	asrs r4, r5, #0x10
	ldr r0, _08099E6C @ =0xFFC00000
	adds r5, r5, r0
	asrs r5, r5, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08099E84
	mov sl, r0
	adds r4, #0x30
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
_08099E22:
	bl sub_08099E84
	adds r4, r0, #0
	mov r0, r8
	subs r0, #0x80
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r5, #0
	bl sub_08099E84
	mov sb, r0
	mov r0, r8
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r5, #0
	bl sub_08099E84
	adds r6, r0, #0
	mov r0, r8
	adds r1, r5, #0
	bl sub_08099E84
	mov r1, sl
	ands r4, r1
	mov r1, sb
	ands r4, r1
	ands r4, r6
_08099E5A:
	ands r4, r0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
_08099E60:
	movs r0, #1
	ands r4, r0
	cmp r4, #0
	bne _08099E70
	movs r0, #0
	b _08099E72
	.align 2, 0
_08099E6C: .4byte 0xFFC00000
_08099E70:
	movs r0, #1
_08099E72:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_08099E84
sub_08099E84: @ 0x08099E84
	push {r4, r5, r6, lr}
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	ldr r1, _08099EE4 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r4, r1, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r5, r0, #0x10
	asrs r1, r5, #0x10
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _08099EF0
	lsls r0, r3, #0x10
	asrs r0, r0, #0x14
	lsls r2, r0, #0x10
	asrs r3, r2, #0x10
	subs r0, r3, #4
	cmp r0, #0
	blt _08099EF0
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _08099EF0
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _08099EF0
	asrs r1, r2, #0x13
	movs r6, #8
	ldrsh r0, [r4, r6]
	muls r1, r0, r1
	asrs r2, r5, #0x13
	ldr r0, [r4, #0x10]
	adds r1, r1, r2
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r3, #7
	ands r3, r0
	cmp r3, #0
	bne _08099EE8
	movs r0, #1
	b _08099EF6
	.align 2, 0
_08099EE4: .4byte gUnk_03006B54
_08099EE8:
	cmp r3, #7
	beq _08099EF0
	cmp r3, #6
	beq _08099EF4
_08099EF0:
	movs r0, #0
	b _08099EF6
_08099EF4:
	movs r0, #0x10
_08099EF6:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_08099EFC
sub_08099EFC: @ 0x08099EFC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _08099FA4 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r1, r0
	mov r8, r1
	ldr r0, _08099FA8 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A000
	lsls r0, r4, #0x10
	asrs r4, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _08099FF8
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _08099FF8
	adds r1, #7
	mov r5, r8
	movs r6, #0
	ldrsh r0, [r5, r6]
	cmp r1, r0
	bge _08099FF8
	adds r1, r3, #4
	movs r7, #2
	ldrsh r0, [r5, r7]
	cmp r1, r0
	bge _08099FF8
	adds r1, r4, #0
	subs r1, #0x80
	subs r2, #0x40
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	mov r0, r8
	ldrh r3, [r0, #8]
	asrs r0, r2, #0x13
	adds r4, r0, #0
	muls r4, r3, r4
	adds r3, r4, #0
	asrs r0, r1, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #7
	lsrs r1, r1, #0x10
	ands r1, r4
	lsrs r6, r2, #0x10
	ands r6, r4
	cmp r6, #0
	bne _08099FB0
	mov r5, r8
	ldr r0, [r5, #0x10]
	add r0, sb
	ldrb r0, [r0]
	adds r5, r4, #0
	ands r5, r0
	ldr r2, _08099FAC @ =gUnk_08BD1C28
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	b _08099FF4
	.align 2, 0
_08099FA4: .4byte gUnk_03006B54
_08099FA8: .4byte 0x000001FB
_08099FAC: .4byte gUnk_08BD1C28
_08099FB0:
	mov r7, r8
	ldr r2, [r7, #0x10]
	mov r3, sb
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r5, r4, #0
	ands r5, r0
	ldr r7, _08099FFC @ =gUnk_08BD1C28
	mov ip, r7
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r5, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	lsls r3, r6
	mov r5, r8
	movs r7, #8
	ldrsh r0, [r5, r7]
	add r0, sb
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r5, r4, #0
	ands r5, r0
	lsls r0, r5, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r6
	asrs r0, r1
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_08099FF4:
	cmp r0, #0
	beq _0809A000
_08099FF8:
	movs r0, #0
	b _0809A002
	.align 2, 0
_08099FFC: .4byte gUnk_08BD1C28
_0809A000:
	movs r0, #1
_0809A002:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809A010
sub_0809A010: @ 0x0809A010
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _0809A0B8 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r1, r0
	mov r8, r1
	ldr r0, _0809A0BC @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A114
	lsls r0, r4, #0x10
	asrs r4, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A10C
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A10C
	adds r1, #7
	mov r5, r8
	movs r6, #0
	ldrsh r0, [r5, r6]
	cmp r1, r0
	bge _0809A10C
	adds r1, r3, #4
	movs r7, #2
	ldrsh r0, [r5, r7]
	cmp r1, r0
	bge _0809A10C
	adds r1, r4, #0
	adds r1, #0x70
	subs r2, #0x40
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	mov r0, r8
	ldrh r3, [r0, #8]
	asrs r0, r2, #0x13
	adds r4, r0, #0
	muls r4, r3, r4
	adds r3, r4, #0
	asrs r0, r1, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r4, #7
	lsrs r1, r1, #0x10
	ands r1, r4
	lsrs r6, r2, #0x10
	ands r6, r4
	cmp r6, #0
	bne _0809A0C4
	mov r5, r8
	ldr r0, [r5, #0x10]
	add r0, sb
	ldrb r0, [r0]
	adds r5, r4, #0
	ands r5, r0
	ldr r2, _0809A0C0 @ =gUnk_08BD1C28
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	b _0809A108
	.align 2, 0
_0809A0B8: .4byte gUnk_03006B54
_0809A0BC: .4byte 0x000001FB
_0809A0C0: .4byte gUnk_08BD1C28
_0809A0C4:
	mov r7, r8
	ldr r2, [r7, #0x10]
	mov r3, sb
	adds r0, r2, r3
	ldrb r0, [r0]
	adds r5, r4, #0
	ands r5, r0
	ldr r7, _0809A110 @ =gUnk_08BD1C28
	mov ip, r7
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r5, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	lsls r3, r6
	mov r5, r8
	movs r7, #8
	ldrsh r0, [r5, r7]
	add r0, sb
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r5, r4, #0
	ands r5, r0
	lsls r0, r5, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r6
	asrs r0, r1
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0809A108:
	cmp r0, #0
	beq _0809A114
_0809A10C:
	movs r0, #0
	b _0809A116
	.align 2, 0
_0809A110: .4byte gUnk_08BD1C28
_0809A114:
	movs r0, #1
_0809A116:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809A124
sub_0809A124: @ 0x0809A124
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0809A1D0 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r0, _0809A1D4 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A234
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A22A
	lsls r0, r6, #0x10
	asrs r5, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A22A
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809A22A
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809A22A
	subs r2, #0x80
	adds r1, r5, #0
	subs r1, #0x40
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	lsls r1, r1, #0x10
	ldrh r3, [r4, #8]
	asrs r0, r1, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r2, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r6, #7
	mov ip, r6
	lsrs r1, r1, #0x10
	ands r1, r6
	lsrs r7, r2, #0x10
	ands r7, r6
	cmp r7, #0
	bne _0809A1DC
	ldr r2, [r4, #0x10]
	adds r2, r2, r0
	ldrb r0, [r2]
	ands r6, r0
	ldr r3, _0809A1D8 @ =gUnk_08BD1BE8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r4, r0, #8
	ldrb r0, [r2, #1]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	adds r1, r1, r3
	ldrb r0, [r1]
	orrs r4, r0
	b _0809A226
	.align 2, 0
_0809A1D0: .4byte gUnk_03006B54
_0809A1D4: .4byte 0x000001FB
_0809A1D8: .4byte gUnk_08BD1BE8
_0809A1DC:
	ldr r4, [r4, #0x10]
	adds r4, r4, r0
	ldrb r0, [r4]
	mov r6, ip
	ands r6, r0
	ldr r5, _0809A230 @ =gUnk_08BD1BE8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r5
	ldrb r3, [r0]
	adds r0, r7, #0
	adds r0, #8
	lsls r3, r0
	ldrb r0, [r4, #1]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r5
	ldrb r2, [r0]
	lsls r2, r7
	orrs r2, r3
	ldrb r0, [r4, #2]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	adds r1, r1, r5
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r7
	asrs r0, r1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0809A226:
	cmp r4, #0
	beq _0809A234
_0809A22A:
	movs r0, #0
	b _0809A236
	.align 2, 0
_0809A230: .4byte gUnk_08BD1BE8
_0809A234:
	movs r0, #1
_0809A236:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A23C
sub_0809A23C: @ 0x0809A23C
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0809A2E8 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r0, _0809A2EC @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A34C
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A342
	lsls r0, r6, #0x10
	asrs r5, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A342
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809A342
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809A342
	subs r2, #0x80
	adds r1, r5, #0
	adds r1, #0x30
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	lsls r1, r1, #0x10
	ldrh r3, [r4, #8]
	asrs r0, r1, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r2, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r6, #7
	mov ip, r6
	lsrs r1, r1, #0x10
	ands r1, r6
	lsrs r7, r2, #0x10
	ands r7, r6
	cmp r7, #0
	bne _0809A2F4
	ldr r2, [r4, #0x10]
	adds r2, r2, r0
	ldrb r0, [r2]
	ands r6, r0
	ldr r3, _0809A2F0 @ =gUnk_08BD1BE8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r3
	ldrb r0, [r0]
	lsls r4, r0, #8
	ldrb r0, [r2, #1]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	adds r1, r1, r3
	ldrb r0, [r1]
	orrs r4, r0
	b _0809A33E
	.align 2, 0
_0809A2E8: .4byte gUnk_03006B54
_0809A2EC: .4byte 0x000001FB
_0809A2F0: .4byte gUnk_08BD1BE8
_0809A2F4:
	ldr r4, [r4, #0x10]
	adds r4, r4, r0
	ldrb r0, [r4]
	mov r6, ip
	ands r6, r0
	ldr r5, _0809A348 @ =gUnk_08BD1BE8
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r5
	ldrb r3, [r0]
	adds r0, r7, #0
	adds r0, #8
	lsls r3, r0
	ldrb r0, [r4, #1]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r0, r1, r0
	adds r0, r0, r5
	ldrb r2, [r0]
	lsls r2, r7
	orrs r2, r3
	ldrb r0, [r4, #2]
	mov r6, ip
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	adds r1, r1, r5
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r7
	asrs r0, r1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_0809A33E:
	cmp r4, #0
	beq _0809A34C
_0809A342:
	movs r0, #0
	b _0809A34E
	.align 2, 0
_0809A348: .4byte gUnk_08BD1BE8
_0809A34C:
	movs r0, #1
_0809A34E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A354
sub_0809A354: @ 0x0809A354
	push {r4, r5, r6, lr}
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	ldr r1, _0809A3C4 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r4, r1, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r2, r0, #0x10
	asrs r1, r2, #0x10
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A3E8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x14
	lsls r5, r0, #0x10
	asrs r3, r5, #0x10
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A3E8
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809A3E8
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809A3E8
	asrs r3, r2, #0x10
	adds r0, r5, #0
	asrs r5, r0, #0x10
	asrs r0, r0, #0x13
	movs r6, #8
	ldrsh r1, [r4, r6]
	muls r1, r0, r1
	asrs r2, r2, #0x13
	ldr r0, [r4, #0x10]
	adds r1, r1, r2
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r4, #7
	adds r2, r4, #0
	ands r2, r0
	cmp r2, #0
	beq _0809A3F0
	cmp r2, #7
	beq _0809A3E8
	cmp r2, #6
	bne _0809A3C8
	movs r0, #0x10
	b _0809A3F2
	.align 2, 0
_0809A3C4: .4byte gUnk_03006B54
_0809A3C8:
	adds r0, r4, #0
	bics r0, r3
	movs r1, #0x80
	lsls r1, r1, #0x11
	lsls r1, r0
	lsrs r1, r1, #0x18
	ldr r3, _0809A3EC @ =gUnk_08BD1BE8
	adds r0, r5, #0
	ands r0, r4
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r0, r0, r3
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _0809A3F0
_0809A3E8:
	movs r0, #0
	b _0809A3F2
	.align 2, 0
_0809A3EC: .4byte gUnk_08BD1BE8
_0809A3F0:
	movs r0, #1
_0809A3F2:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A3F8
sub_0809A3F8: @ 0x0809A3F8
	push {r4, r5, r6, r7, lr}
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	ldr r1, _0809A418 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r7, r1, r2
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	adds r0, r3, #0
	subs r0, #8
	cmp r0, #0
	bge _0809A41C
	movs r0, #2
	b _0809A49E
	.align 2, 0
_0809A418: .4byte gUnk_03006B54
_0809A41C:
	subs r3, #3
	lsls r4, r4, #0x10
	lsls r3, r3, #0x10
	ldr r0, _0809A494 @ =0xFFF60000
	adds r4, r4, r0
	ldrh r0, [r7, #8]
	asrs r5, r4, #0x13
	adds r1, r5, #0
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r6, r3, #0x13
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [r7, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1]
	movs r2, #7
	mov ip, r2
	ands r2, r0
	movs r1, #8
	ldrsh r0, [r7, r1]
	muls r0, r5, r0
	ldr r1, [r7, #0x14]
	adds r0, r0, r6
	adds r1, r1, r0
	ldrb r1, [r1]
	lsrs r5, r3, #0x10
	mov r0, ip
	ands r5, r0
	lsrs r4, r4, #0x10
	ands r4, r0
	cmp r2, #7
	beq _0809A49C
	movs r3, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809A48A
	movs r0, #0xf
	ands r1, r0
	ldr r2, _0809A498 @ =gUnk_08BD1CE8
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r3, [r0]
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	mov r2, ip
	subs r1, r2, r1
	movs r0, #1
	lsls r0, r1
	ands r3, r0
_0809A48A:
	cmp r3, #0
	bne _0809A49C
	movs r0, #0
	b _0809A49E
	.align 2, 0
_0809A494: .4byte 0xFFF60000
_0809A498: .4byte gUnk_08BD1CE8
_0809A49C:
	movs r0, #1
_0809A49E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A4A4
sub_0809A4A4: @ 0x0809A4A4
	push {r4, r5, r6, r7, lr}
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	ldr r1, _0809A4C8 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r7, r1, r2
	lsls r0, r0, #0x10
	asrs r3, r0, #0x10
	adds r1, r3, #7
	movs r2, #0
	ldrsh r0, [r7, r2]
	cmp r1, r0
	blt _0809A4CC
	movs r0, #2
	b _0809A54E
	.align 2, 0
_0809A4C8: .4byte gUnk_03006B54
_0809A4CC:
	adds r3, #2
	lsls r4, r4, #0x10
	lsls r3, r3, #0x10
	ldr r0, _0809A544 @ =0xFFF60000
	adds r4, r4, r0
	ldrh r0, [r7, #8]
	asrs r5, r4, #0x13
	adds r1, r5, #0
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r6, r3, #0x13
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [r7, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1]
	movs r2, #7
	mov ip, r2
	ands r2, r0
	movs r1, #8
	ldrsh r0, [r7, r1]
	muls r0, r5, r0
	ldr r1, [r7, #0x14]
	adds r0, r0, r6
	adds r1, r1, r0
	ldrb r1, [r1]
	lsrs r5, r3, #0x10
	mov r0, ip
	ands r5, r0
	lsrs r4, r4, #0x10
	ands r4, r0
	cmp r2, #7
	beq _0809A54C
	movs r3, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809A53A
	movs r0, #0xf
	ands r1, r0
	ldr r2, _0809A548 @ =gUnk_08BD1CE8
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r3, [r0]
	lsls r1, r4, #0x10
	asrs r1, r1, #0x10
	mov r2, ip
	subs r1, r2, r1
	movs r0, #1
	lsls r0, r1
	ands r3, r0
_0809A53A:
	cmp r3, #0
	bne _0809A54C
	movs r0, #0
	b _0809A54E
	.align 2, 0
_0809A544: .4byte 0xFFF60000
_0809A548: .4byte gUnk_08BD1CE8
_0809A54C:
	movs r0, #1
_0809A54E:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A554
sub_0809A554: @ 0x0809A554
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, _0809A570 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r7, r0, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #7
	bgt _0809A574
	movs r0, #2
	b _0809A5EE
	.align 2, 0
_0809A570: .4byte gUnk_03006B54
_0809A574:
	adds r3, r1, #0
	subs r3, #0xc
	lsls r6, r6, #0x10
	lsls r3, r3, #0x10
	ldrh r0, [r7, #8]
	asrs r4, r3, #0x13
	adds r1, r4, #0
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r5, r6, #0x13
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [r7, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1]
	movs r2, #7
	mov ip, r2
	ands r2, r0
	movs r1, #8
	ldrsh r0, [r7, r1]
	muls r0, r4, r0
	ldr r1, [r7, #0x14]
	adds r0, r0, r5
	adds r1, r1, r0
	ldrb r1, [r1]
	lsrs r6, r6, #0x10
	mov r0, ip
	ands r6, r0
	lsrs r3, r3, #0x10
	ands r3, r0
	cmp r2, #7
	beq _0809A5EC
	movs r2, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809A5E0
	movs r0, #0xf
	ands r1, r0
	ldr r2, _0809A5E8 @ =gUnk_08BD1C68
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r2, [r0]
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	mov r0, ip
	subs r1, r0, r1
	movs r0, #1
	lsls r0, r1
	ands r2, r0
_0809A5E0:
	cmp r2, #0
	bne _0809A5EC
	movs r0, #0
	b _0809A5EE
	.align 2, 0
_0809A5E8: .4byte gUnk_08BD1C68
_0809A5EC:
	movs r0, #1
_0809A5EE:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A5F4
sub_0809A5F4: @ 0x0809A5F4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, _0809A618 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r7, r0, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r1, #0x13
	movs r2, #2
	ldrsh r0, [r7, r2]
	cmp r1, r0
	blt _0809A61C
	movs r0, #2
	b _0809A692
	.align 2, 0
_0809A618: .4byte gUnk_03006B54
_0809A61C:
	lsls r5, r5, #0x10
	lsls r6, r1, #0x10
	ldrh r0, [r7, #8]
	asrs r3, r6, #0x13
	adds r1, r3, #0
	muls r1, r0, r1
	adds r0, r1, #0
	asrs r4, r5, #0x13
	adds r0, r4, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [r7, #0x10]
	adds r1, r1, r0
	ldrb r0, [r1]
	movs r2, #7
	mov ip, r2
	ands r2, r0
	movs r1, #8
	ldrsh r0, [r7, r1]
	muls r0, r3, r0
	ldr r1, [r7, #0x14]
	adds r0, r0, r4
	adds r1, r1, r0
	ldrb r1, [r1]
	lsrs r5, r5, #0x10
	mov r0, ip
	ands r5, r0
	lsrs r6, r6, #0x10
	ands r6, r0
	cmp r2, #7
	beq _0809A690
	movs r2, #0
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _0809A684
	movs r0, #0xf
	ands r1, r0
	ldr r2, _0809A68C @ =gUnk_08BD1C68
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r2, [r0]
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	mov r0, ip
	subs r1, r0, r1
	movs r0, #1
	lsls r0, r1
	ands r2, r0
_0809A684:
	cmp r2, #0
	bne _0809A690
	movs r0, #0
	b _0809A692
	.align 2, 0
_0809A68C: .4byte gUnk_08BD1C68
_0809A690:
	movs r0, #1
_0809A692:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A698
sub_0809A698: @ 0x0809A698
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0809A734 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r0, _0809A738 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A740
	lsls r0, r5, #0x10
	asrs r0, r0, #0x14
	lsls r2, r0, #0x10
	asrs r1, r2, #0x10
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A72E
	lsls r0, r6, #0x10
	asrs r0, r0, #0x14
	lsls r5, r0, #0x10
	asrs r3, r5, #0x10
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A72E
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809A72E
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809A72E
	asrs r3, r2, #0x10
	adds r0, r5, #0
	asrs r5, r0, #0x10
	asrs r0, r0, #0x13
	movs r6, #8
	ldrsh r1, [r4, r6]
	muls r1, r0, r1
	asrs r2, r2, #0x13
	ldr r0, [r4, #0x14]
	adds r1, r1, r2
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r4, #0xf
	ands r4, r0
	cmp r4, #0
	beq _0809A740
	cmp r4, #0xf
	beq _0809A72E
	movs r2, #7
	adds r0, r2, #0
	bics r0, r3
	movs r1, #0x80
	lsls r1, r1, #0x11
	lsls r1, r0
	lsrs r1, r1, #0x18
	ldr r3, _0809A73C @ =gUnk_08BD1C68
	adds r0, r5, #0
	ands r0, r2
	lsls r2, r4, #3
	adds r0, r0, r2
	adds r0, r0, r3
	ldrb r0, [r0]
	ands r1, r0
	cmp r1, #0
	beq _0809A740
_0809A72E:
	movs r0, #0
	b _0809A742
	.align 2, 0
_0809A734: .4byte gUnk_03006B54
_0809A738: .4byte 0x000001FB
_0809A73C: .4byte gUnk_08BD1C68
_0809A740:
	movs r0, #1
_0809A742:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A748
sub_0809A748: @ 0x0809A748
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _0809A7EC @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r1, r0
	mov r8, r1
	ldr r0, _0809A7F0 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A848
	lsls r0, r4, #0x10
	asrs r4, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A840
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A840
	adds r1, #7
	mov r5, r8
	movs r6, #0
	ldrsh r0, [r5, r6]
	cmp r1, r0
	bge _0809A840
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r5, r3]
	cmp r1, r0
	bge _0809A840
	adds r1, r4, #0
	subs r1, #0x80
	subs r2, #0x40
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	mov r4, r8
	ldrh r3, [r4, #8]
	asrs r0, r2, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r1, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #7
	lsrs r3, r1, #0x10
	ands r3, r0
	lsrs r7, r2, #0x10
	ands r7, r0
	cmp r7, #0
	bne _0809A7F8
	ldr r0, [r4, #0x14]
	adds r0, r0, r5
	ldrb r0, [r0]
	movs r1, #0xf
	ands r1, r0
	ldr r2, _0809A7F4 @ =gUnk_08BD1CE8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	b _0809A83C
	.align 2, 0
_0809A7EC: .4byte gUnk_03006B54
_0809A7F0: .4byte 0x000001FB
_0809A7F4: .4byte gUnk_08BD1CE8
_0809A7F8:
	mov r6, r8
	ldr r2, [r6, #0x14]
	adds r0, r2, r5
	ldrb r0, [r0]
	movs r4, #0xf
	adds r6, r4, #0
	ands r6, r0
	ldr r0, _0809A844 @ =gUnk_08BD1CE8
	mov ip, r0
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	lsls r3, r7
	mov r6, r8
	movs r0, #8
	ldrsh r6, [r6, r0]
	adds r0, r5, r6
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r6, r4, #0
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r7
	asrs r0, r1
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0809A83C:
	cmp r0, #0
	beq _0809A848
_0809A840:
	movs r0, #0
	b _0809A84A
	.align 2, 0
_0809A844: .4byte gUnk_08BD1CE8
_0809A848:
	movs r0, #1
_0809A84A:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A854
sub_0809A854: @ 0x0809A854
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _0809A8F8 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r1, r1, r0
	mov r8, r1
	ldr r0, _0809A8FC @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809A954
	lsls r0, r4, #0x10
	asrs r4, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809A94C
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809A94C
	adds r1, #7
	mov r5, r8
	movs r6, #0
	ldrsh r0, [r5, r6]
	cmp r1, r0
	bge _0809A94C
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r5, r3]
	cmp r1, r0
	bge _0809A94C
	adds r1, r4, #0
	adds r1, #0x70
	subs r2, #0x40
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	lsls r2, r2, #0x10
	mov r4, r8
	ldrh r3, [r4, #8]
	asrs r0, r2, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r1, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #7
	lsrs r3, r1, #0x10
	ands r3, r0
	lsrs r7, r2, #0x10
	ands r7, r0
	cmp r7, #0
	bne _0809A904
	ldr r0, [r4, #0x14]
	adds r0, r0, r5
	ldrb r0, [r0]
	movs r1, #0xf
	ands r1, r0
	ldr r2, _0809A900 @ =gUnk_08BD1CE8
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	ldrb r0, [r0]
	b _0809A948
	.align 2, 0
_0809A8F8: .4byte gUnk_03006B54
_0809A8FC: .4byte 0x000001FB
_0809A900: .4byte gUnk_08BD1CE8
_0809A904:
	mov r6, r8
	ldr r2, [r6, #0x14]
	adds r0, r2, r5
	ldrb r0, [r0]
	movs r4, #0xf
	adds r6, r4, #0
	ands r6, r0
	ldr r0, _0809A950 @ =gUnk_08BD1CE8
	mov ip, r0
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	lsls r0, r6, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	lsls r3, r7
	mov r6, r8
	movs r0, #8
	ldrsh r6, [r6, r0]
	adds r0, r5, r6
	adds r2, r2, r0
	ldrb r0, [r2]
	adds r6, r4, #0
	ands r6, r0
	lsls r0, r6, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r7
	asrs r0, r1
	orrs r0, r3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0809A948:
	cmp r0, #0
	beq _0809A954
_0809A94C:
	movs r0, #0
	b _0809A956
	.align 2, 0
_0809A950: .4byte gUnk_08BD1CE8
_0809A954:
	movs r0, #1
_0809A956:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809A960
sub_0809A960: @ 0x0809A960
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0809AA0C @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r0, _0809AA10 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809AA74
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809AA6A
	lsls r0, r6, #0x10
	asrs r5, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809AA6A
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809AA6A
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809AA6A
	subs r2, #0x80
	adds r1, r5, #0
	subs r1, #0x40
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	lsls r1, r1, #0x10
	ldrh r3, [r4, #8]
	asrs r0, r1, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r2, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #7
	lsrs r1, r1, #0x10
	ands r1, r0
	lsrs r6, r2, #0x10
	ands r6, r0
	cmp r6, #0
	bne _0809AA18
	ldr r2, [r4, #0x14]
	adds r2, r2, r3
	ldrb r0, [r2]
	movs r3, #0xf
	adds r7, r3, #0
	ands r7, r0
	ldr r4, _0809AA14 @ =gUnk_08BD1C68
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r7, #3
	adds r0, r1, r0
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r5, r0, #8
	ldrb r0, [r2, #1]
	adds r7, r3, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r1, r1, r0
	adds r1, r1, r4
	ldrb r0, [r1]
	orrs r5, r0
	b _0809AA66
	.align 2, 0
_0809AA0C: .4byte gUnk_03006B54
_0809AA10: .4byte 0x000001FB
_0809AA14: .4byte gUnk_08BD1C68
_0809AA18:
	ldr r4, [r4, #0x14]
	adds r4, r4, r3
	ldrb r0, [r4]
	movs r5, #0xf
	adds r7, r5, #0
	ands r7, r0
	ldr r0, _0809AA70 @ =gUnk_08BD1C68
	mov ip, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r7, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	adds r0, r6, #0
	adds r0, #8
	lsls r3, r0
	ldrb r0, [r4, #1]
	adds r7, r5, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r2, [r0]
	lsls r2, r6
	orrs r2, r3
	ldrb r0, [r4, #2]
	adds r7, r5, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r6
	asrs r0, r1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0809AA66:
	cmp r5, #0
	beq _0809AA74
_0809AA6A:
	movs r0, #0
	b _0809AA76
	.align 2, 0
_0809AA70: .4byte gUnk_08BD1C68
_0809AA74:
	movs r0, #1
_0809AA76:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809AA7C
sub_0809AA7C: @ 0x0809AA7C
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r0, _0809AB28 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r0, r1
	ldr r0, _0809AB2C @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	bne _0809AB90
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	asrs r1, r0, #0x14
	adds r0, r1, #0
	subs r0, #8
	cmp r0, #0
	blt _0809AB86
	lsls r0, r6, #0x10
	asrs r5, r0, #0x10
	asrs r3, r0, #0x14
	subs r0, r3, #4
	cmp r0, #0
	blt _0809AB86
	adds r1, #7
	movs r6, #0
	ldrsh r0, [r4, r6]
	cmp r1, r0
	bge _0809AB86
	adds r1, r3, #4
	movs r3, #2
	ldrsh r0, [r4, r3]
	cmp r1, r0
	bge _0809AB86
	subs r2, #0x80
	adds r1, r5, #0
	adds r1, #0x30
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r2, r2, #0x10
	lsls r1, r1, #0x10
	ldrh r3, [r4, #8]
	asrs r0, r1, #0x13
	adds r5, r0, #0
	muls r5, r3, r5
	adds r3, r5, #0
	asrs r0, r2, #0x13
	adds r0, r0, r3
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	movs r0, #7
	lsrs r1, r1, #0x10
	ands r1, r0
	lsrs r6, r2, #0x10
	ands r6, r0
	cmp r6, #0
	bne _0809AB34
	ldr r2, [r4, #0x14]
	adds r2, r2, r3
	ldrb r0, [r2]
	movs r3, #0xf
	adds r7, r3, #0
	ands r7, r0
	ldr r4, _0809AB30 @ =gUnk_08BD1C68
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r7, #3
	adds r0, r1, r0
	adds r0, r0, r4
	ldrb r0, [r0]
	lsls r5, r0, #8
	ldrb r0, [r2, #1]
	adds r7, r3, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r1, r1, r0
	adds r1, r1, r4
	ldrb r0, [r1]
	orrs r5, r0
	b _0809AB82
	.align 2, 0
_0809AB28: .4byte gUnk_03006B54
_0809AB2C: .4byte 0x000001FB
_0809AB30: .4byte gUnk_08BD1C68
_0809AB34:
	ldr r4, [r4, #0x14]
	adds r4, r4, r3
	ldrb r0, [r4]
	movs r5, #0xf
	adds r7, r5, #0
	ands r7, r0
	ldr r0, _0809AB8C @ =gUnk_08BD1C68
	mov ip, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r0, r7, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r3, [r0]
	adds r0, r6, #0
	adds r0, #8
	lsls r3, r0
	ldrb r0, [r4, #1]
	adds r7, r5, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r0, r1, r0
	add r0, ip
	ldrb r2, [r0]
	lsls r2, r6
	orrs r2, r3
	ldrb r0, [r4, #2]
	adds r7, r5, #0
	ands r7, r0
	lsls r0, r7, #3
	adds r1, r1, r0
	add r1, ip
	ldrb r0, [r1]
	movs r1, #8
	subs r1, r1, r6
	asrs r0, r1
	orrs r0, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_0809AB82:
	cmp r5, #0
	beq _0809AB90
_0809AB86:
	movs r0, #0
	b _0809AB92
	.align 2, 0
_0809AB8C: .4byte gUnk_08BD1C68
_0809AB90:
	movs r0, #1
_0809AB92:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_0809AB98
sub_0809AB98: @ 0x0809AB98
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	mov r8, r1
	mov sb, r2
	ldr r0, _0809ADC0 @ =0x0000017F
	bl sub_08012F60
	lsls r0, r0, #0x10
	ldr r5, _0809ADC4 @ =0x0000FFFF
	adds r6, r5, #0
	adds r3, r5, #0
	adds r4, r3, #0
	lsrs r2, r0, #0x10
	ldr r1, _0809ADC8 @ =0xFFCE0000
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _0809ABCA
	movs r6, #0
	adds r5, r0, #0
	movs r4, #3
	movs r3, #0
_0809ABCA:
	cmp r2, #0x35
	bne _0809ABD6
	movs r6, #0
	movs r5, #3
	movs r4, #2
	movs r3, #0
_0809ABD6:
	adds r0, r2, #0
	subs r0, #0x3c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809ABEA
	movs r6, #1
	adds r5, r0, #0
	movs r4, #2
	movs r3, #1
_0809ABEA:
	adds r0, r2, #0
	subs r0, #0x46
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #1
	bhi _0809ABFE
	movs r6, #2
	adds r5, r1, #0
	movs r4, #0
	movs r3, #2
_0809ABFE:
	adds r0, r2, #0
	subs r0, #0x48
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _0809AC12
	movs r6, #2
	adds r5, r1, #0
	movs r4, #2
	movs r3, #1
_0809AC12:
	adds r0, r2, #0
	subs r0, #0x50
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #1
	bhi _0809AC26
	movs r6, #3
	adds r5, r1, #0
	movs r4, #0
	movs r3, #2
_0809AC26:
	adds r0, r2, #0
	subs r0, #0x52
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0809AC3A
	movs r6, #3
	adds r5, r1, #0
	movs r4, #2
	movs r3, #1
_0809AC3A:
	adds r0, r2, #0
	subs r0, #0x5a
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #1
	bhi _0809AC4E
	movs r6, #4
	adds r5, r1, #0
	movs r4, #0
	movs r3, #2
_0809AC4E:
	adds r0, r2, #0
	subs r0, #0x5c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _0809AC62
	movs r6, #4
	adds r5, r1, #0
	movs r4, #3
	movs r3, #0
_0809AC62:
	adds r0, r2, #0
	subs r0, #0x64
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _0809AC76
	movs r6, #5
	adds r5, r0, #0
	movs r4, #2
	movs r3, #1
_0809AC76:
	cmp r2, #0x67
	bls _0809AC82
	movs r6, #5
	adds r5, r0, #0
	movs r4, #3
	movs r3, #0
_0809AC82:
	adds r0, r2, #0
	subs r0, #0x6e
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809AC96
	movs r6, #6
	adds r5, r0, #0
	movs r4, #0
	movs r3, #2
_0809AC96:
	adds r0, r2, #0
	subs r0, #0x78
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809ACAA
	movs r6, #7
	adds r5, r0, #0
	movs r4, #2
	movs r3, #1
_0809ACAA:
	adds r0, r2, #0
	subs r0, #0x82
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _0809ACBE
	movs r6, #8
	adds r5, r0, #0
	movs r4, #4
	movs r3, #3
_0809ACBE:
	adds r0, r2, #0
	subs r0, #0x96
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _0809ACD2
	movs r6, #9
	adds r5, r0, #0
	movs r4, #1
	movs r3, #4
_0809ACD2:
	adds r0, r2, #0
	subs r0, #0xaa
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #3
	bhi _0809ACE6
	movs r6, #0xa
	adds r5, r1, #0
	movs r4, #3
	movs r3, #0
_0809ACE6:
	adds r0, r2, #0
	subs r0, #0xae
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #6
	bhi _0809ACFA
	movs r6, #0xa
	adds r5, r1, #0
	movs r4, #2
	movs r3, #1
_0809ACFA:
	adds r0, r2, #0
	subs r0, #0xbe
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _0809AD0E
	movs r6, #0xb
	adds r5, r0, #0
	movs r4, #5
	movs r3, #7
_0809AD0E:
	adds r0, r2, #0
	subs r0, #0xd2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _0809AD22
	movs r6, #0xc
	adds r5, r0, #0
	movs r4, #6
	movs r3, #5
_0809AD22:
	adds r0, r2, #0
	subs r0, #0xdc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _0809AD36
	movs r6, #0xd
	adds r5, r0, #0
	movs r4, #6
	movs r3, #5
_0809AD36:
	adds r0, r2, #0
	subs r0, #0xf0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xd
	bhi _0809AD4A
	movs r6, #0xe
	adds r5, r0, #0
	movs r4, #9
	movs r3, #6
_0809AD4A:
	ldr r1, _0809ADCC @ =0xFFFFFEF2
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809AD5E
	movs r6, #0xf
	adds r5, r0, #0
	movs r4, #4
	movs r3, #3
_0809AD5E:
	ldr r1, _0809ADD0 @ =0xFFFFFEE8
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809AD72
	movs r6, #0x10
	adds r5, r0, #0
	movs r4, #1
	movs r3, #4
_0809AD72:
	ldr r1, _0809ADD4 @ =0xFFFFFEDE
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809AD86
	movs r6, #0x11
	adds r5, r0, #0
	movs r4, #5
	movs r3, #7
_0809AD86:
	ldr r1, _0809ADD8 @ =0xFFFFFED4
	adds r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _0809AD9A
	movs r6, #0x12
	adds r5, r0, #0
	movs r4, #6
	movs r3, #5
_0809AD9A:
	cmp r7, #0
	beq _0809ADA0
	strh r6, [r7]
_0809ADA0:
	mov r0, r8
	cmp r0, #0
	beq _0809ADA8
	strh r5, [r0]
_0809ADA8:
	mov r1, sb
	cmp r1, #0
	beq _0809ADB0
	strh r4, [r1]
_0809ADB0:
	adds r0, r3, #0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809ADC0: .4byte 0x0000017F
_0809ADC4: .4byte 0x0000FFFF
_0809ADC8: .4byte 0xFFCE0000
_0809ADCC: .4byte 0xFFFFFEF2
_0809ADD0: .4byte 0xFFFFFEE8
_0809ADD4: .4byte 0xFFFFFEDE
_0809ADD8: .4byte 0xFFFFFED4

	thumb_func_start sub_0809ADDC
sub_0809ADDC: @ 0x0809ADDC
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r5, r2, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	mov ip, r3
	ldr r0, _0809AE0C @ =gUnk_03006B54
	ldr r0, [r0]
	movs r6, #0x9c
	lsls r6, r6, #1
	adds r3, r0, r6
	movs r7, #0
	cmp r2, #2
	beq _0809AE2E
	cmp r2, #2
	bgt _0809AE10
	cmp r2, #1
	beq _0809AE1A
	b _0809AF08
	.align 2, 0
_0809AE0C: .4byte gUnk_03006B54
_0809AE10:
	cmp r5, #3
	beq _0809AE82
	cmp r5, #4
	beq _0809AEB8
	b _0809AF08
_0809AE1A:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, #7
	movs r2, #0xa
	ldrsh r0, [r3, r2]
	cmp r1, r0
	bgt _0809AF08
	movs r6, #8
	ldrsh r0, [r3, r6]
	b _0809AE90
_0809AE2E:
	lsls r0, r4, #0x10
	asrs r6, r0, #0x10
	subs r0, r6, #4
	cmp r0, #0
	blt _0809AF08
	lsls r2, r1, #0x10
	asrs r2, r2, #0x10
	movs r0, #8
	ldrsh r4, [r3, r0]
	adds r0, r2, #0
	muls r0, r4, r0
	ldr r5, [r3, #0x10]
	adds r0, r0, r6
	adds r0, r0, r5
	subs r0, #4
	ldrb r0, [r0]
	movs r3, #8
	adds r1, r3, #0
	ands r1, r0
	adds r0, r2, #1
	muls r0, r4, r0
	adds r0, r0, r6
	adds r0, r0, r5
	subs r0, #4
	ldrb r0, [r0]
	ands r1, r0
	adds r0, r2, #2
	muls r0, r4, r0
	adds r0, r0, r6
	adds r0, r0, r5
	subs r0, #4
	ldrb r0, [r0]
	ands r3, r0
	ands r1, r3
	adds r2, #3
	adds r0, r2, #0
	muls r0, r4, r0
	adds r0, r0, r6
	adds r0, r0, r5
	subs r0, #4
	ldrb r0, [r0]
	b _0809AF02
_0809AE82:
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	subs r1, r0, #4
	cmp r1, #0
	blt _0809AF08
	movs r2, #8
	ldrsh r0, [r3, r2]
_0809AE90:
	muls r1, r0, r1
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	ldr r3, [r3, #0x10]
	adds r1, r1, r0
	adds r3, r3, r1
	ldrb r1, [r3]
	movs r2, #8
	adds r0, r2, #0
	ands r0, r1
	ldrb r1, [r3, #1]
	ands r0, r1
	ldrb r1, [r3, #2]
	ands r2, r1
	ands r0, r2
	ldrb r1, [r3, #3]
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809AF08
_0809AEB8:
	lsls r0, r4, #0x10
	asrs r6, r0, #0x10
	adds r0, r6, #7
	movs r2, #8
	ldrsh r5, [r3, r2]
	cmp r0, r5
	bgt _0809AF08
	lsls r2, r1, #0x10
	asrs r2, r2, #0x10
	adds r0, r2, #0
	muls r0, r5, r0
	ldr r4, [r3, #0x10]
	adds r0, r0, r6
	adds r0, r0, r4
	ldrb r0, [r0, #7]
	movs r3, #8
	adds r1, r3, #0
	ands r1, r0
	adds r0, r2, #1
	muls r0, r5, r0
	adds r0, r0, r6
	adds r0, r0, r4
	ldrb r0, [r0, #7]
	ands r1, r0
	adds r0, r2, #2
	muls r0, r5, r0
	adds r0, r0, r6
	adds r0, r0, r4
	ldrb r0, [r0, #7]
	ands r3, r0
	ands r1, r3
	adds r2, #3
	adds r0, r2, #0
	muls r0, r5, r0
	adds r0, r0, r6
	adds r0, r0, r4
	ldrb r0, [r0, #7]
_0809AF02:
	ands r1, r0
	lsls r1, r1, #0x18
	lsrs r7, r1, #0x18
_0809AF08:
	cmp r7, #8
	beq _0809AF16
	mov r0, ip
	movs r1, #0
	bl sub_08012F0C
	b _0809AF1E
_0809AF16:
	mov r0, ip
	movs r1, #1
	bl sub_08012F0C
_0809AF1E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0809AF24
sub_0809AF24: @ 0x0809AF24
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r0, _0809AF78 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r4, r0, r1
	movs r5, #0
	ldr r0, _0809AF7C @ =0x0000FFFF
	adds r6, r0, #0
_0809AF38:
	movs r0, #0
	str r0, [sp]
	mov r0, sp
	adds r1, r4, #0
	ldr r2, _0809AF80 @ =0x0500000B
	bl CpuSet
	ldrh r0, [r4, #0x1a]
	orrs r0, r6
	strh r0, [r4, #0x1a]
	ldrh r0, [r4, #0x1c]
	orrs r0, r6
	strh r0, [r4, #0x1c]
	ldrh r0, [r4, #0x1e]
	orrs r0, r6
	strh r0, [r4, #0x1e]
	adds r0, r5, #0
	movs r1, #1
	movs r2, #1
	bl sub_0809AFF4
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r4, #0x2c
	cmp r5, #2
	bls _0809AF38
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809AF78: .4byte gUnk_03006B54
_0809AF7C: .4byte 0x0000FFFF
_0809AF80: .4byte 0x0500000B

	thumb_func_start sub_0809AF84
sub_0809AF84: @ 0x0809AF84
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r0, #4
	bne _0809AFA8
	movs r4, #0
_0809AF94:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_0809B64C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #2
	bls _0809AF94
	b _0809AFAE
_0809AFA8:
	adds r1, r5, #0
	bl sub_0809B64C
_0809AFAE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809AFB4
sub_0809AFB4: @ 0x0809AFB4
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	cmp r0, #4
	bne _0809AFE2
	movs r4, #0
	lsls r6, r1, #0x10
	lsls r5, r2, #0x10
_0809AFCC:
	adds r0, r4, #0
	asrs r1, r6, #0x10
	asrs r2, r5, #0x10
	bl sub_0809B688
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #2
	bls _0809AFCC
	b _0809AFEE
_0809AFE2:
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0809B688
_0809AFEE:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_0809AFF4
sub_0809AFF4: @ 0x0809AFF4
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r4, _0809B02C @ =gUnk_03006B54
	movs r3, #0x2c
	muls r0, r3, r0
	movs r3, #0x9c
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r4, [r4]
	adds r4, r4, r0
	ldrb r5, [r4, #0x14]
	movs r0, #0xf0
	adds r3, r0, #0
	ands r3, r5
	ldrb r5, [r4, #0x15]
	ands r0, r5
	orrs r3, r1
	strb r3, [r4, #0x14]
	orrs r0, r2
	strb r0, [r4, #0x15]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B02C: .4byte gUnk_03006B54

	thumb_func_start sub_0809B030
sub_0809B030: @ 0x0809B030
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r2, #0x10
	lsrs r4, r2, #0x10
	ldr r3, _0809B074 @ =gUnk_03006B54
	movs r2, #0x2c
	muls r0, r2, r0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r2, [r3]
	adds r2, r2, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, #0xf0
	movs r3, #0
	strh r1, [r2, #0x10]
	lsls r1, r1, #0x10
	cmp r1, #0
	bge _0809B05C
	strh r3, [r2, #0x10]
_0809B05C:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r0, #0xa0
	strh r0, [r2, #0x12]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _0809B06C
	strh r3, [r2, #0x12]
_0809B06C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B074: .4byte gUnk_03006B54

	thumb_func_start sub_0809B078
sub_0809B078: @ 0x0809B078
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r4, _0809B098 @ =gUnk_03006B54
	movs r3, #0x2c
	muls r3, r0, r3
	movs r0, #0x9c
	lsls r0, r0, #3
	adds r3, r3, r0
	ldr r0, [r4]
	adds r0, r0, r3
	strh r1, [r0, #4]
	strh r2, [r0, #6]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B098: .4byte gUnk_03006B54

	thumb_func_start sub_0809B09C
sub_0809B09C: @ 0x0809B09C
	push {lr}
	sub sp, #4
	ldr r0, _0809B0C4 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r1, r1, r0
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809B0C8 @ =0x05000008
	mov r0, sp
	bl CpuSet
	movs r0, #0
	movs r1, #2
	bl sub_0809B0CC
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_0809B0C4: .4byte gUnk_03006B54
_0809B0C8: .4byte 0x05000008

	thumb_func_start sub_0809B0CC
sub_0809B0CC: @ 0x0809B0CC
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _0809B0EC @ =gUnk_03006B54
	ldr r2, [r2]
	movs r3, #0x98
	lsls r3, r3, #3
	adds r2, r2, r3
	strh r0, [r2, #0x1c]
	ldrh r3, [r2, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r3
	orrs r1, r0
	strh r1, [r2, #0x1a]
	bx lr
	.align 2, 0
_0809B0EC: .4byte gUnk_03006B54

	thumb_func_start sub_0809B0F0
sub_0809B0F0: @ 0x0809B0F0
	push {r4, r5, lr}
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r1, _0809B120 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r5, #0x98
	lsls r5, r5, #3
	adds r3, r1, r5
	strh r0, [r3, #0x1c]
	ldrh r1, [r3, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	orrs r4, r0
	strh r4, [r3, #0x1a]
	strh r2, [r3, #0xc]
	cmp r2, #0
	bne _0809B124
	movs r0, #1
	bl sub_08096BEC
	b _0809B12A
	.align 2, 0
_0809B120: .4byte gUnk_03006B54
_0809B124:
	movs r0, #0x20
	orrs r4, r0
	strh r4, [r3, #0x1a]
_0809B12A:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809B130
sub_0809B130: @ 0x0809B130
	push {r4, r5, lr}
	adds r2, r0, #0
	adds r3, r1, #0
	ldr r0, _0809B188 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x14
	lsrs r4, r0, #0x10
	ldrh r0, [r1, #6]
	lsls r0, r0, #0x14
	lsrs r5, r0, #0x10
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bge _0809B158
	movs r0, #0
	strh r0, [r2]
_0809B158:
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bge _0809B164
	movs r0, #0
	strh r0, [r3]
_0809B164:
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809B172
	strh r4, [r2]
_0809B172:
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809B180
	strh r5, [r3]
_0809B180:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B188: .4byte gUnk_03006B54

	thumb_func_start sub_0809B18C
sub_0809B18C: @ 0x0809B18C
	push {r4, r5, r6, lr}
	sub sp, #4
	mov r2, sp
	strh r0, [r2]
	mov r3, sp
	adds r3, #2
	strh r1, [r3]
	ldr r0, _0809B1FC @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r6, r1, r0
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	lsls r0, r0, #0x14
	lsrs r4, r0, #0x10
	ldrh r0, [r1, #6]
	lsls r0, r0, #0x14
	lsrs r5, r0, #0x10
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #0
	bge _0809B1C2
	movs r0, #0
	strh r0, [r2]
_0809B1C2:
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bge _0809B1CE
	movs r0, #0
	strh r0, [r3]
_0809B1CE:
	movs r0, #0
	ldrsh r1, [r2, r0]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809B1DC
	strh r4, [r2]
_0809B1DC:
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809B1EA
	strh r5, [r3]
_0809B1EA:
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r6]
	ldrh r0, [r3]
	strh r0, [r6, #2]
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B1FC: .4byte gUnk_03006B54

	thumb_func_start sub_0809B200
sub_0809B200: @ 0x0809B200
	ldr r1, _0809B210 @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r1, r1, r2
	strh r0, [r1, #0xc]
	bx lr
	.align 2, 0
_0809B210: .4byte gUnk_03006B54

	thumb_func_start sub_0809B214
sub_0809B214: @ 0x0809B214
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	adds r5, r0, #0
	ldr r6, [sp, #0x20]
	ldr r0, [sp, #0x24]
	mov r8, r0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _0809B27C @ =gUnk_03006B54
	ldr r4, [r0]
	lsls r0, r5, #1
	adds r0, r0, r5
	lsls r0, r0, #2
	movs r7, #0xfc
	lsls r7, r7, #2
	adds r0, r0, r7
	adds r4, r4, r0
	strh r1, [r4, #6]
	strh r2, [r4, #8]
	strh r3, [r4]
	strh r6, [r4, #2]
	mov r0, r8
	strh r0, [r4, #0xa]
	ldrh r1, [r4, #4]
	movs r0, #1
	orrs r0, r1
	strh r0, [r4, #4]
	adds r0, r5, #0
	bl sub_080063FC
	ldrh r1, [r4, #6]
	adds r1, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldrh r2, [r4, #8]
	ldrh r3, [r4]
	ldrh r0, [r4, #2]
	str r0, [sp]
	ldrh r0, [r4, #0xa]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_08005C14
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B27C: .4byte gUnk_03006B54

	thumb_func_start sub_0809B280
sub_0809B280: @ 0x0809B280
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r1, _0809B2D4 @ =gUnk_03006B54
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	movs r2, #0xfc
	lsls r2, r2, #2
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	ldrh r1, [r5, #4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809B2BC
	adds r0, r4, #0
	bl sub_080063FC
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809B2BC
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_0800644C
_0809B2BC:
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809B2D8 @ =0x05000003
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809B2D4: .4byte gUnk_03006B54
_0809B2D8: .4byte 0x05000003

	thumb_func_start sub_0809B2DC
sub_0809B2DC: @ 0x0809B2DC
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080063FC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _0809B2F2
	movs r0, #0
	b _0809B2F4
_0809B2F2:
	movs r0, #1
_0809B2F4:
	pop {r1}
	bx r1

	thumb_func_start sub_0809B2F8
sub_0809B2F8: @ 0x0809B2F8
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r5, r2, #0
	ldr r1, _0809B348 @ =gUnk_03006B54
	lsls r0, r2, #3
	movs r3, #0x90
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809B322
	adds r0, r2, #0
	movs r1, #2
	bl sub_0809B350
_0809B322:
	adds r0, r5, #0
	bl sub_080114AC
	adds r0, r5, #0
	bl sub_08011370
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809B34C @ =0x05000002
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	movs r0, #2
	strb r0, [r4, #5]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B348: .4byte gUnk_03006B54
_0809B34C: .4byte 0x05000002

	thumb_func_start sub_0809B350
sub_0809B350: @ 0x0809B350
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r3, r2, #0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	ldr r1, _0809B380 @ =gUnk_03006B54
	lsls r0, r2, #3
	movs r5, #0x90
	lsls r5, r5, #3
	adds r0, r0, r5
	ldr r1, [r1]
	adds r5, r1, r0
	cmp r4, #0
	beq _0809B384
	cmp r4, #0
	blt _0809B39C
	cmp r4, #2
	bgt _0809B39C
	adds r0, r2, #0
	bl sub_08011424
	b _0809B39C
	.align 2, 0
_0809B380: .4byte gUnk_03006B54
_0809B384:
	ldrb r0, [r5, #5]
	cmp r0, #1
	bne _0809B392
	adds r0, r2, #0
	bl sub_08011440
	b _0809B39C
_0809B392:
	cmp r0, #2
	bne _0809B39C
	adds r0, r3, #0
	bl sub_080113E4
_0809B39C:
	strb r4, [r5, #5]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809B3A4
sub_0809B3A4: @ 0x0809B3A4
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	ldr r1, _0809B3DC @ =gUnk_03006B54
	lsls r0, r4, #3
	movs r2, #0x90
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r1]
	adds r2, r1, r0
	cmp r3, #2
	bne _0809B3CC
	ldrb r1, [r2, #6]
	movs r0, #1
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_0809B3CC:
	strb r3, [r2, #6]
	ldrb r1, [r2, #6]
	adds r0, r4, #0
	bl sub_080113D4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B3DC: .4byte gUnk_03006B54

	thumb_func_start sub_0809B3E0
sub_0809B3E0: @ 0x0809B3E0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r6, [sp, #0x1c]
	ldr r4, [sp, #0x20]
	mov r8, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r5, _0809B430 @ =gUnk_03006B54
	lsls r4, r0, #3
	movs r7, #0x94
	lsls r7, r7, #3
	adds r4, r4, r7
	ldr r5, [r5]
	adds r5, r5, r4
	strb r1, [r5, #2]
	strb r2, [r5, #4]
	strb r3, [r5, #5]
	strb r6, [r5, #6]
	mov r1, r8
	strb r1, [r5, #7]
	ldrb r1, [r5, #2]
	ldrb r2, [r5, #4]
	ldrb r3, [r5, #5]
	ldrb r4, [r5, #6]
	str r4, [sp]
	bl sub_08010FFC
	ldrh r1, [r5]
	movs r0, #1
	orrs r0, r1
	strh r0, [r5]
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B430: .4byte gUnk_03006B54

	thumb_func_start sub_0809B434
sub_0809B434: @ 0x0809B434
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r5, r2, #0
	ldr r1, _0809B480 @ =gUnk_03006B54
	lsls r0, r2, #3
	movs r3, #0x94
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809B45E
	adds r0, r2, #0
	movs r1, #2
	bl sub_0809B488
_0809B45E:
	adds r0, r5, #0
	bl sub_08010FC8
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809B484 @ =0x05000002
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	movs r0, #2
	strb r0, [r4, #3]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B480: .4byte gUnk_03006B54
_0809B484: .4byte 0x05000002

	thumb_func_start sub_0809B488
sub_0809B488: @ 0x0809B488
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r3, r2, #0
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	ldr r1, _0809B4B8 @ =gUnk_03006B54
	lsls r0, r2, #3
	movs r5, #0x94
	lsls r5, r5, #3
	adds r0, r0, r5
	ldr r1, [r1]
	adds r5, r1, r0
	cmp r4, #0
	beq _0809B4BC
	cmp r4, #0
	blt _0809B4D6
	cmp r4, #2
	bgt _0809B4D6
	adds r0, r2, #0
	bl sub_08011040
	b _0809B4D6
	.align 2, 0
_0809B4B8: .4byte gUnk_03006B54
_0809B4BC:
	ldrb r0, [r5, #3]
	cmp r0, #1
	bne _0809B4CA
	adds r0, r2, #0
	bl sub_08011064
	b _0809B4D6
_0809B4CA:
	cmp r0, #2
	bne _0809B4D6
	ldrb r1, [r5, #7]
	adds r0, r3, #0
	bl sub_08011024
_0809B4D6:
	strb r4, [r5, #3]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809B4E0
sub_0809B4E0: @ 0x0809B4E0
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _0809B504 @ =gUnk_03006B54
	lsls r3, r0, #3
	movs r4, #0x94
	lsls r4, r4, #3
	adds r3, r3, r4
	ldr r2, [r2]
	adds r2, r2, r3
	strb r1, [r2, #7]
	ldrb r1, [r2, #7]
	bl sub_08011088
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B504: .4byte gUnk_03006B54

	thumb_func_start sub_0809B508
sub_0809B508: @ 0x0809B508
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r4, [sp, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r3, r3, #0x10
	lsrs r6, r3, #0x10
	ldr r0, _0809B59C @ =gUnk_03006B54
	ldr r0, [r0]
	movs r3, #0x9c
	lsls r3, r3, #1
	adds r3, r3, r0
	mov ip, r3
	ldr r5, [r3, #0x10]
	movs r7, #8
	ldrsh r3, [r3, r7]
	lsls r2, r2, #0x10
	asrs r0, r2, #0x10
	muls r0, r3, r0
	lsls r1, r1, #0x10
	asrs r7, r1, #0x10
	adds r0, r0, r7
	adds r5, r5, r0
	lsrs r3, r2, #0x10
	lsls r4, r4, #0x10
	asrs r0, r4, #0x10
	cmp r2, r4
	bgt _0809B58E
	mov sl, r1
	lsls r6, r6, #0x10
	asrs r4, r6, #0x10
	subs r7, r4, r7
	mov sb, r7
	adds r7, r0, #0
_0809B554:
	mov r1, sl
	asrs r0, r1, #0x10
	lsls r3, r3, #0x10
	cmp r0, r4
	bgt _0809B572
	asrs r2, r6, #0x10
_0809B560:
	mov r0, r8
	strb r0, [r5]
	adds r5, #1
	movs r0, #0x80
	lsls r0, r0, #9
	adds r1, r1, r0
	asrs r0, r1, #0x10
	cmp r0, r2
	ble _0809B560
_0809B572:
	mov r1, ip
	movs r2, #8
	ldrsh r0, [r1, r2]
	mov r1, sb
	subs r0, r0, r1
	subs r0, #1
	adds r5, r5, r0
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r3, r2
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, r7
	ble _0809B554
_0809B58E:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809B59C: .4byte gUnk_03006B54

	thumb_func_start sub_0809B5A0
sub_0809B5A0: @ 0x0809B5A0
	push {lr}
	bl sub_0806DB00
	ldr r0, _0809B5BC @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
	pop {r0}
	bx r0
	.align 2, 0
_0809B5BC: .4byte gUnk_03006B54

	thumb_func_start sub_0809B5C0
sub_0809B5C0: @ 0x0809B5C0
	push {lr}
	bl sub_0806DB84
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809B5D8
	ldr r0, _0809B5DC @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _0809B5E0 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r2]
_0809B5D8:
	pop {r0}
	bx r0
	.align 2, 0
_0809B5DC: .4byte gUnk_03006B54
_0809B5E0: .4byte 0x0000FEFF

	thumb_func_start sub_0809B5E4
sub_0809B5E4: @ 0x0809B5E4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r1, _0809B62C @ =gUnk_03006B54
	movs r0, #0x2c
	muls r0, r4, r0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r2, [r1]
	adds r1, r2, r0
	ldrh r0, [r1, #0x1a]
	ldr r5, _0809B630 @ =0x0000FFFF
	cmp r0, r5
	beq _0809B63E
	movs r3, #0
	cmp r3, r4
	bhs _0809B63E
	adds r6, r2, #0
	adds r7, r5, #0
	movs r5, #0x2c
_0809B60E:
	adds r0, r3, #0
	muls r0, r5, r0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r0, r6, r0
	ldrh r2, [r0, #0x1a]
	cmp r2, r7
	beq _0809B634
	ldrh r0, [r1, #0x1a]
	cmp r0, r2
	bne _0809B634
	adds r0, r3, #0
	b _0809B640
	.align 2, 0
_0809B62C: .4byte gUnk_03006B54
_0809B630: .4byte 0x0000FFFF
_0809B634:
	adds r0, r3, #1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, r4
	blo _0809B60E
_0809B63E:
	ldr r0, _0809B648 @ =0x0000FFFF
_0809B640:
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809B648: .4byte 0x0000FFFF

	thumb_func_start sub_0809B64C
sub_0809B64C: @ 0x0809B64C
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r2, _0809B684 @ =gUnk_03006B54
	movs r0, #0x2c
	adds r1, r3, #0
	muls r1, r0, r1
	movs r0, #0x9c
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	ldrh r1, [r0, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809B67E
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r4, #0
	bl sub_0800471C
_0809B67E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809B684: .4byte gUnk_03006B54

	thumb_func_start sub_0809B688
sub_0809B688: @ 0x0809B688
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	mov r0, sp
	strh r1, [r0]
	mov r5, sp
	adds r5, #2
	strh r2, [r5]
	ldr r1, _0809B6D0 @ =gUnk_03006B54
	movs r0, #0x2c
	muls r0, r3, r0
	movs r2, #0x9c
	lsls r2, r2, #3
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809B6C8
	adds r0, r3, #0
	mov r1, sp
	adds r2, r5, #0
	bl sub_08094EF4
	mov r0, sp
	ldrh r0, [r0]
	strh r0, [r4]
	ldrh r0, [r5]
	strh r0, [r4, #2]
_0809B6C8:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_0809B6D0: .4byte gUnk_03006B54

	thumb_func_start sub_0809B6D4
sub_0809B6D4: @ 0x0809B6D4
	push {lr}
	ldr r0, _0809B70C @ =gUnk_03006B54
	ldr r3, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r2, r3, r0
	ldrh r1, [r2, #0x1c]
	ldr r0, _0809B710 @ =0x0000FFFF
	cmp r1, r0
	beq _0809B706
	movs r0, #0x54
	muls r1, r0, r1
	ldr r0, _0809B714 @ =0x00000AB8
	adds r1, r1, r0
	adds r1, r3, r1
	ldr r3, _0809B718 @ =0xFFFFF880
	adds r0, r3, #0
	ldrh r3, [r1]
	adds r0, r0, r3
	strh r0, [r2]
	ldr r3, _0809B71C @ =0xFFFFFB00
	adds r0, r3, #0
	ldrh r1, [r1, #2]
	adds r0, r0, r1
	strh r0, [r2, #2]
_0809B706:
	pop {r0}
	bx r0
	.align 2, 0
_0809B70C: .4byte gUnk_03006B54
_0809B710: .4byte 0x0000FFFF
_0809B714: .4byte 0x00000AB8
_0809B718: .4byte 0xFFFFF880
_0809B71C: .4byte 0xFFFFFB00

	thumb_func_start sub_0809B720
sub_0809B720: @ 0x0809B720
	push {lr}
	bl sub_08006FF0
	movs r0, #1
	bl sub_08014440
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	pop {r0}
	bx r0

	thumb_func_start sub_0809B738
sub_0809B738: @ 0x0809B738
	push {lr}
	bl sub_08006FF0
	movs r0, #1
	bl sub_08014440
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	pop {r0}
	bx r0

	thumb_func_start sub_0809B750
sub_0809B750: @ 0x0809B750
	push {r4, lr}
	movs r4, #0
_0809B754:
	adds r0, r4, #0
	bl sub_080A475C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x15
	bls _0809B754
	movs r4, #0
_0809B766:
	adds r0, r4, #0
	bl sub_080A4B7C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0xf
	bls _0809B766
	movs r4, #0
_0809B778:
	adds r0, r4, #0
	bl sub_080A49E8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0xf
	bls _0809B778
	movs r4, #0
_0809B78A:
	adds r0, r4, #0
	bl sub_0809EBF4
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B78A
	movs r4, #0
_0809B79C:
	adds r0, r4, #0
	bl sub_080A04E8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B79C
	movs r4, #0
_0809B7AE:
	adds r0, r4, #0
	bl sub_080A4A74
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B7AE
	bl sub_080A1DF4
	bl sub_080A4600
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0809B7CC
sub_0809B7CC: @ 0x0809B7CC
	push {r4, lr}
	movs r4, #0
_0809B7D0:
	adds r0, r4, #0
	bl sub_080A49E8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0xf
	bls _0809B7D0
	movs r4, #0
_0809B7E2:
	adds r0, r4, #0
	bl sub_0809EBF4
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B7E2
	movs r4, #0
_0809B7F4:
	adds r0, r4, #0
	bl sub_080A4B7C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0xf
	bls _0809B7F4
	movs r4, #0
_0809B806:
	adds r0, r4, #0
	bl sub_080A475C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x15
	bls _0809B806
	movs r4, #0
_0809B818:
	adds r0, r4, #0
	bl sub_080A04E8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B818
	movs r4, #0
_0809B82A:
	adds r0, r4, #0
	bl sub_080A4A74
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x1f
	bls _0809B82A
	movs r0, #0
	bl sub_0800480C
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809B848
sub_0809B848: @ 0x0809B848
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, _0809B87C @ =gUnk_03006B54
	lsls r0, r5, #3
	subs r0, r0, r5
	lsls r0, r0, #2
	ldr r2, _0809B880 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	ldr r2, _0809B884 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _0809B888 @ =0x00000AB8
	adds r0, r0, r2
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r4, r2]
	cmp r0, #0
	beq _0809B88C
	cmp r0, #1
	beq _0809B892
	b _0809B8D8
	.align 2, 0
_0809B87C: .4byte gUnk_03006B54
_0809B880: .4byte 0x00001FBC
_0809B884: .4byte 0x00001EB8
_0809B888: .4byte 0x00000AB8
_0809B88C:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_0809B892:
	adds r0, r1, #0
	adds r0, #0x1c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809B8D8
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r5, #0
	movs r1, #1
	bl sub_080A4FBC
	ldr r0, _0809B8E4 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _0809B8E8 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	ldrh r0, [r4, #0xe]
	cmp r0, #0
	beq _0809B8CA
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
_0809B8CA:
	ldrh r2, [r4, #0xc]
	movs r0, #0
	movs r1, #0
	bl sub_08012E14
	movs r0, #0
	strh r0, [r4]
_0809B8D8:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_0809B8E4: .4byte gUnk_03006B54
_0809B8E8: .4byte 0x0000FFFE

	thumb_func_start sub_0809B8EC
sub_0809B8EC: @ 0x0809B8EC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0809B938 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _0809B93C @ =0x00001EB8
	adds r7, r2, r0
	ldrh r1, [r7, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809B940 @ =0x00000AB8
	adds r0, r0, r1
	adds r4, r2, r0
	ldrb r1, [r4, #0xb]
	adds r0, r1, #0
	subs r0, #0x31
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0809B916
	b _0809BAB0
_0809B916:
	adds r0, r1, #0
	subs r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0809B924
	b _0809BAB0
_0809B924:
	ldr r0, _0809B944 @ =gKeyHeld
	ldrh r1, [r0]
	movs r5, #5
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809B948
	movs r5, #8
	b _0809B952
	.align 2, 0
_0809B938: .4byte gUnk_03006B54
_0809B93C: .4byte 0x00001EB8
_0809B940: .4byte 0x00000AB8
_0809B944: .4byte gKeyHeld
_0809B948:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809B952
	movs r5, #2
_0809B952:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0809B95E
	subs r0, r5, #1
	b _0809B968
_0809B95E:
	movs r0, #0x10
	ands r1, r0
	cmp r1, #0
	beq _0809B96C
	adds r0, r5, #1
_0809B968:
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_0809B96C:
	bl sub_080A4694
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	movs r2, #0
	ldrsh r0, [r4, r2]
	movs r2, #2
	ldrsh r1, [r4, r2]
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_0809DB8C
	ldrh r1, [r7, #8]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0809B990
	movs r6, #0
_0809B990:
	ldrb r0, [r7, #0xe]
	cmp r0, #0x60
	bne _0809B9A6
	cmp r5, #4
	bne _0809B99E
	movs r5, #7
	b _0809B9B8
_0809B99E:
	cmp r5, #6
	bne _0809B9B8
	movs r5, #3
	b _0809B9B8
_0809B9A6:
	cmp r0, #0x70
	bne _0809B9B8
	cmp r5, #4
	bne _0809B9B2
	movs r5, #1
	b _0809B9B8
_0809B9B2:
	cmp r5, #6
	bne _0809B9B8
	movs r5, #9
_0809B9B8:
	ldrb r0, [r7, #0xe]
	cmp r0, #0x80
	beq _0809B9D6
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_0809BBB4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0809B9D6
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_0809C7CC
_0809B9D6:
	movs r1, #0
	ldrsh r0, [r4, r1]
	movs r2, #2
	ldrsh r1, [r4, r2]
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_0809DB8C
	ldrh r1, [r7, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	mov r8, r0
	ands r0, r1
	cmp r0, #0
	bne _0809B9FA
	ldrh r0, [r7, #4]
	bl sub_0809BABC
_0809B9FA:
	cmp r5, #5
	beq _0809BA0C
	ldrh r1, [r7, #8]
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _0809BA14
_0809BA0C:
	movs r0, #0
	strb r0, [r4, #0xb]
	strb r0, [r4, #0xc]
	b _0809BA3A
_0809BA14:
	mov r0, r8
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _0809BA28
	movs r0, #3
	strb r0, [r4, #0xb]
	strb r2, [r4, #0xc]
	b _0809BA3A
_0809BA28:
	cmp r6, #0
	beq _0809BA34
	movs r0, #0xc
	strb r0, [r4, #0xb]
	strb r1, [r4, #0xc]
	b _0809BA3A
_0809BA34:
	movs r0, #6
	strb r0, [r4, #0xb]
	strb r6, [r4, #0xc]
_0809BA3A:
	ldrb r0, [r7, #0xe]
	cmp r0, #0x80
	bne _0809BA46
	adds r0, r5, #0
	bl sub_0809DD48
_0809BA46:
	ldr r6, _0809BA90 @ =gUnk_03006B54
	ldr r0, [r6]
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0809BA94
	cmp r5, #5
	beq _0809BA94
	bl sub_080A2B28
	ldr r0, [r6]
	ldrh r1, [r0]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0809BA98
	ldrb r0, [r7, #0xe]
	cmp r0, #0
	beq _0809BA76
	cmp r0, #0x60
	beq _0809BA76
	cmp r0, #0x70
	bne _0809BA98
_0809BA76:
	ldrh r0, [r4]
	ldrh r1, [r4, #4]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r4, #2]
	ldrh r2, [r4, #6]
	subs r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_080A4358
	b _0809BA98
	.align 2, 0
_0809BA90: .4byte gUnk_03006B54
_0809BA94:
	movs r0, #0
	strb r0, [r7, #0x11]
_0809BA98:
	ldrh r0, [r4]
	strh r0, [r4, #4]
	ldrh r0, [r4, #2]
	strh r0, [r4, #6]
	ldrh r1, [r7, #4]
	movs r0, #0
	bl sub_080A2004
	ldrh r1, [r7, #4]
	movs r0, #0
	bl sub_080A2570
_0809BAB0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809BABC
sub_0809BABC: @ 0x0809BABC
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r1, _0809BAE8 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r4, r0
	ldr r2, _0809BAEC @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r2, r1, r0
	movs r3, #5
	ldr r0, _0809BAF0 @ =gKeyHeld
	ldrh r0, [r0]
	movs r1, #0xf0
	ands r1, r0
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _0809BAF4
	movs r3, #8
	b _0809BAFE
	.align 2, 0
_0809BAE8: .4byte gUnk_03006B54
_0809BAEC: .4byte 0x00000AB8
_0809BAF0: .4byte gKeyHeld
_0809BAF4:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809BAFE
	movs r3, #2
_0809BAFE:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _0809BB0A
	subs r0, r3, #1
	b _0809BB14
_0809BB0A:
	movs r0, #0x10
	ands r1, r0
	cmp r1, #0
	beq _0809BB18
	adds r0, r3, #1
_0809BB14:
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
_0809BB18:
	cmp r3, #5
	beq _0809BBAE
	subs r0, r3, #1
	cmp r0, #8
	bhi _0809BBA6
	lsls r0, r0, #2
	ldr r1, _0809BB2C @ =_0809BB30
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809BB2C: .4byte _0809BB30
_0809BB30: @ jump table
	.4byte _0809BB54 @ case 0
	.4byte _0809BB66 @ case 1
	.4byte _0809BB6A @ case 2
	.4byte _0809BB7A @ case 3
	.4byte _0809BBA6 @ case 4
	.4byte _0809BBA2 @ case 5
	.4byte _0809BB7E @ case 6
	.4byte _0809BB90 @ case 7
	.4byte _0809BB94 @ case 8
_0809BB54:
	ldrb r0, [r2, #9]
	cmp r0, #4
	bne _0809BB5E
	movs r0, #1
	b _0809BBA4
_0809BB5E:
	cmp r0, #3
	bne _0809BBA6
	movs r0, #2
	b _0809BBA4
_0809BB66:
	movs r0, #1
	b _0809BBA4
_0809BB6A:
	ldrb r0, [r2, #9]
	cmp r0, #2
	bne _0809BB74
	movs r0, #1
	b _0809BBA4
_0809BB74:
	cmp r0, #3
	bne _0809BBA6
	b _0809BBA2
_0809BB7A:
	movs r0, #2
	b _0809BBA4
_0809BB7E:
	ldrb r0, [r2, #9]
	cmp r0, #4
	bne _0809BB88
	movs r0, #3
	b _0809BBA4
_0809BB88:
	cmp r0, #1
	bne _0809BBA6
	movs r0, #2
	b _0809BBA4
_0809BB90:
	movs r0, #3
	b _0809BBA4
_0809BB94:
	ldrb r0, [r2, #9]
	cmp r0, #2
	bne _0809BB9E
	movs r0, #3
	b _0809BBA4
_0809BB9E:
	cmp r0, #1
	bne _0809BBA6
_0809BBA2:
	movs r0, #4
_0809BBA4:
	strb r0, [r2, #9]
_0809BBA6:
	ldrb r1, [r2, #9]
	adds r0, r4, #0
	bl sub_080A47D0
_0809BBAE:
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_0809BBB4
sub_0809BBB4: @ 0x0809BBB4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	str r1, [sp, #4]
	ldr r0, _0809BC00 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _0809BC04 @ =0x00001EB8
	adds r0, r2, r0
	str r0, [sp, #0x14]
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809BC08 @ =0x00000AB8
	adds r0, r0, r1
	adds r6, r2, r0
	movs r2, #0
	str r2, [sp, #8]
	ldr r1, [sp, #0x14]
	ldrb r0, [r1, #0xe]
	cmp r0, #0x40
	beq _0809BC40
	cmp r0, #0x40
	bgt _0809BC12
	cmp r0, #0x20
	beq _0809BC2E
	cmp r0, #0x20
	bgt _0809BC0C
	cmp r0, #0x10
	beq _0809BC2A
	b _0809BC6A
	.align 2, 0
_0809BC00: .4byte gUnk_03006B54
_0809BC04: .4byte 0x00001EB8
_0809BC08: .4byte 0x00000AB8
_0809BC0C:
	cmp r0, #0x30
	beq _0809BC36
	b _0809BC6A
_0809BC12:
	cmp r0, #0xa0
	beq _0809BC4E
	cmp r0, #0xa0
	bgt _0809BC20
	cmp r0, #0x90
	beq _0809BC4A
	b _0809BC6A
_0809BC20:
	cmp r0, #0xb0
	beq _0809BC58
	cmp r0, #0xc0
	beq _0809BC62
	b _0809BC6A
_0809BC2A:
	movs r2, #8
	b _0809BC42
_0809BC2E:
	movs r1, #2
	str r1, [sp]
	movs r2, #0
	b _0809BC68
_0809BC36:
	movs r0, #4
	str r0, [sp]
	movs r1, #0
	str r1, [sp, #4]
	b _0809BC6A
_0809BC40:
	movs r2, #6
_0809BC42:
	str r2, [sp]
	movs r0, #0
	str r0, [sp, #4]
	b _0809BC6A
_0809BC4A:
	movs r1, #8
	b _0809BC64
_0809BC4E:
	movs r0, #2
	str r0, [sp]
	movs r1, #1
	str r1, [sp, #4]
	b _0809BC6A
_0809BC58:
	movs r2, #4
	str r2, [sp]
	movs r0, #1
	str r0, [sp, #4]
	b _0809BC6A
_0809BC62:
	movs r1, #6
_0809BC64:
	str r1, [sp]
	movs r2, #1
_0809BC68:
	str r2, [sp, #4]
_0809BC6A:
	ldr r0, [sp, #0x14]
	ldrb r1, [r0, #0xc]
	cmp r1, #0
	beq _0809BC86
	movs r2, #0xf
	ands r2, r1
	str r2, [sp]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	str r0, [sp, #4]
_0809BC86:
	movs r2, #0
	movs r3, #0
	ldr r7, [sp]
	subs r7, #1
	cmp r7, #8
	bhi _0809BD00
	lsls r0, r7, #2
	ldr r1, _0809BC9C @ =_0809BCA0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809BC9C: .4byte _0809BCA0
_0809BCA0: @ jump table
	.4byte _0809BCC4 @ case 0
	.4byte _0809BCD0 @ case 1
	.4byte _0809BCD4 @ case 2
	.4byte _0809BCDA @ case 3
	.4byte _0809BD00 @ case 4
	.4byte _0809BCE4 @ case 5
	.4byte _0809BCE8 @ case 6
	.4byte _0809BCF4 @ case 7
	.4byte _0809BCFC @ case 8
_0809BCC4:
	ldr r2, _0809BCCC @ =0x0000FFF4
	movs r3, #0xc
	b _0809BD00
	.align 2, 0
_0809BCCC: .4byte 0x0000FFF4
_0809BCD0:
	movs r3, #0x10
	b _0809BD00
_0809BCD4:
	movs r2, #0xc
	movs r3, #0xc
	b _0809BD00
_0809BCDA:
	ldr r2, _0809BCE0 @ =0x0000FFF0
	b _0809BD00
	.align 2, 0
_0809BCE0: .4byte 0x0000FFF0
_0809BCE4:
	movs r2, #0x10
	b _0809BD00
_0809BCE8:
	ldr r3, _0809BCF0 @ =0x0000FFF4
	adds r2, r3, #0
	b _0809BD00
	.align 2, 0
_0809BCF0: .4byte 0x0000FFF4
_0809BCF4:
	ldr r3, _0809BCF8 @ =0x0000FFF0
	b _0809BD00
	.align 2, 0
_0809BCF8: .4byte 0x0000FFF0
_0809BCFC:
	movs r2, #0xc
	ldr r3, _0809BD1C @ =0x0000FFF4
_0809BD00:
	ldr r0, [sp, #4]
	cmp r0, #0
	beq _0809BD20
	lsls r2, r2, #0x10
	lsls r0, r2, #1
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r1, r3, #0x10
	lsls r0, r1, #1
	lsrs r0, r0, #0x10
	mov sl, r0
	str r2, [sp, #0x18]
	str r1, [sp, #0x1c]
	b _0809BD30
	.align 2, 0
_0809BD1C: .4byte 0x0000FFF4
_0809BD20:
	lsls r1, r2, #0x10
	lsrs r2, r1, #0x10
	mov sb, r2
	lsls r0, r3, #0x10
	lsrs r2, r0, #0x10
	mov sl, r2
	str r1, [sp, #0x18]
	str r0, [sp, #0x1c]
_0809BD30:
	ldr r0, [sp, #0x18]
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	ldr r1, [sp, #0x1c]
	lsrs r1, r1, #0x10
	str r1, [sp, #0x10]
	mov r2, sb
	lsls r5, r2, #0x10
	mov r0, sl
	lsls r4, r0, #0x10
	cmp r7, #8
	bls _0809BD4C
	bl _0809C5FA
_0809BD4C:
	lsls r0, r7, #2
	ldr r1, _0809BD58 @ =_0809BD5C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809BD58: .4byte _0809BD5C
_0809BD5C: @ jump table
	.4byte _0809BD80 @ case 0
	.4byte _0809BEEE @ case 1
	.4byte _0809BF8A @ case 2
	.4byte _0809C0C0 @ case 3
	.4byte _0809C15C @ case 4
	.4byte _0809C16E @ case 5
	.4byte _0809C246 @ case 6
	.4byte _0809C3B4 @ case 7
	.4byte _0809C476 @ case 8
_0809BD80:
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r5, r1, #0x10
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BE68
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BE68
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BE68
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BE68
	ldrh r0, [r6]
	mov r1, sb
	lsls r5, r1, #0x10
	asrs r2, r5, #0x10
	mov r8, r2
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809BE1A
	b _0809C5FA
_0809BE1A:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809BE36
	b _0809C5FA
_0809BE36:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809BE52
	b _0809C5FA
_0809BE52:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	b _0809C556
_0809BE68:
	movs r2, #0x24
	str r2, [sp, #8]
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r1, r1, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r7, r2, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	mov r2, sl
	lsls r4, r2, #0x10
	cmp r0, #0
	bne _0809BE9A
	b _0809C5EA
_0809BE9A:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809BEB6
	b _0809C5EA
_0809BEB6:
	ldrh r0, [r6]
	asrs r1, r5, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809BED8
	b _0809C5EA
_0809BED8:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	b _0809C5E4
_0809BEEE:
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BF52
	movs r1, #0
	ldrsh r0, [r6, r1]
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809BF52
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	cmp r0, #0
	bne _0809BF40
	b _0809C5FA
_0809BF40:
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	b _0809C416
_0809BF52:
	movs r1, #0xc
	str r1, [sp, #8]
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldr r2, [sp, #0x1c]
	asrs r1, r2, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	mov r1, sl
	lsls r4, r1, #0x10
	cmp r0, #0
	bne _0809BF76
	b _0809C464
_0809BF76:
	movs r2, #0
	ldrsh r0, [r6, r2]
	asrs r1, r4, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	b _0809C458
_0809BF8A:
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r5, r1, #0x10
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C056
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C056
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C056
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C056
	ldrh r0, [r6]
	mov r1, sb
	lsls r5, r1, #0x10
	asrs r2, r5, #0x10
	mov r8, r2
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C024
	b _0809C5FA
_0809C024:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C040
	b _0809C5FA
_0809C040:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	b _0809C53C
_0809C056:
	movs r2, #0x88
	str r2, [sp, #8]
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r1, r1, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r7, r2, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	mov r2, sl
	lsls r4, r2, #0x10
	cmp r0, #0
	bne _0809C088
	b _0809C5EA
_0809C088:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C0A4
	b _0809C5EA
_0809C0A4:
	ldrh r0, [r6]
	asrs r1, r5, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	b _0809C5CA
_0809C0C0:
	ldrh r0, [r6]
	ldr r2, [sp, #0x18]
	asrs r4, r2, #0x10
	adds r0, r4, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C126
	ldrh r0, [r6]
	adds r0, r4, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C126
	ldrh r0, [r6]
	mov r1, sb
	lsls r4, r1, #0x10
	asrs r7, r4, #0x10
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_08099EFC
	lsls r0, r0, #0x18
	adds r5, r4, #0
	mov r1, sl
	lsls r4, r1, #0x10
	cmp r0, #0
	bne _0809C114
	b _0809C5FA
_0809C114:
	ldrh r0, [r6]
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A748
	b _0809C1DE
_0809C126:
	movs r1, #0x30
	str r1, [sp, #8]
	ldr r2, [sp, #0x18]
	asrs r0, r2, #0x10
	ldrh r1, [r6]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A748
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	cmp r0, #0
	beq _0809C234
	asrs r0, r5, #0x10
	ldrh r2, [r6]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A748
	b _0809C228
_0809C15C:
	movs r0, #0
	str r0, [sp, #0xc]
	movs r1, #0
	str r1, [sp, #0x10]
	mov r2, sb
	lsls r5, r2, #0x10
	mov r0, sl
	lsls r4, r0, #0x10
	b _0809C5FA
_0809C16E:
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r7, r1, #0x10
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C1EC
	ldrh r0, [r6]
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C1EC
	ldrh r0, [r6]
	mov r1, sb
	lsls r4, r1, #0x10
	asrs r7, r4, #0x10
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A010
	lsls r0, r0, #0x18
	adds r5, r4, #0
	mov r1, sl
	lsls r4, r1, #0x10
	cmp r0, #0
	bne _0809C1CE
	b _0809C5FA
_0809C1CE:
	ldrh r0, [r6]
	adds r0, r7, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A854
_0809C1DE:
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C1E6
	b _0809C5FA
_0809C1E6:
	lsrs r0, r5, #0x10
	str r0, [sp, #0xc]
	b _0809C5FA
_0809C1EC:
	movs r1, #0xc0
	str r1, [sp, #8]
	ldr r2, [sp, #0x18]
	asrs r0, r2, #0x10
	ldrh r1, [r6]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, [sp, #0x1c]
	asrs r1, r2, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	cmp r0, #0
	beq _0809C234
	asrs r0, r5, #0x10
	ldrh r2, [r6]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A854
_0809C228:
	lsls r0, r0, #0x18
	mov r1, sl
	lsls r4, r1, #0x10
	cmp r0, #0
	beq _0809C234
	b _0809C5FA
_0809C234:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	ldr r1, [sp, #8]
	orrs r1, r0
	str r1, [sp, #8]
	mov r2, sl
	lsls r4, r2, #0x10
	b _0809C5FA
_0809C246:
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r5, r1, #0x10
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C32E
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C32E
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C32E
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C32E
	ldrh r0, [r6]
	mov r1, sb
	lsls r5, r1, #0x10
	asrs r2, r5, #0x10
	mov r8, r2
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C2E0
	b _0809C5FA
_0809C2E0:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C2FC
	b _0809C5FA
_0809C2FC:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C318
	b _0809C5FA
_0809C318:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	b _0809C556
_0809C32E:
	movs r2, #0x11
	str r2, [sp, #8]
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r1, r1, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r7, r2, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	mov r2, sl
	lsls r4, r2, #0x10
	cmp r0, #0
	bne _0809C360
	b _0809C5EA
_0809C360:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C37C
	b _0809C5EA
_0809C37C:
	ldrh r0, [r6]
	asrs r1, r5, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C39E
	b _0809C5EA
_0809C39E:
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	b _0809C5E4
_0809C3B4:
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C424
	movs r1, #0
	ldrsh r0, [r6, r1]
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C424
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	cmp r0, #0
	bne _0809C406
	b _0809C5FA
_0809C406:
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
_0809C416:
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C41E
	b _0809C5FA
_0809C41E:
	lsrs r0, r4, #0x10
	str r0, [sp, #0x10]
	b _0809C5FA
_0809C424:
	movs r1, #3
	str r1, [sp, #8]
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldr r2, [sp, #0x1c]
	asrs r1, r2, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	mov r1, sl
	lsls r4, r1, #0x10
	cmp r0, #0
	beq _0809C464
	movs r2, #0
	ldrsh r0, [r6, r2]
	asrs r1, r4, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
_0809C458:
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	cmp r0, #0
	beq _0809C464
	b _0809C5FA
_0809C464:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	ldr r1, [sp, #8]
	orrs r1, r0
	str r1, [sp, #8]
	mov r2, sb
	lsls r5, r2, #0x10
	b _0809C5FA
_0809C476:
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r5, r1, #0x10
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r4, r2, #0x10
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C566
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C566
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C566
	ldrh r0, [r6]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r4, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C566
	ldrh r0, [r6]
	mov r1, sb
	lsls r5, r1, #0x10
	asrs r2, r5, #0x10
	mov r8, r2
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	mov r2, sl
	lsls r4, r2, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5FA
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5FA
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
_0809C53C:
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5FA
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
_0809C556:
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5FA
	lsrs r0, r5, #0x10
	str r0, [sp, #0xc]
	lsrs r1, r4, #0x10
	str r1, [sp, #0x10]
	b _0809C5FA
_0809C566:
	movs r2, #0x42
	str r2, [sp, #8]
	ldrh r0, [r6]
	ldr r1, [sp, #0x18]
	asrs r1, r1, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	ldr r2, [sp, #0x1c]
	asrs r7, r2, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	mov r1, sb
	lsls r5, r1, #0x10
	mov r2, sl
	lsls r4, r2, #0x10
	cmp r0, #0
	beq _0809C5EA
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5EA
	ldrh r0, [r6]
	asrs r1, r5, #0x10
	mov r8, r1
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	asrs r7, r4, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
_0809C5CA:
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C5EA
	ldrh r0, [r6]
	add r0, r8
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
_0809C5E4:
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C5FA
_0809C5EA:
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	ldr r1, [sp, #8]
	orrs r1, r0
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #8]
_0809C5FA:
	asrs r0, r5, #0x10
	ldrh r2, [r6]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	asrs r1, r4, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, [sp]
	ldr r3, [sp, #4]
	bl sub_0809DB8C
	ldr r0, [sp, #0x14]
	ldrb r1, [r0, #0xe]
	cmp r1, #0x10
	bne _0809C626
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C64A
_0809C626:
	cmp r1, #0x20
	bne _0809C632
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	blt _0809C64A
_0809C632:
	cmp r1, #0x30
	bne _0809C63E
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C64A
_0809C63E:
	cmp r1, #0x40
	bne _0809C6B4
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0809C6B4
_0809C64A:
	ldr r2, [sp, #0x18]
	asrs r0, r2, #0x10
	ldrh r1, [r6]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, [sp, #0x1c]
	asrs r1, r2, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, [sp]
	ldr r3, [sp, #4]
	bl sub_0809DB8C
	ldr r0, [sp, #0x14]
	ldrb r1, [r0, #0xe]
	cmp r1, #0x10
	bne _0809C67A
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C69E
_0809C67A:
	cmp r1, #0x20
	bne _0809C686
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	blt _0809C69E
_0809C686:
	cmp r1, #0x30
	bne _0809C692
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C69E
_0809C692:
	cmp r1, #0x40
	bne _0809C6A8
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0809C6A8
_0809C69E:
	movs r2, #0
	str r2, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	b _0809C6B4
_0809C6A8:
	ldr r1, [sp, #0x18]
	lsrs r1, r1, #0x10
	str r1, [sp, #0xc]
	ldr r2, [sp, #0x1c]
	lsrs r2, r2, #0x10
	str r2, [sp, #0x10]
_0809C6B4:
	ldr r0, [sp, #0x14]
	ldrb r1, [r0, #0xe]
	cmp r1, #0x90
	bne _0809C6C4
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C6E8
_0809C6C4:
	cmp r1, #0xa0
	bne _0809C6D0
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	blt _0809C6E8
_0809C6D0:
	cmp r1, #0xb0
	bne _0809C6DC
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C6E8
_0809C6DC:
	cmp r1, #0xc0
	bne _0809C752
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0809C752
_0809C6E8:
	ldr r2, [sp, #0x18]
	asrs r0, r2, #0x10
	ldrh r1, [r6]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, [sp, #0x1c]
	asrs r1, r2, #0x10
	ldrh r2, [r6, #2]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, [sp]
	ldr r3, [sp, #4]
	bl sub_0809DB8C
	ldr r0, [sp, #0x14]
	ldrb r1, [r0, #0xe]
	cmp r1, #0x90
	bne _0809C718
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C73C
_0809C718:
	cmp r1, #0xa0
	bne _0809C724
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	cmp r0, #0
	blt _0809C73C
_0809C724:
	cmp r1, #0xb0
	bne _0809C730
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	cmp r0, #0
	bgt _0809C73C
_0809C730:
	cmp r1, #0xc0
	bne _0809C746
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	cmp r0, #0
	bge _0809C746
_0809C73C:
	movs r2, #0
	str r2, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	b _0809C752
_0809C746:
	ldr r1, [sp, #0x18]
	lsrs r1, r1, #0x10
	str r1, [sp, #0xc]
	ldr r2, [sp, #0x1c]
	lsrs r2, r2, #0x10
	str r2, [sp, #0x10]
_0809C752:
	ldr r0, _0809C778 @ =0x000001FB
	bl sub_08012F60
	cmp r0, #0
	beq _0809C77C
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x11
	ldr r2, [sp, #0x10]
	lsls r1, r2, #0x11
	asrs r0, r0, #0x10
	ldrh r2, [r6]
	adds r0, r0, r2
	strh r0, [r6]
	asrs r1, r1, #0x10
	ldrh r0, [r6, #2]
	adds r1, r1, r0
	strh r1, [r6, #2]
	movs r0, #0
	b _0809C7B8
	.align 2, 0
_0809C778: .4byte 0x000001FB
_0809C77C:
	ldr r1, [sp, #8]
	cmp r1, #0
	beq _0809C78C
	movs r2, #0
	str r2, [sp, #0xc]
	movs r0, #0
	str r0, [sp, #0x10]
	b _0809C79E
_0809C78C:
	mov r1, sp
	ldrb r2, [r1, #8]
	ldr r1, [sp, #0x14]
	strb r2, [r1, #0x10]
	ldrh r1, [r1, #8]
	ldr r0, _0809C7C8 @ =0x0000FFFE
	ands r0, r1
	ldr r1, [sp, #0x14]
	strh r0, [r1, #8]
_0809C79E:
	ldr r2, [sp, #0xc]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6]
	adds r0, r0, r1
	strh r0, [r6]
	ldr r2, [sp, #0x10]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r0, r0, r1
	strh r0, [r6, #2]
	ldr r0, [sp, #8]
_0809C7B8:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809C7C8: .4byte 0x0000FFFE

	thumb_func_start sub_0809C7CC
sub_0809C7CC: @ 0x0809C7CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r0, [sp]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov r8, r1
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	movs r0, #0
	mov sb, r0
	movs r1, #0
	str r1, [sp, #4]
	ldr r0, _0809C810 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r3, _0809C814 @ =0x00001EB8
	adds r3, r3, r2
	mov sl, r3
	ldrh r1, [r3, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809C818 @ =0x00000AB8
	adds r0, r0, r1
	adds r6, r2, r0
	ldrb r0, [r3, #0xe]
	cmp r0, #0x10
	bne _0809C81C
	movs r2, #8
	b _0809C82E
	.align 2, 0
_0809C810: .4byte gUnk_03006B54
_0809C814: .4byte 0x00001EB8
_0809C818: .4byte 0x00000AB8
_0809C81C:
	cmp r0, #0x20
	bne _0809C828
	movs r0, #2
	str r0, [sp]
	movs r1, #0
	b _0809C86A
_0809C828:
	cmp r0, #0x30
	bne _0809C836
	movs r2, #4
_0809C82E:
	str r2, [sp]
	movs r3, #0
	mov r8, r3
	b _0809C86C
_0809C836:
	cmp r0, #0x40
	bne _0809C842
	movs r0, #6
	str r0, [sp]
	movs r1, #0
	b _0809C86A
_0809C842:
	cmp r0, #0x90
	bne _0809C84A
	movs r2, #8
	b _0809C858
_0809C84A:
	cmp r0, #0xa0
	bne _0809C852
	movs r0, #2
	b _0809C866
_0809C852:
	cmp r0, #0xb0
	bne _0809C860
	movs r2, #4
_0809C858:
	str r2, [sp]
	movs r3, #1
	mov r8, r3
	b _0809C86C
_0809C860:
	cmp r0, #0xc0
	bne _0809C86C
	movs r0, #6
_0809C866:
	str r0, [sp]
	movs r1, #1
_0809C86A:
	mov r8, r1
_0809C86C:
	mov r2, sl
	ldrb r1, [r2, #0xc]
	cmp r1, #0
	beq _0809C888
	movs r3, #0xf
	ands r3, r1
	str r3, [sp]
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	rsbs r0, r0, #0
	lsrs r0, r0, #0x1f
	mov r8, r0
_0809C888:
	ldr r0, [sp]
	cmp r0, #7
	beq _0809C8B4
	cmp r0, #9
	beq _0809C8B4
	cmp r0, #1
	beq _0809C8B4
	cmp r0, #3
	beq _0809C8B4
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r5
	cmp r0, #0
	beq _0809C8B4
	mov r1, sl
	ldrb r0, [r1, #0x10]
	cmp r0, #0x13
	bhi _0809C8B4
	adds r0, #1
	strb r0, [r1, #0x10]
	bl _0809D68C
_0809C8B4:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	bne _0809C8C6
	movs r0, #2
	ands r0, r5
	cmp r0, #0
	bne _0809C8C6
	b _0809CBF8
_0809C8C6:
	movs r7, #1
_0809C8C8:
	movs r0, #1
	ands r0, r5
	cmp r0, #0
	bne _0809C8D2
	b _0809CA6C
_0809C8D2:
	lsls r4, r7, #4
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809C900
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #2
	ldrsh r1, [r6, r3]
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C90C
_0809C900:
	movs r0, #1
	eors r5, r0
	subs r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809CBEC
_0809C90C:
	ldr r1, [sp]
	cmp r1, #7
	bne _0809C92E
	movs r2, #0
	str r2, [sp, #4]
	cmp r7, #1
	bne _0809C924
	ldr r3, _0809C920 @ =0x0000FFF0
	mov sb, r3
	b _0809C92E
	.align 2, 0
_0809C920: .4byte 0x0000FFF0
_0809C924:
	mov r0, r8
	cmp r0, #0
	beq _0809C92E
	ldr r1, _0809CA48 @ =0x0000FFE0
	mov sb, r1
_0809C92E:
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C94A
	b _0809CA6C
_0809C94A:
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809C966
	b _0809CA6C
_0809C966:
	ldr r2, _0809CA4C @ =0x0000FFF0
	mov sb, r2
	movs r5, #0
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809C99A
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r2, #0xa
	orrs r0, r2
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
_0809C99A:
	cmp r7, #1
	bne _0809CA58
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r0, #0x70
	asrs r0, r0, #4
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0809C9BE
	movs r2, #2
	ldrsh r0, [r6, r2]
	subs r0, #0x50
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #7
	bne _0809C9BE
	b _0809CBF8
_0809C9BE:
	ldr r3, _0809CA50 @ =0x0000FFE8
	mov sb, r3
	mov r0, sb
	str r0, [sp, #4]
	ldrh r0, [r6]
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r4, r1, #0x10
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CA3C
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CA3C
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CA3C
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CA3C
	mov r3, r8
	cmp r3, #0
	beq _0809CA3C
	b _0809CBF8
_0809CA3C:
	ldr r0, _0809CA54 @ =0x0000FFF4
	mov sb, r0
	mov r1, sb
	str r1, [sp, #4]
	b _0809CBF8
	.align 2, 0
_0809CA48: .4byte 0x0000FFE0
_0809CA4C: .4byte 0x0000FFF0
_0809CA50: .4byte 0x0000FFE8
_0809CA54: .4byte 0x0000FFF4
_0809CA58:
	mov r2, r8
	cmp r2, #0
	bne _0809CA60
	b _0809CBF8
_0809CA60:
	ldr r3, _0809CA68 @ =0x0000FFE0
	mov sb, r3
	b _0809CBF8
	.align 2, 0
_0809CA68: .4byte 0x0000FFE0
_0809CA6C:
	movs r0, #2
	ands r0, r5
	cmp r0, #0
	bne _0809CA76
	b _0809CBEC
_0809CA76:
	lsls r4, r7, #4
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CAA4
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #2
	ldrsh r1, [r6, r3]
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CAAA
_0809CAA4:
	movs r0, #2
	eors r5, r0
	b _0809CBEC
_0809CAAA:
	ldr r1, [sp]
	cmp r1, #9
	bne _0809CAC8
	movs r2, #0
	str r2, [sp, #4]
	cmp r7, #1
	bne _0809CABE
	movs r3, #0x10
	mov sb, r3
	b _0809CAC8
_0809CABE:
	mov r0, r8
	cmp r0, #0
	beq _0809CAC8
	movs r1, #0x20
	mov sb, r1
_0809CAC8:
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CAE4
	b _0809CBEC
_0809CAE4:
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CBEC
	movs r2, #0x10
	mov sb, r2
	movs r5, #0
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809CB34
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0xa
	orrs r0, r1
	strh r0, [r6, #2]
_0809CB34:
	cmp r7, #1
	bne _0809CBE0
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r0, #0x80
	asrs r1, r0, #4
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bne _0809CB56
	movs r2, #2
	ldrsh r0, [r6, r2]
	subs r0, #0x50
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #7
	beq _0809CBF8
_0809CB56:
	movs r3, #0x18
	mov sb, r3
	ldr r0, _0809CBD8 @ =0x0000FFE8
	str r0, [sp, #4]
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CBCC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CBCC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CBCC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CBCC
	mov r1, r8
	cmp r1, #0
	bne _0809CBF8
_0809CBCC:
	movs r2, #0xc
	mov sb, r2
	ldr r3, _0809CBDC @ =0x0000FFF4
	str r3, [sp, #4]
	b _0809CBF8
	.align 2, 0
_0809CBD8: .4byte 0x0000FFE8
_0809CBDC: .4byte 0x0000FFF4
_0809CBE0:
	mov r0, r8
	cmp r0, #0
	beq _0809CBF8
	movs r1, #0x20
	mov sb, r1
	b _0809CBF8
_0809CBEC:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0xf
	bhi _0809CBF8
	b _0809C8C8
_0809CBF8:
	movs r1, #0xc
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _0809CC04
	b _0809CF1E
_0809CC04:
	movs r7, #1
_0809CC06:
	movs r0, #4
	ands r0, r5
	cmp r0, #0
	bne _0809CC10
	b _0809CDA0
_0809CC10:
	lsls r4, r7, #4
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CC3E
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #2
	ldrsh r1, [r6, r3]
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CC4A
_0809CC3E:
	movs r0, #4
	eors r5, r0
	subs r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809CF12
_0809CC4A:
	ldr r1, [sp]
	cmp r1, #1
	bne _0809CC6E
	movs r2, #0
	str r2, [sp, #4]
	cmp r7, #1
	bne _0809CC64
	ldr r3, _0809CC60 @ =0x0000FFF0
	mov sb, r3
	b _0809CC6E
	.align 2, 0
_0809CC60: .4byte 0x0000FFF0
_0809CC64:
	mov r0, r8
	cmp r0, #0
	beq _0809CC6E
	ldr r1, _0809CD7C @ =0x0000FFE0
	mov sb, r1
_0809CC6E:
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CC8A
	b _0809CDA0
_0809CC8A:
	ldrh r0, [r6]
	subs r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CCA6
	b _0809CDA0
_0809CCA6:
	ldr r2, _0809CD80 @ =0x0000FFF0
	mov sb, r2
	movs r5, #0
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809CCDC
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0xa
	orrs r0, r1
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strh r0, [r6, #2]
_0809CCDC:
	cmp r7, #1
	bne _0809CD8C
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r0, #0x70
	asrs r0, r0, #4
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0809CD00
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r0, #0x40
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0809CD00
	b _0809CF1E
_0809CD00:
	ldr r3, _0809CD84 @ =0x0000FFE8
	mov sb, r3
	movs r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CD78
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CD78
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CD78
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CD78
	mov r1, r8
	cmp r1, #0
	beq _0809CD78
	b _0809CF1E
_0809CD78:
	ldr r2, _0809CD88 @ =0x0000FFF4
	b _0809CEFE
	.align 2, 0
_0809CD7C: .4byte 0x0000FFE0
_0809CD80: .4byte 0x0000FFF0
_0809CD84: .4byte 0x0000FFE8
_0809CD88: .4byte 0x0000FFF4
_0809CD8C:
	mov r0, r8
	cmp r0, #0
	bne _0809CD94
	b _0809CF1E
_0809CD94:
	ldr r1, _0809CD9C @ =0x0000FFE0
	mov sb, r1
	b _0809CF1E
	.align 2, 0
_0809CD9C: .4byte 0x0000FFE0
_0809CDA0:
	movs r0, #8
	ands r0, r5
	cmp r0, #0
	bne _0809CDAA
	b _0809CF12
_0809CDAA:
	lsls r4, r7, #4
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CDD8
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #2
	ldrsh r1, [r6, r3]
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CDDE
_0809CDD8:
	movs r0, #8
	eors r5, r0
	b _0809CF12
_0809CDDE:
	ldr r1, [sp]
	cmp r1, #3
	bne _0809CDFC
	movs r2, #0
	str r2, [sp, #4]
	cmp r7, #1
	bne _0809CDF2
	movs r3, #0x10
	mov sb, r3
	b _0809CDFC
_0809CDF2:
	mov r0, r8
	cmp r0, #0
	beq _0809CDFC
	movs r1, #0x20
	mov sb, r1
_0809CDFC:
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CF12
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CF12
	movs r2, #0x10
	mov sb, r2
	movs r5, #0
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809CE64
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r2, #6
	orrs r0, r2
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
_0809CE64:
	cmp r7, #1
	bne _0809CF06
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r0, #0x80
	asrs r1, r0, #4
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bne _0809CE86
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r0, #0x40
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0809CF1E
_0809CE86:
	movs r3, #0x18
	mov sb, r3
	movs r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CEFC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CEFC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CEFC
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CEFC
	mov r1, r8
	cmp r1, #0
	bne _0809CF1E
_0809CEFC:
	movs r2, #0xc
_0809CEFE:
	mov sb, r2
	movs r3, #0xc
	str r3, [sp, #4]
	b _0809CF1E
_0809CF06:
	mov r0, r8
	cmp r0, #0
	beq _0809CF1E
	movs r1, #0x20
	mov sb, r1
	b _0809CF1E
_0809CF12:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0xf
	bhi _0809CF1E
	b _0809CC06
_0809CF1E:
	movs r1, #0x30
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _0809CF2A
	b _0809D25C
_0809CF2A:
	movs r7, #1
_0809CF2C:
	movs r0, #0x10
	ands r0, r5
	cmp r0, #0
	bne _0809CF36
	b _0809D0D0
_0809CF36:
	movs r2, #0
	ldrsh r0, [r6, r2]
	lsls r4, r7, #4
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809CF64
	movs r3, #0
	ldrsh r0, [r6, r3]
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CF70
_0809CF64:
	movs r0, #0x10
	eors r5, r0
	subs r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809D250
_0809CF70:
	ldr r1, [sp]
	cmp r1, #7
	bne _0809CF92
	movs r2, #0
	mov sb, r2
	cmp r7, #1
	bne _0809CF88
	ldr r3, _0809CF84 @ =0x0000FFF0
	str r3, [sp, #4]
	b _0809CF92
	.align 2, 0
_0809CF84: .4byte 0x0000FFF0
_0809CF88:
	mov r0, r8
	cmp r0, #0
	beq _0809CF92
	ldr r1, _0809D0AC @ =0x0000FFE0
	str r1, [sp, #4]
_0809CF92:
	ldrh r0, [r6]
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CFAE
	b _0809D0D0
_0809CFAE:
	ldrh r0, [r6]
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809CFCA
	b _0809D0D0
_0809CFCA:
	ldr r2, _0809D0B0 @ =0x0000FFF0
	str r2, [sp, #4]
	movs r5, #0
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809CFFE
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r2, #0xa
	orrs r0, r2
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
_0809CFFE:
	cmp r7, #1
	bne _0809D0BC
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r0, #0x90
	asrs r1, r0, #4
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bne _0809D022
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r0, #0x30
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0809D022
	b _0809D25C
_0809D022:
	ldr r3, _0809D0B4 @ =0x0000FFE8
	mov sb, r3
	mov r0, sb
	str r0, [sp, #4]
	ldrh r0, [r6]
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r4, r1, #0x10
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D0A0
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D0A0
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D0A0
	ldrh r0, [r6]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D0A0
	mov r3, r8
	cmp r3, #0
	beq _0809D0A0
	b _0809D25C
_0809D0A0:
	ldr r0, _0809D0B8 @ =0x0000FFF4
	mov sb, r0
	mov r1, sb
	str r1, [sp, #4]
	b _0809D25C
	.align 2, 0
_0809D0AC: .4byte 0x0000FFE0
_0809D0B0: .4byte 0x0000FFF0
_0809D0B4: .4byte 0x0000FFE8
_0809D0B8: .4byte 0x0000FFF4
_0809D0BC:
	mov r2, r8
	cmp r2, #0
	bne _0809D0C4
	b _0809D25C
_0809D0C4:
	ldr r3, _0809D0CC @ =0x0000FFE0
	str r3, [sp, #4]
	b _0809D25C
	.align 2, 0
_0809D0CC: .4byte 0x0000FFE0
_0809D0D0:
	movs r0, #0x20
	ands r0, r5
	cmp r0, #0
	bne _0809D0DA
	b _0809D250
_0809D0DA:
	movs r1, #0
	ldrsh r0, [r6, r1]
	lsls r4, r7, #4
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D108
	movs r2, #0
	ldrsh r0, [r6, r2]
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D10E
_0809D108:
	movs r3, #0x20
	eors r5, r3
	b _0809D250
_0809D10E:
	ldr r0, [sp]
	cmp r0, #1
	bne _0809D12C
	movs r1, #0
	mov sb, r1
	cmp r7, #1
	bne _0809D122
	movs r2, #0x10
	str r2, [sp, #4]
	b _0809D12C
_0809D122:
	mov r3, r8
	cmp r3, #0
	beq _0809D12C
	movs r0, #0x20
	str r0, [sp, #4]
_0809D12C:
	ldrh r0, [r6]
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D148
	b _0809D250
_0809D148:
	ldrh r0, [r6]
	subs r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D250
	movs r1, #0x10
	str r1, [sp, #4]
	movs r5, #0
	mov r2, sl
	ldrh r1, [r2, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809D19A
	adds r0, r1, #0
	orrs r0, r2
	mov r3, sl
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0xa
	orrs r0, r1
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strh r0, [r6, #2]
_0809D19A:
	cmp r7, #1
	bne _0809D244
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r0, #0x90
	asrs r1, r0, #4
	movs r0, #7
	ands r1, r0
	cmp r1, #7
	bne _0809D1BC
	movs r2, #2
	ldrsh r0, [r6, r2]
	subs r0, #0x40
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #7
	beq _0809D25C
_0809D1BC:
	ldr r3, _0809D23C @ =0x0000FFE8
	mov sb, r3
	movs r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_08099EFC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D232
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A748
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D232
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D232
	ldrh r0, [r6]
	subs r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D232
	mov r1, r8
	cmp r1, #0
	bne _0809D25C
_0809D232:
	ldr r2, _0809D240 @ =0x0000FFF4
	mov sb, r2
	movs r3, #0xc
	str r3, [sp, #4]
	b _0809D25C
	.align 2, 0
_0809D23C: .4byte 0x0000FFE8
_0809D240: .4byte 0x0000FFF4
_0809D244:
	mov r0, r8
	cmp r0, #0
	beq _0809D25C
	movs r1, #0x20
	str r1, [sp, #4]
	b _0809D25C
_0809D250:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0xf
	bhi _0809D25C
	b _0809CF2C
_0809D25C:
	movs r1, #0xc0
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	bne _0809D268
	b _0809D588
_0809D268:
	movs r7, #1
_0809D26A:
	movs r0, #0x40
	ands r0, r5
	cmp r0, #0
	bne _0809D274
	b _0809D408
_0809D274:
	movs r2, #0
	ldrsh r0, [r6, r2]
	lsls r4, r7, #4
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D2A2
	movs r3, #0
	ldrsh r0, [r6, r3]
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D2AE
_0809D2A2:
	movs r0, #0x40
	eors r5, r0
	subs r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809D57C
_0809D2AE:
	ldr r1, [sp]
	cmp r1, #9
	bne _0809D2D2
	movs r2, #0
	mov sb, r2
	cmp r7, #1
	bne _0809D2C8
	ldr r3, _0809D2C4 @ =0x0000FFF0
	str r3, [sp, #4]
	b _0809D2D2
	.align 2, 0
_0809D2C4: .4byte 0x0000FFF0
_0809D2C8:
	mov r0, r8
	cmp r0, #0
	beq _0809D2D2
	ldr r1, _0809D3E4 @ =0x0000FFE0
	str r1, [sp, #4]
_0809D2D2:
	ldrh r0, [r6]
	adds r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D2EE
	b _0809D408
_0809D2EE:
	ldrh r0, [r6]
	adds r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D30A
	b _0809D408
_0809D30A:
	ldr r2, _0809D3E8 @ =0x0000FFF0
	str r2, [sp, #4]
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809D33E
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #6
	orrs r0, r1
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r1, #0xa
	orrs r0, r1
	strh r0, [r6, #2]
_0809D33E:
	cmp r7, #1
	bne _0809D3F4
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	asrs r0, r0, #4
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0809D362
	movs r2, #2
	ldrsh r0, [r6, r2]
	adds r0, #0x30
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #0
	bne _0809D362
	b _0809D588
_0809D362:
	movs r3, #0x18
	mov sb, r3
	ldr r0, _0809D3EC @ =0x0000FFE8
	str r0, [sp, #4]
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D3DA
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D3DA
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A124
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D3DA
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	subs r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A960
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D3DA
	mov r1, r8
	cmp r1, #0
	beq _0809D3DA
	b _0809D588
_0809D3DA:
	movs r2, #0xc
	mov sb, r2
	ldr r3, _0809D3F0 @ =0x0000FFF4
	str r3, [sp, #4]
	b _0809D588
	.align 2, 0
_0809D3E4: .4byte 0x0000FFE0
_0809D3E8: .4byte 0x0000FFF0
_0809D3EC: .4byte 0x0000FFE8
_0809D3F0: .4byte 0x0000FFF4
_0809D3F4:
	mov r0, r8
	cmp r0, #0
	bne _0809D3FC
	b _0809D588
_0809D3FC:
	ldr r1, _0809D404 @ =0x0000FFE0
	str r1, [sp, #4]
	b _0809D588
	.align 2, 0
_0809D404: .4byte 0x0000FFE0
_0809D408:
	movs r0, #0x80
	ands r0, r5
	cmp r0, #0
	bne _0809D412
	b _0809D57C
_0809D412:
	movs r2, #0
	ldrsh r0, [r6, r2]
	lsls r4, r7, #4
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D440
	movs r3, #0
	ldrsh r0, [r6, r3]
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _0809D44A
_0809D440:
	movs r0, #0x80
	eors r5, r0
	lsls r0, r5, #0x10
	lsrs r5, r0, #0x10
	b _0809D57C
_0809D44A:
	ldr r1, [sp]
	cmp r1, #3
	bne _0809D468
	movs r2, #0
	mov sb, r2
	cmp r7, #1
	bne _0809D45E
	movs r3, #0x10
	str r3, [sp, #4]
	b _0809D468
_0809D45E:
	mov r0, r8
	cmp r0, #0
	beq _0809D468
	movs r1, #0x20
	str r1, [sp, #4]
_0809D468:
	ldrh r0, [r6]
	adds r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D57C
	ldrh r0, [r6]
	adds r0, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, r1, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D57C
	movs r2, #0x10
	str r2, [sp, #4]
	mov r3, sl
	ldrh r1, [r3, #8]
	movs r2, #1
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809D4CE
	adds r0, r1, #0
	orrs r0, r2
	strh r0, [r3, #8]
	ldrh r1, [r6]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	movs r2, #6
	orrs r0, r2
	strh r0, [r6]
	ldrh r1, [r6, #2]
	movs r0, #0x10
	rsbs r0, r0, #0
	ands r0, r1
	orrs r0, r2
	strh r0, [r6, #2]
_0809D4CE:
	cmp r7, #1
	bne _0809D570
	movs r1, #0
	ldrsh r0, [r6, r1]
	adds r0, #0x80
	asrs r0, r0, #4
	movs r1, #7
	ands r0, r1
	cmp r0, #0
	bne _0809D4F0
	movs r2, #2
	ldrsh r0, [r6, r2]
	subs r0, #0x40
	asrs r0, r0, #4
	ands r0, r1
	cmp r0, #7
	beq _0809D588
_0809D4F0:
	movs r3, #0x18
	mov sb, r3
	movs r0, #0x18
	str r0, [sp, #4]
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A010
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D566
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A854
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D566
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A23C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D566
	ldrh r0, [r6]
	adds r0, #0x18
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldrh r1, [r6, #2]
	adds r1, #0x18
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809AA7C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D566
	mov r1, r8
	cmp r1, #0
	bne _0809D588
_0809D566:
	movs r2, #0xc
	mov sb, r2
	movs r3, #0xc
	str r3, [sp, #4]
	b _0809D588
_0809D570:
	mov r0, r8
	cmp r0, #0
	beq _0809D588
	movs r1, #0x20
	str r1, [sp, #4]
	b _0809D588
_0809D57C:
	adds r0, r7, #1
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0xf
	bhi _0809D588
	b _0809D26A
_0809D588:
	ldrh r2, [r6]
	mov r3, sb
	lsls r5, r3, #0x10
	asrs r0, r5, #0x10
	adds r2, r0, r2
	strh r2, [r6]
	ldrh r1, [r6, #2]
	ldr r3, [sp, #4]
	lsls r4, r3, #0x10
	asrs r7, r4, #0x10
	adds r1, r7, r1
	strh r1, [r6, #2]
	adds r0, r0, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r7, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, [sp]
	mov r3, r8
	bl sub_0809DB8C
	mov r1, sl
	ldrb r0, [r1, #0xe]
	cmp r0, #0x10
	bne _0809D5C0
	cmp r7, #0
	bgt _0809D5C8
_0809D5C0:
	cmp r0, #0x20
	bne _0809D5CE
	cmp r7, #0
	bge _0809D5CE
_0809D5C8:
	ldrh r0, [r6, #6]
	strh r0, [r6, #2]
	b _0809D5E6
_0809D5CE:
	mov r2, sl
	ldrb r0, [r2, #0xe]
	cmp r0, #0x30
	bne _0809D5DA
	cmp r5, #0
	bgt _0809D5E2
_0809D5DA:
	cmp r0, #0x40
	bne _0809D5E6
	cmp r5, #0
	bge _0809D5E6
_0809D5E2:
	ldrh r0, [r6, #4]
	strh r0, [r6]
_0809D5E6:
	mov r3, sl
	ldrb r0, [r3, #0xe]
	cmp r0, #0x90
	bne _0809D5F2
	cmp r4, #0
	bgt _0809D5FA
_0809D5F2:
	cmp r0, #0xa0
	bne _0809D600
	cmp r4, #0
	bge _0809D600
_0809D5FA:
	ldrh r0, [r6, #6]
	strh r0, [r6, #2]
	b _0809D618
_0809D600:
	mov r1, sl
	ldrb r0, [r1, #0xe]
	cmp r0, #0xb0
	bne _0809D60C
	cmp r5, #0
	bgt _0809D614
_0809D60C:
	cmp r0, #0xc0
	bne _0809D618
	cmp r5, #0
	bge _0809D618
_0809D614:
	ldrh r0, [r6, #4]
	strh r0, [r6]
_0809D618:
	mov r2, sl
	ldrb r0, [r2, #0xe]
	cmp r0, #0x50
	bne _0809D68C
	movs r2, #5
	asrs r1, r5, #0x10
	cmp r1, #0
	bge _0809D62C
	movs r2, #4
	b _0809D632
_0809D62C:
	cmp r1, #0
	ble _0809D632
	movs r2, #6
_0809D632:
	asrs r4, r4, #0x10
	cmp r4, #0
	bge _0809D63C
	adds r0, r2, #3
	b _0809D642
_0809D63C:
	cmp r4, #0
	ble _0809D646
	subs r0, r2, #3
_0809D642:
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
_0809D646:
	mov r3, sl
	ldrb r0, [r3, #0xc]
	movs r1, #0xf
	ands r1, r0
	cmp r1, #8
	beq _0809D656
	cmp r1, #2
	bne _0809D65E
_0809D656:
	cmp r2, #4
	beq _0809D676
	cmp r2, #6
	beq _0809D676
_0809D65E:
	mov r1, sl
	ldrb r0, [r1, #0xc]
	movs r1, #0xf
	ands r1, r0
	cmp r1, #4
	beq _0809D66E
	cmp r1, #6
	bne _0809D680
_0809D66E:
	cmp r2, #8
	beq _0809D676
	cmp r2, #2
	bne _0809D680
_0809D676:
	ldrh r0, [r6, #4]
	strh r0, [r6]
	ldrh r0, [r6, #6]
	strh r0, [r6, #2]
	movs r2, #5
_0809D680:
	mov r3, sl
	ldrb r1, [r3, #0xc]
	movs r0, #0xf0
	ands r0, r1
	orrs r2, r0
	strb r2, [r3, #0xc]
_0809D68C:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0809D69C
sub_0809D69C: @ 0x0809D69C
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r0, _0809D6C8 @ =gUnk_03006B54
	ldr r3, [r0]
	ldr r0, _0809D6CC @ =0x00001EB8
	adds r5, r3, r0
	ldrh r2, [r5, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _0809D6D0 @ =0x00000AB8
	adds r0, r0, r2
	adds r3, r3, r0
	strb r1, [r3, #0xc]
	cmp r4, #1
	beq _0809D73A
	cmp r4, #1
	bgt _0809D6D4
	cmp r4, #0
	beq _0809D6DE
	b _0809D79E
	.align 2, 0
_0809D6C8: .4byte gUnk_03006B54
_0809D6CC: .4byte 0x00001EB8
_0809D6D0: .4byte 0x00000AB8
_0809D6D4:
	cmp r4, #2
	beq _0809D796
	cmp r4, #3
	beq _0809D79C
	b _0809D79E
_0809D6DE:
	ldrb r0, [r5, #0xf]
	cmp r0, #6
	bhi _0809D79E
	lsls r0, r0, #2
	ldr r1, _0809D6F0 @ =_0809D6F4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809D6F0: .4byte _0809D6F4
_0809D6F4: @ jump table
	.4byte _0809D710 @ case 0
	.4byte _0809D716 @ case 1
	.4byte _0809D71C @ case 2
	.4byte _0809D722 @ case 3
	.4byte _0809D728 @ case 4
	.4byte _0809D72E @ case 5
	.4byte _0809D734 @ case 6
_0809D710:
	movs r0, #0x2a
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D716:
	movs r0, #0x25
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D71C:
	movs r0, #0x26
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D722:
	movs r0, #0x27
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D728:
	movs r0, #0x28
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D72E:
	movs r0, #0x29
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D734:
	movs r0, #0x34
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D73A:
	ldrb r0, [r5, #0xf]
	cmp r0, #6
	bhi _0809D79E
	lsls r0, r0, #2
	ldr r1, _0809D74C @ =_0809D750
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809D74C: .4byte _0809D750
_0809D750: @ jump table
	.4byte _0809D76C @ case 0
	.4byte _0809D772 @ case 1
	.4byte _0809D778 @ case 2
	.4byte _0809D77E @ case 3
	.4byte _0809D784 @ case 4
	.4byte _0809D78A @ case 5
	.4byte _0809D790 @ case 6
_0809D76C:
	movs r0, #0xf
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D772:
	movs r0, #0x16
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D778:
	movs r0, #0x19
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D77E:
	movs r0, #0x1c
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D784:
	movs r0, #0x1f
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D78A:
	movs r0, #0x22
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D790:
	movs r0, #0x35
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D796:
	movs r0, #0
	strb r0, [r3, #0xb]
	b _0809D79E
_0809D79C:
	strb r4, [r3, #0xb]
_0809D79E:
	adds r0, r3, #0
	adds r0, #0x1c
	ldrb r1, [r3, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r3, #0xb]
	ldrb r3, [r3, #0xc]
	bl sub_08009F50
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809D7B8
sub_0809D7B8: @ 0x0809D7B8
	push {r4, r5, lr}
	ldr r0, _0809D814 @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	beq _0809D84C
	ldr r0, _0809D818 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _0809D81C @ =0x00001EB8
	adds r4, r2, r0
	ldrh r1, [r4, #8]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	bne _0809D84C
	ldrh r1, [r4, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809D820 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r2, r0
	ldrb r0, [r0, #0xb]
	cmp r0, #0x38
	beq _0809D84C
	cmp r0, #0x31
	beq _0809D84C
	ldrb r5, [r4, #0xf]
	ldr r0, _0809D824 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _0809D828
	bl sub_08015788
	bl sub_080184F0
	strb r0, [r4, #0xf]
	movs r0, #0xf2
	lsls r0, r0, #1
	ldrb r1, [r4, #0xf]
	bl sub_08012F0C
	b _0809D846
	.align 2, 0
_0809D814: .4byte 0x000001E1
_0809D818: .4byte gUnk_03006B54
_0809D81C: .4byte 0x00001EB8
_0809D820: .4byte 0x00000AB8
_0809D824: .4byte gKeyNewPress
_0809D828:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809D846
	bl sub_080156C4
	bl sub_080184F0
	strb r0, [r4, #0xf]
	movs r0, #0xf2
	lsls r0, r0, #1
	ldrb r1, [r4, #0xf]
	bl sub_08012F0C
_0809D846:
	ldrb r4, [r4, #0xf]
	cmp r5, r4
	bne _0809D850
_0809D84C:
	movs r0, #0
	b _0809D852
_0809D850:
	movs r0, #1
_0809D852:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_0809D858
sub_0809D858: @ 0x0809D858
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r1, _0809D88C @ =gUnk_03006B54
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _0809D890 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r6, r1, r0
	ldr r2, _0809D894 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _0809D898 @ =0x00000AB8
	adds r0, r0, r2
	adds r5, r1, r0
	movs r0, #0
	ldrsh r2, [r6, r0]
	cmp r2, #0
	beq _0809D89C
	cmp r2, #1
	beq _0809D8B4
	b _0809D928
	.align 2, 0
_0809D88C: .4byte gUnk_03006B54
_0809D890: .4byte 0x00001FBC
_0809D894: .4byte 0x00001EB8
_0809D898: .4byte 0x00000AB8
_0809D89C:
	ldrh r0, [r5, #0xe]
	ldr r1, _0809D8B0 @ =0x0000FEFF
	ands r1, r0
	strh r1, [r5, #0xe]
	strh r2, [r6, #8]
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	b _0809D928
	.align 2, 0
_0809D8B0: .4byte 0x0000FEFF
_0809D8B4:
	bl sub_0809D7B8
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	cmp r7, #0
	bne _0809D8E6
	bl sub_0809D934
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809D8F6
	ldrh r0, [r5, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	orrs r1, r0
	strh r1, [r5, #0xe]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_080A4FBC
	strh r7, [r6]
	b _0809D928
_0809D8E6:
	bl sub_0809E6DC
	movs r0, #0
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
_0809D8F6:
	adds r0, r5, #0
	adds r0, #0x1c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809D928
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_080A4FBC
	ldrh r1, [r5, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	movs r4, #0
	orrs r0, r1
	strh r0, [r5, #0xe]
	movs r0, #2
	movs r1, #0
	bl sub_0809D69C
	strh r4, [r6]
_0809D928:
	movs r1, #0
	ldrsh r0, [r6, r1]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809D934
sub_0809D934: @ 0x0809D934
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	movs r0, #1
	mov r8, r0
	movs r7, #0
	ldr r0, _0809D958 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r1, _0809D95C @ =0x00001EB8
	adds r5, r2, r1
	ldrh r1, [r5, #8]
	movs r0, #0x88
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809D960
	movs r0, #0
	b _0809DA86
	.align 2, 0
_0809D958: .4byte gUnk_03006B54
_0809D95C: .4byte 0x00001EB8
_0809D960:
	ldrh r1, [r5, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809D9C4 @ =0x00000AB8
	adds r0, r0, r1
	adds r6, r2, r0
	ldr r0, _0809D9C8 @ =gKeyHeld
	ldrh r4, [r0]
	bl sub_080A3D38
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809DA3A
	ldrb r0, [r5, #0xf]
	cmp r0, #4
	bne _0809DA3A
	adds r0, r4, #0
	mov r2, r8
	ands r0, r2
	cmp r0, #0
	beq _0809DA0C
	strb r7, [r5, #0x10]
	strb r7, [r5, #0x11]
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	bne _0809D998
	movs r0, #0x14
	strb r0, [r5, #0x12]
_0809D998:
	ldrh r1, [r6, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	movs r2, #0
	orrs r0, r1
	strh r0, [r6, #0xe]
	movs r0, #0x38
	strb r0, [r6, #0xb]
	strb r2, [r6, #0xc]
	movs r0, #0xf0
	ands r0, r4
	cmp r0, #0
	beq _0809DA84
	ldrb r0, [r6, #9]
	cmp r0, #2
	beq _0809D9DE
	cmp r0, #2
	bgt _0809D9CC
	cmp r0, #1
	beq _0809D9D6
	b _0809D9F4
	.align 2, 0
_0809D9C4: .4byte 0x00000AB8
_0809D9C8: .4byte gKeyHeld
_0809D9CC:
	cmp r0, #3
	beq _0809D9DA
	cmp r0, #4
	beq _0809D9E8
	b _0809D9F4
_0809D9D6:
	movs r0, #0x80
	b _0809D9E0
_0809D9DA:
	movs r0, #0x40
	b _0809D9E0
_0809D9DE:
	movs r0, #0x20
_0809D9E0:
	ands r4, r0
	cmp r4, #0
	bne _0809D9F4
	b _0809DA84
_0809D9E8:
	movs r0, #0x10
	ands r4, r0
	cmp r4, #0
	bne _0809D9F4
	movs r0, #0
	mov r8, r0
_0809D9F4:
	mov r1, r8
	cmp r1, #0
	beq _0809DA84
	movs r1, #0
	movs r0, #0x31
	strb r0, [r6, #0xb]
	strb r1, [r6, #0xc]
	bl sub_080A2E18
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	b _0809DA84
_0809DA0C:
	ldrb r1, [r6, #0xb]
	adds r0, r1, #0
	subs r0, #0x31
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _0809DA26
	adds r0, r1, #0
	subs r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _0809DA84
_0809DA26:
	strb r7, [r6, #0xb]
	strb r7, [r6, #0xc]
	movs r7, #3
	ldrh r1, [r6, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r6, #0xe]
	b _0809DA84
_0809DA3A:
	ldr r0, _0809DA90 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809DA84
	movs r0, #0xf2
	lsls r0, r0, #1
	ldrb r1, [r5, #0xf]
	bl sub_08012F0C
	movs r0, #0
	strb r0, [r5, #0x10]
	strb r0, [r5, #0x11]
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	bne _0809DA60
	movs r0, #0x14
	strb r0, [r5, #0x12]
_0809DA60:
	bl sub_080A2E18
	lsls r0, r0, #0x18
	lsrs r7, r0, #0x18
	ldr r0, _0809DA94 @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	bne _0809DA76
	movs r0, #0
	mov r8, r0
_0809DA76:
	cmp r7, #3
	bne _0809DA84
	mov r1, r8
	cmp r1, #1
	bne _0809DA84
	bl sub_080A4C3C
_0809DA84:
	adds r0, r7, #0
_0809DA86:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_0809DA90: .4byte gKeyNewPress
_0809DA94: .4byte 0x000001E1

	thumb_func_start sub_0809DA98
sub_0809DA98: @ 0x0809DA98
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _0809DACC @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _0809DAD0 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	ldr r0, _0809DAD4 @ =0x00001EB8
	adds r4, r1, r0
	ldrh r2, [r4, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _0809DAD8 @ =0x00000AB8
	adds r0, r0, r2
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #0
	beq _0809DADC
	cmp r0, #1
	beq _0809DAE2
	b _0809DB24
	.align 2, 0
_0809DACC: .4byte gUnk_03006B54
_0809DAD0: .4byte 0x00001FBC
_0809DAD4: .4byte 0x00001EB8
_0809DAD8: .4byte 0x00000AB8
_0809DADC:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_0809DAE2:
	adds r0, r1, #0
	adds r0, #0x1c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809DB24
	ldrb r0, [r4, #0xf]
	cmp r0, #6
	bne _0809DB0C
	bl sub_080A4C98
	ldrh r0, [r4, #0x18]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	movs r2, #0
	orrs r1, r0
	strh r1, [r4, #0x18]
	strh r2, [r5]
	b _0809DB24
_0809DB0C:
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r6, #0
	movs r1, #1
	bl sub_080A4FBC
	movs r0, #0
	strh r0, [r5]
	movs r0, #2
	movs r1, #0
	bl sub_0809D69C
_0809DB24:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809DB30
sub_0809DB30: @ 0x0809DB30
	push {r4, r5, r6, lr}
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	ldr r1, _0809DB6C @ =gUnk_03006B54
	ldr r1, [r1]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r3, r1, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r5, r0, #0x10
	asrs r2, r5, #0x10
	cmp r2, #0
	blt _0809DB68
	lsls r0, r4, #0x10
	asrs r0, r0, #0x14
	lsls r4, r0, #0x10
	asrs r1, r4, #0x10
	cmp r1, #0
	blt _0809DB68
	movs r6, #0
	ldrsh r0, [r3, r6]
	cmp r2, r0
	bgt _0809DB68
	movs r2, #2
	ldrsh r0, [r3, r2]
	cmp r1, r0
	ble _0809DB70
_0809DB68:
	movs r0, #0
	b _0809DB86
	.align 2, 0
_0809DB6C: .4byte gUnk_03006B54
_0809DB70:
	asrs r1, r4, #0x13
	movs r6, #8
	ldrsh r0, [r3, r6]
	muls r1, r0, r1
	asrs r2, r5, #0x13
	ldr r0, [r3, #0x10]
	adds r1, r1, r2
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r0, #0xf0
	ands r0, r1
_0809DB86:
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_0809DB8C
sub_0809DB8C: @ 0x0809DB8C
	push {r4, r5, r6, r7, lr}
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	lsls r3, r3, #0x18
	lsrs r7, r3, #0x18
	ldr r2, _0809DBE8 @ =gUnk_03006B54
	ldr r4, [r2]
	ldr r2, _0809DBEC @ =0x00001EB8
	adds r5, r4, r2
	ldrh r3, [r5, #4]
	movs r2, #0x54
	muls r2, r3, r2
	ldr r3, _0809DBF0 @ =0x00000AB8
	adds r2, r2, r3
	adds r4, r4, r2
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809DB30
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrb r0, [r5, #0xe]
	cmp r0, #0x80
	bne _0809DBCC
	cmp r2, #0x80
	beq _0809DBCC
	ldrh r1, [r4, #0xe]
	movs r0, #0x20
	orrs r0, r1
	strh r0, [r4, #0xe]
_0809DBCC:
	cmp r2, #0x60
	bne _0809DBD2
	b _0809DD02
_0809DBD2:
	cmp r2, #0x60
	bgt _0809DC08
	cmp r2, #0x20
	beq _0809DC5C
	cmp r2, #0x20
	bgt _0809DBF4
	cmp r2, #0
	beq _0809DC2E
	cmp r2, #0x10
	beq _0809DC5C
	b _0809DD18
	.align 2, 0
_0809DBE8: .4byte gUnk_03006B54
_0809DBEC: .4byte 0x00001EB8
_0809DBF0: .4byte 0x00000AB8
_0809DBF4:
	cmp r2, #0x40
	beq _0809DC5C
	cmp r2, #0x40
	bgt _0809DC02
	cmp r2, #0x30
	beq _0809DC5C
	b _0809DD18
_0809DC02:
	cmp r2, #0x50
	beq _0809DC7E
	b _0809DD18
_0809DC08:
	cmp r2, #0x90
	beq _0809DC44
	cmp r2, #0x90
	bgt _0809DC1A
	cmp r2, #0x70
	beq _0809DD02
	cmp r2, #0x80
	beq _0809DD06
	b _0809DD18
_0809DC1A:
	cmp r2, #0xb0
	beq _0809DC50
	cmp r2, #0xb0
	bgt _0809DC28
	cmp r2, #0xa0
	beq _0809DC68
	b _0809DD18
_0809DC28:
	cmp r2, #0xc0
	beq _0809DC68
	b _0809DD18
_0809DC2E:
	strb r2, [r5, #0xc]
	ldrh r0, [r5, #8]
	ldr r1, _0809DC40 @ =0x0000FE0F
	ands r1, r0
	movs r0, #0
	strh r1, [r5, #8]
	strb r0, [r5, #0xe]
	strb r0, [r5, #0x13]
	b _0809DD18
	.align 2, 0
_0809DC40: .4byte 0x0000FE0F
_0809DC44:
	strb r2, [r5, #0xe]
	ldrh r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	b _0809DC72
_0809DC50:
	strb r2, [r5, #0xe]
	ldrh r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r1, r2, #0
	b _0809DC72
_0809DC5C:
	strb r2, [r5, #0xe]
	ldrh r1, [r5, #8]
	movs r0, #0x20
	orrs r0, r1
	strh r0, [r5, #8]
	b _0809DD18
_0809DC68:
	strb r2, [r5, #0xe]
	ldrh r0, [r5, #8]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
_0809DC72:
	orrs r1, r0
	strh r1, [r5, #8]
	ldrb r0, [r5, #0x13]
	adds r0, #1
	strb r0, [r5, #0x13]
	b _0809DD18
_0809DC7E:
	ldrh r0, [r5, #8]
	movs r1, #0x40
	orrs r1, r0
	strh r1, [r5, #8]
	strb r2, [r5, #0xe]
	ldrb r0, [r5, #0xc]
	movs r1, #0xf
	ands r1, r0
	cmp r1, #5
	beq _0809DC96
	cmp r1, #0
	bne _0809DD18
_0809DC96:
	subs r0, r6, #1
	cmp r0, #8
	bhi _0809DCF4
	lsls r0, r0, #2
	ldr r1, _0809DCA8 @ =_0809DCAC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809DCA8: .4byte _0809DCAC
_0809DCAC: @ jump table
	.4byte _0809DCD0 @ case 0
	.4byte _0809DCD4 @ case 1
	.4byte _0809DCD8 @ case 2
	.4byte _0809DCDC @ case 3
	.4byte _0809DCE0 @ case 4
	.4byte _0809DCE4 @ case 5
	.4byte _0809DCE8 @ case 6
	.4byte _0809DCEC @ case 7
	.4byte _0809DCF0 @ case 8
_0809DCD0:
	movs r0, #1
	b _0809DCF2
_0809DCD4:
	movs r0, #2
	b _0809DCF2
_0809DCD8:
	movs r0, #3
	b _0809DCF2
_0809DCDC:
	movs r0, #4
	b _0809DCF2
_0809DCE0:
	movs r0, #5
	b _0809DCF2
_0809DCE4:
	movs r0, #6
	b _0809DCF2
_0809DCE8:
	movs r0, #7
	b _0809DCF2
_0809DCEC:
	movs r0, #8
	b _0809DCF2
_0809DCF0:
	movs r0, #9
_0809DCF2:
	strb r0, [r5, #0xc]
_0809DCF4:
	cmp r7, #0
	beq _0809DD18
	ldrb r1, [r5, #0xc]
	movs r0, #0x10
	orrs r0, r1
	strb r0, [r5, #0xc]
	b _0809DD18
_0809DD02:
	strb r2, [r5, #0xe]
	b _0809DD18
_0809DD06:
	strb r2, [r5, #0xe]
	ldrh r1, [r5, #8]
	movs r0, #0x10
	orrs r0, r1
	strh r0, [r5, #8]
	ldrh r1, [r4, #0xe]
	ldr r0, _0809DD44 @ =0x0000FFDF
	ands r0, r1
	strh r0, [r4, #0xe]
_0809DD18:
	ldrb r0, [r5, #0xe]
	cmp r0, #0x50
	beq _0809DD22
	movs r0, #0
	strb r0, [r5, #0xc]
_0809DD22:
	ldrb r0, [r5, #0x13]
	cmp r0, #8
	bls _0809DD3E
	movs r0, #0
	strb r0, [r5, #0x13]
	ldrb r0, [r4, #9]
	adds r0, #1
	strb r0, [r4, #9]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _0809DD3E
	movs r0, #1
	strb r0, [r4, #9]
_0809DD3E:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809DD44: .4byte 0x0000FFDF

	thumb_func_start sub_0809DD48
sub_0809DD48: @ 0x0809DD48
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	ldr r1, _0809DD80 @ =gUnk_03006B54
	ldr r3, [r1]
	ldr r1, _0809DD84 @ =0x00001EB8
	adds r4, r3, r1
	ldrh r2, [r4, #4]
	movs r1, #0x54
	muls r1, r2, r1
	ldr r2, _0809DD88 @ =0x00000AB8
	adds r1, r1, r2
	adds r3, r3, r1
	lsrs r2, r0, #0x18
	movs r5, #0xfc
	lsls r5, r5, #0x18
	adds r0, r0, r5
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _0809DDB2
	movs r0, #0x13
	strb r0, [r3, #0xb]
	movs r0, #1
	strb r0, [r3, #9]
	cmp r2, #3
	bhi _0809DD8C
	ldrh r0, [r3, #2]
	adds r0, #0x10
	b _0809DD90
	.align 2, 0
_0809DD80: .4byte gUnk_03006B54
_0809DD84: .4byte 0x00001EB8
_0809DD88: .4byte 0x00000AB8
_0809DD8C:
	ldrh r0, [r3, #2]
	subs r0, #0x10
_0809DD90:
	strh r0, [r3, #2]
	movs r1, #0
	ldrsh r0, [r3, r1]
	movs r5, #2
	ldrsh r1, [r3, r5]
	movs r3, #0
	bl sub_0809DB8C
	ldrb r1, [r4, #0xe]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	bne _0809DDBA
	ldrh r0, [r4, #4]
	bl sub_0809BABC
	b _0809DDBA
_0809DDB2:
	movs r0, #0x12
	strb r0, [r3, #0xb]
	movs r0, #1
	strb r0, [r3, #9]
_0809DDBA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809DDC0
sub_0809DDC0: @ 0x0809DDC0
	push {r4, lr}
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _0809DDE8 @ =0x00000183
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r1, r0, #0
	cmp r4, #0
	bne _0809DE2C
	cmp r0, #1
	beq _0809DE04
	cmp r0, #1
	bgt _0809DDEC
	cmp r0, #0
	beq _0809DDF6
	b _0809DE8E
	.align 2, 0
_0809DDE8: .4byte 0x00000183
_0809DDEC:
	cmp r0, #2
	beq _0809DE10
	cmp r0, #3
	beq _0809DE20
	b _0809DE8E
_0809DDF6:
	ldr r2, _0809DE00 @ =0x00000207
	movs r0, #1
	movs r1, #0x28
	b _0809DE60
	.align 2, 0
_0809DE00: .4byte 0x00000207
_0809DE04:
	ldr r2, _0809DE0C @ =0x0000020A
	movs r0, #1
	movs r1, #0x3c
	b _0809DE60
	.align 2, 0
_0809DE0C: .4byte 0x0000020A
_0809DE10:
	ldr r2, _0809DE1C @ =0x00000209
	movs r0, #1
	movs r1, #0x50
	movs r3, #1
	b _0809DE62
	.align 2, 0
_0809DE1C: .4byte 0x00000209
_0809DE20:
	movs r2, #0x82
	lsls r2, r2, #2
	movs r0, #1
	movs r1, #0x64
	movs r3, #1
	b _0809DE62
_0809DE2C:
	cmp r0, #1
	beq _0809DE50
	cmp r0, #1
	bgt _0809DE3A
	cmp r0, #0
	beq _0809DE44
	b _0809DE8E
_0809DE3A:
	cmp r1, #2
	beq _0809DE5A
	cmp r1, #3
	beq _0809DE78
	b _0809DE8E
_0809DE44:
	ldr r2, _0809DE4C @ =0x0000020E
	movs r0, #1
	movs r1, #0x32
	b _0809DE60
	.align 2, 0
_0809DE4C: .4byte 0x0000020E
_0809DE50:
	movs r2, #0x83
	lsls r2, r2, #2
	movs r0, #1
	movs r1, #0x46
	b _0809DE60
_0809DE5A:
	ldr r2, _0809DE74 @ =0x0000020D
	movs r0, #1
	movs r1, #0x5a
_0809DE60:
	movs r3, #6
_0809DE62:
	bl sub_0809ECCC
	movs r0, #1
	movs r1, #1
	movs r2, #0
	bl sub_0809EB1C
	b _0809DE8E
	.align 2, 0
_0809DE74: .4byte 0x0000020D
_0809DE78:
	ldr r2, _0809DE94 @ =0x0000020B
	movs r0, #1
	movs r1, #0x6e
	movs r3, #6
	bl sub_0809ECCC
	movs r0, #1
	movs r1, #1
	movs r2, #0
	bl sub_0809EB1C
_0809DE8E:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_0809DE94: .4byte 0x0000020B

	thumb_func_start sub_0809DE98
sub_0809DE98: @ 0x0809DE98
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	ldr r0, _0809DED0 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0xcd
	lsls r0, r0, #3
	adds r3, r1, r0
	ldr r2, _0809DED4 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _0809DED8 @ =0x00000AB8
	adds r0, r0, r2
	adds r4, r1, r0
	ldr r0, _0809DEDC @ =0x00000B0C
	adds r2, r1, r0
	ldrh r0, [r3, #2]
	subs r0, #0x28
	cmp r0, #0x46
	bls _0809DEC6
	b _0809E0CE
_0809DEC6:
	lsls r0, r0, #2
	ldr r1, _0809DEE0 @ =_0809DEE4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809DED0: .4byte gUnk_03006B54
_0809DED4: .4byte 0x00001EB8
_0809DED8: .4byte 0x00000AB8
_0809DEDC: .4byte 0x00000B0C
_0809DEE0: .4byte _0809DEE4
_0809DEE4: @ jump table
	.4byte _0809E000 @ case 0
	.4byte _0809E0CE @ case 1
	.4byte _0809E0CE @ case 2
	.4byte _0809E0CE @ case 3
	.4byte _0809E0CE @ case 4
	.4byte _0809E0CE @ case 5
	.4byte _0809E0CE @ case 6
	.4byte _0809E0CE @ case 7
	.4byte _0809E0CE @ case 8
	.4byte _0809E0CE @ case 9
	.4byte _0809E05A @ case 10
	.4byte _0809E0CE @ case 11
	.4byte _0809E0CE @ case 12
	.4byte _0809E0CE @ case 13
	.4byte _0809E0CE @ case 14
	.4byte _0809E0CE @ case 15
	.4byte _0809E0CE @ case 16
	.4byte _0809E0CE @ case 17
	.4byte _0809E0CE @ case 18
	.4byte _0809E0CE @ case 19
	.4byte _0809E000 @ case 20
	.4byte _0809E0CE @ case 21
	.4byte _0809E0CE @ case 22
	.4byte _0809E0CE @ case 23
	.4byte _0809E0CE @ case 24
	.4byte _0809E0CE @ case 25
	.4byte _0809E0CE @ case 26
	.4byte _0809E0CE @ case 27
	.4byte _0809E0CE @ case 28
	.4byte _0809E0CE @ case 29
	.4byte _0809E05A @ case 30
	.4byte _0809E0CE @ case 31
	.4byte _0809E0CE @ case 32
	.4byte _0809E0CE @ case 33
	.4byte _0809E0CE @ case 34
	.4byte _0809E0CE @ case 35
	.4byte _0809E0CE @ case 36
	.4byte _0809E0CE @ case 37
	.4byte _0809E0CE @ case 38
	.4byte _0809E0CE @ case 39
	.4byte _0809E000 @ case 40
	.4byte _0809E0CE @ case 41
	.4byte _0809E0CE @ case 42
	.4byte _0809E0CE @ case 43
	.4byte _0809E0CE @ case 44
	.4byte _0809E0CE @ case 45
	.4byte _0809E0CE @ case 46
	.4byte _0809E0CE @ case 47
	.4byte _0809E0CE @ case 48
	.4byte _0809E0CE @ case 49
	.4byte _0809E05A @ case 50
	.4byte _0809E0CE @ case 51
	.4byte _0809E0CE @ case 52
	.4byte _0809E0CE @ case 53
	.4byte _0809E0CE @ case 54
	.4byte _0809E0CE @ case 55
	.4byte _0809E0CE @ case 56
	.4byte _0809E0CE @ case 57
	.4byte _0809E0CE @ case 58
	.4byte _0809E0CE @ case 59
	.4byte _0809E000 @ case 60
	.4byte _0809E0CE @ case 61
	.4byte _0809E0CE @ case 62
	.4byte _0809E0CE @ case 63
	.4byte _0809E0CE @ case 64
	.4byte _0809E0CE @ case 65
	.4byte _0809E0CE @ case 66
	.4byte _0809E0CE @ case 67
	.4byte _0809E0CE @ case 68
	.4byte _0809E0CE @ case 69
	.4byte _0809E05A @ case 70
_0809E000:
	ldrh r0, [r4]
	strh r0, [r2]
	ldrh r0, [r4, #2]
	strh r0, [r2, #2]
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	movs r0, #1
	bl sub_0809F734
	cmp r5, #0
	bne _0809E02E
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	subs r2, #0x10
	b _0809E0AE
_0809E02E:
	cmp r5, #1
	bne _0809E042
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	adds r2, #0x10
	b _0809E0AE
_0809E042:
	cmp r5, #2
	bne _0809E050
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	subs r1, #0x10
	b _0809E0A8
_0809E050:
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r1, #0x10
	b _0809E0A8
_0809E05A:
	ldrh r0, [r4]
	strh r0, [r2]
	ldrh r0, [r4, #2]
	strh r0, [r2, #2]
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	movs r0, #1
	bl sub_0809F734
	cmp r5, #0
	bne _0809E088
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	subs r2, #0x10
	b _0809E0AE
_0809E088:
	cmp r5, #1
	bne _0809E09C
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	adds r2, #0x10
	b _0809E0AE
_0809E09C:
	cmp r5, #2
	bne _0809E0B8
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	subs r1, #0x18
_0809E0A8:
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
_0809E0AE:
	movs r0, #1
	movs r3, #1
	bl sub_080A4844
	b _0809E0CE
_0809E0B8:
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r1, #0x18
	ldrh r2, [r4, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	movs r0, #1
	movs r3, #1
	bl sub_080A4844
_0809E0CE:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809E0D4
sub_0809E0D4: @ 0x0809E0D4
	push {r4, r5, r6, r7, lr}
	ldr r0, _0809E128 @ =gUnk_03006B54
	ldr r6, [r0]
	ldr r0, _0809E12C @ =0x00001EB8
	adds r5, r6, r0
	ldrh r1, [r5, #4]
	movs r0, #0x54
	adds r4, r1, #0
	muls r4, r0, r4
	ldr r1, _0809E130 @ =0x00000AB8
	adds r4, r4, r1
	adds r4, r6, r4
	ldrh r1, [r5, #0x18]
	movs r0, #1
	movs r7, #0
	orrs r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r5, #0x14]
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r5, #0x16]
	ldr r2, _0809E134 @ =0x00001EDB
	adds r0, r6, r2
	strb r7, [r0]
	ldr r1, _0809E138 @ =0x00001EDC
	adds r0, r6, r1
	movs r1, #1
	movs r2, #3
	bl sub_0800A6C0
	ldrb r2, [r4, #9]
	cmp r2, #2
	beq _0809E19C
	cmp r2, #2
	bgt _0809E13C
	cmp r2, #1
	beq _0809E174
	b _0809E1EA
	.align 2, 0
_0809E128: .4byte gUnk_03006B54
_0809E12C: .4byte 0x00001EB8
_0809E130: .4byte 0x00000AB8
_0809E134: .4byte 0x00001EDB
_0809E138: .4byte 0x00001EDC
_0809E13C:
	cmp r2, #3
	beq _0809E146
	cmp r2, #4
	beq _0809E1C8
	b _0809E1EA
_0809E146:
	ldrh r1, [r5, #0x18]
	ldr r0, _0809E168 @ =0x0000FFBF
	ands r0, r1
	ldr r1, _0809E16C @ =0x0000FF7F
	ands r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r5, #0x16]
	adds r0, #0xc
	strh r0, [r5, #0x16]
	strh r2, [r5, #0x1a]
	movs r0, #0x38
	strh r0, [r5, #0x20]
	ldr r2, _0809E170 @ =0x00001EDA
	adds r1, r6, r2
	movs r0, #0x28
	b _0809E1E8
	.align 2, 0
_0809E168: .4byte 0x0000FFBF
_0809E16C: .4byte 0x0000FF7F
_0809E170: .4byte 0x00001EDA
_0809E174:
	ldrh r1, [r5, #0x18]
	ldr r0, _0809E194 @ =0x0000FFBF
	ands r0, r1
	movs r1, #0x80
	orrs r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r5, #0x16]
	subs r0, #0x10
	strh r0, [r5, #0x16]
	strh r2, [r5, #0x1a]
	movs r0, #0x3c
	strh r0, [r5, #0x20]
	ldr r0, _0809E198 @ =0x00001EDA
	adds r1, r6, r0
	movs r0, #0x28
	b _0809E1E8
	.align 2, 0
_0809E194: .4byte 0x0000FFBF
_0809E198: .4byte 0x00001EDA
_0809E19C:
	ldrh r1, [r5, #0x18]
	ldr r0, _0809E1BC @ =0x0000FFBF
	ands r0, r1
	ldr r1, _0809E1C0 @ =0x0000FF7F
	ands r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r5, #0x14]
	subs r0, #8
	strh r0, [r5, #0x14]
	strh r2, [r5, #0x1a]
	movs r0, #0x5a
	strh r0, [r5, #0x20]
	ldr r2, _0809E1C4 @ =0x00001EDA
	adds r1, r6, r2
	b _0809E1E6
	.align 2, 0
_0809E1BC: .4byte 0x0000FFBF
_0809E1C0: .4byte 0x0000FF7F
_0809E1C4: .4byte 0x00001EDA
_0809E1C8:
	ldrh r0, [r5, #0x18]
	movs r1, #0x40
	orrs r0, r1
	orrs r0, r7
	ldr r1, _0809E1FC @ =0x0000FF7F
	ands r0, r1
	strh r0, [r5, #0x18]
	ldrh r0, [r5, #0x14]
	adds r0, #8
	strh r0, [r5, #0x14]
	strh r2, [r5, #0x1a]
	movs r0, #0x5a
	strh r0, [r5, #0x20]
	ldr r0, _0809E200 @ =0x00001EDA
	adds r1, r6, r0
_0809E1E6:
	movs r0, #0x2a
_0809E1E8:
	strb r0, [r1]
_0809E1EA:
	ldrh r1, [r5, #0x18]
	movs r2, #0x80
	lsls r2, r2, #2
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r5, #0x18]
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E1FC: .4byte 0x0000FF7F
_0809E200: .4byte 0x00001EDA

	thumb_func_start sub_0809E204
sub_0809E204: @ 0x0809E204
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r0, _0809E270 @ =gUnk_03006B54
	ldr r3, [r0]
	ldr r0, _0809E274 @ =0x00001EB8
	adds r4, r3, r0
	ldrh r2, [r4, #0x18]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r2
	cmp r0, #0
	bne _0809E220
	b _0809E3D0
_0809E220:
	movs r1, #0
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _0809E22C
	b _0809E3C4
_0809E22C:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r2
	cmp r0, #0
	beq _0809E238
	b _0809E3C4
_0809E238:
	movs r5, #1
	movs r2, #0
	mov r8, r2
	ldr r0, _0809E278 @ =0x00001EDA
	adds r6, r3, r0
	ldr r2, _0809E27C @ =0x00001EDB
	adds r7, r3, r2
_0809E246:
	ldrh r0, [r4, #0x1a]
	cmp r0, #3
	bne _0809E290
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	ldrh r1, [r4, #0x16]
	subs r1, r1, r5
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A554
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bne _0809E280
	ldrh r0, [r4, #0x16]
	subs r0, r0, r5
	strh r0, [r4, #0x16]
	movs r0, #0x29
	b _0809E31A
	.align 2, 0
_0809E270: .4byte gUnk_03006B54
_0809E274: .4byte 0x00001EB8
_0809E278: .4byte 0x00001EDA
_0809E27C: .4byte 0x00001EDB
_0809E280:
	cmp r1, #0
	bne _0809E356
	cmp r5, #4
	bne _0809E356
	ldrh r0, [r4, #0x16]
	subs r0, #4
	strh r0, [r4, #0x16]
	b _0809E350
_0809E290:
	cmp r0, #1
	bne _0809E2C6
	movs r1, #0x14
	ldrsh r0, [r4, r1]
	ldrh r1, [r4, #0x16]
	adds r1, r5, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_0809A5F4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bne _0809E2B6
	ldrh r0, [r4, #0x16]
	adds r0, r5, r0
	strh r0, [r4, #0x16]
	movs r0, #0x29
	b _0809E31A
_0809E2B6:
	cmp r1, #0
	bne _0809E356
	cmp r5, #4
	bne _0809E356
	ldrh r0, [r4, #0x16]
	adds r0, #4
	strh r0, [r4, #0x16]
	b _0809E350
_0809E2C6:
	cmp r0, #2
	bne _0809E2F6
	ldrh r0, [r4, #0x14]
	subs r0, r0, r5
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x16
	ldrsh r1, [r4, r2]
	bl sub_0809A3F8
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bne _0809E2E8
	ldrh r0, [r4, #0x14]
	subs r0, r0, r5
	b _0809E316
_0809E2E8:
	cmp r1, #0
	bne _0809E356
	cmp r5, #4
	bne _0809E356
	ldrh r0, [r4, #0x14]
	subs r0, #4
	b _0809E34E
_0809E2F6:
	cmp r0, #4
	bne _0809E356
	ldrh r0, [r4, #0x14]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r2, #0x16
	ldrsh r1, [r4, r2]
	bl sub_0809A4A4
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #1
	bne _0809E342
	ldrh r0, [r4, #0x14]
	adds r0, r5, r0
_0809E316:
	strh r0, [r4, #0x14]
	movs r0, #0x2b
_0809E31A:
	strb r0, [r6]
	strb r1, [r7]
	ldrb r2, [r6]
	adds r0, r4, #0
	adds r0, #0x24
	movs r1, #3
	movs r3, #1
	bl sub_08009F50
	movs r0, #0x98
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r4, #0x18]
	movs r2, #0x80
	lsls r2, r2, #5
	adds r1, r2, #0
	orrs r0, r1
	strh r0, [r4, #0x18]
	b _0809E39C
_0809E342:
	cmp r1, #0
	bne _0809E356
	cmp r5, #4
	bne _0809E356
	ldrh r0, [r4, #0x14]
	adds r0, #4
_0809E34E:
	strh r0, [r4, #0x14]
_0809E350:
	ldrh r0, [r4, #0x20]
	subs r0, #4
	strh r0, [r4, #0x20]
_0809E356:
	cmp r1, #2
	bne _0809E390
	ldrh r0, [r4, #0x18]
	ldr r2, _0809E384 @ =0x0000FFFE
	adds r1, r2, #0
	ands r0, r1
	ldr r2, _0809E388 @ =0x0000FDFF
	adds r1, r2, #0
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	mov r1, r8
	orrs r0, r1
	ldr r2, _0809E38C @ =0x0000EFFF
	adds r1, r2, #0
	ands r0, r1
	strh r0, [r4, #0x18]
	mov r0, r8
	strb r0, [r6]
	b _0809E39C
	.align 2, 0
_0809E384: .4byte 0x0000FFFE
_0809E388: .4byte 0x0000FDFF
_0809E38C: .4byte 0x0000EFFF
_0809E390:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #4
	bhi _0809E39C
	b _0809E246
_0809E39C:
	movs r1, #0x20
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bge _0809E3C4
	ldrh r1, [r4, #0x18]
	ldr r0, _0809E3DC @ =0x0000FFFE
	ands r0, r1
	ldr r1, _0809E3E0 @ =0x0000FDFF
	ands r0, r1
	movs r2, #0x80
	lsls r2, r2, #3
	adds r1, r2, #0
	orrs r0, r1
	movs r2, #0
	ldr r1, _0809E3E4 @ =0x0000EFFF
	ands r0, r1
	strh r0, [r4, #0x18]
	adds r0, r4, #0
	adds r0, #0x22
	strb r2, [r0]
_0809E3C4:
	bl sub_0809E4A0
	ldr r1, _0809E3E8 @ =0x0000FFFF
	movs r0, #0xff
	bl sub_080A2570
_0809E3D0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E3DC: .4byte 0x0000FFFE
_0809E3E0: .4byte 0x0000FDFF
_0809E3E4: .4byte 0x0000EFFF
_0809E3E8: .4byte 0x0000FFFF

	thumb_func_start sub_0809E3EC
sub_0809E3EC: @ 0x0809E3EC
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _0809E414 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _0809E418 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	ldr r0, _0809E41C @ =0x00001EB8
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _0809E420
	cmp r0, #1
	beq _0809E426
	b _0809E486
	.align 2, 0
_0809E414: .4byte gUnk_03006B54
_0809E418: .4byte 0x00001FBC
_0809E41C: .4byte 0x00001EB8
_0809E420:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_0809E426:
	adds r0, r4, #0
	adds r0, #0x24
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809E442
	adds r0, r4, #0
	adds r0, #0x22
	ldrb r0, [r0]
	cmp r0, #0x29
	beq _0809E456
	cmp r0, #0x2b
	beq _0809E456
_0809E442:
	movs r2, #0x20
	ldrsh r0, [r4, r2]
	cmp r0, #0
	blt _0809E456
	ldrh r1, [r4, #0x18]
	movs r0, #0x80
	lsls r0, r0, #3
	ands r0, r1
	cmp r0, #0
	beq _0809E486
_0809E456:
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r6, #0
	movs r1, #1
	bl sub_080A4FBC
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	ldrh r1, [r4, #0x18]
	ldr r0, _0809E490 @ =0x0000FFFE
	ands r0, r1
	movs r2, #0
	ldr r1, _0809E494 @ =0x0000FDFF
	ands r0, r1
	ldr r1, _0809E498 @ =0x0000FBFF
	ands r0, r1
	ldr r1, _0809E49C @ =0x0000EFFF
	ands r0, r1
	strh r0, [r4, #0x18]
	strh r2, [r5]
	bl sub_080A3F3C
_0809E486:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_0809E490: .4byte 0x0000FFFE
_0809E494: .4byte 0x0000FDFF
_0809E498: .4byte 0x0000FBFF
_0809E49C: .4byte 0x0000EFFF

	thumb_func_start sub_0809E4A0
sub_0809E4A0: @ 0x0809E4A0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _0809E504 @ =gUnk_03006B58
	ldr r6, [r0]
	ldr r0, _0809E508 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _0809E50C @ =0x00001EB8
	adds r5, r0, r1
	ldr r2, _0809E510 @ =gUnk_08BD5214
	ldrh r1, [r5, #0x18]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _0809E4C2
	ldr r2, _0809E514 @ =gUnk_08BD5228
_0809E4C2:
	ldrh r0, [r5, #0x1a]
	cmp r0, #2
	beq _0809E4CC
	cmp r0, #4
	bne _0809E4CE
_0809E4CC:
	ldr r2, _0809E518 @ =gUnk_08BD523C
_0809E4CE:
	movs r0, #0
	strh r0, [r5, #0x1c]
	movs r7, #0
	ldrh r0, [r2, #0xe]
	ldrh r1, [r5, #0x16]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r4, [r6, #2]
	ldr r1, _0809E51C @ =0x0000FFFF
	cmp r4, r1
	beq _0809E55A
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r0
	mov sb, r1
_0809E4EE:
	adds r0, r4, #0
	bl sub_080A4EE4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809E520
	adds r0, r4, #0
	bl sub_080A21AC
	subs r0, #0x1b
	b _0809E526
	.align 2, 0
_0809E504: .4byte gUnk_03006B58
_0809E508: .4byte gUnk_03006B54
_0809E50C: .4byte 0x00001EB8
_0809E510: .4byte gUnk_08BD5214
_0809E514: .4byte gUnk_08BD5228
_0809E518: .4byte gUnk_08BD523C
_0809E51C: .4byte 0x0000FFFF
_0809E520:
	adds r0, r4, #0
	bl sub_080A21AC
_0809E526:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r0, #0x10
	asrs r1, r2, #0x10
	cmp r8, r1
	blt _0809E54A
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809E54C
	lsrs r7, r2, #0x10
	movs r0, #0x80
	lsls r0, r0, #1
	adds r1, r0, #0
	adds r0, r4, #0
	orrs r0, r1
	strh r0, [r5, #0x1c]
	b _0809E54C
_0809E54A:
	strh r4, [r5, #0x1c]
_0809E54C:
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r6, r0
	ldrh r4, [r0, #0xc]
	cmp r4, sb
	bne _0809E4EE
_0809E55A:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809E568
sub_0809E568: @ 0x0809E568
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x20
	ldr r0, _0809E6C0 @ =gUnk_03006B54
	ldr r0, [r0]
	mov r8, r0
	ldr r0, _0809E6C4 @ =0x00001F04
	add r0, r8
	mov sb, r0
	movs r0, #0
	str r0, [sp, #0x1c]
	add r0, sp, #0x1c
	ldr r2, _0809E6C8 @ =0x05000029
	mov r1, sb
	bl CpuSet
	movs r0, #0xf1
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	bne _0809E59A
	b _0809E6B0
_0809E59A:
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	movs r1, #7
	bl sub_08001D78
	adds r5, r0, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x14
	bl sub_08010D40
	ldr r0, [sp, #0x10]
	ldr r4, _0809E6CC @ =0x06010400
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r1, #0x80
	lsls r1, r1, #0x13
	orrs r2, r1
	adds r1, r4, #0
	bl CpuSet
	movs r0, #4
	mov r1, sp
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08009334
	movs r5, #0
	ldr r6, _0809E6D0 @ =0x00001F08
	add r6, r8
	ldr r7, _0809E6D4 @ =0x00001F18
	add r7, r8
	ldr r0, _0809E6D8 @ =0x00001F28
	add r8, r0
_0809E5EE:
	lsls r4, r5, #4
	adds r4, #0x34
	add r4, sb
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #4
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #4
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #6
	bls _0809E5EE
	adds r0, r6, #0
	bl CpuClear16Bytes
	adds r0, r6, #0
	movs r1, #4
	bl sub_08009448
	adds r0, r6, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	adds r0, r6, #0
	movs r1, #4
	movs r2, #0xd
	bl sub_08009400
	adds r0, r6, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	adds r0, r7, #0
	bl CpuClear16Bytes
	adds r0, r7, #0
	movs r1, #4
	bl sub_08009448
	adds r0, r7, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	adds r0, r7, #0
	movs r1, #4
	movs r2, #0xe
	bl sub_08009400
	adds r0, r7, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	mov r0, r8
	bl CpuClear16Bytes
	mov r0, r8
	movs r1, #4
	bl sub_08009448
	mov r0, r8
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	mov r0, r8
	movs r1, #4
	movs r2, #0xf
	bl sub_08009400
	mov r0, r8
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
_0809E6B0:
	add sp, #0x20
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809E6C0: .4byte gUnk_03006B54
_0809E6C4: .4byte 0x00001F04
_0809E6C8: .4byte 0x05000029
_0809E6CC: .4byte 0x06010400
_0809E6D0: .4byte 0x00001F08
_0809E6D4: .4byte 0x00001F18
_0809E6D8: .4byte 0x00001F28

	thumb_func_start sub_0809E6DC
sub_0809E6DC: @ 0x0809E6DC
	push {r4, r5, lr}
	movs r0, #0xf1
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	beq _0809E7B6
	ldr r0, _0809E70C @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	beq _0809E7B6
	ldr r0, _0809E710 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _0809E714 @ =0x00001F04
	adds r5, r0, r1
	ldrb r1, [r5, #2]
	cmp r1, #1
	beq _0809E766
	cmp r1, #1
	bgt _0809E718
	cmp r1, #0
	beq _0809E722
	b _0809E7B6
	.align 2, 0
_0809E70C: .4byte 0x000001E1
_0809E710: .4byte gUnk_03006B54
_0809E714: .4byte 0x00001F04
_0809E718:
	cmp r1, #3
	beq _0809E7A4
	cmp r1, #4
	beq _0809E7AA
	b _0809E7B6
_0809E722:
	movs r0, #1
	strb r0, [r5, #2]
	strh r1, [r5]
	movs r4, #1
_0809E72A:
	adds r0, r4, #0
	bl sub_08017CE0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809E748
	lsls r0, r4, #4
	adds r0, #0x34
	adds r0, r5, r0
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
	bl sub_08009400
	b _0809E75A
_0809E748:
	lsls r0, r4, #4
	adds r0, #0x34
	adds r0, r5, r0
	adds r2, r4, #6
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
	bl sub_08009400
_0809E75A:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #6
	bls _0809E72A
	b _0809E7B6
_0809E766:
	movs r4, #1
_0809E768:
	adds r0, r4, #0
	bl sub_08017CE0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _0809E786
	lsls r0, r4, #4
	adds r0, #0x34
	adds r0, r5, r0
	lsls r2, r4, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
	bl sub_08009400
	b _0809E798
_0809E786:
	lsls r0, r4, #4
	adds r0, #0x34
	adds r0, r5, r0
	adds r2, r4, #6
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r1, #4
	bl sub_08009400
_0809E798:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #6
	bls _0809E768
	b _0809E7B6
_0809E7A4:
	movs r0, #0
	strh r0, [r5]
	b _0809E7B6
_0809E7AA:
	ldrh r0, [r5]
	movs r1, #3
	subs r1, r1, r0
	strh r1, [r5]
	movs r0, #1
	strb r0, [r5, #2]
_0809E7B6:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_0809E7BC
sub_0809E7BC: @ 0x0809E7BC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	movs r0, #0xf1
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	bne _0809E7D0
	b _0809EB10
_0809E7D0:
	ldr r0, _0809E810 @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	bne _0809E7DC
	b _0809EB10
_0809E7DC:
	ldr r0, _0809E814 @ =gUnk_03006B54
	ldr r4, [r0]
	ldr r0, _0809E818 @ =0x00001EB8
	adds r0, r0, r4
	mov r8, r0
	ldr r1, _0809E81C @ =0x00001F04
	adds r6, r4, r1
	ldr r0, _0809E820 @ =0x00001F28
	adds r4, r4, r0
	adds r0, r4, #0
	movs r1, #0xec
	movs r2, #4
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	ldrb r0, [r6, #2]
	cmp r0, #4
	bls _0809E806
	b _0809EB10
_0809E806:
	lsls r0, r0, #2
	ldr r1, _0809E824 @ =_0809E828
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809E810: .4byte 0x000001E1
_0809E814: .4byte gUnk_03006B54
_0809E818: .4byte 0x00001EB8
_0809E81C: .4byte 0x00001F04
_0809E820: .4byte 0x00001F28
_0809E824: .4byte _0809E828
_0809E828: @ jump table
	.4byte _0809E83C @ case 0
	.4byte _0809E874 @ case 1
	.4byte _0809E910 @ case 2
	.4byte _0809E9AC @ case 3
	.4byte _0809EA70 @ case 4
_0809E83C:
	mov r1, r8
	ldrb r0, [r1, #0xf]
	lsls r0, r0, #4
	adds r0, #0x34
	adds r0, r6, r0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	mov r1, r8
	ldrb r0, [r1, #0xf]
	lsls r0, r0, #4
	adds r0, #0x34
	adds r0, r6, r0
	bl sub_080093C0
	adds r4, r6, #0
	adds r4, #0x14
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r4, #0
	movs r1, #0xd5
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	b _0809EB10
_0809E874:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #3
	bgt _0809E8FA
	adds r2, r0, #0
	adds r2, #1
	lsls r0, r2, #3
	subs r0, r0, r2
	movs r1, #0xdc
	subs r1, r1, r0
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #3
	subs r1, r1, r0
	subs r1, #7
	adds r4, r6, #0
	adds r4, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r4, #0
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0x94
_0809E8B0:
	movs r1, #0
	ldrsh r3, [r6, r1]
	adds r3, #1
	movs r0, #6
	subs r0, r0, r5
	adds r2, r3, #0
	muls r2, r0, r2
	movs r1, #0xdc
	subs r1, r1, r2
	lsls r0, r0, #2
	muls r0, r3, r0
	subs r1, r1, r0
	lsls r4, r5, #4
	adds r4, #0x34
	adds r4, r6, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #4
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #5
	bls _0809E8B0
	adds r0, r7, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	adds r0, r7, #0
	bl sub_080093C0
_0809E8FA:
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809E9A6
	movs r0, #0
	strh r0, [r6]
	movs r0, #2
	b _0809E9A4
_0809E910:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #3
	bgt _0809E990
	adds r1, r0, #0
	movs r0, #3
	subs r0, r0, r1
	lsls r2, r0, #3
	subs r2, r2, r0
	movs r1, #0x75
	subs r1, r1, r2
	adds r4, r6, #0
	adds r4, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r4, #0
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0x94
	movs r1, #6
	mov r8, r1
_0809E948:
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r0, #3
	subs r0, r0, r1
	mov r1, r8
	subs r2, r1, r5
	muls r0, r2, r0
	movs r1, #0xdc
	subs r1, r1, r0
	lsls r2, r2, #4
	subs r1, r1, r2
	lsls r4, r5, #4
	adds r4, #0x34
	adds r4, r6, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #4
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #5
	bls _0809E948
	adds r0, r7, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	adds r0, r7, #0
	bl sub_080093C0
_0809E990:
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809E9A6
	movs r0, #0
	strh r0, [r6]
	movs r0, #3
_0809E9A4:
	strb r0, [r6, #2]
_0809E9A6:
	movs r0, #0
	strb r0, [r6, #3]
	b _0809EB10
_0809E9AC:
	adds r4, r6, #0
	adds r4, #0x14
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r4, #0
	movs r1, #0x7b
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	movs r5, #0
	adds r7, r6, #4
_0809E9C6:
	lsls r4, r5, #4
	adds r4, #0x34
	adds r4, r6, r4
	movs r1, #0xe2
	subs r1, r1, r5
	movs r0, #6
	subs r0, r0, r5
	lsls r0, r0, #4
	subs r1, r1, r0
	adds r0, r4, #0
	movs r2, #4
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #6
	bls _0809E9C6
	ldrh r0, [r6]
	adds r0, #1
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x3b
	ble _0809EA06
	movs r0, #0
	strh r0, [r6]
	movs r0, #4
	strb r0, [r6, #2]
_0809EA06:
	ldrb r1, [r6, #3]
	adds r0, r1, #1
	strb r0, [r6, #3]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #5
	bhi _0809EA20
	adds r0, r7, #0
	movs r1, #4
	movs r2, #0xd
	bl sub_08009400
	b _0809EA42
_0809EA20:
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bhi _0809EA38
	adds r0, r7, #0
	movs r1, #4
	movs r2, #0x11
	bl sub_08009400
	b _0809EA42
_0809EA38:
	adds r0, r7, #0
	movs r1, #4
	movs r2, #0x10
	bl sub_08009400
_0809EA42:
	ldrb r0, [r6, #3]
	cmp r0, #0x13
	bls _0809EA4C
	movs r0, #0
	strb r0, [r6, #3]
_0809EA4C:
	mov r0, r8
	ldrb r2, [r0, #0xf]
	movs r1, #0xe2
	subs r1, r1, r2
	movs r0, #6
	subs r0, r0, r2
	lsls r0, r0, #4
	subs r1, r1, r0
	subs r1, #8
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r7, #0
	bl sub_080091C4
	adds r0, r7, #0
	bl sub_080093C0
	b _0809EB10
_0809EA70:
	movs r1, #0
	ldrsh r0, [r6, r1]
	cmp r0, #3
	bgt _0809EAF8
	adds r1, r0, #0
	movs r0, #3
	subs r0, r0, r1
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r0, r2, #1
	movs r1, #0xdc
	subs r1, r1, r0
	lsls r2, r2, #3
	subs r1, r1, r2
	subs r1, #7
	adds r4, r6, #0
	adds r4, #0x14
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r2, #4
	rsbs r2, r2, #0
	adds r0, r4, #0
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	movs r5, #0
	adds r7, r6, #0
	adds r7, #0x94
_0809EAAC:
	movs r1, #0
	ldrsh r0, [r6, r1]
	movs r3, #3
	subs r3, r3, r0
	movs r0, #6
	subs r0, r0, r5
	adds r2, r3, #0
	muls r2, r0, r2
	movs r1, #0xdc
	subs r1, r1, r2
	lsls r0, r0, #2
	muls r0, r3, r0
	subs r1, r1, r0
	lsls r4, r5, #4
	adds r4, #0x34
	adds r4, r6, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #4
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #5
	bls _0809EAAC
	adds r0, r7, #0
	movs r1, #0xdc
	movs r2, #4
	bl sub_080091C4
	adds r0, r7, #0
	bl sub_080093C0
_0809EAF8:
	ldrh r0, [r6]
	adds r0, #1
	movs r1, #0
	strh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _0809EB0E
	movs r0, #0
	strh r0, [r6]
	strb r1, [r6, #2]
_0809EB0E:
	strb r1, [r6, #3]
_0809EB10:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809EB1C
sub_0809EB1C: @ 0x0809EB1C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	ldr r0, _0809EBE4 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _0809EBE8 @ =0x0000060C
	adds r0, r0, r2
	mov r8, r0
	movs r0, #0x54
	muls r0, r6, r0
	ldr r3, _0809EBEC @ =0x00000AB8
	adds r0, r0, r3
	adds r5, r2, r0
	lsls r0, r1, #4
	movs r3, #0xcb
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r3, r2, r0
	movs r2, #0
	strh r1, [r5, #0x12]
	movs r0, #1
	strb r0, [r5, #9]
	strb r2, [r5, #0xb]
	ldrh r0, [r3, #2]
	subs r0, #0x28
	lsls r0, r0, #0x10
	movs r1, #0x9b
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _0809EB76
	ldrh r0, [r3, #2]
	movs r1, #0xa
	bl __umodsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809EB76
	movs r0, #9
	strb r0, [r5, #0xb]
_0809EB76:
	movs r0, #0
	strb r0, [r5, #0xc]
	ldr r1, _0809EBF0 @ =0x00000101
	adds r0, r1, #0
	adds r1, r7, #0
	orrs r1, r0
	ldrh r0, [r5, #0xe]
	orrs r1, r0
	movs r0, #0x30
	movs r4, #0
	orrs r1, r0
	strh r1, [r5, #0xe]
	cmp r6, #0
	beq _0809EB9C
	movs r2, #0x80
	lsls r2, r2, #8
	adds r0, r2, #0
	orrs r1, r0
	strh r1, [r5, #0xe]
_0809EB9C:
	movs r0, #2
	ands r0, r7
	cmp r0, #0
	beq _0809EBAA
	adds r0, r6, #0
	bl sub_0809ED68
_0809EBAA:
	strb r4, [r5, #0xd]
	adds r4, r5, #0
	adds r4, #0x44
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #1
	bl sub_08009448
	ldrb r2, [r5, #0xd]
	adds r0, r4, #0
	movs r1, #3
	bl sub_08009400
	movs r0, #0
	adds r1, r6, #0
	bl sub_080A1E68
	mov r3, r8
	ldrb r0, [r3, #3]
	adds r0, #1
	strb r0, [r3, #3]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809EBE4: .4byte gUnk_03006B54
_0809EBE8: .4byte 0x0000060C
_0809EBEC: .4byte 0x00000AB8
_0809EBF0: .4byte 0x00000101

	thumb_func_start sub_0809EBF4
sub_0809EBF4: @ 0x0809EBF4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	mov r8, r3
	ldr r0, _0809ECB4 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _0809ECB8 @ =0x0000060C
	adds r7, r2, r0
	movs r0, #0x54
	muls r0, r3, r0
	ldr r1, _0809ECBC @ =0x00000AB8
	adds r0, r0, r1
	adds r4, r2, r0
	ldrh r1, [r4, #0x18]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0809ECC0 @ =0x00002044
	adds r0, r0, r1
	adds r5, r2, r0
	ldrh r1, [r4, #0xe]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809EC66
	movs r0, #0
	adds r1, r3, #0
	bl sub_080A1F70
	ldrh r0, [r4, #0x14]
	ldr r6, _0809ECC4 @ =0x0000FFFF
	cmp r0, r6
	beq _0809EC40
	bl sub_080A4B7C
_0809EC40:
	ldrh r0, [r4, #0x16]
	cmp r0, r6
	beq _0809EC4A
	bl sub_080A49E8
_0809EC4A:
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	cmp r0, #0
	beq _0809EC60
	movs r0, #0
	mov r1, r8
	movs r2, #0
	bl sub_080A2718
_0809EC60:
	ldrb r0, [r7, #3]
	subs r0, #1
	strb r0, [r7, #3]
_0809EC66:
	ldrh r1, [r4, #0xe]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0809EC86
	ldrb r0, [r5]
	cmp r0, #1
	bne _0809EC86
	ldrb r0, [r5, #1]
	subs r0, #1
	strb r0, [r5, #1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0809EC86
	strb r0, [r5]
_0809EC86:
	movs r0, #0
	str r0, [sp]
	ldr r2, _0809ECC8 @ =0x05000015
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _0809ECC4 @ =0x0000FFFF
	strh r0, [r4, #0x12]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r4, #0x14]
	strh r0, [r4, #0x16]
	adds r0, r4, #0
	adds r0, #0x1c
	bl sub_08009F0C
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809ECB4: .4byte gUnk_03006B54
_0809ECB8: .4byte 0x0000060C
_0809ECBC: .4byte 0x00000AB8
_0809ECC0: .4byte 0x00002044
_0809ECC4: .4byte 0x0000FFFF
_0809ECC8: .4byte 0x05000015

	thumb_func_start sub_0809ECCC
sub_0809ECCC: @ 0x0809ECCC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x1c
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	ldr r0, _0809ED60 @ =gUnk_03006B54
	ldr r4, [r0]
	ldr r0, _0809ED64 @ =0x0000060C
	adds r0, r0, r4
	mov r8, r0
	lsls r0, r6, #4
	movs r5, #0xcb
	lsls r5, r5, #3
	adds r0, r0, r5
	adds r4, r4, r0
	strh r1, [r4, #2]
	strh r2, [r4, #4]
	strh r3, [r4, #6]
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	ldrh r1, [r4, #2]
	bl sub_08001D78
	str r0, [r4, #8]
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	ldrh r1, [r4, #4]
	bl sub_08001D78
	str r0, [r4, #0xc]
	ldr r0, [r4, #8]
	mov r1, sp
	bl sub_08001CBC
	adds r5, r6, #0
	adds r5, #9
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r3, [r4, #8]
	adds r0, r5, #0
	mov r1, sp
	movs r2, #0
	bl sub_08009334
	adds r6, #7
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	ldr r2, [r4, #0xc]
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_0800A630
	ldrh r1, [r4]
	movs r0, #1
	orrs r0, r1
	strh r0, [r4]
	mov r1, r8
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	add sp, #0x1c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809ED60: .4byte gUnk_03006B54
_0809ED64: .4byte 0x0000060C

	thumb_func_start sub_0809ED68
sub_0809ED68: @ 0x0809ED68
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r3, _0809EDC4 @ =gUnk_03006B54
	ldr r2, [r3]
	ldr r1, _0809EDC8 @ =0x0000060C
	adds r1, r2, r1
	str r1, [sp, #0x1c]
	movs r1, #0x54
	muls r0, r1, r0
	ldr r5, _0809EDCC @ =0x00000AB8
	adds r0, r0, r5
	adds r0, r2, r0
	str r0, [sp, #0x20]
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #4
	movs r1, #0xcb
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r0, r2
	mov r8, r0
	ldrh r1, [r0, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0809EDD0 @ =gUnk_08BD505C
	adds r0, r0, r1
	str r0, [sp, #0x24]
	ldr r6, _0809EDD4 @ =0x0000FFFF
	movs r5, #0
	movs r0, #0xf7
	lsls r0, r0, #3
	adds r7, r2, r0
	ldrh r1, [r7, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809EDD8
	movs r6, #0
	b _0809EDFA
	.align 2, 0
_0809EDC4: .4byte gUnk_03006B54
_0809EDC8: .4byte 0x0000060C
_0809EDCC: .4byte 0x00000AB8
_0809EDD0: .4byte gUnk_08BD505C
_0809EDD4: .4byte 0x0000FFFF
_0809EDD8:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0xf
	bhi _0809EDFA
	lsls r0, r5, #2
	movs r1, #0xf7
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r3]
	adds r7, r1, r0
	ldrh r1, [r7, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _0809EDD8
	adds r6, r5, #0
_0809EDFA:
	ldr r2, [sp, #0x24]
	ldrh r1, [r2, #0x10]
	subs r0, r1, #1
	cmp r0, #0
	bge _0809EE06
	adds r0, #0xff
_0809EE06:
	asrs r0, r0, #8
	adds r0, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	movs r1, #0
	ldr r0, [r3]
	movs r5, #0xc3
	lsls r5, r5, #3
	adds r4, r0, r5
	ldrh r0, [r0, #8]
	cmp r0, #0
	beq _0809EE48
	movs r5, #0
	ldr r0, [sp, #0x20]
	adds r0, #0x1c
	str r0, [sp, #0x28]
_0809EE26:
	adds r0, r4, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809EE3A
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r2
	blo _0809EE3C
	b _0809EE62
_0809EE3A:
	movs r1, #0
_0809EE3C:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x17
	bls _0809EE26
	b _0809EE78
_0809EE48:
	movs r5, #0
	ldr r0, [sp, #0x20]
	adds r0, #0x1c
	str r0, [sp, #0x28]
_0809EE50:
	adds r0, r4, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _0809EE6C
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, r2
	blo _0809EE6E
_0809EE62:
	adds r0, r5, #1
	subs r0, r0, r2
	strb r0, [r7]
	strb r5, [r7, #1]
	b _0809EE78
_0809EE6C:
	movs r1, #0
_0809EE6E:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x3f
	bls _0809EE50
_0809EE78:
	ldrb r5, [r7]
	ldrb r0, [r7, #1]
	adds r0, #1
	cmp r5, r0
	bge _0809EE96
	adds r1, r6, #1
_0809EE84:
	adds r0, r4, r5
	strb r1, [r0]
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldrb r0, [r7, #1]
	adds r0, #1
	cmp r5, r0
	blt _0809EE84
_0809EE96:
	ldrh r1, [r7, #2]
	movs r0, #1
	orrs r0, r1
	strh r0, [r7, #2]
	ldr r1, [sp, #0x20]
	strh r6, [r1, #0x14]
	ldr r0, [r3]
	ldr r2, _0809EF24 @ =0x0000211C
	adds r2, r2, r0
	mov sl, r2
	mov r3, r8
	ldr r0, [r3, #8]
	mov r1, sp
	bl sub_08001CBC
	movs r5, #0
_0809EEB6:
	movs r6, #0
	lsls r0, r5, #3
	adds r0, r0, r5
	lsls r0, r0, #2
	mov r2, sl
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _0809EEF0
	movs r3, #0
	adds r4, r1, #4
	ldr r2, [sp, #0x14]
_0809EECE:
	lsls r0, r3, #1
	adds r1, r4, r0
	adds r0, r0, r2
	ldrh r1, [r1]
	ldrh r0, [r0]
	cmp r1, r0
	bne _0809EEEC
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0xf
	bls _0809EECE
_0809EEEC:
	cmp r6, #0x10
	beq _0809EEFE
_0809EEF0:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #9
	bls _0809EEB6
	cmp r6, #0x10
	bne _0809EF28
_0809EEFE:
	lsls r4, r5, #3
	adds r4, r4, r5
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #4
	adds r1, r5, #0
	adds r1, #0x16
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r2, #1
	bl sub_08010D40
	ldrb r0, [r4, #1]
	adds r0, #1
	strb r0, [r4, #1]
	adds r0, r5, #6
	ldr r3, [sp, #0x20]
	strh r0, [r3, #0x18]
	b _0809EF8E
	.align 2, 0
_0809EF24: .4byte 0x0000211C
_0809EF28:
	movs r5, #0
_0809EF2A:
	lsls r0, r5, #3
	adds r1, r0, r5
	lsls r1, r1, #2
	mov r3, sl
	adds r2, r1, r3
	ldrb r1, [r2]
	mov r8, r0
	cmp r1, #0
	bne _0809EF84
	movs r3, #0
	adds r6, r5, #0
	adds r6, #0x16
	adds r0, r5, #6
	mov sb, r0
	adds r4, r2, #4
_0809EF48:
	lsls r1, r3, #1
	adds r2, r4, r1
	ldr r0, [sp, #0x14]
	adds r1, r1, r0
	ldrh r0, [r1]
	strh r0, [r2]
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0xf
	bls _0809EF48
	ldr r0, [sp, #0x14]
	lsls r1, r6, #0x10
	lsrs r1, r1, #0x10
	movs r2, #1
	bl sub_08010D40
	mov r2, r8
	adds r1, r2, r5
	lsls r1, r1, #2
	add r1, sl
	movs r0, #1
	strb r0, [r1]
	ldrb r0, [r1, #1]
	adds r0, #1
	strb r0, [r1, #1]
	mov r5, sb
	ldr r3, [sp, #0x20]
	strh r5, [r3, #0x18]
	b _0809EF8E
_0809EF84:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #9
	bls _0809EF2A
_0809EF8E:
	ldr r0, _0809EFC0 @ =gUnk_03006B54
	ldr r0, [r0]
	ldrh r0, [r0, #8]
	cmp r0, #0
	beq _0809EFC8
	ldrb r0, [r7, #1]
	adds r0, #1
	lsls r0, r0, #8
	ldr r1, _0809EFC4 @ =0x06015000
	subs r4, r1, r0
	ldr r0, [sp, #0x20]
	ldrb r1, [r0, #0x18]
	ldr r0, [sp, #0x28]
	movs r2, #1
	bl sub_0800A6C0
	ldr r1, [sp, #0x24]
	ldrh r3, [r1, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #1
	adds r2, r4, #0
	bl sub_0800A6F0
	b _0809EFEC
	.align 2, 0
_0809EFC0: .4byte gUnk_03006B54
_0809EFC4: .4byte 0x06015000
_0809EFC8:
	ldrb r0, [r7, #1]
	adds r0, #1
	lsls r0, r0, #8
	ldr r1, _0809F004 @ =0x06017800
	subs r4, r1, r0
	ldr r2, [sp, #0x20]
	ldrb r1, [r2, #0x18]
	ldr r0, [sp, #0x28]
	movs r2, #1
	bl sub_0800A6C0
	ldr r5, [sp, #0x24]
	ldrh r3, [r5, #0x10]
	ldr r0, [sp, #0x28]
	movs r1, #1
	adds r2, r4, #0
	bl sub_0800A6F0
_0809EFEC:
	ldr r1, [sp, #0x1c]
	ldrb r0, [r1, #1]
	adds r0, #1
	strb r0, [r1, #1]
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809F004: .4byte 0x06017800

	thumb_func_start sub_0809F008
sub_0809F008: @ 0x0809F008
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r1, _0809F038 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r5, r0
	ldr r2, _0809F03C @ =0x00000AB8
	adds r0, r0, r2
	ldr r2, [r1]
	adds r4, r2, r0
	ldrh r3, [r4, #0xe]
	movs r0, #4
	ands r0, r3
	cmp r0, #0
	beq _0809F044
	ldrh r1, [r4, #0x14]
	ldr r0, _0809F040 @ =0x0000FFFF
	cmp r1, r0
	bne _0809F0D2
	adds r0, r5, #0
	bl sub_0809ED68
	b _0809F0D2
	.align 2, 0
_0809F038: .4byte gUnk_03006B54
_0809F03C: .4byte 0x00000AB8
_0809F040: .4byte 0x0000FFFF
_0809F044:
	ldrh r1, [r4, #0x14]
	ldr r0, _0809F0DC @ =0x0000FFFF
	cmp r1, r0
	beq _0809F0D2
	movs r0, #2
	ands r0, r3
	cmp r0, #0
	bne _0809F0D2
	adds r0, r1, #0
	ldr r1, _0809F0E0 @ =0x0000060C
	adds r6, r2, r1
	lsls r0, r0, #2
	movs r1, #0xf7
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r3, r2, r0
	ldrh r1, [r3, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809F098
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r1, r2, r0
	ldrb r2, [r3]
	ldrb r0, [r3, #1]
	adds r0, #1
	cmp r2, r0
	bge _0809F092
	movs r5, #0
_0809F080:
	adds r0, r1, r2
	strb r5, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrb r0, [r3, #1]
	adds r0, #1
	cmp r2, r0
	blt _0809F080
_0809F092:
	ldrb r0, [r6, #1]
	subs r0, #1
	strb r0, [r6, #1]
_0809F098:
	movs r0, #0
	str r0, [sp]
	mov r0, sp
	adds r1, r3, #0
	ldr r2, _0809F0E4 @ =0x05000001
	bl CpuSet
	ldr r0, _0809F0DC @ =0x0000FFFF
	strh r0, [r4, #0x14]
	ldr r2, _0809F0E8 @ =gUnk_03006B54
	ldrh r1, [r4, #0x18]
	lsls r0, r1, #3
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0809F0EC @ =0x00002044
	adds r0, r0, r1
	ldr r1, [r2]
	adds r1, r1, r0
	ldrb r0, [r1]
	cmp r0, #1
	bne _0809F0D2
	ldrb r0, [r1, #1]
	subs r0, #1
	strb r0, [r1, #1]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	bne _0809F0D2
	strb r0, [r1]
_0809F0D2:
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809F0DC: .4byte 0x0000FFFF
_0809F0E0: .4byte 0x0000060C
_0809F0E4: .4byte 0x05000001
_0809F0E8: .4byte gUnk_03006B54
_0809F0EC: .4byte 0x00002044

	thumb_func_start sub_0809F0F0
sub_0809F0F0: @ 0x0809F0F0
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r5, _0809F140 @ =gUnk_03006B54
	movs r4, #0x54
	adds r1, r0, #0
	muls r1, r4, r1
	ldr r3, _0809F144 @ =0x00000AB8
	adds r1, r1, r3
	ldr r2, [r5]
	adds r1, r2, r1
	adds r0, r6, #0
	muls r0, r4, r0
	adds r0, r0, r3
	adds r3, r2, r0
	ldrh r2, [r1]
	ldrh r0, [r3, #4]
	subs r2, r2, r0
	ldrh r0, [r1, #2]
	ldrh r1, [r3, #6]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	cmp r2, #0
	bge _0809F150
	rsbs r2, r2, #0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, #0
	cmp r0, #0
	bge _0809F138
	rsbs r1, r0, #0
_0809F138:
	cmp r2, r1
	ble _0809F148
	movs r0, #2
	b _0809F16E
	.align 2, 0
_0809F140: .4byte gUnk_03006B54
_0809F144: .4byte 0x00000AB8
_0809F148:
	cmp r0, #0
	bge _0809F16C
	movs r0, #3
	b _0809F16E
_0809F150:
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r0, #0
	cmp r0, #0
	bge _0809F15C
	rsbs r1, r0, #0
_0809F15C:
	cmp r2, r1
	ble _0809F164
	movs r0, #4
	b _0809F16E
_0809F164:
	cmp r0, #0
	bge _0809F16C
	movs r0, #3
	b _0809F16E
_0809F16C:
	movs r0, #1
_0809F16E:
	strb r0, [r3, #9]
	ldrb r4, [r3, #9]
	ldr r2, [r5]
	ldr r1, _0809F190 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809F194 @ =0x00000AB8
	adds r0, r0, r1
	adds r2, r2, r0
	cmp r4, #5
	beq _0809F198
	cmp r4, #6
	beq _0809F19C
	b _0809F1A6
	.align 2, 0
_0809F190: .4byte 0x00001EB8
_0809F194: .4byte 0x00000AB8
_0809F198:
	ldrb r4, [r2, #9]
	b _0809F1A6
_0809F19C:
	ldrb r0, [r2, #9]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	adds r4, r0, #1
_0809F1A6:
	movs r0, #0x54
	muls r0, r6, r0
	ldr r1, _0809F1D0 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r5]
	adds r2, r1, r0
	strb r4, [r2, #9]
	ldrh r0, [r2, #0xe]
	ldr r3, _0809F1D4 @ =0x0000FFBF
	ands r3, r0
	strh r3, [r2, #0xe]
	cmp r4, #4
	bne _0809F1C8
	movs r1, #0x40
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #0xe]
_0809F1C8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809F1D0: .4byte 0x00000AB8
_0809F1D4: .4byte 0x0000FFBF

	thumb_func_start sub_0809F1D8
sub_0809F1D8: @ 0x0809F1D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	movs r0, #0
	mov sl, r0
	mov r8, r0
	movs r6, #0
	movs r1, #0
	str r1, [sp]
_0809F1F0:
	ldr r1, _0809F250 @ =gUnk_03006B54
	movs r0, #0x54
	ldr r2, [sp]
	muls r0, r2, r0
	ldr r3, _0809F254 @ =0x00000AB8
	adds r0, r0, r3
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0809F20E
	b _0809F510
_0809F20E:
	ldrb r0, [r4, #8]
	movs r1, #0xf0
	ands r1, r0
	cmp r1, #0
	beq _0809F21A
	b _0809F370
_0809F21A:
	movs r5, #4
	ldrsh r1, [r4, r5]
	movs r7, #0
	ldrsh r0, [r4, r7]
	ldrh r2, [r4, #4]
	mov sb, r2
	ldrh r3, [r4]
	mov ip, r3
	ldrh r7, [r4, #6]
	mov r5, sp
	strh r7, [r5, #4]
	ldrh r5, [r4, #2]
	cmp r1, r0
	beq _0809F28C
	mov r0, sp
	ldrh r0, [r0, #4]
	cmp r0, r5
	beq _0809F28C
	ldrb r0, [r4, #8]
	cmp r0, #4
	bhi _0809F2D0
	lsls r0, r0, #2
	ldr r1, _0809F258 @ =_0809F25C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809F250: .4byte gUnk_03006B54
_0809F254: .4byte 0x00000AB8
_0809F258: .4byte _0809F25C
_0809F25C: @ jump table
	.4byte _0809F270 @ case 0
	.4byte _0809F276 @ case 1
	.4byte _0809F27C @ case 2
	.4byte _0809F282 @ case 3
	.4byte _0809F288 @ case 4
_0809F270:
	movs r1, #6
	mov sl, r1
	b _0809F2D0
_0809F276:
	movs r2, #0xc
	mov sl, r2
	b _0809F2D0
_0809F27C:
	movs r3, #0x18
	mov sl, r3
	b _0809F2D0
_0809F282:
	movs r7, #0x20
	mov sl, r7
	b _0809F2D0
_0809F288:
	movs r0, #0x30
	b _0809F2CE
_0809F28C:
	ldrb r0, [r4, #8]
	cmp r0, #4
	bhi _0809F2D0
	lsls r0, r0, #2
	ldr r1, _0809F29C @ =_0809F2A0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809F29C: .4byte _0809F2A0
_0809F2A0: @ jump table
	.4byte _0809F2B4 @ case 0
	.4byte _0809F2BA @ case 1
	.4byte _0809F2C0 @ case 2
	.4byte _0809F2C6 @ case 3
	.4byte _0809F2CC @ case 4
_0809F2B4:
	movs r1, #8
	mov sl, r1
	b _0809F2D0
_0809F2BA:
	movs r2, #0x10
	mov sl, r2
	b _0809F2D0
_0809F2C0:
	movs r3, #0x20
	mov sl, r3
	b _0809F2D0
_0809F2C6:
	movs r7, #0x30
	mov sl, r7
	b _0809F2D0
_0809F2CC:
	movs r0, #0x40
_0809F2CE:
	mov sl, r0
_0809F2D0:
	mov r3, sb
	mov r2, ip
	lsls r0, r3, #0x10
	asrs r1, r0, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F2F2
	mov r7, sl
	adds r0, r2, r7
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0809F30A
	strh r3, [r4]
	b _0809F30A
_0809F2F2:
	cmp r1, r0
	bge _0809F30A
	mov r2, ip
	mov r3, sl
	subs r0, r2, r3
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F30A
	mov r7, sb
	strh r7, [r4]
_0809F30A:
	mov r0, sp
	ldrh r3, [r0, #4]
	adds r2, r5, #0
	lsls r0, r3, #0x10
	asrs r1, r0, #0x10
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F32E
	mov r5, sl
	adds r0, r2, r5
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0809F346
	strh r3, [r4, #2]
	b _0809F346
_0809F32E:
	cmp r1, r0
	bge _0809F346
	mov r7, sl
	subs r0, r5, r7
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F346
	mov r0, sp
	ldrh r0, [r0, #4]
	strh r0, [r4, #2]
_0809F346:
	ldr r0, [sp]
	bl sub_0809F534
	movs r0, #0
	ldr r1, [sp]
	bl sub_080A2004
	movs r0, #0
	ldr r1, [sp]
	bl sub_080A2570
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r1, #0x14
	asrs r0, r0, #0x14
	cmp r1, r0
	beq _0809F36E
	b _0809F510
_0809F36E:
	b _0809F4F8
_0809F370:
	cmp r1, #0x40
	beq _0809F3CC
	cmp r1, #0x40
	bgt _0809F38C
	cmp r1, #0x20
	beq _0809F3B0
	cmp r1, #0x20
	bgt _0809F386
	cmp r1, #0x10
	beq _0809F3A4
	b _0809F402
_0809F386:
	cmp r1, #0x30
	beq _0809F3BC
	b _0809F402
_0809F38C:
	cmp r1, #0x60
	beq _0809F3E8
	cmp r1, #0x60
	bgt _0809F39A
	cmp r1, #0x50
	beq _0809F3DC
	b _0809F402
_0809F39A:
	cmp r1, #0x70
	beq _0809F3F4
	cmp r1, #0x80
	beq _0809F3FC
	b _0809F402
_0809F3A4:
	movs r1, #8
	mov r8, r1
	ldr r6, _0809F3AC @ =0x0000FFFC
	b _0809F402
	.align 2, 0
_0809F3AC: .4byte 0x0000FFFC
_0809F3B0:
	movs r2, #4
	mov r8, r2
	ldr r6, _0809F3B8 @ =0x0000FFF8
	b _0809F402
	.align 2, 0
_0809F3B8: .4byte 0x0000FFF8
_0809F3BC:
	ldr r3, _0809F3C4 @ =0x0000FFFC
	mov r8, r3
	ldr r6, _0809F3C8 @ =0x0000FFF8
	b _0809F402
	.align 2, 0
_0809F3C4: .4byte 0x0000FFFC
_0809F3C8: .4byte 0x0000FFF8
_0809F3CC:
	ldr r5, _0809F3D4 @ =0x0000FFF8
	mov r8, r5
	ldr r6, _0809F3D8 @ =0x0000FFFC
	b _0809F402
	.align 2, 0
_0809F3D4: .4byte 0x0000FFF8
_0809F3D8: .4byte 0x0000FFFC
_0809F3DC:
	ldr r7, _0809F3E4 @ =0x0000FFF8
	mov r8, r7
	b _0809F400
	.align 2, 0
_0809F3E4: .4byte 0x0000FFF8
_0809F3E8:
	ldr r1, _0809F3F0 @ =0x0000FFFC
	mov r8, r1
	movs r6, #8
	b _0809F402
	.align 2, 0
_0809F3F0: .4byte 0x0000FFFC
_0809F3F4:
	movs r2, #4
	mov r8, r2
	movs r6, #8
	b _0809F402
_0809F3FC:
	movs r3, #8
	mov r8, r3
_0809F400:
	movs r6, #4
_0809F402:
	movs r1, #0xf
	ands r1, r0
	cmp r1, #2
	beq _0809F42A
	cmp r1, #2
	bgt _0809F414
	cmp r1, #1
	beq _0809F41E
	b _0809F45E
_0809F414:
	cmp r1, #3
	beq _0809F436
	cmp r1, #4
	beq _0809F452
	b _0809F45E
_0809F41E:
	mov r5, r8
	lsls r0, r5, #0x11
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r6, #0x11
	b _0809F45C
_0809F42A:
	mov r7, r8
	lsls r0, r7, #0x12
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r6, #0x12
	b _0809F45C
_0809F436:
	mov r0, r8
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x11
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0x11
	b _0809F45C
_0809F452:
	mov r1, r8
	lsls r0, r1, #0x13
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r6, #0x13
_0809F45C:
	lsrs r6, r0, #0x10
_0809F45E:
	ldrh r3, [r4, #4]
	movs r2, #4
	ldrsh r1, [r4, r2]
	ldrh r2, [r4]
	movs r5, #0
	ldrsh r0, [r4, r5]
	cmp r1, r0
	ble _0809F482
	mov r7, r8
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0809F49A
	b _0809F498
_0809F482:
	cmp r1, r0
	bge _0809F49A
	mov r5, r8
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F49A
_0809F498:
	strh r3, [r4]
_0809F49A:
	ldrh r3, [r4, #6]
	movs r7, #6
	ldrsh r1, [r4, r7]
	ldrh r2, [r4, #2]
	movs r5, #2
	ldrsh r0, [r4, r5]
	cmp r1, r0
	ble _0809F4BC
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bge _0809F4D2
	b _0809F4D0
_0809F4BC:
	cmp r1, r0
	bge _0809F4D2
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r0, r0, r2
	strh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	ble _0809F4D2
_0809F4D0:
	strh r3, [r4, #2]
_0809F4D2:
	ldr r0, [sp]
	bl sub_0809F534
	movs r0, #0
	ldr r1, [sp]
	bl sub_080A2004
	movs r0, #0
	ldr r1, [sp]
	bl sub_080A2570
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	ldrh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r1, r1, #0x14
	asrs r0, r0, #0x14
	cmp r1, r0
	beq _0809F508
_0809F4F8:
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	ldrh r0, [r4, #6]
	lsls r0, r0, #0x10
	asrs r1, r1, #0x14
	asrs r0, r0, #0x14
	cmp r1, r0
	bne _0809F510
_0809F508:
	ldrh r1, [r4, #0xe]
	ldr r0, _0809F530 @ =0x0000DFFF
	ands r0, r1
	strh r0, [r4, #0xe]
_0809F510:
	ldr r0, [sp]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	cmp r0, #0x1f
	bhi _0809F520
	b _0809F1F0
_0809F520:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809F530: .4byte 0x0000DFFF

	thumb_func_start sub_0809F534
sub_0809F534: @ 0x0809F534
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r2, _0809F56C @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r5, r0
	ldr r1, _0809F570 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r2]
	adds r3, r1, r0
	ldrh r1, [r3, #0xe]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	adds r6, r2, #0
	cmp r0, #0
	bne _0809F558
	b _0809F678
_0809F558:
	movs r0, #5
	movs r4, #2
	ldrsh r2, [r3, r4]
	movs r4, #6
	ldrsh r1, [r3, r4]
	cmp r2, r1
	bge _0809F574
	movs r0, #2
	b _0809F57A
	.align 2, 0
_0809F56C: .4byte gUnk_03006B54
_0809F570: .4byte 0x00000AB8
_0809F574:
	cmp r2, r1
	ble _0809F57A
	movs r0, #8
_0809F57A:
	movs r1, #0
	ldrsh r2, [r3, r1]
	movs r4, #4
	ldrsh r1, [r3, r4]
	cmp r2, r1
	bge _0809F58A
	adds r0, #1
	b _0809F590
_0809F58A:
	cmp r2, r1
	ble _0809F594
	subs r0, #1
_0809F590:
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_0809F594:
	cmp r0, #5
	beq _0809F678
	subs r0, #1
	cmp r0, #8
	bhi _0809F622
	lsls r0, r0, #2
	ldr r1, _0809F5A8 @ =_0809F5AC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809F5A8: .4byte _0809F5AC
_0809F5AC: @ jump table
	.4byte _0809F5D0 @ case 0
	.4byte _0809F5E2 @ case 1
	.4byte _0809F5E6 @ case 2
	.4byte _0809F5F6 @ case 3
	.4byte _0809F622 @ case 4
	.4byte _0809F61E @ case 5
	.4byte _0809F5FA @ case 6
	.4byte _0809F60C @ case 7
	.4byte _0809F610 @ case 8
_0809F5D0:
	ldrb r0, [r3, #9]
	cmp r0, #4
	bne _0809F5DA
	movs r0, #1
	b _0809F620
_0809F5DA:
	cmp r0, #3
	bne _0809F622
	movs r0, #2
	b _0809F620
_0809F5E2:
	movs r0, #1
	b _0809F620
_0809F5E6:
	ldrb r0, [r3, #9]
	cmp r0, #2
	bne _0809F5F0
	movs r0, #1
	b _0809F620
_0809F5F0:
	cmp r0, #3
	bne _0809F622
	b _0809F61E
_0809F5F6:
	movs r0, #2
	b _0809F620
_0809F5FA:
	ldrb r0, [r3, #9]
	cmp r0, #4
	bne _0809F604
	movs r0, #3
	b _0809F620
_0809F604:
	cmp r0, #1
	bne _0809F622
	movs r0, #2
	b _0809F620
_0809F60C:
	movs r0, #3
	b _0809F620
_0809F610:
	ldrb r0, [r3, #9]
	cmp r0, #2
	bne _0809F61A
	movs r0, #3
	b _0809F620
_0809F61A:
	cmp r0, #1
	bne _0809F622
_0809F61E:
	movs r0, #4
_0809F620:
	strb r0, [r3, #9]
_0809F622:
	ldrb r4, [r3, #9]
	ldr r2, [r6]
	ldr r1, _0809F640 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809F644 @ =0x00000AB8
	adds r0, r0, r1
	adds r2, r2, r0
	cmp r4, #5
	beq _0809F648
	cmp r4, #6
	beq _0809F64C
	b _0809F656
	.align 2, 0
_0809F640: .4byte 0x00001EB8
_0809F644: .4byte 0x00000AB8
_0809F648:
	ldrb r4, [r2, #9]
	b _0809F656
_0809F64C:
	ldrb r0, [r2, #9]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	adds r4, r0, #1
_0809F656:
	movs r0, #0x54
	muls r0, r5, r0
	ldr r1, _0809F680 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r6]
	adds r2, r1, r0
	strb r4, [r2, #9]
	ldrh r0, [r2, #0xe]
	ldr r3, _0809F684 @ =0x0000FFBF
	ands r3, r0
	strh r3, [r2, #0xe]
	cmp r4, #4
	bne _0809F678
	movs r1, #0x40
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #0xe]
_0809F678:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_0809F680: .4byte 0x00000AB8
_0809F684: .4byte 0x0000FFBF

	thumb_func_start sub_0809F688
sub_0809F688: @ 0x0809F688
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _0809F6B0 @ =gUnk_03006B54
	movs r1, #0x54
	muls r0, r1, r0
	ldr r1, _0809F6B4 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r2]
	adds r1, r1, r0
	ldrb r2, [r1, #0xb]
	ldrb r0, [r1, #9]
	cmp r0, #2
	beq _0809F6F8
	cmp r0, #2
	bgt _0809F6B8
	cmp r0, #1
	beq _0809F6E0
	b _0809F72C
	.align 2, 0
_0809F6B0: .4byte gUnk_03006B54
_0809F6B4: .4byte 0x00000AB8
_0809F6B8:
	cmp r0, #3
	beq _0809F6C2
	cmp r0, #4
	beq _0809F714
	b _0809F72C
_0809F6C2:
	adds r0, r2, #1
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrh r3, [r1, #0xe]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0809F72C
	ldr r0, _0809F6DC @ =0x0000FFBF
	ands r0, r3
	b _0809F72A
	.align 2, 0
_0809F6DC: .4byte 0x0000FFBF
_0809F6E0:
	ldrh r3, [r1, #0xe]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0809F72C
	ldr r0, _0809F6F4 @ =0x0000FFBF
	ands r0, r3
	b _0809F72A
	.align 2, 0
_0809F6F4: .4byte 0x0000FFBF
_0809F6F8:
	adds r0, r2, #2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrh r3, [r1, #0xe]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0809F72C
	ldr r0, _0809F710 @ =0x0000FFBF
	ands r0, r3
	b _0809F72A
	.align 2, 0
_0809F710: .4byte 0x0000FFBF
_0809F714:
	adds r0, r2, #2
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrh r3, [r1, #0xe]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r3
	cmp r0, #0
	beq _0809F72C
	movs r0, #0x40
	orrs r0, r3
_0809F72A:
	strh r0, [r1, #0xe]
_0809F72C:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_0809F734
sub_0809F734: @ 0x0809F734
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	adds r5, r3, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r7, r2, #0x10
	ldr r0, _0809F7BC @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _0809F7C0 @ =0x00001EB8
	adds r0, r0, r1
	mov r8, r0
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _0809F7C4 @ =0x00000AB8
	adds r0, r0, r2
	adds r4, r1, r0
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	cmp r0, #0
	beq _0809F772
	movs r0, #0
	adds r1, r3, #0
	movs r2, #0
	bl sub_080A2718
_0809F772:
	lsls r0, r6, #0x10
	asrs r3, r0, #0xc
	strh r3, [r4]
	lsls r0, r7, #0x10
	asrs r2, r0, #0xc
	strh r2, [r4, #2]
	ldrh r1, [r4, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	bne _0809F78E
	strh r3, [r4, #4]
	strh r2, [r4, #6]
_0809F78E:
	movs r0, #0
	adds r1, r5, #0
	bl sub_080A2004
	movs r0, #0
	adds r1, r5, #0
	bl sub_080A2570
	mov r1, r8
	ldrh r0, [r1, #4]
	cmp r0, r5
	beq _0809F7B0
	movs r0, #0
	adds r1, r5, #0
	movs r2, #1
	bl sub_080A2718
_0809F7B0:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809F7BC: .4byte gUnk_03006B54
_0809F7C0: .4byte 0x00001EB8
_0809F7C4: .4byte 0x00000AB8

	thumb_func_start sub_0809F7C8
sub_0809F7C8: @ 0x0809F7C8
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r0, _0809F81C @ =gUnk_03006B54
	ldr r4, [r0]
	ldr r2, _0809F820 @ =0x00001EB8
	adds r0, r4, r2
	ldrh r0, [r0, #4]
	cmp r0, r1
	beq _0809F860
	movs r0, #0x54
	muls r0, r1, r0
	ldr r2, _0809F824 @ =0x00000AB8
	adds r0, r0, r2
	adds r2, r4, r0
	ldr r0, _0809F828 @ =0x0000060C
	adds r3, r4, r0
	ldrb r0, [r3, #9]
	cmp r0, r1
	bne _0809F860
	ldrh r1, [r2, #0xe]
	movs r0, #0x80
	lsls r0, r0, #8
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0
	beq _0809F83E
	ldrb r5, [r2, #0xa]
	cmp r5, #0
	beq _0809F860
	ldrh r1, [r4]
	movs r0, #4
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _0809F82C
	movs r0, #0
	strb r5, [r2, #9]
	strb r0, [r2, #0xc]
	b _0809F860
	.align 2, 0
_0809F81C: .4byte gUnk_03006B54
_0809F820: .4byte 0x00001EB8
_0809F824: .4byte 0x00000AB8
_0809F828: .4byte 0x0000060C
_0809F82C:
	ldrb r0, [r3, #7]
	strb r0, [r2, #9]
	ldrb r0, [r3, #8]
	subs r0, #1
	strb r0, [r2, #0xb]
	strb r1, [r3, #7]
	strb r1, [r3, #8]
	strb r1, [r2, #0xa]
	b _0809F85E
_0809F83E:
	ldrb r5, [r3, #8]
	cmp r5, #0
	beq _0809F860
	ldrh r1, [r4]
	movs r0, #4
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _0809F856
	strb r6, [r2, #0xc]
	b _0809F860
_0809F856:
	subs r0, r5, #1
	strb r0, [r2, #0xb]
	strb r1, [r2, #0xc]
	strb r1, [r3, #8]
_0809F85E:
	strb r1, [r3, #9]
_0809F860:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_0809F868
sub_0809F868: @ 0x0809F868
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	mov sl, r6
	ldr r1, _0809F8B4 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _0809F8B8 @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	ldrh r1, [r5, #0x1a]
	lsls r0, r1, #0x14
	lsrs r4, r0, #0x16
	mov r8, r4
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	cmp r0, #0
	beq _0809F910
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #0
	beq _0809F8EC
	cmp r4, #5
	bhi _0809F8BC
	adds r0, r1, #1
	b _0809F948
	.align 2, 0
_0809F8B4: .4byte gUnk_03006B54
_0809F8B8: .4byte 0x00000AB8
_0809F8BC:
	cmp r4, #0x14
	bhi _0809F8D2
	adds r0, r6, #0
	movs r1, #1
	bl sub_080A49A4
	subs r1, r4, #5
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r1, #0
	b _0809F940
_0809F8D2:
	ldrh r0, [r5, #0xe]
	ldr r1, _0809F8E8 @ =0x0000F7FF
	ands r1, r0
	movs r4, #0
	strh r1, [r5, #0xe]
	adds r0, r6, #0
	movs r1, #0
	bl sub_080A49A4
	strh r4, [r5, #0x1a]
	b _0809F9B6
	.align 2, 0
_0809F8E8: .4byte 0x0000F7FF
_0809F8EC:
	cmp r4, #0xe
	bhi _0809F8F6
	adds r0, r4, #0
	adds r1, r4, #0
	b _0809F990
_0809F8F6:
	movs r0, #0xf
	movs r1, #0xf
	bl sub_08004828
	ldrh r1, [r5, #0xe]
	ldr r0, _0809F90C @ =0x0000F7FF
	ands r0, r1
	strh r0, [r5, #0xe]
	adds r0, r6, #0
	b _0809F9AE
	.align 2, 0
_0809F90C: .4byte 0x0000F7FF
_0809F910:
	adds r0, r6, #0
	movs r1, #1
	bl sub_080A49A4
	ldrh r1, [r5, #0x1a]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #0
	beq _0809F980
	cmp r4, #0xe
	bhi _0809F938
	movs r1, #0xf
	subs r1, r1, r4
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r1, #0
	b _0809F940
_0809F938:
	cmp r4, #0x14
	bhi _0809F966
	movs r0, #0
	movs r1, #0
_0809F940:
	bl sub_08004828
	ldrh r0, [r5, #0x1a]
	adds r0, #1
_0809F948:
	strh r0, [r5, #0x1a]
	movs r1, #3
	ands r0, r1
	cmp r0, #3
	bne _0809F9B6
	ldrb r0, [r5, #9]
	adds r0, #1
	strb r0, [r5, #9]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _0809F9B6
	movs r0, #1
	strb r0, [r5, #9]
	b _0809F9B6
_0809F966:
	ldrh r1, [r5, #0xe]
	ldr r0, _0809F97C @ =0x0000F7FF
	ands r0, r1
	strh r0, [r5, #0xe]
	adds r0, r6, #0
	movs r1, #0
	bl sub_080A49A4
	mov r0, sb
	strh r0, [r5, #0x1a]
	b _0809F9B6
	.align 2, 0
_0809F97C: .4byte 0x0000F7FF
_0809F980:
	mov r2, r8
	cmp r2, #0xe
	bhi _0809F99C
	movs r1, #0xf
	subs r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r1, #0
_0809F990:
	bl sub_08004828
	ldrh r0, [r5, #0x1a]
	adds r0, #1
	strh r0, [r5, #0x1a]
	b _0809F9B6
_0809F99C:
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	ldrh r1, [r5, #0xe]
	ldr r0, _0809F9C4 @ =0x0000F7FF
	ands r0, r1
	strh r0, [r5, #0xe]
	mov r0, sl
_0809F9AE:
	movs r1, #0
	bl sub_080A49A4
	strh r7, [r5, #0x1a]
_0809F9B6:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_0809F9C4: .4byte 0x0000F7FF

	thumb_func_start sub_0809F9C8
sub_0809F9C8: @ 0x0809F9C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r4, _0809FA60 @ =gUnk_03006B54
	ldr r2, [r4]
	ldr r1, _0809FA64 @ =0x0000060C
	adds r1, r1, r2
	mov sl, r1
	movs r1, #0x54
	muls r0, r1, r0
	ldr r1, _0809FA68 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r0, r2
	mov r8, r0
	movs r6, #0
	movs r3, #0xff
	lsls r3, r3, #3
	adds r5, r2, r3
	ldrh r1, [r5]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809FA28
	adds r7, r4, #0
	movs r2, #0x2c
	movs r4, #1
_0809FA0A:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #0xf
	bhi _0809FA28
	adds r0, r6, #0
	muls r0, r2, r0
	adds r0, r0, r3
	ldr r1, [r7]
	adds r5, r1, r0
	ldrh r1, [r5]
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _0809FA0A
_0809FA28:
	adds r4, r5, #4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #3
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	bl sub_0800A6C4
	mov r0, r8
	strh r6, [r0, #0x16]
	mov r1, sb
	strb r1, [r5, #2]
	ldrh r1, [r5]
	movs r0, #1
	orrs r0, r1
	strh r0, [r5]
	ldrb r0, [r5, #2]
	subs r0, #2
	cmp r0, #0xe
	bhi _0809FAF6
	lsls r0, r0, #2
	ldr r1, _0809FA6C @ =_0809FA70
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_0809FA60: .4byte gUnk_03006B54
_0809FA64: .4byte 0x0000060C
_0809FA68: .4byte 0x00000AB8
_0809FA6C: .4byte _0809FA70
_0809FA70: @ jump table
	.4byte _0809FAAC @ case 0
	.4byte _0809FAB2 @ case 1
	.4byte _0809FABC @ case 2
	.4byte _0809FAC2 @ case 3
	.4byte _0809FACC @ case 4
	.4byte _0809FAD2 @ case 5
	.4byte _0809FADC @ case 6
	.4byte _0809FAEC @ case 7
	.4byte _0809FAAC @ case 8
	.4byte _0809FAB2 @ case 9
	.4byte _0809FABC @ case 10
	.4byte _0809FAC2 @ case 11
	.4byte _0809FACC @ case 12
	.4byte _0809FAD2 @ case 13
	.4byte _0809FADC @ case 14
_0809FAAC:
	movs r0, #0x80
	lsls r0, r0, #1
	b _0809FADE
_0809FAB2:
	ldr r0, _0809FAB8 @ =0x00000101
	b _0809FADE
	.align 2, 0
_0809FAB8: .4byte 0x00000101
_0809FABC:
	movs r0, #0x81
	lsls r0, r0, #1
	b _0809FADE
_0809FAC2:
	ldr r0, _0809FAC8 @ =0x00000103
	b _0809FADE
	.align 2, 0
_0809FAC8: .4byte 0x00000103
_0809FACC:
	movs r0, #0x82
	lsls r0, r0, #1
	b _0809FADE
_0809FAD2:
	ldr r0, _0809FAD8 @ =0x00000105
	b _0809FADE
	.align 2, 0
_0809FAD8: .4byte 0x00000105
_0809FADC:
	ldr r0, _0809FAE8 @ =0x00000107
_0809FADE:
	movs r1, #0
	bl sub_080147B8
	b _0809FAF6
	.align 2, 0
_0809FAE8: .4byte 0x00000107
_0809FAEC:
	movs r0, #0x83
	lsls r0, r0, #1
	movs r1, #0
	bl sub_080147B8
_0809FAF6:
	mov r1, sl
	ldrb r0, [r1, #2]
	adds r0, #1
	strb r0, [r1, #2]
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_0809FB0C
sub_0809FB0C: @ 0x0809FB0C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r5, _0809FBB8 @ =gUnk_03006B54
	ldr r0, [r5]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r0, r2
	ldr r3, _0809FBBC @ =0x00001EB8
	adds r3, r0, r3
	str r3, [sp, #0x24]
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x20]
	add r4, sp, #8
	movs r0, #0xa0
	str r0, [sp]
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_080A586C
	ldr r0, _0809FBC0 @ =gUnk_03006B58
	ldr r0, [r0]
	str r0, [sp, #0x28]
	ldrh r0, [r0]
	str r0, [sp, #0x18]
	ldr r0, _0809FBC4 @ =0x0000FFFF
	ldr r1, [sp, #0x18]
	cmp r1, r0
	bne _0809FB66
	b _080A00D0
_0809FB66:
	mov r2, sp
	adds r2, #0x10
	str r2, [sp, #0x30]
_0809FB6C:
	ldr r3, [sp, #0x18]
	lsls r0, r3, #1
	adds r0, r0, r3
	lsls r0, r0, #2
	adds r0, #4
	ldr r1, [sp, #0x28]
	adds r0, r1, r0
	str r0, [sp, #0x2c]
	ldr r3, [sp, #0x24]
	ldrh r2, [r3, #0x1c]
	ldrb r0, [r3, #0x1c]
	ldr r1, [sp, #0x18]
	cmp r0, r1
	bne _0809FBA6
	ldrh r0, [r3, #0x18]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0809FBA6
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r0, r2
	cmp r0, #0
	bne _0809FBA6
	bl sub_080A00EC
_0809FBA6:
	ldr r2, [sp, #0x2c]
	ldrh r0, [r2]
	cmp r0, #0
	beq _0809FBC8
	cmp r0, #1
	bne _0809FBB4
	b _0809FF78
_0809FBB4:
	b _080A0094
	.align 2, 0
_0809FBB8: .4byte gUnk_03006B54
_0809FBBC: .4byte 0x00001EB8
_0809FBC0: .4byte gUnk_03006B58
_0809FBC4: .4byte 0x0000FFFF
_0809FBC8:
	ldr r3, [sp, #0x2c]
	ldrh r1, [r3, #2]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _0809FC5C @ =0x00000AB8
	adds r0, r0, r1
	ldr r2, _0809FC60 @ =gUnk_03006B54
	ldr r1, [r2]
	adds r5, r1, r0
	ldrh r0, [r5, #0x12]
	lsls r0, r0, #4
	movs r3, #0xcb
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _0809FC64 @ =gUnk_08BD505C
	adds r6, r0, r1
	ldrh r3, [r5]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x14
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	subs r3, r3, r0
	lsls r3, r3, #0x10
	ldrh r4, [r5, #2]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x14
	ldr r2, [sp, #0x20]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0x10
	ldrh r1, [r6]
	lsrs r0, r3, #0x10
	mov r8, r0
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #2]
	lsrs r7, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #4]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #6]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	ldr r0, [sp, #0x30]
	bl sub_080A586C
	add r0, sp, #8
	ldr r1, [sp, #0x30]
	bl sub_080A5880
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _0809FC68
	ldrh r1, [r5, #0xe]
	movs r0, #4
	orrs r0, r1
	b _0809FC70
	.align 2, 0
_0809FC5C: .4byte 0x00000AB8
_0809FC60: .4byte gUnk_03006B54
_0809FC64: .4byte gUnk_08BD505C
_0809FC68:
	ldrh r0, [r5, #0xe]
	ldr r2, _0809FCC8 @ =0x0000FFFB
	adds r1, r2, #0
	ands r0, r1
_0809FC70:
	strh r0, [r5, #0xe]
	ldr r3, [sp, #0x2c]
	ldrh r0, [r3, #2]
	bl sub_0809F008
	ldr r1, [sp, #0x2c]
	ldrh r0, [r1, #2]
	bl sub_0809F7C8
	ldr r2, _0809FCCC @ =gUnk_03006B54
	ldr r0, [r2]
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _0809FD38
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x24]
	ldrh r3, [r3, #4]
	cmp r0, r3
	bne _0809FD00
	ldr r0, [sp, #0x24]
	ldrh r1, [r0, #0x18]
	movs r2, #0xc0
	lsls r2, r2, #2
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _0809FD38
	ldrh r0, [r5, #0xe]
	movs r3, #0x80
	lsls r3, r3, #1
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _0809FCD0
	ldr r1, [sp, #0x2c]
	ldrh r0, [r1, #2]
	bl sub_0809F688
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	b _0809FCD2
	.align 2, 0
_0809FCC8: .4byte 0x0000FFFB
_0809FCCC: .4byte gUnk_03006B54
_0809FCD0:
	ldrb r2, [r5, #0xb]
_0809FCD2:
	ldrb r3, [r5, #0x1d]
	cmp r2, r3
	bne _0809FCE4
	ldrb r0, [r5, #0xc]
	adds r4, r5, #0
	adds r4, #0x1c
	ldrb r1, [r5, #0x1e]
	cmp r0, r1
	beq _0809FCF8
_0809FCE4:
	adds r4, r5, #0
	adds r4, #0x1c
	ldrb r1, [r5, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r3, [r5, #0xc]
	adds r0, r4, #0
	bl sub_08009F50
_0809FCF8:
	adds r0, r4, #0
	bl sub_08009FF8
	b _0809FD38
_0809FD00:
	ldr r2, [sp, #0x2c]
	ldrh r0, [r2, #2]
	bl sub_0809F688
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldrb r3, [r5, #0x1d]
	cmp r2, r3
	bne _0809FD1E
	ldrb r0, [r5, #0xc]
	adds r4, r5, #0
	adds r4, #0x1c
	ldrb r1, [r5, #0x1e]
	cmp r0, r1
	beq _0809FD32
_0809FD1E:
	adds r4, r5, #0
	adds r4, #0x1c
	ldrb r1, [r5, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r3, [r5, #0xc]
	adds r0, r4, #0
	bl sub_08009F50
_0809FD32:
	adds r0, r4, #0
	bl sub_08009FF8
_0809FD38:
	ldrh r2, [r5, #0xe]
	movs r0, #0x14
	ands r0, r2
	cmp r0, #0x14
	bne _0809FD6E
	adds r4, r5, #0
	adds r4, #0x1c
	lsls r2, r2, #0x10
	lsrs r1, r2, #0x17
	movs r0, #1
	ands r1, r0
	lsrs r2, r2, #0x16
	ands r2, r0
	adds r0, r4, #0
	bl sub_0800A680
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_0809FD6E:
	ldrh r1, [r5, #0xe]
	movs r0, #0x24
	ands r0, r1
	cmp r0, #0x24
	bne _0809FE6A
	ldrb r0, [r5, #0xd]
	cmp r0, #0
	beq _0809FD88
	cmp r0, #1
	beq _0809FE4C
	adds r0, r5, #0
	adds r0, #0x44
	b _0809FE66
_0809FD88:
	ldr r0, [sp, #0x18]
	ldr r3, [sp, #0x24]
	ldrh r3, [r3, #4]
	cmp r0, r3
	bne _0809FE32
	ldrb r0, [r5, #0x1d]
	cmp r0, #0x31
	beq _0809FD9C
	cmp r0, #0x38
	bne _0809FDB6
_0809FD9C:
	adds r4, r5, #0
	adds r4, #0x44
	mov r0, r8
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	subs r1, #8
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #8
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FDB6:
	cmp r0, #0x32
	beq _0809FDBE
	cmp r0, #0x39
	bne _0809FDD6
_0809FDBE:
	adds r4, r5, #0
	adds r4, #0x44
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	subs r1, #8
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FDD6:
	cmp r0, #0x33
	beq _0809FDDE
	cmp r0, #0x3a
	bne _0809FE18
_0809FDDE:
	ldrb r0, [r5, #9]
	cmp r0, #2
	bne _0809FDFE
	adds r4, r5, #0
	adds r4, #0x44
	mov r3, r8
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	subs r1, #4
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FDFE:
	adds r4, r5, #0
	adds r4, #0x44
	mov r0, r8
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	subs r1, #0xc
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FE18:
	adds r4, r5, #0
	adds r4, #0x44
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	subs r1, #8
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FE32:
	adds r4, r5, #0
	adds r4, #0x44
	mov r3, r8
	lsls r1, r3, #0x10
	asrs r1, r1, #0x10
	subs r1, #8
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	b _0809FE64
_0809FE4C:
	adds r4, r5, #0
	adds r4, #0x44
	mov r0, r8
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	subs r1, #0x10
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	subs r2, #8
	adds r0, r4, #0
	bl sub_080091C4
_0809FE64:
	adds r0, r4, #0
_0809FE66:
	bl sub_080093C0
_0809FE6A:
	ldrh r0, [r5, #0x16]
	ldr r1, _0809FEEC @ =0x0000FFFF
	cmp r0, r1
	beq _0809FF38
	ldr r2, _0809FEF0 @ =gUnk_03006B54
	mov sb, r2
	movs r3, #0x2c
	mov sl, r3
	mov r1, sl
	muls r1, r0, r1
	adds r0, r1, #0
	movs r2, #0xff
	lsls r2, r2, #3
	adds r0, r0, r2
	mov r3, sb
	ldr r1, [r3]
	adds r4, r1, r0
	ldrb r0, [r4, #2]
	ldrb r1, [r4, #5]
	cmp r0, r1
	beq _0809FEA0
	adds r0, r4, #4
	ldrb r2, [r4, #2]
	movs r1, #3
	movs r3, #1
	bl sub_08009F50
_0809FEA0:
	adds r4, #4
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _0809FEF4
	adds r0, r4, #0
	bl sub_08009FF8
	ldrh r1, [r5, #0xe]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _0809FF38
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	ldrh r6, [r6, #2]
	adds r2, r2, r6
	adds r2, #4
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
	b _0809FF38
	.align 2, 0
_0809FEEC: .4byte 0x0000FFFF
_0809FEF0: .4byte gUnk_03006B54
_0809FEF4:
	ldrh r0, [r5, #0x16]
	mov r3, sb
	ldr r1, [r3]
	ldr r3, _0809FF6C @ =0x0000060C
	adds r2, r1, r3
	mov r3, sl
	muls r3, r0, r3
	adds r0, r3, #0
	movs r3, #0xff
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r4, r1, r0
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _0809FF1C
	ldrb r0, [r2, #2]
	subs r0, #1
	strb r0, [r2, #2]
_0809FF1C:
	movs r0, #0
	str r0, [sp, #4]
	add r0, sp, #4
	adds r1, r4, #0
	ldr r2, _0809FF70 @ =0x0500000B
	bl CpuSet
	adds r0, r4, #4
	bl sub_08009F0C
	ldrh r1, [r5, #0x16]
	ldr r0, _0809FF74 @ =0x0000FFFF
	orrs r0, r1
	strh r0, [r5, #0x16]
_0809FF38:
	ldrh r0, [r5, #0xe]
	movs r2, #0x80
	lsls r2, r2, #7
	adds r1, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _0809FF52
	ldr r3, [sp, #0x24]
	ldrh r0, [r3, #4]
	ldr r2, [sp, #0x2c]
	ldrh r1, [r2, #2]
	bl sub_0809F0F0
_0809FF52:
	ldrh r0, [r5, #0xe]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _0809FF62
	b _080A0094
_0809FF62:
	ldr r1, [sp, #0x2c]
	ldrh r0, [r1, #2]
	bl sub_0809F868
	b _080A0094
	.align 2, 0
_0809FF6C: .4byte 0x0000060C
_0809FF70: .4byte 0x0500000B
_0809FF74: .4byte 0x0000FFFF
_0809FF78:
	ldr r2, [sp, #0x2c]
	ldrh r1, [r2, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r3, _080A0004 @ =0x00001538
	adds r0, r0, r3
	ldr r2, _080A0008 @ =gUnk_03006B54
	ldr r1, [r2]
	adds r5, r1, r0
	ldrb r2, [r5, #4]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r1, _080A000C @ =gUnk_08BD5110
	adds r6, r0, r1
	cmp r2, #0xb
	beq _080A0094
	ldrh r3, [r5]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x14
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #0x10
	asrs r0, r0, #0x10
	subs r3, r3, r0
	lsls r3, r3, #0x10
	ldrh r4, [r5, #2]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x14
	ldr r2, [sp, #0x20]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0x10
	ldrh r1, [r6]
	lsrs r0, r3, #0x10
	mov r8, r0
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #2]
	lsrs r7, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #4]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #6]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	ldr r0, [sp, #0x30]
	bl sub_080A586C
	add r0, sp, #8
	ldr r1, [sp, #0x30]
	bl sub_080A5880
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A0010
	ldrh r1, [r5, #8]
	movs r0, #2
	orrs r0, r1
	b _080A0018
	.align 2, 0
_080A0004: .4byte 0x00001538
_080A0008: .4byte gUnk_03006B54
_080A000C: .4byte gUnk_08BD5110
_080A0010:
	ldrh r0, [r5, #8]
	ldr r2, _080A00E0 @ =0x0000FFFD
	adds r1, r2, #0
	ands r0, r1
_080A0018:
	strh r0, [r5, #8]
	ldrh r1, [r5, #8]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A002E
	ldr r3, [sp, #0x2c]
	ldrh r1, [r3, #2]
	movs r0, #1
	bl sub_080A2570
_080A002E:
	ldrh r1, [r5, #8]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080A0094
	ldr r1, _080A00E4 @ =gUnk_03006B54
	ldr r0, [r1]
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _080A0070
	ldrb r0, [r5, #0x15]
	ldrb r2, [r5, #5]
	cmp r0, r2
	bne _080A005A
	ldrb r0, [r5, #6]
	adds r4, r5, #0
	adds r4, #0x14
	ldrb r3, [r5, #0x16]
	cmp r0, r3
	beq _080A006A
_080A005A:
	adds r4, r5, #0
	adds r4, #0x14
	ldrb r2, [r5, #5]
	ldrb r3, [r5, #6]
	adds r0, r4, #0
	movs r1, #3
	bl sub_08009F50
_080A006A:
	adds r0, r4, #0
	bl sub_08009FF8
_080A0070:
	ldrh r1, [r5, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A0094
	adds r4, r5, #0
	adds r4, #0x14
	mov r0, r8
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	lsls r2, r7, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080A0094:
	ldr r1, [sp, #0x24]
	ldrh r2, [r1, #0x1c]
	ldrb r0, [r1, #0x1c]
	ldr r3, [sp, #0x18]
	cmp r0, r3
	bne _080A00C2
	ldrh r0, [r1, #0x18]
	movs r3, #0x80
	lsls r3, r3, #2
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080A00C2
	movs r1, #0xff
	lsls r1, r1, #8
	adds r0, r1, #0
	ands r0, r2
	movs r2, #0x80
	lsls r2, r2, #1
	cmp r0, r2
	bne _080A00C2
	bl sub_080A00EC
_080A00C2:
	ldr r3, [sp, #0x2c]
	ldrh r3, [r3, #0xa]
	str r3, [sp, #0x18]
	ldr r0, _080A00E8 @ =0x0000FFFF
	cmp r3, r0
	beq _080A00D0
	b _0809FB6C
_080A00D0:
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A00E0: .4byte 0x0000FFFD
_080A00E4: .4byte gUnk_03006B54
_080A00E8: .4byte 0x0000FFFF

	thumb_func_start sub_080A00EC
sub_080A00EC: @ 0x080A00EC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x14
	ldr r0, _080A0198 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r1, r0, r2
	ldr r2, _080A019C @ =0x00001EB8
	adds r6, r0, r2
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrh r0, [r1, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	movs r0, #0xa0
	str r0, [sp]
	add r0, sp, #4
	movs r1, #0
	movs r2, #0
	movs r3, #0xf0
	bl sub_080A586C
	ldrh r1, [r6, #0x18]
	movs r0, #0x80
	ands r0, r1
	ldr r7, _080A01A0 @ =gUnk_08BD5214
	cmp r0, #0
	beq _080A0136
	ldr r7, _080A01A4 @ =gUnk_08BD5228
_080A0136:
	ldrh r3, [r6, #0x14]
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	subs r3, r3, r0
	lsls r3, r3, #0x10
	ldrh r4, [r6, #0x16]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	subs r4, r4, r0
	lsls r4, r4, #0x10
	add r5, sp, #0xc
	ldrh r1, [r7]
	lsrs r0, r3, #0x10
	mov sb, r0
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r7, #2]
	lsrs r0, r4, #0x10
	mov r8, r0
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r7, #4]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r7, #6]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	adds r0, r5, #0
	bl sub_080A586C
	add r0, sp, #4
	adds r1, r5, #0
	bl sub_080A5880
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A01A8
	ldrh r1, [r6, #0x18]
	movs r0, #2
	orrs r0, r1
	b _080A01AE
	.align 2, 0
_080A0198: .4byte gUnk_03006B54
_080A019C: .4byte 0x00001EB8
_080A01A0: .4byte gUnk_08BD5214
_080A01A4: .4byte gUnk_08BD5228
_080A01A8:
	ldrh r1, [r6, #0x18]
	ldr r0, _080A0248 @ =0x0000FFFD
	ands r0, r1
_080A01AE:
	strh r0, [r6, #0x18]
	ldrh r1, [r6, #0x18]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A023A
	ldr r0, _080A024C @ =gUnk_03006B54
	ldr r0, [r0]
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	bne _080A0202
	adds r0, r6, #0
	adds r0, #0x25
	adds r2, r6, #0
	adds r2, #0x22
	ldrb r0, [r0]
	adds r3, r6, #0
	adds r3, #0x23
	ldrb r1, [r2]
	cmp r0, r1
	bne _080A01EC
	adds r1, r6, #0
	adds r1, #0x26
	ldrb r0, [r3]
	adds r4, r6, #0
	adds r4, #0x24
	ldrb r1, [r1]
	cmp r0, r1
	beq _080A01FC
_080A01EC:
	adds r4, r6, #0
	adds r4, #0x24
	ldrb r2, [r2]
	ldrb r3, [r3]
	adds r0, r4, #0
	movs r1, #3
	bl sub_08009F50
_080A01FC:
	adds r0, r4, #0
	bl sub_08009FF8
_080A0202:
	ldrh r2, [r6, #0x18]
	movs r0, #2
	ands r0, r2
	cmp r0, #0
	beq _080A023A
	adds r4, r6, #0
	adds r4, #0x24
	lsls r2, r2, #0x10
	lsrs r1, r2, #0x17
	movs r0, #1
	ands r1, r0
	lsrs r2, r2, #0x16
	ands r2, r0
	adds r0, r4, #0
	bl sub_0800A680
	mov r2, sb
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	mov r0, r8
	lsls r2, r0, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080A023A:
	add sp, #0x14
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A0248: .4byte 0x0000FFFD
_080A024C: .4byte gUnk_03006B54

	thumb_func_start sub_080A0250
sub_080A0250: @ 0x080A0250
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080A031C @ =gUnk_03006B54
	ldr r1, [r0]
	movs r0, #0x98
	lsls r0, r0, #3
	adds r3, r1, r0
	ldr r2, _080A0320 @ =0x00001EB8
	adds r0, r1, r2
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r2, _080A0324 @ =0x00000AB8
	adds r0, r0, r2
	adds r5, r1, r0
	ldrh r1, [r5]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	mov sb, r7
	ldrh r1, [r5, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	mov r8, r6
	ldrh r1, [r5, #0xe]
	movs r0, #0x14
	ands r0, r1
	cmp r0, #0x14
	bne _080A02DA
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldrh r2, [r5, #0xe]
	lsls r2, r2, #0x10
	lsrs r1, r2, #0x17
	movs r0, #1
	ands r1, r0
	lsrs r2, r2, #0x16
	ands r2, r0
	adds r0, r4, #0
	bl sub_0800A680
	lsls r1, r7, #0x10
	asrs r1, r1, #0x10
	lsls r2, r6, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080A02DA:
	ldrh r1, [r5, #0xe]
	movs r0, #0x24
	ands r0, r1
	cmp r0, #0x24
	bne _080A030E
	adds r4, r5, #0
	adds r4, #0x44
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	mov r0, sb
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	subs r1, #8
	mov r0, r8
	lsls r2, r0, #0x10
	asrs r2, r2, #0x10
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	adds r0, r4, #0
	bl sub_080093C0
_080A030E:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A031C: .4byte gUnk_03006B54
_080A0320: .4byte 0x00001EB8
_080A0324: .4byte 0x00000AB8

	thumb_func_start sub_080A0328
sub_080A0328: @ 0x080A0328
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	ldr r0, _080A0378 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A037C @ =0x0000060C
	adds r0, r0, r1
	mov sb, r0
	mov r2, r8
	lsls r0, r2, #4
	subs r0, r0, r2
	lsls r0, r0, #2
	ldr r2, _080A0380 @ =0x00001538
	adds r0, r0, r2
	adds r5, r1, r0
	ldr r0, _080A0384 @ =0x0000FFFF
	cmp r6, r0
	beq _080A0426
	adds r0, r6, #0
	bl sub_08013038
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r7, #0xc
	bls _080A036C
	b _080A04A0
_080A036C:
	lsls r0, r7, #2
	ldr r1, _080A0388 @ =_080A038C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0378: .4byte gUnk_03006B54
_080A037C: .4byte 0x0000060C
_080A0380: .4byte 0x00001538
_080A0384: .4byte 0x0000FFFF
_080A0388: .4byte _080A038C
_080A038C: @ jump table
	.4byte _080A03C0 @ case 0
	.4byte _080A03C4 @ case 1
	.4byte _080A03C8 @ case 2
	.4byte _080A03D4 @ case 3
	.4byte _080A03DE @ case 4
	.4byte _080A03E6 @ case 5
	.4byte _080A03EE @ case 6
	.4byte _080A03F6 @ case 7
	.4byte _080A03FE @ case 8
	.4byte _080A0402 @ case 9
	.4byte _080A040A @ case 10
	.4byte _080A040E @ case 11
	.4byte _080A0418 @ case 12
_080A03C0:
	movs r0, #0
	b _080A041A
_080A03C4:
	movs r0, #1
	b _080A041A
_080A03C8:
	cmp r2, #0
	beq _080A03D0
	movs r0, #0x14
	b _080A049E
_080A03D0:
	movs r0, #0x11
	b _080A049E
_080A03D4:
	cmp r2, #0
	beq _080A03DA
	b _080A04D8
_080A03DA:
	movs r0, #0x15
	b _080A049E
_080A03DE:
	cmp r2, #0
	bne _080A04D8
	movs r0, #0x17
	b _080A049E
_080A03E6:
	cmp r2, #0
	bne _080A04D8
	movs r0, #0x19
	b _080A049E
_080A03EE:
	cmp r2, #0
	bne _080A04D8
	movs r0, #0x1c
	b _080A049E
_080A03F6:
	cmp r2, #0
	bne _080A04D8
	movs r0, #0x1f
	b _080A049E
_080A03FE:
	movs r0, #0x22
	b _080A041A
_080A0402:
	cmp r2, #0
	bne _080A04D8
	movs r0, #0x24
	b _080A049E
_080A040A:
	movs r0, #0x27
	b _080A041A
_080A040E:
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080A04D8
	b _080A049E
_080A0418:
	movs r0, #0x2c
_080A041A:
	strb r0, [r5, #5]
	adds r0, r6, #0
	movs r1, #1
	bl sub_08012FB8
	b _080A04A0
_080A0426:
	cmp r7, #0xc
	bhi _080A04A0
	lsls r0, r7, #2
	ldr r1, _080A0434 @ =_080A0438
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0434: .4byte _080A0438
_080A0438: @ jump table
	.4byte _080A046C @ case 0
	.4byte _080A0470 @ case 1
	.4byte _080A0474 @ case 2
	.4byte _080A0478 @ case 3
	.4byte _080A047C @ case 4
	.4byte _080A0480 @ case 5
	.4byte _080A0484 @ case 6
	.4byte _080A0488 @ case 7
	.4byte _080A048C @ case 8
	.4byte _080A0490 @ case 9
	.4byte _080A049C @ case 10
	.4byte _080A0494 @ case 11
	.4byte _080A0498 @ case 12
_080A046C:
	movs r0, #0
	b _080A049E
_080A0470:
	movs r0, #1
	b _080A049E
_080A0474:
	movs r0, #0x11
	b _080A049E
_080A0478:
	movs r0, #0x15
	b _080A049E
_080A047C:
	movs r0, #0x17
	b _080A049E
_080A0480:
	movs r0, #0x19
	b _080A049E
_080A0484:
	movs r0, #0x1c
	b _080A049E
_080A0488:
	movs r0, #0x1f
	b _080A049E
_080A048C:
	movs r0, #0x22
	b _080A049E
_080A0490:
	movs r0, #0x24
	b _080A049E
_080A0494:
	movs r0, #0
	b _080A049E
_080A0498:
	movs r0, #0x2c
	b _080A049E
_080A049C:
	movs r0, #0x27
_080A049E:
	strb r0, [r5, #5]
_080A04A0:
	strb r7, [r5, #4]
	movs r4, #0
	strh r6, [r5, #0xc]
	strb r4, [r5, #6]
	adds r0, r5, #0
	adds r0, #0x14
	movs r1, #1
	movs r2, #3
	bl sub_0800A6C0
	ldrh r1, [r5, #8]
	movs r0, #5
	orrs r1, r0
	orrs r1, r4
	strh r1, [r5, #8]
	cmp r7, #0xb
	bne _080A04C8
	ldr r0, _080A04E4 @ =0x0000FFFB
	ands r1, r0
	strh r1, [r5, #8]
_080A04C8:
	movs r0, #1
	mov r1, r8
	bl sub_080A1E68
	mov r1, sb
	ldrb r0, [r1, #4]
	adds r0, #1
	strb r0, [r1, #4]
_080A04D8:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A04E4: .4byte 0x0000FFFB

	thumb_func_start sub_080A04E8
sub_080A04E8: @ 0x080A04E8
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r0, _080A055C @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A0560 @ =0x0000060C
	adds r6, r1, r0
	lsls r0, r5, #4
	subs r0, r0, r5
	lsls r0, r0, #2
	ldr r2, _080A0564 @ =0x00001538
	adds r0, r0, r2
	adds r4, r1, r0
	ldrh r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A0530
	movs r0, #1
	adds r1, r5, #0
	bl sub_080A1F70
	ldrh r1, [r4, #8]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A052A
	movs r0, #1
	adds r1, r5, #0
	movs r2, #0
	bl sub_080A2718
_080A052A:
	ldrb r0, [r6, #4]
	subs r0, #1
	strb r0, [r6, #4]
_080A0530:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A0568 @ =0x0500000F
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _080A056C @ =0x0000FFFF
	strh r0, [r4, #0xc]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r4, #0xe]
	strh r0, [r4, #0x10]
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_08009F0C
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A055C: .4byte gUnk_03006B54
_080A0560: .4byte 0x0000060C
_080A0564: .4byte 0x00001538
_080A0568: .4byte 0x0500000F
_080A056C: .4byte 0x0000FFFF

	thumb_func_start sub_080A0570
sub_080A0570: @ 0x080A0570
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r6, r2, #0x18
	ldr r1, _080A05D4 @ =gUnk_03006B54
	lsls r0, r7, #4
	subs r0, r0, r7
	lsls r0, r0, #2
	ldr r2, _080A05D8 @ =0x00001538
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A063C
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A05AA
	movs r0, #1
	adds r1, r7, #0
	movs r2, #0
	bl sub_080A2718
_080A05AA:
	ldrb r0, [r4, #4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A05DC @ =gUnk_08BD5110
	adds r2, r1, r2
	cmp r0, #2
	bne _080A05E0
	lsls r0, r5, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #4
	strh r0, [r4]
	lsls r0, r6, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2, #2]
	subs r0, r0, r1
	subs r0, #0x10
	b _080A0618
	.align 2, 0
_080A05D4: .4byte gUnk_03006B54
_080A05D8: .4byte 0x00001538
_080A05DC: .4byte gUnk_08BD5110
_080A05E0:
	cmp r0, #0xc
	beq _080A0604
	cmp r0, #5
	beq _080A0604
	cmp r0, #8
	beq _080A0604
	lsls r0, r5, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #4
	strh r0, [r4]
	lsls r0, r6, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2, #2]
	subs r0, r0, r1
	subs r0, #8
	b _080A0618
_080A0604:
	lsls r0, r5, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2]
	subs r0, r0, r1
	lsls r0, r0, #4
	strh r0, [r4]
	lsls r0, r6, #0x18
	asrs r0, r0, #0x15
	ldrh r1, [r2, #2]
	subs r0, r0, r1
_080A0618:
	lsls r0, r0, #4
	strh r0, [r4, #2]
	ldrb r0, [r4, #4]
	cmp r0, #0xc
	beq _080A062C
	movs r0, #1
	adds r1, r7, #0
	movs r2, #1
	bl sub_080A2718
_080A062C:
	movs r0, #1
	adds r1, r7, #0
	bl sub_080A2004
	movs r0, #1
	adds r1, r7, #0
	bl sub_080A2570
_080A063C:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A0644
sub_080A0644: @ 0x080A0644
	push {r4, r5, lr}
	adds r4, r1, #0
	adds r5, r2, #0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A0694 @ =gUnk_03006B54
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A0698 @ =0x00001538
	adds r1, r1, r0
	ldr r0, [r2]
	adds r3, r0, r1
	ldrh r1, [r3, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A06DA
	ldrb r0, [r3, #4]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A069C @ =gUnk_08BD5110
	adds r1, r1, r2
	cmp r0, #2
	bne _080A06A0
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r4]
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r1, #2]
	adds r0, r0, r1
	adds r0, #0x10
	b _080A06D8
	.align 2, 0
_080A0694: .4byte gUnk_03006B54
_080A0698: .4byte 0x00001538
_080A069C: .4byte gUnk_08BD5110
_080A06A0:
	cmp r0, #5
	beq _080A06C2
	cmp r0, #8
	beq _080A06C2
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r4]
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r1, #2]
	adds r0, r0, r1
	adds r0, #8
	b _080A06D8
_080A06C2:
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r2, [r1]
	adds r0, r0, r2
	strh r0, [r4]
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r1, #2]
	adds r0, r0, r1
_080A06D8:
	strh r0, [r5]
_080A06DA:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080A06E0
sub_080A06E0: @ 0x080A06E0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
	ldr r6, _080A072C @ =0x0000FFFF
	ldr r0, _080A0730 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _080A0734 @ =0x00001EB8
	adds r0, r0, r2
	mov r8, r0
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A0738 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r0, r2
	mov sb, r0
	mov r1, sl
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A073C @ =0x00001538
	adds r0, r0, r1
	adds r5, r2, r0
	ldrb r0, [r5, #4]
	subs r0, #2
	cmp r0, #7
	bls _080A0722
	b _080A0AC0
_080A0722:
	lsls r0, r0, #2
	ldr r1, _080A0740 @ =_080A0744
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A072C: .4byte 0x0000FFFF
_080A0730: .4byte gUnk_03006B54
_080A0734: .4byte 0x00001EB8
_080A0738: .4byte 0x00000AB8
_080A073C: .4byte 0x00001538
_080A0740: .4byte _080A0744
_080A0744: @ jump table
	.4byte _080A0764 @ case 0
	.4byte _080A07C0 @ case 1
	.4byte _080A0814 @ case 2
	.4byte _080A0868 @ case 3
	.4byte _080A08CC @ case 4
	.4byte _080A0932 @ case 5
	.4byte _080A099A @ case 6
	.4byte _080A0A60 @ case 7
_080A0764:
	ldrb r0, [r5, #5]
	cmp r0, #0x14
	bne _080A076C
	b _080A0AC0
_080A076C:
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A077A
	b _080A0AC0
_080A077A:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	bne _080A0784
	b _080A0AC0
_080A0784:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A07B4 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A07B8 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A07BC @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	movs r0, #0x12
	b _080A0ABA
	.align 2, 0
_080A07B4: .4byte gUnk_03006B54
_080A07B8: .4byte 0x00001FBC
_080A07BC: .4byte sub_080A0AD0
_080A07C0:
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A07CE
	b _080A0AC0
_080A07CE:
	mov r1, r8
	ldrb r0, [r1, #0xf]
	cmp r0, #6
	bne _080A07D8
	b _080A0AC0
_080A07D8:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A0808 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A080C @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0810 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	movs r0, #0x16
	b _080A0ABA
	.align 2, 0
_080A0808: .4byte gUnk_03006B54
_080A080C: .4byte 0x00001FBC
_080A0810: .4byte sub_080A0AD0
_080A0814:
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A0822
	b _080A0AC0
_080A0822:
	mov r1, r8
	ldrb r0, [r1, #0xf]
	cmp r0, #6
	bne _080A082C
	b _080A0AC0
_080A082C:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A085C @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A0860 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0864 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	movs r0, #0x18
	b _080A0ABA
	.align 2, 0
_080A085C: .4byte gUnk_03006B54
_080A0860: .4byte 0x00001FBC
_080A0864: .4byte sub_080A0AD0
_080A0868:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A08B0 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A08B4 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A08B8 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	mov r1, r8
	ldrb r2, [r1, #0xf]
	cmp r2, #1
	bne _080A08BC
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A08BC
	movs r0, #0x1b
	strb r0, [r5, #5]
	strb r2, [r5, #6]
	b _080A0AC0
	.align 2, 0
_080A08B0: .4byte gUnk_03006B54
_080A08B4: .4byte 0x00001FBC
_080A08B8: .4byte sub_080A0AD0
_080A08BC:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	bne _080A08C6
	b _080A0AC0
_080A08C6:
	movs r1, #0
	movs r0, #0x19
	b _080A092C
_080A08CC:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A0910 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A0914 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0918 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	mov r1, r8
	ldrb r0, [r1, #0xf]
	cmp r0, #2
	bne _080A091C
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A091C
	movs r0, #0x1e
	b _080A0ABA
	.align 2, 0
_080A0910: .4byte gUnk_03006B54
_080A0914: .4byte 0x00001FBC
_080A0918: .4byte sub_080A0AD0
_080A091C:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	beq _080A0928
	movs r0, #0x1d
	b _080A0ABA
_080A0928:
	movs r1, #0
	movs r0, #0x1c
_080A092C:
	strb r0, [r5, #5]
	strb r1, [r5, #6]
	b _080A0AC0
_080A0932:
	mov r1, sb
	ldrb r0, [r1, #9]
	cmp r0, #3
	beq _080A093C
	b _080A0AC0
_080A093C:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A0980 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A0984 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0988 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	mov r1, r8
	ldrb r0, [r1, #0xf]
	cmp r0, #3
	bne _080A098C
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A098C
	movs r0, #0x21
	b _080A0ABA
	.align 2, 0
_080A0980: .4byte gUnk_03006B54
_080A0984: .4byte 0x00001FBC
_080A0988: .4byte sub_080A0AD0
_080A098C:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	bne _080A0996
	b _080A0AC0
_080A0996:
	movs r0, #0x20
	b _080A0ABA
_080A099A:
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #0
	beq _080A09AC
	b _080A0AC0
_080A09AC:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A0A18 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A0A1C @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0A20 @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	mov r2, sb
	ldrb r1, [r2, #0xb]
	adds r0, r1, #0
	subs r0, #0x31
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080A09F4
	adds r0, r1, #0
	subs r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080A0A54
_080A09F4:
	mov r0, sb
	ldrb r1, [r0, #9]
	mov r0, sl
	bl sub_080A195C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A0AC0
	mov r1, sb
	ldrb r2, [r1, #9]
	cmp r2, #2
	beq _080A0A44
	cmp r2, #2
	bgt _080A0A24
	cmp r2, #1
	beq _080A0A3C
	b _080A0AC0
	.align 2, 0
_080A0A18: .4byte gUnk_03006B54
_080A0A1C: .4byte 0x00001FBC
_080A0A20: .4byte sub_080A0AD0
_080A0A24:
	cmp r2, #3
	beq _080A0A2E
	cmp r2, #4
	beq _080A0A4C
	b _080A0AC0
_080A0A2E:
	strh r7, [r4, #4]
	ldr r0, _080A0A38 @ =0x0000FFF0
	strh r0, [r4, #6]
	b _080A0AC0
	.align 2, 0
_080A0A38: .4byte 0x0000FFF0
_080A0A3C:
	strh r7, [r4, #4]
	movs r0, #0x10
	strh r0, [r4, #6]
	b _080A0AC0
_080A0A44:
	ldr r0, _080A0A48 @ =0x0000FFF0
	b _080A0A4E
	.align 2, 0
_080A0A48: .4byte 0x0000FFF0
_080A0A4C:
	movs r0, #0x10
_080A0A4E:
	strh r0, [r4, #4]
	strh r7, [r4, #6]
	b _080A0AC0
_080A0A54:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	beq _080A0AC0
	movs r0, #0x23
	b _080A0ABA
_080A0A60:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A0AA4 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A0AA8 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A0AAC @ =sub_080A0AD0
	str r0, [r4, #0x18]
	mov r0, sl
	strh r0, [r4, #2]
	ldrh r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A0AB0
	mov r1, r8
	ldrb r0, [r1, #0xf]
	cmp r0, #5
	bne _080A0AB0
	movs r0, #0x26
	b _080A0ABA
	.align 2, 0
_080A0AA4: .4byte gUnk_03006B54
_080A0AA8: .4byte 0x00001FBC
_080A0AAC: .4byte sub_080A0AD0
_080A0AB0:
	mov r2, r8
	ldrb r0, [r2, #0xf]
	cmp r0, #6
	beq _080A0AC0
	movs r0, #0x25
_080A0ABA:
	strb r0, [r5, #5]
	movs r0, #1
	strb r0, [r5, #6]
_080A0AC0:
	adds r0, r6, #0
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A0AD0
sub_080A0AD0: @ 0x080A0AD0
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	ldr r1, _080A0B18 @ =gUnk_03006B54
	lsls r0, r0, #3
	mov r2, r8
	subs r0, r0, r2
	lsls r0, r0, #2
	ldr r3, _080A0B1C @ =0x00001FBC
	adds r0, r0, r3
	ldr r2, [r1]
	adds r5, r2, r0
	ldr r7, _080A0B20 @ =0x00001EB8
	adds r6, r2, r7
	ldrh r1, [r6, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A0B24 @ =0x00000AB8
	adds r0, r0, r1
	adds r7, r2, r0
	ldrh r1, [r5, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r3, _080A0B28 @ =0x00001538
	adds r0, r0, r3
	adds r4, r2, r0
	ldrb r0, [r6, #0xf]
	cmp r0, #6
	bne _080A0B2C
	movs r0, #0
	b _080A1066
	.align 2, 0
_080A0B18: .4byte gUnk_03006B54
_080A0B1C: .4byte 0x00001FBC
_080A0B20: .4byte 0x00001EB8
_080A0B24: .4byte 0x00000AB8
_080A0B28: .4byte 0x00001538
_080A0B2C:
	ldrb r0, [r4, #4]
	subs r0, #2
	cmp r0, #7
	bls _080A0B36
	b _080A1062
_080A0B36:
	lsls r0, r0, #2
	ldr r1, _080A0B40 @ =_080A0B44
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A0B40: .4byte _080A0B44
_080A0B44: @ jump table
	.4byte _080A0B64 @ case 0
	.4byte _080A0B74 @ case 1
	.4byte _080A0B74 @ case 2
	.4byte _080A0B7E @ case 3
	.4byte _080A0C44 @ case 4
	.4byte _080A0CD0 @ case 5
	.4byte _080A0D40 @ case 6
	.4byte _080A0FC8 @ case 7
_080A0B64:
	ldrb r0, [r6, #0xf]
	cmp r0, #6
	bne _080A0B6C
	b _080A1062
_080A0B6C:
	mov r0, r8
	bl sub_080A1078
	b _080A1062
_080A0B74:
	ldrb r0, [r6, #0xf]
	cmp r0, #6
	bne _080A0B7C
	b _080A1062
_080A0B7C:
	b _080A0FCE
_080A0B7E:
	ldrb r0, [r6, #0xf]
	cmp r0, #1
	bne _080A0B86
	b _080A0FCE
_080A0B86:
	movs r7, #0
	ldrsh r0, [r5, r7]
	cmp r0, #1
	beq _080A0BAC
	cmp r0, #1
	bgt _080A0B98
	cmp r0, #0
	beq _080A0BA2
	b _080A1062
_080A0B98:
	cmp r0, #2
	beq _080A0BC0
	cmp r0, #3
	beq _080A0BFE
	b _080A1062
_080A0BA2:
	ldrh r0, [r4]
	strh r0, [r5, #4]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A0BAC:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080A0BBC
	b _080A1062
_080A0BBC:
	movs r0, #0x87
	b _080A1004
_080A0BC0:
	ldrh r0, [r5, #0xc]
	cmp r0, #2
	beq _080A0BE6
	cmp r0, #2
	bgt _080A0BD0
	cmp r0, #0
	beq _080A0BDA
	b _080A0BEC
_080A0BD0:
	cmp r0, #4
	beq _080A0BE0
	cmp r0, #6
	beq _080A0BE6
	b _080A0BEC
_080A0BDA:
	ldrh r0, [r4]
	subs r0, #0x10
	b _080A0BEA
_080A0BE0:
	ldrh r0, [r4]
	subs r0, #0x20
	b _080A0BEA
_080A0BE6:
	ldrh r0, [r4]
	adds r0, #0x20
_080A0BEA:
	strh r0, [r4]
_080A0BEC:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #7
	bhi _080A0BFC
	b _080A1062
_080A0BFC:
	b _080A100A
_080A0BFE:
	ldrh r0, [r5, #4]
	strh r0, [r4]
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r4, [r4, #0xa]
	cmp r4, #0
	bne _080A0C16
	b _080A0F58
_080A0C16:
	ldr r0, _080A0C3C @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A0C40 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
	b _080A0F58
	.align 2, 0
_080A0C3C: .4byte gUnk_03006B54
_080A0C40: .4byte 0x0000FFFE
_080A0C44:
	ldrb r0, [r6, #0xf]
	cmp r0, #2
	bne _080A0C4C
	b _080A0FCE
_080A0C4C:
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #1
	beq _080A0C6A
	cmp r0, #1
	bgt _080A0C5E
	cmp r0, #0
	beq _080A0C64
	b _080A1062
_080A0C5E:
	cmp r0, #2
	beq _080A0C7E
	b _080A1062
_080A0C64:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A0C6A:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080A0C7A
	b _080A1062
_080A0C7A:
	movs r0, #0x89
	b _080A1004
_080A0C7E:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A0C8E
	b _080A1062
_080A0C8E:
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r6, [r4, #0xa]
	cmp r6, #0
	beq _080A0CC2
	ldr r0, _080A0CC8 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A0CCC @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08012E14
_080A0CC2:
	movs r1, #0
	movs r0, #0x1c
	b _080A105C
	.align 2, 0
_080A0CC8: .4byte gUnk_03006B54
_080A0CCC: .4byte 0x0000FFFE
_080A0CD0:
	ldrb r0, [r6, #0xf]
	cmp r0, #3
	bne _080A0CD8
	b _080A0FCE
_080A0CD8:
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #0
	beq _080A0CE6
	cmp r0, #1
	beq _080A0CEC
	b _080A1062
_080A0CE6:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A0CEC:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A0CFC
	b _080A1062
_080A0CFC:
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r6, [r4, #0xa]
	cmp r6, #0
	beq _080A0D30
	ldr r0, _080A0D38 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A0D3C @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08012E14
_080A0D30:
	movs r1, #0
	movs r0, #0x1f
	b _080A105C
	.align 2, 0
_080A0D38: .4byte gUnk_03006B54
_080A0D3C: .4byte 0x0000FFFE
_080A0D40:
	ldrb r1, [r7, #0xb]
	adds r0, r1, #0
	subs r0, #0x31
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080A0D5C
	adds r0, r1, #0
	subs r0, #0x38
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bls _080A0D5C
	b _080A0F68
_080A0D5C:
	movs r3, #0
	ldrsh r0, [r5, r3]
	cmp r0, #1
	beq _080A0D90
	cmp r0, #1
	bgt _080A0D6E
	cmp r0, #0
	beq _080A0D76
	b _080A1062
_080A0D6E:
	cmp r0, #2
	bne _080A0D74
	b _080A0EDC
_080A0D74:
	b _080A1062
_080A0D76:
	ldrh r1, [r4, #8]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A0D8A
	ldrh r1, [r5, #2]
	movs r0, #1
	movs r2, #0
	bl sub_080A2718
_080A0D8A:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A0D90:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080A0DA0
	b _080A1062
_080A0DA0:
	movs r0, #0
	mov r8, r0
	movs r0, #0
	strh r0, [r5, #0xc]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	ldrb r1, [r7, #9]
	adds r0, r4, #0
	bl sub_080A1BB4
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A0DBE
	b _080A1062
_080A0DBE:
	movs r0, #0x8b
	movs r1, #0
	bl sub_080147B8
	ldrb r4, [r7, #9]
	cmp r4, #2
	beq _080A0E24
	cmp r4, #2
	bgt _080A0DD6
	cmp r4, #1
	beq _080A0DE0
	b _080A1062
_080A0DD6:
	cmp r4, #3
	beq _080A0E4C
	cmp r4, #4
	beq _080A0E80
	b _080A1062
_080A0DE0:
	ldrh r6, [r6, #4]
	ldrh r2, [r7]
	lsls r2, r2, #0x10
	ldrh r1, [r7, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldr r3, _080A0E1C @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r7, _080A0E20 @ =0x00000AB8
	adds r0, r0, r7
	ldr r3, [r3]
	adds r3, r3, r0
	asrs r2, r2, #0x14
	lsls r2, r2, #4
	strh r2, [r3, #4]
	adds r1, #8
	lsls r1, r1, #4
	strh r1, [r3, #6]
	strb r4, [r3, #8]
	ldrh r0, [r3, #0xe]
	movs r2, #0x80
	lsls r2, r2, #6
	adds r1, r2, #0
	orrs r0, r1
	mov r7, r8
	orrs r0, r7
	strh r0, [r3, #0xe]
	b _080A0EBA
	.align 2, 0
_080A0E1C: .4byte gUnk_03006B54
_080A0E20: .4byte 0x00000AB8
_080A0E24:
	ldrh r6, [r6, #4]
	ldrh r1, [r7]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r3, [r7, #2]
	lsls r3, r3, #0x10
	movs r4, #1
	ldr r2, _080A0E44 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r7, _080A0E48 @ =0x00000AB8
	adds r0, r0, r7
	ldr r2, [r2]
	adds r2, r2, r0
	subs r1, #8
	b _080A0E9E
	.align 2, 0
_080A0E44: .4byte gUnk_03006B54
_080A0E48: .4byte 0x00000AB8
_080A0E4C:
	ldrh r6, [r6, #4]
	ldrh r3, [r7]
	lsls r3, r3, #0x10
	ldrh r1, [r7, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	movs r4, #1
	ldr r2, _080A0E78 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r7, _080A0E7C @ =0x00000AB8
	adds r0, r0, r7
	ldr r2, [r2]
	adds r2, r2, r0
	asrs r3, r3, #0x14
	lsls r3, r3, #4
	strh r3, [r2, #4]
	subs r1, #8
	lsls r1, r1, #4
	strh r1, [r2, #6]
	b _080A0EA8
	.align 2, 0
_080A0E78: .4byte gUnk_03006B54
_080A0E7C: .4byte 0x00000AB8
_080A0E80:
	ldrh r6, [r6, #4]
	ldrh r1, [r7]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r3, [r7, #2]
	lsls r3, r3, #0x10
	movs r4, #1
	ldr r2, _080A0ED4 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r7, _080A0ED8 @ =0x00000AB8
	adds r0, r0, r7
	ldr r2, [r2]
	adds r2, r2, r0
	adds r1, #8
_080A0E9E:
	lsls r1, r1, #4
	strh r1, [r2, #4]
	asrs r3, r3, #0x14
	lsls r3, r3, #4
	strh r3, [r2, #6]
_080A0EA8:
	strb r4, [r2, #8]
	ldrh r0, [r2, #0xe]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	orrs r0, r1
	mov r7, r8
	orrs r0, r7
	strh r0, [r2, #0xe]
_080A0EBA:
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	bne _080A0EC6
	b _080A1062
_080A0EC6:
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	bl sub_080A2718
	b _080A1062
	.align 2, 0
_080A0ED4: .4byte gUnk_03006B54
_080A0ED8: .4byte 0x00000AB8
_080A0EDC:
	ldrh r0, [r5, #4]
	ldrh r1, [r4]
	adds r0, r0, r1
	strh r0, [r4]
	ldrh r0, [r5, #6]
	ldrh r2, [r4, #2]
	adds r0, r0, r2
	strh r0, [r4, #2]
	ldrh r1, [r5, #2]
	movs r0, #1
	bl sub_080A2004
	ldrh r1, [r5, #2]
	movs r0, #1
	bl sub_080A2570
	ldrh r0, [r5, #0xc]
	adds r0, #1
	strh r0, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #7
	bhi _080A0F0C
	b _080A1062
_080A0F0C:
	ldrh r1, [r5, #2]
	movs r0, #1
	movs r2, #1
	bl sub_080A2718
	ldrh r0, [r5, #2]
	bl sub_080A3BE0
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r6, [r4, #0xa]
	cmp r6, #0
	beq _080A0F50
	ldr r0, _080A0F60 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A0F64 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08012E14
_080A0F50:
	movs r0, #0x22
	strb r0, [r4, #5]
	movs r0, #0
	strb r0, [r4, #6]
_080A0F58:
	movs r0, #0
	strh r0, [r5]
	b _080A1062
	.align 2, 0
_080A0F60: .4byte gUnk_03006B54
_080A0F64: .4byte 0x0000FFFE
_080A0F68:
	movs r3, #0
	ldrsh r0, [r5, r3]
	cmp r0, #1
	beq _080A0FF4
	cmp r0, #1
	ble _080A0FE2
	cmp r0, #2
	bne _080A1062
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A1062
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r6, [r4, #0xa]
	cmp r6, #0
	beq _080A0FBA
	ldr r0, _080A0FC0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A0FC4 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08012E14
_080A0FBA:
	movs r1, #0
	movs r0, #0x22
	b _080A105C
	.align 2, 0
_080A0FC0: .4byte gUnk_03006B54
_080A0FC4: .4byte 0x0000FFFE
_080A0FC8:
	ldrb r0, [r6, #0xf]
	cmp r0, #5
	bne _080A0FD6
_080A0FCE:
	mov r0, r8
	bl sub_080A157C
	b _080A1062
_080A0FD6:
	movs r7, #0
	ldrsh r0, [r5, r7]
	cmp r0, #1
	beq _080A0FF4
	cmp r0, #1
	bgt _080A0FE8
_080A0FE2:
	cmp r0, #0
	beq _080A0FEE
	b _080A1062
_080A0FE8:
	cmp r0, #2
	beq _080A1016
	b _080A1062
_080A0FEE:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A0FF4:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bls _080A1062
	movs r0, #0x8c
_080A1004:
	movs r1, #0
	bl sub_080147B8
_080A100A:
	movs r0, #0
	strh r0, [r5, #0xc]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080A1062
_080A1016:
	adds r0, r4, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A1062
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, r8
	movs r1, #1
	bl sub_080A4FBC
	ldrh r6, [r4, #0xa]
	cmp r6, #0
	beq _080A1058
	ldr r0, _080A1070 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A1074 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r6, #0
	bl sub_08012E14
_080A1058:
	movs r1, #0
	movs r0, #0x24
_080A105C:
	strb r0, [r4, #5]
	strb r1, [r4, #6]
	strh r1, [r5]
_080A1062:
	movs r1, #0
	ldrsh r0, [r5, r1]
_080A1066:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A1070: .4byte gUnk_03006B54
_080A1074: .4byte 0x0000FFFE

	thumb_func_start sub_080A1078
sub_080A1078: @ 0x080A1078
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldr r0, _080A10E0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r1, _080A10E4 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A10E8 @ =0x00000AB8
	adds r0, r0, r1
	adds r4, r2, r0
	mov r1, sb
	lsls r0, r1, #3
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A10EC @ =0x00001FBC
	adds r0, r0, r1
	adds r0, r0, r2
	mov r8, r0
	ldr r0, _080A10F0 @ =0x0000060C
	adds r5, r2, r0
	mov r0, r8
	ldrh r1, [r0, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A10F4 @ =0x00001538
	adds r0, r0, r1
	adds r6, r2, r0
	mov r2, r8
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #9
	bls _080A10D6
	b _080A14C4
_080A10D6:
	lsls r0, r0, #2
	ldr r1, _080A10F8 @ =_080A10FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A10E0: .4byte gUnk_03006B54
_080A10E4: .4byte 0x00001EB8
_080A10E8: .4byte 0x00000AB8
_080A10EC: .4byte 0x00001FBC
_080A10F0: .4byte 0x0000060C
_080A10F4: .4byte 0x00001538
_080A10F8: .4byte _080A10FC
_080A10FC: @ jump table
	.4byte _080A1124 @ case 0
	.4byte _080A112C @ case 1
	.4byte _080A1156 @ case 2
	.4byte _080A1170 @ case 3
	.4byte _080A1314 @ case 4
	.4byte _080A1380 @ case 5
	.4byte _080A13E0 @ case 6
	.4byte _080A13E6 @ case 7
	.4byte _080A1444 @ case 8
	.4byte _080A1476 @ case 9
_080A1124:
	mov r2, r8
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
_080A112C:
	mov r1, r8
	ldrh r0, [r1, #0xc]
	adds r1, r0, #1
	mov r2, r8
	strh r1, [r2, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080A1140
	b _080A14C4
_080A1140:
	movs r0, #0x84
	movs r1, #0
	bl sub_080147B8
	movs r0, #0
	mov r1, r8
	strh r0, [r1, #0xc]
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	b _080A14C4
_080A1156:
	adds r0, r6, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A1166
	b _080A14C4
_080A1166:
	mov r2, r8
	ldrh r0, [r2]
	adds r0, #1
	strh r0, [r2]
	b _080A14C4
_080A1170:
	ldrb r0, [r5, #6]
	cmp r0, #0
	beq _080A1178
	b _080A14C4
_080A1178:
	movs r0, #1
	strb r0, [r5, #6]
	ldrh r0, [r6, #0xe]
	bl sub_080A14E0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _080A118C
	b _080A14C4
_080A118C:
	lsls r0, r0, #2
	ldr r1, _080A1198 @ =_080A119C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1198: .4byte _080A119C
_080A119C: @ jump table
	.4byte _080A11B0 @ case 0
	.4byte _080A11F4 @ case 1
	.4byte _080A1290 @ case 2
	.4byte _080A1296 @ case 3
	.4byte _080A12F0 @ case 4
_080A11B0:
	movs r0, #4
	mov r1, r8
	strh r0, [r1]
	ldrh r1, [r4, #0xe]
	ldr r0, _080A11E4 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r4, #0xe]
	movs r0, #0x3e
	strb r0, [r4, #0xb]
	movs r0, #1
	strb r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #0x3e
	movs r3, #1
	bl sub_08009F50
	cmp r7, #0
	bne _080A11EC
	ldr r0, _080A11E8 @ =0x000005D3
	b _080A12E4
	.align 2, 0
_080A11E4: .4byte 0x0000FEFF
_080A11E8: .4byte 0x000005D3
_080A11EC:
	ldr r0, _080A11F0 @ =0x00000572
	b _080A12E4
	.align 2, 0
_080A11F0: .4byte 0x00000572
_080A11F4:
	movs r0, #5
	mov r2, r8
	strh r0, [r2]
	ldrh r1, [r4, #0xe]
	ldr r0, _080A1218 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r4, #0xe]
	movs r0, #0x3b
	movs r1, #0x3d
	bl sub_08001894
	strb r0, [r4, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080A121C
	movs r0, #0
	b _080A121E
	.align 2, 0
_080A1218: .4byte 0x0000FEFF
_080A121C:
	movs r0, #1
_080A121E:
	strb r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r4, #0xb]
	ldrb r3, [r4, #0xc]
	bl sub_08009F50
	ldrh r2, [r6, #0xe]
	ldr r0, _080A1250 @ =0x0000018F
	cmp r2, r0
	bgt _080A1254
	subs r0, #0x31
	cmp r2, r0
	bge _080A1270
	cmp r2, #0
	blt _080A1274
	cmp r2, #0xf7
	ble _080A1270
	subs r0, #0x32
	b _080A1274
	.align 2, 0
_080A1250: .4byte 0x0000018F
_080A1254:
	ldr r0, _080A1260 @ =0x000001F3
	cmp r2, r0
	bgt _080A1264
	subs r0, #0x31
_080A125C:
	movs r1, #1
	b _080A1276
	.align 2, 0
_080A1260: .4byte 0x000001F3
_080A1264:
	ldr r0, _080A126C @ =0x0000022B
	cmp r2, r0
	bgt _080A1274
	b _080A125C
	.align 2, 0
_080A126C: .4byte 0x0000022B
_080A1270:
	movs r1, #2
	b _080A1276
_080A1274:
	movs r1, #0
_080A1276:
	cmp r7, #0
	bne _080A1286
	movs r2, #0xba
	lsls r2, r2, #3
	adds r0, r2, #0
	orrs r1, r0
	adds r0, r1, #0
	b _080A12E4
_080A1286:
	ldr r2, _080A128C @ =0x0000056F
	adds r0, r1, r2
	b _080A12E4
	.align 2, 0
_080A128C: .4byte 0x0000056F
_080A1290:
	movs r1, #0
	movs r0, #6
	b _080A12F4
_080A1296:
	movs r0, #7
	mov r1, r8
	strh r0, [r1]
	ldrh r1, [r4, #0xe]
	ldr r0, _080A12BC @ =0x0000FEFF
	ands r0, r1
	strh r0, [r4, #0xe]
	movs r0, #0x3b
	movs r1, #0x3d
	bl sub_08001894
	strb r0, [r4, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080A12C0
	movs r0, #0
	b _080A12C2
	.align 2, 0
_080A12BC: .4byte 0x0000FEFF
_080A12C0:
	movs r0, #1
_080A12C2:
	strb r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r4, #0xb]
	ldrb r3, [r4, #0xc]
	bl sub_08009F50
	cmp r7, #0
	bne _080A12E2
	movs r0, #0xba
	lsls r0, r0, #3
	b _080A12E4
_080A12E2:
	ldr r0, _080A12EC @ =0x0000056F
_080A12E4:
	movs r1, #0
	bl sub_080147B8
	b _080A14C4
	.align 2, 0
_080A12EC: .4byte 0x0000056F
_080A12F0:
	movs r1, #0
	movs r0, #8
_080A12F4:
	mov r2, r8
	strh r0, [r2]
	movs r0, #3
	strb r0, [r4, #0xb]
	strb r1, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	b _080A14C4
_080A1314:
	ldr r0, _080A1374 @ =gUnk_08BD5320
	ldr r0, [r0]
	movs r1, #1
	bl sub_080A53AC
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _080A1328
	b _080A14C4
_080A1328:
	strb r7, [r5, #6]
	mov r1, r8
	ldrh r0, [r1, #2]
	bl sub_080A4E7C
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, sb
	movs r1, #1
	bl sub_080A4FBC
	ldrh r5, [r6, #0xa]
	cmp r5, #0
	beq _080A1366
	ldr r0, _080A1378 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A137C @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A1366:
	movs r0, #0x14
	strb r0, [r6, #5]
	strb r7, [r6, #6]
	mov r2, r8
	strh r7, [r2]
	b _080A1468
	.align 2, 0
_080A1374: .4byte gUnk_08BD5320
_080A1378: .4byte gUnk_03006B54
_080A137C: .4byte 0x0000FFFE
_080A1380:
	bl sub_0806D314
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	beq _080A138E
	b _080A14C4
_080A138E:
	strb r7, [r5, #6]
	mov r1, r8
	ldrh r0, [r1, #2]
	bl sub_080A4E7C
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, sb
	movs r1, #1
	bl sub_080A4FBC
	ldrh r5, [r6, #0xa]
	cmp r5, #0
	beq _080A13CC
	ldr r0, _080A13D8 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A13DC @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A13CC:
	movs r0, #0x14
	strb r0, [r6, #5]
	strb r7, [r6, #6]
	mov r2, r8
	strh r7, [r2]
	b _080A1468
	.align 2, 0
_080A13D8: .4byte gUnk_03006B54
_080A13DC: .4byte 0x0000FFFE
_080A13E0:
	bl sub_0806D314
	b _080A1448
_080A13E6:
	bl sub_0806D73C
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #0
	bne _080A14C4
	strb r7, [r5, #6]
	mov r1, r8
	ldrh r0, [r1, #2]
	bl sub_080A4E7C
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, sb
	movs r1, #1
	bl sub_080A4FBC
	ldrh r5, [r6, #0xa]
	cmp r5, #0
	beq _080A1430
	ldr r0, _080A143C @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A1440 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A1430:
	movs r0, #0x14
	strb r0, [r6, #5]
	strb r7, [r6, #6]
	mov r2, r8
	strh r7, [r2]
	b _080A1468
	.align 2, 0
_080A143C: .4byte gUnk_03006B54
_080A1440: .4byte 0x0000FFFE
_080A1444:
	bl sub_0806D73C
_080A1448:
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080A14C4
	strb r0, [r5, #6]
	movs r0, #0x13
	strb r0, [r6, #5]
	movs r0, #1
	strb r0, [r6, #6]
	movs r0, #9
	mov r1, r8
	strh r0, [r1]
	movs r0, #0x85
	movs r1, #0
	bl sub_080147B8
_080A1468:
	ldrh r1, [r4, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r4, #0xe]
	b _080A14C4
_080A1476:
	adds r0, r6, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A14C4
	movs r2, #0x80
	lsls r2, r2, #5
	mov r0, sb
	movs r1, #1
	bl sub_080A4FBC
	ldrh r4, [r6, #0xa]
	cmp r4, #0
	beq _080A14B8
	ldr r0, _080A14D8 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A14DC @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A14B8:
	movs r1, #0
	movs r0, #0x11
	strb r0, [r6, #5]
	strb r1, [r6, #6]
	mov r0, r8
	strh r1, [r0]
_080A14C4:
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A14D8: .4byte gUnk_03006B54
_080A14DC: .4byte 0x0000FFFE

	thumb_func_start sub_080A14E0
sub_080A14E0: @ 0x080A14E0
	push {r4, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	movs r1, #0
	mov r0, sp
	strh r1, [r0]
	ldr r0, _080A1538 @ =0x0000FFFF
	cmp r4, r0
	beq _080A1572
	subs r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov r0, sp
	movs r1, #0
	movs r2, #0
	bl sub_0809AB98
	ldr r3, _080A153C @ =gUnk_08BD4D64
	lsls r1, r4, #1
	mov r0, sp
	ldrh r2, [r0]
	lsls r0, r2, #2
	adds r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r3
	ldrh r4, [r1]
	ldr r1, _080A1540 @ =0x000003E7
	cmp r4, r1
	beq _080A1572
	ldr r0, _080A1544 @ =0x000003E6
	cmp r4, r0
	bhi _080A154C
	adds r0, r4, #0
	movs r1, #1
	bl sub_0806D054
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A1548
	movs r0, #1
	b _080A1574
	.align 2, 0
_080A1538: .4byte 0x0000FFFF
_080A153C: .4byte gUnk_08BD4D64
_080A1540: .4byte 0x000003E7
_080A1544: .4byte 0x000003E6
_080A1548:
	movs r0, #2
	b _080A1574
_080A154C:
	cmp r4, r1
	bne _080A155C
	adds r0, r4, #0
	movs r1, #1
	bl sub_0806D054
	lsls r0, r0, #0x10
	b _080A1572
_080A155C:
	adds r0, r4, #0
	movs r1, #1
	bl sub_0806D054
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A156E
	movs r0, #3
	b _080A1574
_080A156E:
	movs r0, #4
	b _080A1574
_080A1572:
	movs r0, #0
_080A1574:
	add sp, #4
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080A157C
sub_080A157C: @ 0x080A157C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	ldr r0, _080A15E0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r1, _080A15E4 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A15E8 @ =0x00000AB8
	adds r0, r0, r1
	adds r4, r2, r0
	lsls r0, r7, #3
	subs r0, r0, r7
	lsls r0, r0, #2
	ldr r1, _080A15EC @ =0x00001FBC
	adds r0, r0, r1
	adds r5, r2, r0
	ldr r0, _080A15F0 @ =0x0000060C
	adds r0, r0, r2
	mov r8, r0
	ldrh r1, [r5, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A15F4 @ =0x00001538
	adds r0, r0, r1
	adds r6, r2, r0
	movs r2, #0
	ldrsh r0, [r5, r2]
	cmp r0, #6
	bls _080A15D4
	b _080A1848
_080A15D4:
	lsls r0, r0, #2
	ldr r1, _080A15F8 @ =_080A15FC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A15E0: .4byte gUnk_03006B54
_080A15E4: .4byte 0x00001EB8
_080A15E8: .4byte 0x00000AB8
_080A15EC: .4byte 0x00001FBC
_080A15F0: .4byte 0x0000060C
_080A15F4: .4byte 0x00001538
_080A15F8: .4byte _080A15FC
_080A15FC: @ jump table
	.4byte _080A1618 @ case 0
	.4byte _080A161E @ case 1
	.4byte _080A1688 @ case 2
	.4byte _080A169E @ case 3
	.4byte _080A17BC @ case 4
	.4byte _080A17E4 @ case 5
	.4byte _080A1804 @ case 6
_080A1618:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
_080A161E:
	ldrh r0, [r5, #0xc]
	adds r1, r0, #1
	strh r1, [r5, #0xc]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xc
	bhi _080A162E
	b _080A1848
_080A162E:
	ldrb r0, [r6, #4]
	subs r0, #3
	cmp r0, #6
	bhi _080A167E
	lsls r0, r0, #2
	ldr r1, _080A1640 @ =_080A1644
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1640: .4byte _080A1644
_080A1644: @ jump table
	.4byte _080A1660 @ case 0
	.4byte _080A1660 @ case 1
	.4byte _080A1664 @ case 2
	.4byte _080A1668 @ case 3
	.4byte _080A166C @ case 4
	.4byte _080A167E @ case 5
	.4byte _080A1676 @ case 6
_080A1660:
	movs r0, #0x83
	b _080A166E
_080A1664:
	movs r0, #0x86
	b _080A166E
_080A1668:
	movs r0, #0x88
	b _080A166E
_080A166C:
	movs r0, #0x8a
_080A166E:
	movs r1, #0
	bl sub_080147B8
	b _080A167E
_080A1676:
	movs r0, #0x8e
	movs r1, #0
	bl sub_080147B8
_080A167E:
	movs r0, #0
	strh r0, [r5, #0xc]
	ldrh r0, [r5]
	adds r0, #1
	b _080A1846
_080A1688:
	adds r0, r6, #0
	adds r0, #0x14
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A1698
	b _080A1848
_080A1698:
	ldrh r0, [r5]
	adds r0, #1
	b _080A1846
_080A169E:
	mov r1, r8
	ldrb r0, [r1, #6]
	cmp r0, #0
	beq _080A16A8
	b _080A1848
_080A16A8:
	ldrh r0, [r5, #2]
	bl sub_080A4E00
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bls _080A16B8
	b _080A1848
_080A16B8:
	lsls r0, r0, #2
	ldr r1, _080A16C4 @ =_080A16C8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A16C4: .4byte _080A16C8
_080A16C8: @ jump table
	.4byte _080A17B8 @ case 0
	.4byte _080A16DC @ case 1
	.4byte _080A17B8 @ case 2
	.4byte _080A1744 @ case 3
	.4byte _080A17B8 @ case 4
_080A16DC:
	movs r6, #1
	mov r2, r8
	strb r6, [r2, #6]
	movs r0, #4
	strh r0, [r5]
	ldrh r1, [r4, #0xe]
	ldr r0, _080A1708 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r4, #0xe]
	movs r0, #0x3b
	movs r1, #0x3d
	bl sub_08001894
	strb r0, [r4, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080A170C
	movs r0, #0
	strb r0, [r4, #0xc]
	b _080A170E
	.align 2, 0
_080A1708: .4byte 0x0000FEFF
_080A170C:
	strb r6, [r4, #0xc]
_080A170E:
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r4, #0xb]
	ldrb r3, [r4, #0xc]
	bl sub_08009F50
	mov r0, sb
	cmp r0, #0
	bne _080A1734
	movs r0, #2
	bl sub_0800180C
	movs r1, #0xba
	lsls r1, r1, #3
	b _080A17A6
_080A1734:
	movs r0, #2
	bl sub_0800180C
	ldr r2, _080A1740 @ =0x0000056F
	adds r0, r0, r2
	b _080A17A8
	.align 2, 0
_080A1740: .4byte 0x0000056F
_080A1744:
	movs r6, #1
	mov r0, r8
	strb r6, [r0, #6]
	movs r0, #5
	strh r0, [r5]
	ldrh r1, [r4, #0xe]
	ldr r0, _080A1770 @ =0x0000FEFF
	ands r0, r1
	strh r0, [r4, #0xe]
	movs r0, #0x3b
	movs r1, #0x3d
	bl sub_08001894
	strb r0, [r4, #0xb]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x3c
	bne _080A1774
	movs r0, #0
	strb r0, [r4, #0xc]
	b _080A1776
	.align 2, 0
_080A1770: .4byte 0x0000FEFF
_080A1774:
	strb r6, [r4, #0xc]
_080A1776:
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r4, #0xb]
	ldrb r3, [r4, #0xc]
	bl sub_08009F50
	mov r1, sb
	cmp r1, #0
	bne _080A179E
	movs r0, #2
	bl sub_0800180C
	movs r2, #0xba
	lsls r2, r2, #3
	adds r0, r0, r2
	b _080A17A8
_080A179E:
	movs r0, #2
	bl sub_0800180C
	ldr r1, _080A17B4 @ =0x0000056F
_080A17A6:
	adds r0, r0, r1
_080A17A8:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl sub_080147B8
	b _080A1848
	.align 2, 0
_080A17B4: .4byte 0x0000056F
_080A17B8:
	movs r0, #6
	b _080A1846
_080A17BC:
	ldr r0, _080A17E0 @ =gUnk_02012D00
	bl sub_0806D314
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A1848
	ldrh r1, [r4, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	movs r2, #0
	orrs r0, r1
	strh r0, [r4, #0xe]
	mov r0, r8
	strb r2, [r0, #6]
	movs r0, #6
	b _080A1846
	.align 2, 0
_080A17E0: .4byte gUnk_02012D00
_080A17E4:
	bl sub_0806D73C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A1848
	ldrh r1, [r4, #0xe]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	movs r2, #0
	orrs r0, r1
	strh r0, [r4, #0xe]
	mov r0, r8
	strb r2, [r0, #6]
	movs r0, #6
	b _080A1846
_080A1804:
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r7, #0
	movs r1, #1
	bl sub_080A4FBC
	ldrh r0, [r5, #2]
	bl sub_080A4E7C
	ldrh r4, [r6, #0xa]
	cmp r4, #0
	beq _080A183E
	ldr r0, _080A1858 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A185C @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A183E:
	ldrh r0, [r5, #2]
	bl sub_080A04E8
	movs r0, #0
_080A1846:
	strh r0, [r5]
_080A1848:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A1858: .4byte gUnk_03006B54
_080A185C: .4byte 0x0000FFFE

	thumb_func_start sub_080A1860
sub_080A1860: @ 0x080A1860
	push {r4, r5, r6, lr}
	sub sp, #4
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	movs r6, #0
	mov r0, sp
	movs r1, #0
	movs r2, #0
	bl sub_0809AB98
	cmp r4, #0xb
	bhi _080A1910
	lsls r0, r4, #2
	ldr r1, _080A1884 @ =_080A1888
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A1884: .4byte _080A1888
_080A1888: @ jump table
	.4byte _080A1910 @ case 0
	.4byte _080A1910 @ case 1
	.4byte _080A1910 @ case 2
	.4byte _080A18B8 @ case 3
	.4byte _080A18B8 @ case 4
	.4byte _080A18C8 @ case 5
	.4byte _080A18D8 @ case 6
	.4byte _080A18E8 @ case 7
	.4byte _080A1910 @ case 8
	.4byte _080A1904 @ case 9
	.4byte _080A1910 @ case 10
	.4byte _080A1910 @ case 11
_080A18B8:
	mov r0, sp
	ldrh r1, [r0]
	movs r0, #0xb4
	muls r1, r0, r1
	ldr r0, _080A18C4 @ =gUnk_08BD4008
	b _080A190E
	.align 2, 0
_080A18C4: .4byte gUnk_08BD4008
_080A18C8:
	mov r0, sp
	ldrh r1, [r0]
	movs r0, #0xb4
	muls r1, r0, r1
	ldr r0, _080A18D4 @ =gUnk_08BD402C
	b _080A190E
	.align 2, 0
_080A18D4: .4byte gUnk_08BD402C
_080A18D8:
	mov r0, sp
	ldrh r1, [r0]
	movs r0, #0xb4
	muls r1, r0, r1
	ldr r0, _080A18E4 @ =gUnk_08BD4050
	b _080A190E
	.align 2, 0
_080A18E4: .4byte gUnk_08BD4050
_080A18E8:
	mov r0, sp
	ldrh r1, [r0]
	movs r0, #0xb4
	muls r1, r0, r1
	ldr r0, _080A18F4 @ =gUnk_08BD4074
	b _080A190E
	.align 2, 0
_080A18F4: .4byte gUnk_08BD4074
_080A18F8:
	lsls r1, r1, #1
	adds r0, r6, #0
	adds r0, #0xc
	adds r0, r0, r1
	ldrh r5, [r0]
	b _080A193E
_080A1904:
	mov r0, sp
	ldrh r1, [r0]
	movs r0, #0xb4
	muls r1, r0, r1
	ldr r0, _080A1950 @ =gUnk_08BD4098
_080A190E:
	adds r6, r1, r0
_080A1910:
	ldr r5, _080A1954 @ =0x000003E7
	movs r4, #0
	movs r0, #0x63
	bl sub_0800180C
	movs r1, #0
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
_080A1920:
	lsls r0, r1, #0x10
	asrs r1, r0, #0x10
	adds r0, r6, r1
	ldrb r0, [r0]
	adds r0, r4, r0
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r2, r4
	blt _080A18F8
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xa
	ble _080A1920
_080A193E:
	ldr r0, _080A1954 @ =0x000003E7
	cmp r5, r0
	bne _080A1946
	ldr r5, _080A1958 @ =0x0000FFFF
_080A1946:
	adds r0, r5, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A1950: .4byte gUnk_08BD4098
_080A1954: .4byte 0x000003E7
_080A1958: .4byte 0x0000FFFF

	thumb_func_start sub_080A195C
sub_080A195C: @ 0x080A195C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldr r2, _080A19A4 @ =gUnk_03006B54
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A19A8 @ =0x00001538
	adds r1, r1, r0
	ldr r0, [r2]
	adds r4, r0, r1
	ldrb r1, [r4, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A19AC @ =gUnk_08BD5110
	adds r0, r0, r1
	mov r8, r0
	mov sl, r2
	mov r1, sb
	cmp r1, #2
	beq _080A1A5C
	cmp r1, #2
	bgt _080A19B0
	cmp r1, #1
	beq _080A19F0
	b _080A1AEC
	.align 2, 0
_080A19A4: .4byte gUnk_03006B54
_080A19A8: .4byte 0x00001538
_080A19AC: .4byte gUnk_08BD5110
_080A19B0:
	mov r2, sb
	cmp r2, #3
	beq _080A19BC
	cmp r2, #4
	beq _080A1A88
	b _080A1AEC
_080A19BC:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r3, r8
	movs r5, #8
	ldrsh r3, [r3, r5]
	mov ip, r3
	add r0, ip
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	ldr r2, _080A19EC @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r4, r8
	movs r5, #0xa
	ldrsh r1, [r4, r5]
	adds r0, r0, r1
	asrs r0, r0, #3
	subs r0, #1
	b _080A1A1E
	.align 2, 0
_080A19EC: .4byte 0xFFFF0000
_080A19F0:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
	movs r1, #8
	ldrsh r5, [r5, r1]
	mov ip, r5
	add r0, ip
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	ldr r2, _080A1A54 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r4, r8
	movs r5, #0xe
	ldrsh r1, [r4, r5]
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
_080A1A1E:
	lsls r0, r0, #0x10
	ldr r4, _080A1A58 @ =0x0000FFFF
	adds r1, r4, #0
	ands r1, r3
	orrs r1, r0
	adds r6, r1, #0
	mov r3, r8
	movs r5, #0xc
	ldrsh r0, [r3, r5]
	mov r3, ip
	subs r0, r0, r3
	adds r0, #1
	asrs r0, r0, #3
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ands r2, r7
	orrs r2, r0
	adds r7, r2, #0
	asrs r1, r1, #0x10
	adds r1, #1
	lsls r1, r1, #0x10
	ands r2, r4
	adds r7, r2, #0
	orrs r7, r1
	b _080A1AEC
	.align 2, 0
_080A1A54: .4byte 0xFFFF0000
_080A1A58: .4byte 0x0000FFFF
_080A1A5C:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
	movs r2, #8
	ldrsh r1, [r5, r2]
	adds r0, r0, r1
	asrs r0, r0, #3
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A1A84 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	b _080A1AAE
	.align 2, 0
_080A1A84: .4byte 0xFFFF0000
_080A1A88:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r2, r8
	movs r3, #0xc
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A1B30 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
_080A1AAE:
	movs r1, #0xa
	ldrsh r4, [r5, r1]
	adds r0, r0, r4
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	ldr r5, _080A1B34 @ =0x0000FFFF
	mov ip, r5
	mov r1, ip
	ands r1, r3
	orrs r1, r0
	adds r6, r1, #0
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ands r2, r7
	orrs r2, r0
	adds r7, r2, #0
	mov r3, r8
	movs r5, #0xe
	ldrsh r0, [r3, r5]
	subs r0, r0, r4
	adds r0, #1
	asrs r0, r0, #3
	asrs r1, r1, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	mov r1, ip
	ands r2, r1
	adds r7, r2, #0
	orrs r7, r0
_080A1AEC:
	mov r2, sl
	ldr r0, [r2]
	movs r3, #0x9c
	lsls r3, r3, #1
	adds r2, r0, r3
	mov r4, sb
	cmp r4, #3
	bne _080A1B00
	cmp r6, #0
	blt _080A1BA2
_080A1B00:
	mov r5, sb
	cmp r5, #1
	bne _080A1B10
	asrs r1, r7, #0x10
	movs r3, #0xa
	ldrsh r0, [r2, r3]
	cmp r1, r0
	bgt _080A1BA2
_080A1B10:
	mov r4, sb
	cmp r4, #2
	bne _080A1B1C
	lsls r0, r6, #0x10
	cmp r0, #0
	blt _080A1BA2
_080A1B1C:
	mov r5, sb
	cmp r5, #4
	bne _080A1B3C
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	movs r3, #8
	ldrsh r1, [r2, r3]
	cmp r0, r1
	ble _080A1B3C
	b _080A1BA2
	.align 2, 0
_080A1B30: .4byte 0xFFFF0000
_080A1B34: .4byte 0x0000FFFF
_080A1B38:
	movs r0, #0
	b _080A1BA4
_080A1B3C:
	lsrs r2, r6, #0x10
	asrs r1, r6, #0x10
	asrs r0, r7, #0x10
	cmp r1, r0
	bge _080A1BA2
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov sl, r0
	asrs r4, r7, #0x10
	str r4, [sp]
_080A1B50:
	lsls r1, r6, #0x10
	asrs r0, r1, #0x10
	lsls r2, r2, #0x10
	mov sb, r2
	cmp r0, sl
	bge _080A1B92
	lsls r0, r2, #7
	asrs r0, r0, #0x10
	mov r8, r0
_080A1B62:
	asrs r5, r1, #0x10
	lsls r0, r5, #0x17
	asrs r4, r0, #0x10
	adds r0, r4, #0
	mov r1, r8
	bl sub_08099E84
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A1B38
	adds r0, r4, #0
	mov r1, r8
	bl sub_0809A698
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A1B38
	adds r0, r5, #1
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, sl
	blt _080A1B62
_080A1B92:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	ldr r5, [sp]
	cmp r0, r5
	blt _080A1B50
_080A1BA2:
	movs r0, #1
_080A1BA4:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A1BB4
sub_080A1BB4: @ 0x080A1BB4
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	mov sb, r1
	ldrb r1, [r4, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A1BE8 @ =gUnk_08BD5110
	adds r0, r0, r1
	mov r8, r0
	mov r0, sb
	cmp r0, #2
	beq _080A1C98
	cmp r0, #2
	bgt _080A1BEC
	cmp r0, #1
	beq _080A1C2C
	b _080A1D28
	.align 2, 0
_080A1BE8: .4byte gUnk_08BD5110
_080A1BEC:
	mov r1, sb
	cmp r1, #3
	beq _080A1BF8
	cmp r1, #4
	beq _080A1CC4
	b _080A1D28
_080A1BF8:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r2, r8
	movs r3, #8
	ldrsh r2, [r2, r3]
	mov sl, r2
	add r0, sl
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	ldr r2, _080A1C28 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r4, r8
	movs r5, #0xa
	ldrsh r1, [r4, r5]
	adds r0, r0, r1
	asrs r0, r0, #3
	subs r0, #1
	b _080A1C5A
	.align 2, 0
_080A1C28: .4byte 0xFFFF0000
_080A1C2C:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
	movs r1, #8
	ldrsh r5, [r5, r1]
	mov sl, r5
	add r0, sl
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	ldr r2, _080A1C90 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r4, r8
	movs r5, #0xe
	ldrsh r1, [r4, r5]
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
_080A1C5A:
	lsls r0, r0, #0x10
	ldr r4, _080A1C94 @ =0x0000FFFF
	adds r1, r4, #0
	ands r1, r3
	orrs r1, r0
	adds r6, r1, #0
	mov r3, r8
	movs r5, #0xc
	ldrsh r0, [r3, r5]
	mov r3, sl
	subs r0, r0, r3
	adds r0, #1
	asrs r0, r0, #3
	adds r0, r6, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ands r2, r7
	orrs r2, r0
	adds r7, r2, #0
	asrs r1, r1, #0x10
	adds r1, #1
	lsls r1, r1, #0x10
	ands r2, r4
	adds r7, r2, #0
	orrs r7, r1
	b _080A1D28
	.align 2, 0
_080A1C90: .4byte 0xFFFF0000
_080A1C94: .4byte 0x0000FFFF
_080A1C98:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
	movs r2, #8
	ldrsh r1, [r5, r2]
	adds r0, r0, r1
	asrs r0, r0, #3
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A1CC0 @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	b _080A1CEA
	.align 2, 0
_080A1CC0: .4byte 0xFFFF0000
_080A1CC4:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r2, r8
	movs r3, #0xc
	ldrsh r1, [r2, r3]
	adds r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A1D6C @ =0xFFFF0000
	adds r3, r2, #0
	ands r3, r6
	orrs r3, r0
	ldrh r0, [r4, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	mov r5, r8
_080A1CEA:
	movs r1, #0xa
	ldrsh r4, [r5, r1]
	adds r0, r0, r4
	lsls r0, r0, #0xd
	lsrs r0, r0, #0x10
	lsls r0, r0, #0x10
	ldr r5, _080A1D70 @ =0x0000FFFF
	mov sl, r5
	mov r1, sl
	ands r1, r3
	orrs r1, r0
	adds r6, r1, #0
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ands r2, r7
	orrs r2, r0
	adds r7, r2, #0
	mov r3, r8
	movs r5, #0xe
	ldrsh r0, [r3, r5]
	subs r0, r0, r4
	adds r0, #1
	asrs r0, r0, #3
	asrs r1, r1, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	mov r1, sl
	ands r2, r1
	adds r7, r2, #0
	orrs r7, r0
_080A1D28:
	ldr r0, _080A1D74 @ =gUnk_03006B54
	ldr r0, [r0]
	movs r3, #0x9c
	lsls r3, r3, #1
	adds r2, r0, r3
	mov r4, sb
	cmp r4, #3
	bne _080A1D3C
	cmp r6, #0
	blt _080A1DE2
_080A1D3C:
	mov r5, sb
	cmp r5, #1
	bne _080A1D4C
	asrs r1, r7, #0x10
	movs r3, #0xa
	ldrsh r0, [r2, r3]
	cmp r1, r0
	bgt _080A1DE2
_080A1D4C:
	mov r4, sb
	cmp r4, #2
	bne _080A1D58
	lsls r0, r6, #0x10
	cmp r0, #0
	blt _080A1DE2
_080A1D58:
	mov r5, sb
	cmp r5, #4
	bne _080A1D7C
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	movs r3, #8
	ldrsh r1, [r2, r3]
	cmp r0, r1
	ble _080A1D7C
	b _080A1DE2
	.align 2, 0
_080A1D6C: .4byte 0xFFFF0000
_080A1D70: .4byte 0x0000FFFF
_080A1D74: .4byte gUnk_03006B54
_080A1D78:
	movs r0, #0
	b _080A1DE4
_080A1D7C:
	lsrs r2, r6, #0x10
	asrs r1, r6, #0x10
	asrs r0, r7, #0x10
	cmp r1, r0
	bge _080A1DE2
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov sl, r0
	asrs r4, r7, #0x10
	str r4, [sp]
_080A1D90:
	lsls r1, r6, #0x10
	asrs r0, r1, #0x10
	lsls r2, r2, #0x10
	mov sb, r2
	cmp r0, sl
	bge _080A1DD2
	lsls r0, r2, #7
	asrs r0, r0, #0x10
	mov r8, r0
_080A1DA2:
	asrs r5, r1, #0x10
	lsls r0, r5, #0x17
	asrs r4, r0, #0x10
	adds r0, r4, #0
	mov r1, r8
	bl sub_08099E84
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A1D78
	adds r0, r4, #0
	mov r1, r8
	bl sub_0809A698
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A1D78
	adds r0, r5, #1
	lsls r1, r0, #0x10
	asrs r0, r1, #0x10
	cmp r0, sl
	blt _080A1DA2
_080A1DD2:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	ldr r5, [sp]
	cmp r0, r5
	blt _080A1D90
_080A1DE2:
	movs r0, #1
_080A1DE4:
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A1DF4
sub_080A1DF4: @ 0x080A1DF4
	push {r4, lr}
	sub sp, #4
	ldr r4, _080A1E58 @ =gUnk_03006B58
	ldr r1, _080A1E5C @ =gUnk_02012000
	str r1, [r4]
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A1E60 @ =0x050000C1
	mov r0, sp
	bl CpuSet
	ldr r1, [r4]
	ldr r0, _080A1E64 @ =0x0000FFFF
	strh r0, [r1]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r1, #2]
	movs r3, #0
	adds r4, r0, #0
_080A1E1A:
	ldr r0, _080A1E58 @ =gUnk_03006B58
	ldr r1, [r0]
	lsls r2, r3, #0x10
	asrs r2, r2, #0x10
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r1, r1, r0
	ldrh r0, [r1, #4]
	orrs r0, r4
	strh r0, [r1, #4]
	ldrh r0, [r1, #6]
	orrs r0, r4
	strh r0, [r1, #6]
	ldrh r0, [r1, #0xc]
	orrs r0, r4
	strh r0, [r1, #0xc]
	ldrh r0, [r1, #0xe]
	orrs r0, r4
	strh r0, [r1, #0xe]
	adds r2, #1
	lsls r2, r2, #0x10
	lsrs r3, r2, #0x10
	asrs r2, r2, #0x10
	cmp r2, #0x3f
	ble _080A1E1A
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A1E58: .4byte gUnk_03006B58
_080A1E5C: .4byte gUnk_02012000
_080A1E60: .4byte 0x050000C1
_080A1E64: .4byte 0x0000FFFF

	thumb_func_start sub_080A1E68
sub_080A1E68: @ 0x080A1E68
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r4, r0, #0
	adds r5, r1, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r0, _080A1EC4 @ =gUnk_03006B58
	ldr r7, [r0]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_080A4EB4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	lsls r0, r0, #1
	add r0, r8
	lsls r0, r0, #2
	adds r0, #4
	adds r6, r7, r0
	strh r4, [r6]
	strh r5, [r6, #2]
	mov r0, r8
	bl sub_080A21AC
	adds r1, r0, #0
	strh r1, [r6, #4]
	ldrh r0, [r7]
	ldr r4, _080A1EC8 @ =0x0000FFFF
	cmp r0, r4
	bne _080A1ECC
	ldrh r1, [r6, #8]
	adds r0, r4, #0
	orrs r0, r1
	strh r0, [r6, #8]
	ldrh r1, [r6, #0xa]
	adds r0, r4, #0
	orrs r0, r1
	strh r0, [r6, #0xa]
	mov r0, r8
	strh r0, [r7]
	strh r0, [r7, #2]
	b _080A1F66
	.align 2, 0
_080A1EC4: .4byte gUnk_03006B58
_080A1EC8: .4byte 0x0000FFFF
_080A1ECC:
	ldrh r2, [r7]
	mov ip, r2
	cmp r2, r4
	beq _080A1F02
	lsls r3, r2, #1
	adds r0, r3, r2
	lsls r0, r0, #2
	adds r0, r7, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	b _080A1EFA
_080A1EE2:
	adds r0, r3, r2
	lsls r0, r0, #2
	adds r0, r7, r0
	ldrh r2, [r0, #0xe]
	cmp r2, r4
	beq _080A1F02
	lsls r3, r2, #1
	adds r0, r3, r2
	lsls r0, r0, #2
	adds r0, r7, r0
	movs r5, #4
	ldrsh r1, [r6, r5]
_080A1EFA:
	movs r5, #8
	ldrsh r0, [r0, r5]
	cmp r1, r0
	bgt _080A1EE2
_080A1F02:
	mov r1, ip
	lsls r0, r1, #0x10
	lsrs r0, r0, #0x10
	cmp r2, r0
	bne _080A1F24
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r7, r0
	ldrh r0, [r4, #8]
	strh r0, [r6, #8]
	strh r2, [r6, #0xa]
	mov r5, r8
	strh r5, [r4, #8]
	strh r5, [r7]
	b _080A1F66
_080A1F24:
	ldr r0, _080A1F44 @ =0x0000FFFF
	cmp r2, r0
	bne _080A1F48
	ldrh r0, [r7, #2]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, #4
	adds r3, r7, r1
	strh r0, [r6, #8]
	ldrh r0, [r3, #0xa]
	strh r0, [r6, #0xa]
	mov r0, r8
	strh r0, [r3, #0xa]
	strh r0, [r7, #2]
	b _080A1F66
	.align 2, 0
_080A1F44: .4byte 0x0000FFFF
_080A1F48:
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r7, r0
	ldrh r1, [r4, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r7
	strh r1, [r6, #8]
	strh r2, [r6, #0xa]
	mov r1, r8
	strh r1, [r3, #0xe]
	strh r1, [r4, #8]
_080A1F66:
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080A1F70
sub_080A1F70: @ 0x080A1F70
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _080A1FAC @ =gUnk_03006B58
	ldr r5, [r2]
	bl sub_080A4EB4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r5, r0
	ldrh r1, [r5]
	cmp r2, r1
	bne _080A1FC8
	ldrh r3, [r5, #2]
	cmp r2, r3
	bne _080A1FB4
	ldr r2, _080A1FB0 @ =0x0000FFFF
	adds r0, r2, #0
	orrs r1, r0
	strh r1, [r5]
	orrs r0, r3
	strh r0, [r5, #2]
	b _080A1FFC
	.align 2, 0
_080A1FAC: .4byte gUnk_03006B58
_080A1FB0: .4byte 0x0000FFFF
_080A1FB4:
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, r0, r5
	ldrh r0, [r4, #8]
	strh r0, [r2, #0xc]
	ldrh r0, [r4, #0xa]
	strh r0, [r5]
	b _080A1FFC
_080A1FC8:
	ldrh r0, [r5, #2]
	cmp r2, r0
	bne _080A1FE2
	ldrh r1, [r4, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	ldrh r0, [r4, #0xa]
	strh r0, [r3, #0xe]
	ldrh r0, [r4, #8]
	strh r0, [r5, #2]
	b _080A1FFC
_080A1FE2:
	ldrh r1, [r4, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, r0, r5
	strh r1, [r3, #0xe]
	ldrh r0, [r4, #8]
	strh r0, [r2, #0xc]
_080A1FFC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A2004
sub_080A2004: @ 0x080A2004
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r2, _080A2074 @ =gUnk_03006B58
	ldr r5, [r2]
	bl sub_080A4EB4
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_080A21AC
	lsls r0, r0, #0x10
	lsls r1, r4, #1
	adds r1, r1, r4
	lsls r1, r1, #2
	adds r1, r5, r1
	lsrs r3, r0, #0x10
	asrs r0, r0, #0x10
	movs r6, #8
	ldrsh r2, [r1, r6]
	cmp r0, r2
	bge _080A207C
	strh r3, [r1, #8]
	ldrh r2, [r5]
	cmp r4, r2
	beq _080A20BA
	ldrh r1, [r1, #0xc]
	ldr r2, _080A2078 @ =0x0000FFFF
	cmp r1, r2
	beq _080A20BA
	adds r6, r0, #0
	adds r7, r2, #0
_080A204A:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	movs r2, #8
	ldrsh r0, [r0, r2]
	cmp r6, r0
	bge _080A20BA
	adds r0, r4, #0
	movs r2, #0
	bl sub_080A20C4
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r5, r0
	ldrh r1, [r0, #0xc]
	cmp r1, r7
	bne _080A204A
	b _080A20BA
	.align 2, 0
_080A2074: .4byte gUnk_03006B58
_080A2078: .4byte 0x0000FFFF
_080A207C:
	cmp r0, r2
	ble _080A20BA
	strh r3, [r1, #8]
	ldrh r6, [r5, #2]
	cmp r4, r6
	beq _080A20BA
	ldrh r1, [r1, #0xe]
	ldr r2, _080A20C0 @ =0x0000FFFF
	cmp r1, r2
	beq _080A20BA
	adds r6, r0, #0
	adds r7, r2, #0
_080A2094:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r0, r5, r0
	movs r2, #8
	ldrsh r0, [r0, r2]
	cmp r6, r0
	ble _080A20BA
	adds r0, r4, #0
	movs r2, #1
	bl sub_080A20C4
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	adds r0, r5, r0
	ldrh r1, [r0, #0xe]
	cmp r1, r7
	bne _080A2094
_080A20BA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A20C0: .4byte 0x0000FFFF

	thumb_func_start sub_080A20C4
sub_080A20C4: @ 0x080A20C4
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov ip, r2
	ldr r0, _080A2104 @ =gUnk_03006B58
	ldr r5, [r0]
	lsls r0, r6, #1
	adds r0, r0, r6
	lsls r0, r0, #2
	adds r0, #4
	adds r4, r5, r0
	ldrh r0, [r5]
	ldrh r1, [r5, #2]
	cmp r0, r1
	beq _080A21A6
	cmp r6, r0
	bne _080A2108
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, r0, r5
	ldrh r0, [r4, #8]
	strh r0, [r2, #0xc]
	ldrh r0, [r4, #0xa]
	strh r0, [r5]
	b _080A213A
	.align 2, 0
_080A2104: .4byte gUnk_03006B58
_080A2108:
	cmp r6, r1
	bne _080A2120
	ldrh r1, [r4, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	ldrh r0, [r4, #0xa]
	strh r0, [r3, #0xe]
	ldrh r0, [r4, #8]
	strh r0, [r5, #2]
	b _080A213A
_080A2120:
	ldrh r1, [r4, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	ldrh r1, [r4, #0xa]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r2, r0, r5
	strh r1, [r3, #0xe]
	ldrh r0, [r4, #8]
	strh r0, [r2, #0xc]
_080A213A:
	mov r0, ip
	cmp r0, #0
	bne _080A2170
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #2
	adds r0, #4
	adds r2, r5, r0
	ldrh r0, [r5]
	cmp r7, r0
	bne _080A215C
	ldrh r0, [r2, #8]
	strh r0, [r4, #8]
	strh r7, [r4, #0xa]
	strh r6, [r2, #8]
	strh r6, [r5]
	b _080A21A6
_080A215C:
	ldrh r1, [r2, #8]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #2
	adds r3, r0, r5
	strh r1, [r4, #8]
	strh r7, [r4, #0xa]
	strh r6, [r3, #0xe]
	strh r6, [r2, #8]
	b _080A21A6
_080A2170:
	mov r0, ip
	cmp r0, #1
	bne _080A21A6
	lsls r0, r7, #1
	adds r0, r0, r7
	lsls r0, r0, #2
	adds r0, #4
	adds r3, r5, r0
	ldrh r0, [r5, #2]
	cmp r7, r0
	bne _080A2192
	strh r7, [r4, #8]
	ldrh r0, [r3, #0xa]
	strh r0, [r4, #0xa]
	strh r6, [r3, #0xa]
	strh r6, [r5, #2]
	b _080A21A6
_080A2192:
	ldrh r0, [r3, #0xa]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r2, r1, r5
	strh r7, [r4, #8]
	ldrh r0, [r3, #0xa]
	strh r0, [r4, #0xa]
	strh r6, [r3, #0xa]
	strh r6, [r2, #0xc]
_080A21A6:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080A21AC
sub_080A21AC: @ 0x080A21AC
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r3, #0
	ldr r1, _080A21D0 @ =gUnk_03006B58
	ldr r2, [r1]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, #4
	adds r0, r2, r1
	ldrh r1, [r0]
	cmp r1, #0
	beq _080A21D4
	cmp r1, #1
	beq _080A220C
	b _080A2238
	.align 2, 0
_080A21D0: .4byte gUnk_03006B58
_080A21D4:
	ldr r3, _080A2200 @ =gUnk_03006B54
	ldrh r1, [r0, #2]
	movs r0, #0x54
	adds r2, r1, #0
	muls r2, r0, r2
	ldr r0, _080A2204 @ =0x00000AB8
	adds r2, r2, r0
	ldr r1, [r3]
	adds r2, r1, r2
	ldrh r0, [r2, #0x12]
	lsls r0, r0, #4
	movs r3, #0xcb
	lsls r3, r3, #3
	adds r0, r0, r3
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A2208 @ =gUnk_08BD505C
	b _080A2228
	.align 2, 0
_080A2200: .4byte gUnk_03006B54
_080A2204: .4byte 0x00000AB8
_080A2208: .4byte gUnk_08BD505C
_080A220C:
	ldr r2, _080A2240 @ =gUnk_03006B54
	ldrh r1, [r0, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A2244 @ =0x00001538
	adds r0, r0, r1
	ldr r2, [r2]
	adds r2, r2, r0
	ldrb r1, [r2, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A2248 @ =gUnk_08BD5110
_080A2228:
	adds r1, r0, r1
	ldrh r0, [r2, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r1, [r1, #6]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
_080A2238:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	pop {r1}
	bx r1
	.align 2, 0
_080A2240: .4byte gUnk_03006B54
_080A2244: .4byte 0x00001538
_080A2248: .4byte gUnk_08BD5110

	thumb_func_start sub_080A224C
sub_080A224C: @ 0x080A224C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	str r2, [sp, #0xc]
	str r3, [sp, #0x10]
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	adds r5, r2, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r0, _080A2288 @ =gUnk_03006B54
	ldr r3, [r0]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r0, r3, r0
	str r0, [sp, #0x18]
	ldr r7, _080A228C @ =0x00001EB8
	adds r4, r3, r7
	movs r0, #0
	mov r8, r0
	cmp r2, #1
	beq _080A22EC
	cmp r2, #1
	bgt _080A2290
	cmp r2, #0
	beq _080A2298
	b _080A2406
	.align 2, 0
_080A2288: .4byte gUnk_03006B54
_080A228C: .4byte 0x00001EB8
_080A2290:
	cmp r5, #0xff
	bne _080A2296
	b _080A23A4
_080A2296:
	b _080A2406
_080A2298:
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A22E4 @ =0x00000AB8
	adds r0, r0, r1
	adds r2, r3, r0
	ldrh r0, [r2, #0x12]
	lsls r0, r0, #4
	movs r4, #0xcb
	lsls r4, r4, #3
	adds r0, r0, r4
	adds r0, r3, r0
	ldrh r1, [r0, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A22E8 @ =gUnk_08BD505C
	adds r5, r0, r1
	ldrh r1, [r2, #0xe]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A22CA
	movs r7, #1
	mov r8, r7
_080A22CA:
	ldrh r3, [r2]
	lsls r3, r3, #0x10
	ldrh r0, [r2, #2]
	lsls r0, r0, #0x10
	add r6, sp, #4
	asrs r3, r3, #0x14
	movs r2, #8
	ldrsh r1, [r5, r2]
	adds r1, r3, r1
	asrs r1, r1, #3
	asrs r0, r0, #0x14
	b _080A23C0
	.align 2, 0
_080A22E4: .4byte 0x00000AB8
_080A22E8: .4byte gUnk_08BD505C
_080A22EC:
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r7, _080A239C @ =0x00001538
	adds r0, r0, r7
	adds r6, r3, r0
	ldrb r1, [r6, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A23A0 @ =gUnk_08BD5110
	adds r5, r0, r1
	ldrh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r6, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrh r1, [r6, #8]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A2326
	movs r0, #1
	mov r8, r0
_080A2326:
	add r7, sp, #4
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r4, #8
	ldrsh r1, [r5, r4]
	adds r1, r3, r1
	asrs r1, r1, #3
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	movs r4, #0xa
	ldrsh r2, [r5, r4]
	adds r2, r0, r2
	asrs r2, r2, #3
	mov sl, r2
	movs r4, #0xc
	ldrsh r2, [r5, r4]
	mov sb, r2
	add r3, sb
	asrs r3, r3, #3
	adds r3, #1
	mov ip, r3
	movs r3, #0xe
	ldrsh r2, [r5, r3]
	mov sb, r2
	add r0, sb
	asrs r0, r0, #3
	adds r0, #1
	str r0, [sp]
	adds r0, r7, #0
	mov r2, sl
	mov r3, ip
	bl sub_080A586C
	ldrb r0, [r6, #4]
	cmp r0, #7
	bne _080A2378
	add r0, sp, #4
	movs r1, #0
	movs r2, #1
	bl sub_080A58C4
_080A2378:
	movs r4, #6
	ldrsh r2, [r7, r4]
	movs r1, #2
	ldrsh r0, [r7, r1]
	subs r2, r2, r0
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	movs r4, #0xa
	ldrsh r1, [r5, r4]
	subs r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
	cmp r2, r0
	ble _080A2406
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _080A2406
	.align 2, 0
_080A239C: .4byte 0x00001538
_080A23A0: .4byte gUnk_08BD5110
_080A23A4:
	ldrh r0, [r4, #0x1a]
	ldr r5, _080A241C @ =gUnk_08BD5214
	cmp r0, #1
	bne _080A23AE
	ldr r5, _080A2420 @ =gUnk_08BD5228
_080A23AE:
	add r6, sp, #4
	movs r7, #0x14
	ldrsh r3, [r4, r7]
	movs r0, #8
	ldrsh r1, [r5, r0]
	adds r1, r3, r1
	asrs r1, r1, #3
	movs r2, #0x16
	ldrsh r0, [r4, r2]
_080A23C0:
	movs r4, #0xa
	ldrsh r2, [r5, r4]
	adds r2, r0, r2
	asrs r2, r2, #3
	movs r7, #0xc
	ldrsh r4, [r5, r7]
	adds r3, r3, r4
	asrs r3, r3, #3
	adds r3, #1
	movs r7, #0xe
	ldrsh r4, [r5, r7]
	adds r0, r0, r4
	asrs r0, r0, #3
	adds r0, #1
	str r0, [sp]
	adds r0, r6, #0
	bl sub_080A586C
	movs r0, #6
	ldrsh r2, [r6, r0]
	movs r1, #2
	ldrsh r0, [r6, r1]
	subs r2, r2, r0
	movs r3, #0xe
	ldrsh r0, [r5, r3]
	movs r4, #0xa
	ldrsh r1, [r5, r4]
	subs r0, r0, r1
	asrs r0, r0, #3
	adds r0, #1
	cmp r2, r0
	ble _080A2406
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
_080A2406:
	ldr r7, [sp, #0x18]
	ldrh r0, [r7, #0xc]
	cmp r0, #5
	bne _080A2424
	movs r0, #4
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	movs r0, #1
	ldr r2, [sp, #0x10]
	b _080A2556
	.align 2, 0
_080A241C: .4byte gUnk_08BD5214
_080A2420: .4byte gUnk_08BD5228
_080A2424:
	mov r3, r8
	cmp r3, #1
	bne _080A2436
	movs r0, #3
	ldr r4, [sp, #0xc]
	strb r0, [r4]
	ldr r7, [sp, #0x10]
	strb r3, [r7]
	b _080A2558
_080A2436:
	cmp r0, #1
	bhi _080A245A
	movs r0, #5
	ldr r1, [sp, #0xc]
	strb r0, [r1]
	movs r0, #2
	ldr r2, [sp, #0x10]
	strb r0, [r2]
	b _080A2466
_080A2448:
	ldr r3, [sp, #0xc]
	ldrb r0, [r3]
	subs r0, #1
	strb r0, [r3]
	ldr r4, [sp, #0x10]
	ldrb r0, [r4]
	subs r0, #1
	strb r0, [r4]
	b _080A2558
_080A245A:
	movs r0, #5
	ldr r7, [sp, #0xc]
	strb r0, [r7]
	movs r0, #3
	ldr r1, [sp, #0x10]
	strb r0, [r1]
_080A2466:
	ldr r2, [sp, #0x10]
	ldrb r0, [r2]
	cmp r0, #1
	bls _080A2558
	ldr r3, [sp, #0x18]
	ldrh r0, [r3, #0xc]
	cmp r0, #0
	beq _080A2558
	cmp r0, #3
	bhi _080A2558
	movs r4, #0
	str r4, [sp, #0x14]
	ldr r2, _080A2568 @ =gUnk_03006B54
	ldr r7, [sp, #0x10]
	ldrb r1, [r7]
	movs r0, #0x2c
	muls r1, r0, r1
	movs r0, #0x91
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	ldr r0, [r0, #0x28]
	mov sl, r0
	ldr r1, [r3, #0x10]
	mov sb, r1
	add r0, sp, #4
	adds r5, r0, #0
	ldrh r6, [r0, #2]
	lsls r2, r6, #0x10
	asrs r1, r2, #0x10
	movs r3, #6
	ldrsh r0, [r0, r3]
	cmp r1, r0
	bge _080A2542
	add r4, sp, #4
	mov ip, r4
_080A24B0:
	asrs r1, r2, #0x10
	cmp r1, #0
	blt _080A252A
	ldr r7, [sp, #0x18]
	movs r2, #0xa
	ldrsh r0, [r7, r2]
	cmp r1, r0
	bge _080A252A
	ldrh r3, [r7, #8]
	adds r0, r1, #0
	muls r0, r3, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	mov r7, ip
	ldrh r4, [r7]
	lsls r2, r4, #0x10
	asrs r1, r2, #0x10
	movs r7, #4
	ldrsh r0, [r5, r7]
	cmp r1, r0
	bge _080A252A
	lsls r0, r3, #0x10
	asrs r5, r0, #0x10
	ldr r0, _080A256C @ =0x000003FF
	mov r8, r0
	mov r1, ip
	movs r7, #4
	ldrsh r3, [r1, r7]
_080A24EA:
	asrs r0, r2, #0x10
	cmp r0, #0
	blt _080A2518
	cmp r0, r5
	bge _080A2518
	ldr r1, [sp, #0x1c]
	adds r2, r1, r0
	lsls r0, r2, #1
	add r0, sl
	ldrh r1, [r0]
	mov r0, r8
	ands r0, r1
	cmp r0, #0
	beq _080A250A
	movs r7, #1
	str r7, [sp, #0x14]
_080A250A:
	mov r1, sb
	adds r0, r1, r2
	ldrb r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080A2448
_080A2518:
	lsls r0, r4, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r4, r0, #0x10
	lsls r2, r4, #0x10
	asrs r0, r2, #0x10
	cmp r0, r3
	blt _080A24EA
_080A252A:
	lsls r0, r6, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r6, r0, #0x10
	add r5, sp, #4
	lsls r2, r6, #0x10
	asrs r1, r2, #0x10
	movs r4, #6
	ldrsh r0, [r5, r4]
	cmp r1, r0
	blt _080A24B0
_080A2542:
	ldr r7, [sp, #0x14]
	cmp r7, #0
	bne _080A2558
	ldr r1, [sp, #0xc]
	ldrb r0, [r1]
	subs r0, #1
	strb r0, [r1]
	ldr r2, [sp, #0x10]
	ldrb r0, [r2]
	subs r0, #1
_080A2556:
	strb r0, [r2]
_080A2558:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2568: .4byte gUnk_03006B54
_080A256C: .4byte 0x000003FF

	thumb_func_start sub_080A2570
sub_080A2570: @ 0x080A2570
	push {r4, r5, r6, r7, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	adds r7, r5, #0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	mov r4, sp
	adds r4, #1
	adds r0, r5, #0
	adds r1, r6, #0
	mov r2, sp
	adds r3, r4, #0
	bl sub_080A224C
	cmp r5, #1
	beq _080A25D8
	cmp r5, #1
	bgt _080A259C
	cmp r5, #0
	beq _080A25A2
	b _080A264E
_080A259C:
	cmp r7, #0xff
	beq _080A25FC
	b _080A264E
_080A25A2:
	ldr r1, _080A25D0 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _080A25D4 @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	adds r0, r5, #0
	adds r0, #0x1c
	mov r1, sp
	ldrb r1, [r1]
	ldrb r2, [r4]
	bl sub_0800A6C4
	adds r0, r5, #0
	adds r0, #0x44
	mov r1, sp
	ldrb r1, [r1]
	ldrb r2, [r4]
	bl sub_0800944C
	b _080A264E
	.align 2, 0
_080A25D0: .4byte gUnk_03006B54
_080A25D4: .4byte 0x00000AB8
_080A25D8:
	ldr r1, _080A25F4 @ =gUnk_03006B54
	lsls r0, r6, #4
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r1, [r1]
	adds r0, r0, r1
	ldr r5, _080A25F8 @ =0x0000154C
	adds r0, r0, r5
	mov r1, sp
	ldrb r1, [r1]
	ldrb r2, [r4]
	bl sub_0800A6C4
	b _080A264E
	.align 2, 0
_080A25F4: .4byte gUnk_03006B54
_080A25F8: .4byte 0x0000154C
_080A25FC:
	ldr r0, _080A2658 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A265C @ =0x00001EB8
	adds r6, r1, r0
	ldrh r3, [r6, #4]
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _080A2660 @ =0x00000AB8
	adds r0, r0, r2
	adds r5, r1, r0
	ldrh r0, [r6, #0x1a]
	cmp r0, #3
	bne _080A2640
	ldr r1, _080A2664 @ =gUnk_08BD505C
	ldr r2, _080A2668 @ =gUnk_08BD5214
	ldrh r0, [r5, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	movs r5, #2
	ldrsh r1, [r1, r5]
	adds r0, r0, r1
	movs r5, #0x16
	ldrsh r1, [r6, r5]
	movs r5, #0xe
	ldrsh r2, [r2, r5]
	adds r1, r1, r2
	cmp r0, r1
	bge _080A2640
	movs r0, #0
	adds r1, r3, #0
	mov r2, sp
	adds r3, r4, #0
	bl sub_080A224C
_080A2640:
	adds r0, r6, #0
	adds r0, #0x24
	mov r1, sp
	ldrb r1, [r1]
	ldrb r2, [r4]
	bl sub_0800A6C4
_080A264E:
	add sp, #4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2658: .4byte gUnk_03006B54
_080A265C: .4byte 0x00001EB8
_080A2660: .4byte 0x00000AB8
_080A2664: .4byte gUnk_08BD505C
_080A2668: .4byte gUnk_08BD5214

	thumb_func_start sub_080A266C
sub_080A266C: @ 0x080A266C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	ldr r1, _080A2708 @ =gUnk_03006B54
	ldr r0, [r1]
	ldr r2, _080A270C @ =0x00001EB8
	adds r7, r0, r2
	movs r5, #0
	mov r8, r1
_080A2682:
	ldrh r1, [r7, #4]
	lsls r0, r5, #0x10
	asrs r2, r0, #0x10
	cmp r1, r2
	beq _080A26B8
	movs r0, #0x54
	muls r0, r2, r0
	ldr r1, _080A2710 @ =0x00000AB8
	adds r0, r0, r1
	mov r2, r8
	ldr r1, [r2]
	adds r4, r1, r0
	ldrh r1, [r4, #0xe]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A26B8
	adds r0, r4, #0
	adds r0, #0x1c
	adds r1, r6, #0
	bl sub_0800A72C
	adds r0, r4, #0
	adds r0, #0x44
	adds r1, r6, #0
	bl sub_080094D8
_080A26B8:
	lsls r0, r5, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r5, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	ble _080A2682
	movs r5, #0
	ldr r7, _080A2708 @ =gUnk_03006B54
_080A26CC:
	lsls r0, r5, #0x10
	asrs r4, r0, #0x10
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A2714 @ =0x00001538
	adds r0, r0, r2
	ldr r1, [r7]
	adds r2, r1, r0
	ldrh r1, [r2, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A26F2
	adds r0, r2, #0
	adds r0, #0x14
	adds r1, r6, #0
	bl sub_0800A72C
_080A26F2:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	ble _080A26CC
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2708: .4byte gUnk_03006B54
_080A270C: .4byte 0x00001EB8
_080A2710: .4byte 0x00000AB8
_080A2714: .4byte 0x00001538

	thumb_func_start sub_080A2718
sub_080A2718: @ 0x080A2718
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	lsls r1, r1, #0x10
	lsrs r3, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	str r2, [sp]
	movs r0, #0
	str r0, [sp, #8]
	ldr r0, _080A2758 @ =gUnk_03006B54
	ldr r1, [r0]
	movs r2, #0x9c
	lsls r2, r2, #1
	adds r2, r2, r1
	mov r8, r2
	movs r4, #0
	str r4, [sp, #4]
	mov r5, sb
	cmp r5, #1
	beq _080A27DC
	cmp r5, #1
	bgt _080A275C
	cmp r5, #0
	beq _080A2766
	b _080A2916
	.align 2, 0
_080A2758: .4byte gUnk_03006B54
_080A275C:
	mov r7, sb
	cmp r7, #2
	bne _080A2764
	b _080A289C
_080A2764:
	b _080A2916
_080A2766:
	movs r0, #0x54
	muls r0, r3, r0
	ldr r2, _080A2798 @ =0x00000AB8
	adds r0, r0, r2
	adds r4, r1, r0
	ldrh r0, [r4, #0x12]
	lsls r0, r0, #4
	movs r5, #0xcb
	lsls r5, r5, #3
	adds r0, r0, r5
	adds r0, r1, r0
	ldrh r1, [r0, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A279C @ =gUnk_08BD505C
	adds r7, r0, r1
	ldr r0, [sp]
	cmp r0, #0
	bne _080A27A4
	ldrh r1, [r4, #0xe]
	ldr r0, _080A27A0 @ =0x0000EFFF
	ands r0, r1
	b _080A27C8
	.align 2, 0
_080A2798: .4byte 0x00000AB8
_080A279C: .4byte gUnk_08BD505C
_080A27A0: .4byte 0x0000EFFF
_080A27A4:
	ldr r1, [sp]
	cmp r1, #1
	bne _080A27CA
	ldrh r1, [r4, #0xe]
	movs r5, #0x80
	lsls r5, r5, #5
	adds r0, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080A27C2
	movs r0, #0
	adds r1, r3, #0
	movs r2, #0
	bl sub_080A2718
_080A27C2:
	ldrh r1, [r4, #0xe]
	adds r0, r5, #0
	orrs r0, r1
_080A27C8:
	strh r0, [r4, #0xe]
_080A27CA:
	ldrh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r5, [r7, #8]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrh r0, [r4, #2]
	b _080A284E
_080A27DC:
	lsls r0, r3, #4
	subs r0, r0, r3
	lsls r0, r0, #2
	ldr r7, _080A2808 @ =0x00001538
	adds r0, r0, r7
	adds r1, r1, r0
	str r1, [sp, #4]
	ldrb r1, [r1, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A280C @ =gUnk_08BD5110
	adds r7, r0, r1
	ldr r0, [sp]
	cmp r0, #0
	bne _080A2814
	ldr r2, [sp, #4]
	ldrh r1, [r2, #8]
	ldr r0, _080A2810 @ =0x0000FFEF
	ands r0, r1
	b _080A283A
	.align 2, 0
_080A2808: .4byte 0x00001538
_080A280C: .4byte gUnk_08BD5110
_080A2810: .4byte 0x0000FFEF
_080A2814:
	ldr r4, [sp]
	cmp r4, #1
	bne _080A283C
	ldr r5, [sp, #4]
	ldrh r1, [r5, #8]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A2830
	movs r0, #1
	adds r1, r3, #0
	movs r2, #0
	bl sub_080A2718
_080A2830:
	ldr r1, [sp, #4]
	ldrh r0, [r1, #8]
	movs r1, #0x10
	orrs r0, r1
	ldr r2, [sp, #4]
_080A283A:
	strh r0, [r2, #8]
_080A283C:
	ldr r3, [sp, #4]
	ldrh r0, [r3]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r5, [r7, #8]
	adds r0, r5, r0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrh r0, [r3, #2]
_080A284E:
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	ldrh r6, [r7, #0xa]
	adds r0, r6, r0
	ldr r3, _080A2894 @ =0xFFFF0000
	adds r1, r3, #0
	ldr r4, [sp, #0xc]
	ands r1, r4
	orrs r1, r2
	str r1, [sp, #0xc]
	lsls r0, r0, #0x10
	ldr r4, _080A2898 @ =0x0000FFFF
	adds r2, r4, #0
	ands r2, r1
	orrs r2, r0
	str r2, [sp, #0xc]
	ldrh r0, [r7, #0xc]
	subs r0, r0, r5
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r5, [sp, #0x10]
	ands r3, r5
	orrs r3, r0
	str r3, [sp, #0x10]
	ldrh r0, [r7, #0xe]
	subs r0, r0, r6
	asrs r2, r2, #0x10
	adds r0, r0, r2
	lsls r0, r0, #0x10
	ands r3, r4
	orrs r3, r0
	str r3, [sp, #0x10]
	b _080A2916
	.align 2, 0
_080A2894: .4byte 0xFFFF0000
_080A2898: .4byte 0x0000FFFF
_080A289C:
	lsls r0, r3, #4
	ldr r7, _080A28B8 @ =0x00001CB8
	adds r0, r0, r7
	adds r1, r1, r0
	str r1, [sp, #8]
	ldr r0, [sp]
	cmp r0, #0
	bne _080A28C0
	ldrh r1, [r1, #0xa]
	ldr r0, _080A28BC @ =0x0000FFEF
	ands r0, r1
	ldr r1, [sp, #8]
	strh r0, [r1, #0xa]
	b _080A28E6
	.align 2, 0
_080A28B8: .4byte 0x00001CB8
_080A28BC: .4byte 0x0000FFEF
_080A28C0:
	ldr r2, [sp]
	cmp r2, #1
	bne _080A28E6
	ldr r4, [sp, #8]
	ldrh r1, [r4, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A28DC
	movs r0, #2
	adds r1, r3, #0
	movs r2, #0
	bl sub_080A2718
_080A28DC:
	ldr r5, [sp, #8]
	ldrh r0, [r5, #0xa]
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r5, #0xa]
_080A28E6:
	ldr r7, [sp, #8]
	ldrh r2, [r7]
	ldr r1, _080A29B0 @ =0xFFFF0000
	adds r0, r1, #0
	ldr r3, [sp, #0xc]
	ands r0, r3
	orrs r0, r2
	str r0, [sp, #0xc]
	ldrh r2, [r7, #2]
	lsls r2, r2, #0x10
	ldr r3, _080A29B4 @ =0x0000FFFF
	ands r0, r3
	orrs r0, r2
	str r0, [sp, #0xc]
	ldrh r0, [r7, #4]
	ldr r4, [sp, #0x10]
	ands r1, r4
	orrs r1, r0
	str r1, [sp, #0x10]
	ldrh r0, [r7, #6]
	lsls r0, r0, #0x10
	ands r1, r3
	orrs r1, r0
	str r1, [sp, #0x10]
_080A2916:
	ldr r0, _080A29B8 @ =0x00030003
	ldr r1, [sp, #0xc]
	ands r0, r1
	cmp r0, #0
	beq _080A2922
	b _080A2A84
_080A2922:
	lsrs r2, r1, #0x10
	lsls r1, r2, #0x10
	asrs r0, r1, #0x10
	ldr r5, [sp, #0x10]
	asrs r3, r5, #0x10
	cmp r0, r3
	blt _080A2932
	b _080A2A84
_080A2932:
	asrs r0, r1, #0x13
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	mov ip, r7
	asrs r0, r0, #0x10
	mov r4, r8
	movs r5, #0xa
	ldrsh r1, [r4, r5]
	cmp r0, r1
	ble _080A2948
	b _080A2A84
_080A2948:
	ldr r7, [sp, #0x10]
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	mov sl, r0
	str r3, [sp, #0x14]
_080A2952:
	ldr r1, [sp, #0xc]
	lsls r0, r1, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r5, #0x10
	asrs r0, r1, #0x10
	lsls r2, r2, #0x10
	str r2, [sp, #0x18]
	cmp r0, sl
	bge _080A2A5A
	asrs r4, r2, #0x10
	adds r0, r4, #0
	movs r2, #4
	ands r0, r2
	lsls r0, r0, #0x10
	asrs r6, r0, #0x10
_080A2970:
	asrs r3, r1, #0x10
	asrs r2, r1, #0x13
	mov r7, r8
	movs r1, #8
	ldrsh r0, [r7, r1]
	cmp r2, r0
	bgt _080A2A48
	adds r1, r0, #0
	mov r7, ip
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	muls r1, r0, r1
	mov r7, r8
	ldr r0, [r7, #0x14]
	adds r0, r0, r1
	adds r2, r0, r2
	ldr r0, [sp]
	cmp r0, #1
	bne _080A2A10
	movs r1, #4
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _080A29BC
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _080A29CA
	ldrb r0, [r2]
	movs r1, #1
	b _080A29D8
	.align 2, 0
_080A29B0: .4byte 0xFFFF0000
_080A29B4: .4byte 0x0000FFFF
_080A29B8: .4byte 0x00030003
_080A29BC:
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _080A29D4
	ldrb r0, [r2]
	movs r1, #2
	b _080A29D8
_080A29CA:
	cmp r6, #0
	beq _080A29D4
	ldrb r1, [r2]
	movs r0, #4
	b _080A29D8
_080A29D4:
	ldrb r0, [r2]
	movs r1, #8
_080A29D8:
	orrs r0, r1
	strb r0, [r2]
	mov r1, sb
	cmp r1, #1
	bne _080A29F6
	ldr r3, [sp, #4]
	ldrb r0, [r3, #4]
	cmp r0, #5
	beq _080A29F6
	cmp r0, #7
	beq _080A29F6
	ldrb r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	strb r0, [r2]
_080A29F6:
	mov r7, sb
	cmp r7, #2
	bne _080A2A48
	ldr r1, [sp, #8]
	ldrh r0, [r1, #0xc]
	movs r3, #0x80
	lsls r3, r3, #6
	cmp r0, r3
	bne _080A2A48
	ldrb r0, [r2]
	movs r1, #0x10
	orrs r0, r1
	b _080A2A46
_080A2A10:
	movs r1, #4
	adds r0, r3, #0
	ands r0, r1
	cmp r0, #0
	bne _080A2A28
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _080A2A36
	ldrb r1, [r2]
	movs r0, #0xfe
	b _080A2A44
_080A2A28:
	adds r0, r4, #0
	ands r0, r1
	cmp r0, #0
	bne _080A2A40
	ldrb r1, [r2]
	movs r0, #0xfd
	b _080A2A44
_080A2A36:
	cmp r6, #0
	beq _080A2A40
	ldrb r1, [r2]
	movs r0, #0xfb
	b _080A2A44
_080A2A40:
	ldrb r1, [r2]
	movs r0, #0xf7
_080A2A44:
	ands r0, r1
_080A2A46:
	strb r0, [r2]
_080A2A48:
	lsls r0, r5, #0x10
	movs r5, #0x80
	lsls r5, r5, #0xb
	adds r0, r0, r5
	lsrs r5, r0, #0x10
	lsls r1, r5, #0x10
	asrs r0, r1, #0x10
	cmp r0, sl
	blt _080A2970
_080A2A5A:
	ldr r7, [sp, #0x18]
	movs r1, #0x80
	lsls r1, r1, #0xb
	adds r0, r7, r1
	lsrs r2, r0, #0x10
	lsls r1, r2, #0x10
	asrs r0, r1, #0x10
	ldr r3, [sp, #0x14]
	cmp r0, r3
	bge _080A2A84
	asrs r0, r1, #0x13
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	mov ip, r4
	asrs r0, r0, #0x10
	mov r5, r8
	movs r7, #0xa
	ldrsh r1, [r5, r7]
	cmp r0, r1
	bgt _080A2A84
	b _080A2952
_080A2A84:
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080A2A94
sub_080A2A94: @ 0x080A2A94
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r4, [sp, #0x1c]
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	mov r8, r3
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	mov sb, r4
	ldr r0, _080A2B20 @ =gUnk_03006B54
	ldr r1, [r0]
	lsls r0, r5, #4
	ldr r2, _080A2B24 @ =0x00001CB8
	adds r0, r0, r2
	adds r4, r1, r0
	ldrh r1, [r4, #0xa]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A2AD6
	movs r0, #2
	adds r1, r5, #0
	movs r2, #0
	bl sub_080A2718
_080A2AD6:
	lsls r0, r6, #0x18
	asrs r0, r0, #0x15
	strh r0, [r4]
	lsls r0, r7, #0x18
	asrs r0, r0, #0x15
	strh r0, [r4, #2]
	mov r1, r8
	lsls r0, r1, #0x18
	asrs r0, r0, #0x15
	adds r0, #7
	strh r0, [r4, #4]
	mov r2, sb
	lsls r0, r2, #0x18
	asrs r0, r0, #0x15
	adds r0, #7
	strh r0, [r4, #6]
	ldrh r1, [r4, #0xc]
	cmp r1, #8
	beq _080A2B08
	movs r0, #0x80
	lsls r0, r0, #6
	cmp r1, r0
	beq _080A2B08
	cmp r1, #0x40
	bne _080A2B12
_080A2B08:
	movs r0, #2
	adds r1, r5, #0
	movs r2, #1
	bl sub_080A2718
_080A2B12:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2B20: .4byte gUnk_03006B54
_080A2B24: .4byte 0x00001CB8

	thumb_func_start sub_080A2B28
sub_080A2B28: @ 0x080A2B28
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	ldr r0, _080A2B98 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A2B9C @ =0x00001EB8
	adds r0, r0, r1
	mov sl, r0
	ldr r2, _080A2BA0 @ =0x0000060C
	adds r2, r1, r2
	str r2, [sp, #0x10]
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _080A2BA4 @ =0x00000AB8
	adds r0, r0, r3
	adds r0, r1, r0
	str r0, [sp, #0x14]
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #4
	movs r5, #0xcb
	lsls r5, r5, #3
	adds r0, r0, r5
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A2BA8 @ =gUnk_08BD505C
	adds r2, r0, r1
	ldr r1, [sp, #0x14]
	ldrh r0, [r1]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	ldr r3, [sp, #0x14]
	ldrh r0, [r3, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	adds r7, r1, #0
	mov r6, r8
	ldrb r0, [r3, #9]
	cmp r0, #2
	beq _080A2BD0
	cmp r0, #2
	bgt _080A2BAC
	cmp r0, #1
	beq _080A2BC0
	b _080A2BE8
	.align 2, 0
_080A2B98: .4byte gUnk_03006B54
_080A2B9C: .4byte 0x00001EB8
_080A2BA0: .4byte 0x0000060C
_080A2BA4: .4byte 0x00000AB8
_080A2BA8: .4byte gUnk_08BD505C
_080A2BAC:
	cmp r0, #3
	beq _080A2BB6
	cmp r0, #4
	beq _080A2BDA
	b _080A2BE8
_080A2BB6:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	subs r0, #4
	ldrh r2, [r2, #0xa]
	b _080A2BC8
_080A2BC0:
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	adds r0, #4
	ldrh r2, [r2, #0xe]
_080A2BC8:
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	b _080A2BE8
_080A2BD0:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	subs r0, #4
	ldrh r2, [r2, #8]
	b _080A2BE2
_080A2BDA:
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	adds r0, #4
	ldrh r2, [r2, #0xc]
_080A2BE2:
	adds r0, r0, r2
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_080A2BE8:
	movs r5, #0
	str r5, [sp, #0xc]
	movs r2, #0
	ldr r3, [sp, #0x10]
	ldrb r0, [r3, #5]
	cmp r0, #0
	bne _080A2BF8
	b _080A2DF8
_080A2BF8:
	ldr r5, _080A2E08 @ =gUnk_03006B54
	mov sb, r5
	lsls r1, r1, #0x10
	str r1, [sp, #0x18]
_080A2C00:
	lsls r2, r2, #0x10
	asrs r0, r2, #0xc
	ldr r1, _080A2E0C @ =0x00001CB8
	adds r0, r0, r1
	mov r3, sb
	ldr r1, [r3]
	adds r4, r1, r0
	ldrh r1, [r4, #0xa]
	movs r0, #1
	ands r0, r1
	str r2, [sp, #0x1c]
	cmp r0, #0
	bne _080A2C1C
	b _080A2DD8
_080A2C1C:
	ldr r5, [sp, #0xc]
	lsls r0, r5, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	str r0, [sp, #0xc]
	ldrh r1, [r4, #0xc]
	ldr r2, _080A2E10 @ =0x0000C00F
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080A2C38
	b _080A2DD8
_080A2C38:
	ldrh r0, [r4, #0xe]
	cmp r0, #0
	bne _080A2C40
	b _080A2DD8
_080A2C40:
	movs r3, #0
	ldrsh r1, [r4, r3]
	movs r5, #2
	ldrsh r2, [r4, r5]
	movs r0, #4
	ldrsh r3, [r4, r0]
	movs r5, #6
	ldrsh r0, [r4, r5]
	str r0, [sp]
	add r0, sp, #4
	bl sub_080A586C
	ldrh r1, [r4, #0xc]
	movs r5, #4
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080A2C96
	mov r0, r8
	lsls r2, r0, #0x10
	add r0, sp, #4
	ldr r3, [sp, #0x18]
	asrs r1, r3, #0x10
	asrs r2, r2, #0x10
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A2C96
	ldrh r2, [r4, #0xe]
	cmp r2, #0
	beq _080A2C96
	mov r0, sb
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r3, _080A2E14 @ =0x0000FFFE
	ands r0, r3
	orrs r0, r5
	strh r0, [r1]
	movs r0, #0
	movs r1, #0
	bl sub_08012E14
_080A2C96:
	ldrh r1, [r4, #0xc]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A2CDE
	mov r5, r8
	lsls r2, r5, #0x10
	add r0, sp, #4
	ldr r3, [sp, #0x18]
	asrs r1, r3, #0x10
	asrs r2, r2, #0x10
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A2CDE
	ldrh r5, [r4, #0xe]
	cmp r5, #0
	beq _080A2CDE
	mov r0, sb
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r2, _080A2E14 @ =0x0000FFFE
	ands r0, r2
	movs r3, #4
	orrs r0, r3
	strh r0, [r1]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A2CDE:
	ldrh r1, [r4, #0xc]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A2D24
	lsls r1, r7, #0x10
	lsls r2, r6, #0x10
	add r0, sp, #4
	asrs r1, r1, #0x10
	asrs r2, r2, #0x10
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A2D24
	ldrh r5, [r4, #0xe]
	cmp r5, #0
	beq _080A2D24
	mov r0, sb
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r2, _080A2E14 @ =0x0000FFFE
	ands r0, r2
	movs r3, #4
	orrs r0, r3
	strh r0, [r1]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A2D24:
	ldrh r1, [r4, #0xc]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A2D7E
	lsls r1, r7, #0x10
	lsls r2, r6, #0x10
	add r0, sp, #4
	asrs r1, r1, #0x10
	asrs r2, r2, #0x10
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A2D7E
	mov r5, sl
	ldrb r0, [r5, #0x11]
	adds r1, r0, #1
	strb r1, [r5, #0x11]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x13
	bls _080A2D7E
	movs r0, #0
	strb r0, [r5, #0x11]
	ldrh r5, [r4, #0xe]
	cmp r5, #0
	beq _080A2D7E
	mov r0, sb
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r2, _080A2E14 @ =0x0000FFFE
	ands r0, r2
	movs r3, #4
	orrs r0, r3
	strh r0, [r1]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r5, #0
	bl sub_08012E14
_080A2D7E:
	ldrh r0, [r4, #0xc]
	movs r5, #0x80
	lsls r5, r5, #7
	adds r1, r5, #0
	ands r0, r1
	cmp r0, #0
	beq _080A2DD8
	mov r0, r8
	lsls r2, r0, #0x10
	add r0, sp, #4
	ldr r3, [sp, #0x18]
	asrs r1, r3, #0x10
	asrs r2, r2, #0x10
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A2DD8
	ldr r5, [sp, #0x14]
	ldrb r0, [r5, #0xb]
	subs r0, #0xc
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #2
	bhi _080A2DD8
	ldrh r4, [r4, #0xe]
	cmp r4, #0
	beq _080A2DD8
	mov r0, sb
	ldr r1, [r0]
	ldrh r0, [r1]
	ldr r2, _080A2E14 @ =0x0000FFFE
	ands r0, r2
	movs r3, #4
	orrs r0, r3
	strh r0, [r1]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A2DD8:
	ldr r5, [sp, #0x1c]
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r5, r1
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A2DF8
	ldr r3, [sp, #0x10]
	ldrb r1, [r3, #5]
	ldr r5, [sp, #0xc]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A2DF8
	b _080A2C00
_080A2DF8:
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A2E08: .4byte gUnk_03006B54
_080A2E0C: .4byte 0x00001CB8
_080A2E10: .4byte 0x0000C00F
_080A2E14: .4byte 0x0000FFFE

	thumb_func_start sub_080A2E18
sub_080A2E18: @ 0x080A2E18
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	ldr r0, _080A2EA4 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A2EA8 @ =0x00001EB8
	adds r0, r1, r0
	str r0, [sp, #0x20]
	ldr r2, _080A2EAC @ =0x0000060C
	adds r2, r1, r2
	str r2, [sp, #0x24]
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r3, _080A2EB0 @ =0x00000AB8
	adds r0, r0, r3
	adds r0, r1, r0
	str r0, [sp, #0x28]
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #4
	movs r6, #0xcb
	lsls r6, r6, #3
	adds r0, r0, r6
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A2EB4 @ =gUnk_08BD505C
	adds r6, r0, r1
	add r1, sp, #4
	ldr r2, [sp, #0x28]
	ldrh r0, [r2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r1]
	add r1, sp, #8
	ldrh r0, [r2, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r1]
	add r2, sp, #4
	adds r0, r2, #0
	ldrh r0, [r0]
	strh r0, [r2, #2]
	ldrh r0, [r1]
	strh r0, [r1, #2]
	ldr r3, [sp, #0x20]
	ldrb r0, [r3, #0xf]
	cmp r0, #1
	beq _080A2E86
	b _080A2FFC
_080A2E86:
	ldr r0, _080A2EB8 @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	bne _080A2E92
	b _080A2FFC
_080A2E92:
	ldr r1, [sp, #0x28]
	ldrb r0, [r1, #9]
	cmp r0, #2
	beq _080A2F7C
	cmp r0, #2
	bgt _080A2EBC
	cmp r0, #1
	beq _080A2F28
	b _080A2FFC
	.align 2, 0
_080A2EA4: .4byte gUnk_03006B54
_080A2EA8: .4byte 0x00001EB8
_080A2EAC: .4byte 0x0000060C
_080A2EB0: .4byte 0x00000AB8
_080A2EB4: .4byte gUnk_08BD505C
_080A2EB8: .4byte 0x000001E1
_080A2EBC:
	cmp r0, #3
	beq _080A2EC6
	cmp r0, #4
	beq _080A2FA4
	b _080A2FFC
_080A2EC6:
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #4
	ldrh r2, [r6, #8]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080A2F20 @ =0xFFFF0000
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	add r0, sp, #4
	ldrh r1, [r0, #2]
	adds r1, #4
	ldrh r0, [r6, #0xc]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	add r2, sp, #0xc
	ldr r0, [r2, #4]
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #4]
	mov r3, sp
	ldrh r1, [r3, #8]
	subs r1, #8
	ldrh r0, [r6, #0xa]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _080A2F24 @ =0x0000FFFF
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	mov r0, sp
	ldrh r1, [r0, #0xa]
	ldrh r0, [r6, #0xa]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r0, [r2, #4]
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #4]
	b _080A2FFC
	.align 2, 0
_080A2F20: .4byte 0xFFFF0000
_080A2F24: .4byte 0x0000FFFF
_080A2F28:
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #4
	ldrh r2, [r6, #8]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080A2F74 @ =0xFFFF0000
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	add r0, sp, #4
	ldrh r1, [r0, #2]
	adds r1, #4
	ldrh r0, [r6, #0xc]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	add r2, sp, #0xc
	ldr r0, [r2, #4]
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #4]
	ldrh r1, [r6, #0xe]
	mov r3, sp
	ldrh r3, [r3, #8]
	adds r1, r1, r3
	lsls r1, r1, #0x10
	ldr r3, _080A2F78 @ =0x0000FFFF
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	mov r1, sp
	ldrh r0, [r1, #0xa]
	adds r0, #8
	b _080A2FEE
	.align 2, 0
_080A2F74: .4byte 0xFFFF0000
_080A2F78: .4byte 0x0000FFFF
_080A2F7C:
	add r0, sp, #4
	ldrh r1, [r0]
	subs r1, #0x10
	ldrh r2, [r6, #8]
	adds r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080A2FA0 @ =0xFFFF0000
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	add r0, sp, #4
	ldrh r1, [r0, #2]
	ldrh r0, [r6, #8]
	adds r1, r1, r0
	b _080A2FC4
	.align 2, 0
_080A2FA0: .4byte 0xFFFF0000
_080A2FA4:
	add r0, sp, #4
	ldrh r1, [r6, #0xc]
	ldrh r0, [r0]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	ldr r3, _080A3010 @ =0xFFFF0000
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	add r0, sp, #4
	ldrh r1, [r0, #2]
	adds r1, #0x10
	ldrh r2, [r6, #0xc]
	adds r1, r1, r2
_080A2FC4:
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	add r2, sp, #0xc
	ldr r0, [r2, #4]
	ands r0, r3
	orrs r0, r1
	str r0, [r2, #4]
	mov r3, sp
	ldrh r1, [r3, #8]
	subs r1, #4
	ldrh r0, [r6, #0xa]
	adds r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _080A3014 @ =0x0000FFFF
	ldr r0, [sp, #0xc]
	ands r0, r3
	orrs r0, r1
	str r0, [sp, #0xc]
	mov r1, sp
	ldrh r0, [r1, #0xa]
	adds r0, #4
_080A2FEE:
	ldrh r1, [r6, #0xe]
	adds r0, r0, r1
	lsls r0, r0, #0x10
	ldr r1, [r2, #4]
	ands r1, r3
	orrs r1, r0
	str r1, [r2, #4]
_080A2FFC:
	ldr r2, [sp, #0x28]
	ldrb r0, [r2, #9]
	cmp r0, #2
	beq _080A303E
	cmp r0, #2
	bgt _080A3018
	cmp r0, #1
	beq _080A3030
	b _080A3058
	.align 2, 0
_080A3010: .4byte 0xFFFF0000
_080A3014: .4byte 0x0000FFFF
_080A3018:
	cmp r0, #3
	beq _080A3022
	cmp r0, #4
	beq _080A304A
	b _080A3058
_080A3022:
	mov r3, sp
	ldrh r0, [r3, #0xa]
	subs r0, #4
	ldrh r6, [r6, #0xa]
	adds r0, r0, r6
	strh r0, [r3, #0xa]
	b _080A3058
_080A3030:
	mov r1, sp
	ldrh r0, [r1, #0xa]
	adds r0, #4
	ldrh r6, [r6, #0xe]
	adds r0, r0, r6
	strh r0, [r1, #0xa]
	b _080A3058
_080A303E:
	add r1, sp, #4
	adds r0, r1, #0
	ldrh r0, [r0, #2]
	subs r0, #4
	ldrh r6, [r6, #8]
	b _080A3054
_080A304A:
	add r1, sp, #4
	adds r0, r1, #0
	ldrh r0, [r0, #2]
	adds r0, #4
	ldrh r6, [r6, #0xc]
_080A3054:
	adds r0, r0, r6
	strh r0, [r1, #2]
_080A3058:
	movs r2, #0
	str r2, [sp, #0x1c]
	mov r8, r2
	ldr r3, [sp, #0x24]
	ldrb r0, [r3, #3]
	cmp r0, #0
	bne _080A3068
	b _080A3198
_080A3068:
	ldr r6, _080A314C @ =gUnk_03006B54
	mov sl, r6
	add r7, sp, #0x14
_080A306E:
	mov r0, r8
	lsls r2, r0, #0x10
	asrs r3, r2, #0x10
	movs r0, #0x54
	muls r0, r3, r0
	ldr r1, _080A3150 @ =0x00000AB8
	adds r0, r0, r1
	mov r6, sl
	ldr r4, [r6]
	adds r5, r4, r0
	ldrh r1, [r5, #0xe]
	movs r0, #1
	ands r0, r1
	mov sb, r2
	cmp r0, #0
	beq _080A3178
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	ldr r6, [sp, #0x20]
	ldrh r0, [r6, #4]
	cmp r0, r3
	beq _080A3178
	ldrh r0, [r5, #0x10]
	cmp r0, #0
	beq _080A3178
	ldrh r0, [r5, #0x12]
	lsls r0, r0, #4
	movs r1, #0xcb
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r0, r4, r0
	ldrh r1, [r0, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3154 @ =gUnk_08BD505C
	adds r6, r0, r1
	ldrh r3, [r5]
	lsls r3, r3, #0x10
	ldrh r4, [r5, #2]
	lsls r4, r4, #0x10
	ldrh r1, [r6, #8]
	asrs r3, r3, #0x14
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #0xa]
	asrs r4, r4, #0x14
	adds r2, r4, r2
	subs r2, #3
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #0xe]
	adds r4, r4, r0
	adds r4, #4
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	adds r0, r7, #0
	bl sub_080A586C
	add r0, sp, #4
	movs r2, #2
	ldrsh r1, [r0, r2]
	mov r3, sp
	movs r6, #0xa
	ldrsh r2, [r3, r6]
	adds r0, r7, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3178
	mov r1, sb
	lsrs r0, r1, #0x10
	bl sub_0809F7C8
	mov r3, r8
	ldr r2, [sp, #0x24]
	strb r3, [r2, #9]
	ldrh r0, [r5, #0xe]
	movs r6, #0x80
	lsls r6, r6, #8
	adds r1, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A3158
	ldrb r0, [r5, #9]
	strb r0, [r2, #7]
	ldr r1, [sp, #0x28]
	ldrb r0, [r1, #9]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	adds r0, #1
	strb r0, [r5, #0xa]
	ldrb r0, [r5, #0xb]
	adds r0, #1
	strb r0, [r2, #8]
	movs r0, #3
	strb r0, [r5, #0xb]
	b _080A3160
	.align 2, 0
_080A314C: .4byte gUnk_03006B54
_080A3150: .4byte 0x00000AB8
_080A3154: .4byte gUnk_08BD505C
_080A3158:
	ldrb r0, [r5, #0xb]
	adds r0, #1
	ldr r2, [sp, #0x24]
	strb r0, [r2, #8]
_080A3160:
	ldrh r4, [r5, #0x10]
	cmp r4, #0
	bne _080A3168
	b _080A37F6
_080A3168:
	mov r3, sl
	ldr r2, [r3]
	ldrh r1, [r2]
	ldr r6, _080A3174 @ =0x0000FFFE
	adds r0, r6, #0
	b _080A37DC
	.align 2, 0
_080A3174: .4byte 0x0000FFFE
_080A3178:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r1, r0, #0x10
	mov r8, r1
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A3198
	ldr r2, [sp, #0x24]
	ldrb r1, [r2, #3]
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A3198
	b _080A306E
_080A3198:
	movs r6, #0
	str r6, [sp, #0x1c]
	mov r8, r6
	ldr r1, [sp, #0x24]
	ldrb r0, [r1, #5]
	cmp r0, #0
	bne _080A31A8
	b _080A3588
_080A31A8:
	ldr r2, _080A3238 @ =gUnk_03006B54
	mov sl, r2
	add r7, sp, #4
_080A31AE:
	mov r3, r8
	lsls r2, r3, #0x10
	asrs r0, r2, #0xc
	ldr r6, _080A323C @ =0x00001CB8
	adds r0, r0, r6
	mov r3, sl
	ldr r1, [r3]
	adds r5, r1, r0
	ldrh r1, [r5, #0xa]
	movs r0, #1
	ands r0, r1
	mov sb, r2
	cmp r0, #0
	bne _080A31CC
	b _080A3568
_080A31CC:
	ldr r6, [sp, #0x1c]
	lsls r0, r6, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	ldrh r1, [r5, #0xc]
	ldr r2, _080A3240 @ =0x00003FF8
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080A31E8
	b _080A3568
_080A31E8:
	ldrh r0, [r5, #0xe]
	cmp r0, #0
	bne _080A31F0
	b _080A3568
_080A31F0:
	add r4, sp, #0x14
	movs r3, #0
	ldrsh r1, [r5, r3]
	movs r6, #2
	ldrsh r2, [r5, r6]
	movs r0, #4
	ldrsh r3, [r5, r0]
	movs r6, #6
	ldrsh r0, [r5, r6]
	str r0, [sp]
	adds r0, r4, #0
	bl sub_080A586C
	ldrh r1, [r5, #0xc]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A3244
	movs r0, #0
	ldrsh r1, [r7, r0]
	mov r3, sp
	movs r6, #8
	ldrsh r2, [r3, r6]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3244
	ldrh r4, [r5, #0xe]
	cmp r4, #0
	bne _080A3232
	b _080A37F6
_080A3232:
	mov r0, sl
	ldr r2, [r0]
	b _080A37D6
	.align 2, 0
_080A3238: .4byte gUnk_03006B54
_080A323C: .4byte 0x00001CB8
_080A3240: .4byte 0x00003FF8
_080A3244:
	ldrh r1, [r5, #0xc]
	movs r0, #0x60
	ands r0, r1
	cmp r0, #0
	beq _080A3272
	movs r6, #2
	ldrsh r1, [r7, r6]
	mov r0, sp
	movs r3, #0xa
	ldrsh r2, [r0, r3]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3272
	ldrh r4, [r5, #0xe]
	cmp r4, #0
	bne _080A326C
	b _080A37F6
_080A326C:
	mov r6, sl
	ldr r2, [r6]
	b _080A37D6
_080A3272:
	ldrh r1, [r5, #0xc]
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A32E8
	ldr r6, [sp, #0x20]
	ldrb r0, [r6, #0xf]
	cmp r0, #0
	bne _080A32E8
	movs r0, #2
	ldrsh r1, [r7, r0]
	mov r3, sp
	movs r6, #0xa
	ldrsh r2, [r3, r6]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A329C
	b _080A3534
_080A329C:
	ldrh r4, [r5, #0xe]
	movs r5, #1
	cmp r4, #0
	bne _080A32A6
	b _080A376A
_080A32A6:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A32E0 @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A32E4 @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A32E0: .4byte 0x00001FBC
_080A32E4: .4byte sub_0809B848
_080A32E8:
	movs r6, #0x80
	lsls r6, r6, #1
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A335C
	ldr r0, [sp, #0x20]
	ldrb r6, [r0, #0xf]
	cmp r6, #1
	bne _080A335C
	movs r2, #2
	ldrsh r1, [r7, r2]
	mov r3, sp
	movs r0, #0xa
	ldrsh r2, [r3, r0]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A3314
	b _080A3534
_080A3314:
	ldrh r4, [r5, #0xe]
	cmp r4, #0
	bne _080A331C
	b _080A376A
_080A331C:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A3354 @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A3358 @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r6, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A3354: .4byte 0x00001FBC
_080A3358: .4byte sub_0809B848
_080A335C:
	movs r6, #0x80
	lsls r6, r6, #2
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A33D4
	ldr r2, [sp, #0x20]
	ldrb r0, [r2, #0xf]
	cmp r0, #2
	bne _080A33D4
	movs r3, #2
	ldrsh r1, [r7, r3]
	mov r6, sp
	movs r0, #0xa
	ldrsh r2, [r6, r0]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A3388
	b _080A3534
_080A3388:
	ldrh r4, [r5, #0xe]
	movs r5, #1
	cmp r4, #0
	bne _080A3392
	b _080A376A
_080A3392:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A33CC @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A33D0 @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A33CC: .4byte 0x00001FBC
_080A33D0: .4byte sub_0809B848
_080A33D4:
	movs r6, #0x80
	lsls r6, r6, #3
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A344C
	ldr r2, [sp, #0x20]
	ldrb r0, [r2, #0xf]
	cmp r0, #3
	bne _080A344C
	movs r3, #2
	ldrsh r1, [r7, r3]
	mov r6, sp
	movs r0, #0xa
	ldrsh r2, [r6, r0]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A3400
	b _080A3534
_080A3400:
	ldrh r4, [r5, #0xe]
	movs r5, #1
	cmp r4, #0
	bne _080A340A
	b _080A376A
_080A340A:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A3444 @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A3448 @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A3444: .4byte 0x00001FBC
_080A3448: .4byte sub_0809B848
_080A344C:
	movs r6, #0x80
	lsls r6, r6, #4
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A34C0
	ldr r2, [sp, #0x20]
	ldrb r0, [r2, #0xf]
	cmp r0, #4
	bne _080A34C0
	movs r3, #2
	ldrsh r1, [r7, r3]
	mov r6, sp
	movs r0, #0xa
	ldrsh r2, [r6, r0]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3534
	ldrh r4, [r5, #0xe]
	movs r5, #1
	cmp r4, #0
	bne _080A3480
	b _080A376A
_080A3480:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A34B8 @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A34BC @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A34B8: .4byte 0x00001FBC
_080A34BC: .4byte sub_0809B848
_080A34C0:
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080A3534
	ldr r1, [sp, #0x20]
	ldrb r0, [r1, #0xf]
	cmp r0, #5
	bne _080A3534
	movs r2, #2
	ldrsh r1, [r7, r2]
	mov r3, sp
	movs r0, #0xa
	ldrsh r2, [r3, r0]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3534
	ldrh r4, [r5, #0xe]
	movs r5, #1
	cmp r4, #0
	bne _080A34F4
	b _080A376A
_080A34F4:
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A352C @ =0x00001FBC
	adds r1, r1, r2
	mov r3, sl
	ldr r2, [r3]
	adds r2, r2, r1
	ldr r1, _080A3530 @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	adds r1, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	b _080A376A
	.align 2, 0
_080A352C: .4byte 0x00001FBC
_080A3530: .4byte sub_0809B848
_080A3534:
	ldrh r1, [r5, #0xc]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A3568
	movs r6, #2
	ldrsh r1, [r7, r6]
	mov r0, sp
	movs r3, #0xa
	ldrsh r2, [r0, r3]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3568
	movs r0, #0
	ldr r6, [sp, #0x20]
	strb r0, [r6, #0x11]
	ldrh r4, [r5, #0xe]
	cmp r4, #0
	bne _080A3562
	b _080A37F6
_080A3562:
	mov r0, sl
	ldr r2, [r0]
	b _080A37D6
_080A3568:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r6, r0, #0x10
	mov r8, r6
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A3588
	ldr r0, [sp, #0x24]
	ldrb r1, [r0, #5]
	ldr r2, [sp, #0x1c]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A3588
	b _080A31AE
_080A3588:
	ldr r3, [sp, #0x20]
	ldrb r0, [r3, #0xf]
	cmp r0, #3
	bne _080A359A
	bl sub_080A383C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _080A382A
_080A359A:
	movs r6, #0
	str r6, [sp, #0x1c]
	mov r8, r6
	ldr r1, [sp, #0x24]
	ldrb r0, [r1, #4]
	cmp r0, #0
	bne _080A35AA
	b _080A3828
_080A35AA:
	ldr r7, _080A3644 @ =gUnk_03006B54
_080A35AC:
	mov r3, r8
	lsls r2, r3, #0x10
	asrs r1, r2, #0x10
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r6, _080A3648 @ =0x00001538
	adds r0, r0, r6
	ldr r1, [r7]
	adds r5, r1, r0
	ldrh r1, [r5, #8]
	movs r0, #1
	ands r0, r1
	mov sb, r2
	cmp r0, #0
	bne _080A35CE
	b _080A3808
_080A35CE:
	ldr r1, [sp, #0x1c]
	lsls r0, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	str r0, [sp, #0x1c]
	ldrh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r5, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrb r0, [r5, #4]
	cmp r0, #8
	bne _080A3694
	ldr r6, [sp, #0x28]
	ldrb r0, [r6, #9]
	cmp r0, #2
	beq _080A3602
	cmp r0, #4
	bne _080A3650
_080A3602:
	ldrb r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A364C @ =gUnk_08BD5110
	adds r6, r0, r1
	ldrh r1, [r6, #8]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #0xa]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	adds r2, #6
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #0xe]
	adds r4, r4, r0
	adds r4, #4
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0x14
	bl sub_080A586C
	b _080A36D0
	.align 2, 0
_080A3644: .4byte gUnk_03006B54
_080A3648: .4byte 0x00001538
_080A364C: .4byte gUnk_08BD5110
_080A3650:
	ldrb r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3690 @ =gUnk_08BD5110
	adds r6, r0, r1
	ldrh r1, [r6, #8]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	adds r1, #2
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #0xa]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #0xe]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0x14
	bl sub_080A586C
	b _080A36D0
	.align 2, 0
_080A3690: .4byte gUnk_08BD5110
_080A3694:
	ldrb r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3770 @ =gUnk_08BD5110
	adds r6, r0, r1
	ldrh r1, [r6, #8]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r6, #0xa]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r6, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r6, #0xe]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0x14
	bl sub_080A586C
_080A36D0:
	add r4, sp, #0x14
	ldr r1, [sp, #0x20]
	ldrb r0, [r1, #0xf]
	cmp r0, #1
	bne _080A36E4
	ldr r0, _080A3774 @ =0x000001E1
	bl sub_08012F60
	cmp r0, #0
	bne _080A37A6
_080A36E4:
	add r0, sp, #4
	movs r2, #2
	ldrsh r1, [r0, r2]
	mov r3, sp
	movs r6, #0xa
	ldrsh r2, [r3, r6]
	adds r0, r4, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A36FE
	b _080A3808
_080A36FE:
	ldrb r0, [r5, #4]
	cmp r0, #0xb
	bne _080A3788
	ldr r1, [sp, #0x20]
	ldrb r0, [r1, #0xf]
	cmp r0, #5
	bne _080A379C
	ldrh r4, [r5, #0xa]
	movs r5, #0
	cmp r4, #0
	beq _080A3748
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r2, _080A3778 @ =0x00001FBC
	adds r1, r1, r2
	ldr r2, [r7]
	adds r2, r2, r1
	ldr r1, _080A377C @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
_080A3748:
	mov r3, sb
	lsrs r1, r3, #0x10
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r6, _080A3780 @ =0x00001538
	adds r0, r0, r6
	ldr r1, [r7]
	adds r2, r1, r0
	ldrh r1, [r2, #0xc]
	ldr r0, _080A3784 @ =0x0000FFFF
	cmp r1, r0
	beq _080A376A
	adds r0, r1, #0
	movs r1, #1
	bl sub_08012FB8
_080A376A:
	movs r0, #2
	b _080A382A
	.align 2, 0
_080A3770: .4byte gUnk_08BD5110
_080A3774: .4byte 0x000001E1
_080A3778: .4byte 0x00001FBC
_080A377C: .4byte sub_0809B848
_080A3780: .4byte 0x00001538
_080A3784: .4byte 0x0000FFFF
_080A3788:
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _080A379C
	ldrh r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080A37CE
_080A379C:
	mov r6, sb
	lsrs r0, r6, #0x10
	bl sub_080A06E0
	b _080A3828
_080A37A6:
	ldrb r0, [r5, #4]
	cmp r0, #0xb
	beq _080A3808
	add r0, sp, #0xc
	adds r1, r4, #0
	bl sub_080A5880
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3808
	ldrh r0, [r5, #0xa]
	cmp r0, #0
	beq _080A3800
	ldrh r0, [r5, #8]
	movs r2, #0x80
	lsls r2, r2, #2
	adds r1, r2, #0
	ands r0, r1
	cmp r0, #0
	beq _080A3800
_080A37CE:
	ldrh r4, [r5, #0xa]
	cmp r4, #0
	beq _080A37F6
	ldr r2, [r7]
_080A37D6:
	ldrh r1, [r2]
	ldr r3, _080A37FC @ =0x0000FFFE
	adds r0, r3, #0
_080A37DC:
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	strh r1, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A37F6:
	movs r0, #1
	b _080A382A
	.align 2, 0
_080A37FC: .4byte 0x0000FFFE
_080A3800:
	mov r6, sb
	lsrs r0, r6, #0x10
	bl sub_080A06E0
_080A3808:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r1, r0, #0x10
	mov r8, r1
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A3828
	ldr r2, [sp, #0x24]
	ldrb r1, [r2, #4]
	ldr r3, [sp, #0x1c]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A3828
	b _080A35AC
_080A3828:
	movs r0, #3
_080A382A:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A383C
sub_080A383C: @ 0x080A383C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r0, _080A38BC @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r2, _080A38C0 @ =0x00001EB8
	adds r0, r1, r2
	ldr r3, _080A38C4 @ =0x0000060C
	adds r3, r1, r3
	str r3, [sp, #0x28]
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r4, _080A38C8 @ =0x00000AB8
	adds r0, r0, r4
	adds r0, r1, r0
	str r0, [sp, #0x2c]
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #4
	movs r5, #0xcb
	lsls r5, r5, #3
	adds r0, r0, r5
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A38CC @ =gUnk_08BD505C
	adds r5, r0, r1
	ldr r0, [sp, #0x2c]
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	lsls r1, r1, #0x10
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	movs r2, #0
	mov r8, r2
	add r3, sp, #0x14
	mov sl, r3
	add r6, sp, #0xc
	lsrs r4, r0, #0x10
	mov ip, r4
	asrs r0, r0, #0x10
	str r0, [sp, #0x30]
	lsrs r7, r1, #0x10
	asrs r1, r1, #0x10
	mov sb, r1
_080A38A6:
	ldr r1, [sp, #0x2c]
	ldrb r0, [r1, #9]
	cmp r0, #2
	beq _080A3922
	cmp r0, #2
	bgt _080A38D0
	cmp r0, #1
	beq _080A3900
	mov r2, r8
	lsls r3, r2, #0x10
	b _080A3966
	.align 2, 0
_080A38BC: .4byte gUnk_03006B54
_080A38C0: .4byte 0x00001EB8
_080A38C4: .4byte 0x0000060C
_080A38C8: .4byte 0x00000AB8
_080A38CC: .4byte gUnk_08BD505C
_080A38D0:
	cmp r0, #3
	beq _080A38DE
	cmp r0, #4
	beq _080A3944
	mov r4, r8
	lsls r3, r4, #0x10
	b _080A3966
_080A38DE:
	mov r0, r8
	lsls r3, r0, #0x10
	asrs r1, r3, #0x10
	lsls r2, r1, #1
	mov r0, sp
	adds r0, r0, r2
	adds r0, #4
	strh r7, [r0]
	adds r2, r6, r2
	ldrh r0, [r5, #0xa]
	ldr r4, [sp, #0x30]
	adds r0, r4, r0
	lsls r1, r1, #3
	adds r1, #4
	subs r0, r0, r1
	strh r0, [r2]
	b _080A3966
_080A3900:
	mov r0, r8
	lsls r3, r0, #0x10
	asrs r1, r3, #0x10
	lsls r2, r1, #1
	mov r0, sp
	adds r0, r0, r2
	adds r0, #4
	strh r7, [r0]
	adds r2, r6, r2
	ldrh r0, [r5, #0xe]
	ldr r4, [sp, #0x30]
	adds r0, r4, r0
	lsls r1, r1, #3
	adds r1, #3
	adds r0, r0, r1
	strh r0, [r2]
	b _080A3966
_080A3922:
	mov r0, r8
	lsls r4, r0, #0x10
	asrs r1, r4, #0x10
	lsls r2, r1, #1
	mov r3, sp
	adds r3, r3, r2
	adds r3, #4
	ldrh r0, [r5, #8]
	add r0, sb
	lsls r1, r1, #3
	adds r1, #4
	subs r0, r0, r1
	strh r0, [r3]
	adds r2, r6, r2
	mov r1, ip
	strh r1, [r2]
	b _080A3964
_080A3944:
	mov r2, r8
	lsls r4, r2, #0x10
	asrs r1, r4, #0x10
	lsls r2, r1, #1
	mov r3, sp
	adds r3, r3, r2
	adds r3, #4
	ldrh r0, [r5, #0xc]
	add r0, sb
	lsls r1, r1, #3
	adds r1, #3
	adds r0, r0, r1
	strh r0, [r3]
	adds r2, r6, r2
	mov r3, ip
	strh r3, [r2]
_080A3964:
	adds r3, r4, #0
_080A3966:
	movs r4, #0x80
	lsls r4, r4, #9
	adds r0, r3, r4
	lsrs r1, r0, #0x10
	mov r8, r1
	asrs r0, r0, #0x10
	cmp r0, #3
	ble _080A38A6
	movs r2, #0
	str r2, [sp, #0x24]
	ldr r0, _080A3A4C @ =0x0000FFFF
	mov r3, sl
	strh r0, [r3]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r3, #2]
	movs r1, #0
_080A3988:
	movs r4, #0
	str r4, [sp, #0x20]
	mov r8, r4
	lsls r1, r1, #0x10
	mov sb, r1
	mov r5, sl
	ldrh r5, [r5]
	cmp r4, r5
	bne _080A399C
	b _080A3B4E
_080A399C:
	ldr r1, [sp, #0x28]
	ldrb r0, [r1, #4]
	cmp r0, #0
	bne _080A39A6
	b _080A3B7A
_080A39A6:
	mov r2, r8
	lsls r1, r2, #0x10
	asrs r1, r1, #0x10
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r3, _080A3A50 @ =0x00001538
	adds r0, r0, r3
	ldr r4, _080A3A54 @ =gUnk_03006B54
	ldr r1, [r4]
	adds r6, r1, r0
	ldrh r1, [r6, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A39C8
	b _080A3B4E
_080A39C8:
	ldr r5, [sp, #0x20]
	lsls r0, r5, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r0, r0, #0x10
	str r0, [sp, #0x20]
	ldrb r1, [r6, #4]
	mov r2, sb
	cmp r2, #0
	beq _080A39E4
	cmp r1, #7
	bne _080A39E4
	b _080A3B4E
_080A39E4:
	ldrh r0, [r6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	ldrh r0, [r6, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov ip, r0
	cmp r1, #8
	bne _080A3A5C
	ldr r3, [sp, #0x2c]
	ldrb r0, [r3, #9]
	cmp r0, #2
	beq _080A3A0A
	cmp r0, #4
	bne _080A3A5C
_080A3A0A:
	ldrb r1, [r6, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3A58 @ =gUnk_08BD5110
	adds r5, r0, r1
	ldrh r1, [r5, #8]
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r5, #0xa]
	mov r0, ip
	lsls r4, r0, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	adds r2, #8
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r5, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r5, #0xe]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0x18
	bl sub_080A586C
	b _080A3A9A
	.align 2, 0
_080A3A4C: .4byte 0x0000FFFF
_080A3A50: .4byte 0x00001538
_080A3A54: .4byte gUnk_03006B54
_080A3A58: .4byte gUnk_08BD5110
_080A3A5C:
	ldrb r1, [r6, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3ADC @ =gUnk_08BD5110
	adds r5, r0, r1
	ldrh r1, [r5, #8]
	lsls r3, r7, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r5, #0xa]
	mov r4, ip
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	adds r2, r0, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r4, [r5, #0xc]
	adds r3, r3, r4
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r4, [r5, #0xe]
	adds r0, r0, r4
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	add r0, sp, #0x18
	bl sub_080A586C
_080A3A9A:
	add r3, sp, #0x18
	mov r5, sb
	asrs r4, r5, #0x10
	lsls r2, r4, #1
	mov r0, sp
	adds r0, r0, r2
	adds r0, #4
	movs r5, #0
	ldrsh r1, [r0, r5]
	add r0, sp, #0xc
	adds r0, r0, r2
	movs r5, #0
	ldrsh r2, [r0, r5]
	adds r0, r3, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3B4E
	ldrb r0, [r6, #4]
	cmp r0, #0
	bne _080A3AE4
	cmp r4, #0
	bne _080A3B34
	ldrh r0, [r6, #0xa]
	cmp r0, #0
	beq _080A3B34
	adds r4, r0, #0
	cmp r4, #0
	beq _080A3B26
	ldr r0, _080A3AE0 @ =gUnk_03006B54
	ldr r2, [r0]
	b _080A3B06
	.align 2, 0
_080A3ADC: .4byte gUnk_08BD5110
_080A3AE0: .4byte gUnk_03006B54
_080A3AE4:
	cmp r0, #0xb
	beq _080A3B34
	ldrh r0, [r6, #0xa]
	cmp r0, #0
	beq _080A3B34
	ldrh r0, [r6, #8]
	movs r4, #0x80
	lsls r4, r4, #2
	adds r1, r4, #0
	ands r0, r1
	cmp r0, #0
	beq _080A3B34
	ldrh r4, [r6, #0xa]
	cmp r4, #0
	beq _080A3B26
	ldr r5, _080A3B2C @ =gUnk_03006B54
	ldr r2, [r5]
_080A3B06:
	ldrh r0, [r2]
	ldr r3, _080A3B30 @ =0x0000FFFE
	adds r1, r3, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A3B26:
	movs r0, #1
	b _080A3BBE
	.align 2, 0
_080A3B2C: .4byte gUnk_03006B54
_080A3B30: .4byte 0x0000FFFE
_080A3B34:
	ldr r1, [sp, #0x24]
	lsls r0, r1, #0x10
	movs r4, #0x80
	lsls r4, r4, #9
	adds r0, r0, r4
	lsrs r0, r0, #0x10
	str r0, [sp, #0x24]
	lsls r1, r1, #0x10
	asrs r1, r1, #0xf
	add r1, sl
	mov r5, r8
	strh r5, [r1]
	b _080A3B7A
_080A3B4E:
	mov r1, r8
	lsls r0, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r3, r0, #0x10
	mov r8, r3
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A3B7A
	mov r4, sl
	ldrh r4, [r4]
	cmp r0, r4
	beq _080A3B4E
	ldr r5, [sp, #0x28]
	ldrb r1, [r5, #4]
	ldr r2, [sp, #0x20]
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A3B7A
	b _080A39A6
_080A3B7A:
	movs r0, #0x80
	lsls r0, r0, #9
	add r0, sb
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #3
	bgt _080A3B90
	ldr r3, [sp, #0x24]
	cmp r3, #2
	beq _080A3B90
	b _080A3988
_080A3B90:
	mov r5, sl
	ldrh r4, [r5]
	ldrh r5, [r5, #2]
	ldr r0, _080A3BD0 @ =0x0000FFFF
	cmp r4, r0
	beq _080A3BBC
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A3BD4 @ =gUnk_03006B54
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A3BD8 @ =0x00001FBC
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	ldr r1, _080A3BDC @ =sub_080A4D94
	str r1, [r0, #0x18]
	strh r4, [r0, #0xc]
	strh r5, [r0, #0xe]
_080A3BBC:
	movs r0, #3
_080A3BBE:
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A3BD0: .4byte 0x0000FFFF
_080A3BD4: .4byte gUnk_03006B54
_080A3BD8: .4byte 0x00001FBC
_080A3BDC: .4byte sub_080A4D94

	thumb_func_start sub_080A3BE0
sub_080A3BE0: @ 0x080A3BE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x18
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r4, _080A3CB0 @ =gUnk_03006B54
	ldr r2, [r4]
	ldr r1, _080A3CB4 @ =0x0000060C
	adds r1, r1, r2
	mov sl, r1
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r7, _080A3CB8 @ =0x00001538
	adds r1, r1, r7
	adds r5, r2, r1
	ldrh r3, [r5]
	lsls r3, r3, #0x10
	ldrh r2, [r5, #2]
	lsls r2, r2, #0x10
	asrs r3, r3, #0x14
	subs r1, r3, #4
	asrs r2, r2, #0x14
	adds r3, #3
	adds r0, r2, #7
	str r0, [sp]
	add r0, sp, #4
	bl sub_080A586C
	movs r0, #0
	mov r8, r0
	movs r6, #0
	mov r1, sl
	ldrb r0, [r1, #5]
	cmp r0, #0
	beq _080A3D24
	mov sb, r4
	mov r2, sp
	adds r2, #0xc
	str r2, [sp, #0x14]
_080A3C36:
	lsls r0, r6, #4
	ldr r4, _080A3CBC @ =0x00001CB8
	adds r0, r0, r4
	mov r7, sb
	ldr r1, [r7]
	adds r4, r1, r0
	ldrh r1, [r4, #0xa]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A3D0C
	mov r1, r8
	lsls r0, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	mov r8, r0
	ldrh r0, [r4, #0xc]
	movs r7, #0x80
	lsls r7, r7, #8
	adds r1, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080A3D0C
	movs r0, #0
	ldrsh r1, [r4, r0]
	movs r7, #2
	ldrsh r2, [r4, r7]
	movs r0, #4
	ldrsh r3, [r4, r0]
	movs r7, #6
	ldrsh r0, [r4, r7]
	str r0, [sp]
	ldr r0, [sp, #0x14]
	bl sub_080A586C
	ldr r0, [sp, #0x14]
	add r1, sp, #4
	bl sub_080A5880
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3CC4
	ldrh r0, [r5, #0x10]
	ldr r1, _080A3CC0 @ =0x0000FFFF
	cmp r0, r1
	bne _080A3D0C
	movs r1, #0
	strh r6, [r5, #0x10]
	ldrb r0, [r4, #8]
	adds r0, #1
	strb r0, [r4, #8]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bne _080A3D0C
	ldrh r3, [r4, #0xe]
	cmp r3, #0
	beq _080A3CFE
	b _080A3CE2
	.align 2, 0
_080A3CB0: .4byte gUnk_03006B54
_080A3CB4: .4byte 0x0000060C
_080A3CB8: .4byte 0x00001538
_080A3CBC: .4byte 0x00001CB8
_080A3CC0: .4byte 0x0000FFFF
_080A3CC4:
	ldrh r0, [r5, #0x10]
	cmp r0, r6
	bne _080A3D0C
	ldr r1, _080A3D04 @ =0x0000FFFF
	orrs r0, r1
	strh r0, [r5, #0x10]
	ldrb r0, [r4, #8]
	subs r0, #1
	strb r0, [r4, #8]
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080A3D0C
	ldrh r3, [r4, #0xe]
	cmp r3, #0
	beq _080A3CFE
_080A3CE2:
	mov r4, sb
	ldr r2, [r4]
	ldrh r1, [r2]
	ldr r7, _080A3D08 @ =0x0000FFFE
	adds r0, r7, #0
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	strh r1, [r2]
	movs r0, #0
	movs r1, #0
	adds r2, r3, #0
	bl sub_08012E14
_080A3CFE:
	movs r0, #1
	b _080A3D26
	.align 2, 0
_080A3D04: .4byte 0x0000FFFF
_080A3D08: .4byte 0x0000FFFE
_080A3D0C:
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0x1f
	bhi _080A3D24
	mov r0, sl
	ldrb r1, [r0, #5]
	mov r2, r8
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bne _080A3C36
_080A3D24:
	movs r0, #0
_080A3D26:
	add sp, #0x18
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A3D38
sub_080A3D38: @ 0x080A3D38
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r0, _080A3DA8 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r2, _080A3DAC @ =0x00001EB8
	adds r0, r1, r2
	ldr r3, _080A3DB0 @ =0x0000060C
	adds r3, r3, r1
	mov sb, r3
	ldrh r2, [r0, #4]
	movs r0, #0x54
	muls r0, r2, r0
	ldr r4, _080A3DB4 @ =0x00000AB8
	adds r0, r0, r4
	adds r7, r1, r0
	ldrh r0, [r7, #0x12]
	lsls r0, r0, #4
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3DB8 @ =gUnk_08BD505C
	adds r5, r0, r1
	add r1, sp, #4
	ldrh r0, [r7]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r1]
	add r1, sp, #8
	ldrh r0, [r7, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	strh r0, [r1]
	add r2, sp, #4
	adds r0, r2, #0
	ldrh r0, [r0]
	strh r0, [r2, #2]
	ldrh r0, [r1]
	strh r0, [r1, #2]
	ldrb r2, [r7, #9]
	mov sl, r1
	cmp r2, #2
	beq _080A3DDE
	cmp r2, #2
	bgt _080A3DBC
	cmp r2, #1
	beq _080A3DD2
	b _080A3DFC
	.align 2, 0
_080A3DA8: .4byte gUnk_03006B54
_080A3DAC: .4byte 0x00001EB8
_080A3DB0: .4byte 0x0000060C
_080A3DB4: .4byte 0x00000AB8
_080A3DB8: .4byte gUnk_08BD505C
_080A3DBC:
	cmp r2, #3
	beq _080A3DC6
	cmp r2, #4
	beq _080A3DEE
	b _080A3DFC
_080A3DC6:
	subs r0, #4
	ldrh r5, [r5, #0xa]
	adds r0, r0, r5
	mov r3, sl
	strh r0, [r3, #2]
	b _080A3DFC
_080A3DD2:
	adds r0, #4
	ldrh r5, [r5, #0xe]
	adds r0, r0, r5
	mov r4, sl
	strh r0, [r4, #2]
	b _080A3DFC
_080A3DDE:
	add r1, sp, #4
	adds r0, r1, #0
	ldrh r0, [r0, #2]
	subs r0, #4
	ldrh r5, [r5, #8]
	b _080A3DF8
_080A3DEA:
	movs r0, #1
	b _080A3F28
_080A3DEE:
	add r1, sp, #4
	adds r0, r1, #0
	ldrh r0, [r0, #2]
	adds r0, #4
	ldrh r5, [r5, #0xc]
_080A3DF8:
	adds r0, r0, r5
	strh r0, [r1, #2]
_080A3DFC:
	movs r0, #0
	mov r8, r0
	movs r2, #0
	mov r1, sb
	ldrb r0, [r1, #4]
	cmp r0, #0
	bne _080A3E0C
	b _080A3F26
_080A3E0C:
	ldr r3, _080A3EA0 @ =gUnk_03006B54
	lsls r2, r2, #0x10
	asrs r1, r2, #0x10
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r4, _080A3EA4 @ =0x00001538
	adds r0, r0, r4
	ldr r1, [r3]
	adds r5, r1, r0
	ldrb r0, [r5, #4]
	adds r6, r2, #0
	cmp r0, #8
	bne _080A3F08
	ldrh r1, [r5, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A3F08
	mov r1, r8
	lsls r0, r1, #0x10
	movs r2, #0x80
	lsls r2, r2, #9
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	mov r8, r0
	ldrh r0, [r5]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldrh r0, [r5, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldrb r0, [r7, #9]
	cmp r0, #2
	beq _080A3E5E
	cmp r0, #4
	bne _080A3EAC
_080A3E5E:
	ldrb r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3EA8 @ =gUnk_08BD5110
	adds r5, r0, r1
	ldrh r1, [r5, #8]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r5, #0xa]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	adds r2, #0xe
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r5, #0xc]
	adds r3, r3, r0
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r5, #0xe]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0xc
	bl sub_080A586C
	b _080A3EEC
	.align 2, 0
_080A3EA0: .4byte gUnk_03006B54
_080A3EA4: .4byte 0x00001538
_080A3EA8: .4byte gUnk_08BD5110
_080A3EAC:
	ldrb r1, [r5, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A3F38 @ =gUnk_08BD5110
	adds r5, r0, r1
	ldrh r1, [r5, #8]
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	adds r1, r3, r1
	adds r1, #6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r5, #0xa]
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r2, r4, r2
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	ldrh r0, [r5, #0xc]
	adds r3, r3, r0
	subs r3, #6
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	ldrh r0, [r5, #0xe]
	adds r4, r4, r0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r4, [sp]
	add r0, sp, #0xc
	bl sub_080A586C
_080A3EEC:
	add r3, sp, #0xc
	add r0, sp, #4
	movs r4, #2
	ldrsh r1, [r0, r4]
	mov r0, sl
	movs r4, #2
	ldrsh r2, [r0, r4]
	adds r0, r3, #0
	bl sub_080A58E8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A3F08
	b _080A3DEA
_080A3F08:
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r6, r1
	lsrs r2, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1f
	bgt _080A3F26
	mov r3, sb
	ldrb r1, [r3, #4]
	mov r4, r8
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	beq _080A3F26
	b _080A3E0C
_080A3F26:
	movs r0, #0
_080A3F28:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A3F38: .4byte gUnk_08BD5110

	thumb_func_start sub_080A3F3C
sub_080A3F3C: @ 0x080A3F3C
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r1, _080A3F6C @ =gUnk_03006B54
	ldr r0, [r1]
	ldr r3, _080A3F70 @ =0x00001EB8
	adds r2, r0, r3
	ldr r4, _080A3F74 @ =0x0000060C
	adds r3, r0, r4
	ldrh r0, [r2, #0x1a]
	mov sb, r1
	cmp r0, #3
	bne _080A3F78
	ldrh r0, [r2, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r1, #0x16
	ldrsh r0, [r2, r1]
	subs r0, #0xc
	b _080A3FAA
	.align 2, 0
_080A3F6C: .4byte gUnk_03006B54
_080A3F70: .4byte 0x00001EB8
_080A3F74: .4byte 0x0000060C
_080A3F78:
	cmp r0, #1
	bne _080A3F8E
	ldrh r0, [r2, #0x14]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	movs r4, #0x16
	ldrsh r0, [r2, r4]
	adds r0, #0x13
	b _080A3FAA
_080A3F8E:
	cmp r0, #2
	bne _080A3F9A
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	subs r0, #3
	b _080A3FA0
_080A3F9A:
	movs r1, #0x14
	ldrsh r0, [r2, r1]
	adds r0, #2
_080A3FA0:
	lsls r0, r0, #0xd
	lsrs r7, r0, #0x10
	movs r4, #0x16
	ldrsh r0, [r2, r4]
	subs r0, #0xa
_080A3FAA:
	lsls r0, r0, #0xd
	lsrs r6, r0, #0x10
	movs r0, #0
	mov r8, r0
	movs r5, #0
	ldrb r3, [r3, #5]
	mov ip, r3
	cmp r3, #0
	beq _080A405C
_080A3FBC:
	lsls r0, r5, #4
	ldr r1, _080A4040 @ =0x00001CB8
	adds r0, r0, r1
	mov r3, sb
	ldr r4, [r3]
	adds r2, r4, r0
	ldrh r1, [r2, #0xa]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A4048
	mov r1, r8
	lsls r0, r1, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r0, r0, #0x10
	mov r8, r0
	ldrh r0, [r2, #0xc]
	movs r3, #0x80
	lsls r3, r3, #6
	adds r1, r3, #0
	ands r0, r1
	cmp r0, #0
	beq _080A4048
	ldrh r1, [r2]
	lsls r1, r1, #0x10
	lsls r0, r7, #0x10
	asrs r3, r0, #0x10
	asrs r1, r1, #0x13
	cmp r3, r1
	blt _080A4048
	ldrh r0, [r2, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	cmp r3, r0
	bgt _080A4048
	ldrh r1, [r2, #2]
	lsls r1, r1, #0x10
	lsls r0, r6, #0x10
	asrs r3, r0, #0x10
	asrs r1, r1, #0x13
	cmp r3, r1
	blt _080A4048
	ldrh r0, [r2, #6]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x13
	cmp r3, r0
	bgt _080A4048
	ldrh r2, [r2, #0xe]
	cmp r2, #0
	beq _080A403A
	ldrh r0, [r4]
	ldr r3, _080A4044 @ =0x0000FFFE
	adds r1, r3, #0
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r4]
	movs r0, #0
	movs r1, #0
	bl sub_08012E14
_080A403A:
	movs r0, #1
	b _080A405E
	.align 2, 0
_080A4040: .4byte 0x00001CB8
_080A4044: .4byte 0x0000FFFE
_080A4048:
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	cmp r5, #0x1f
	bhi _080A405C
	mov r4, r8
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	cmp ip, r0
	bne _080A3FBC
_080A405C:
	movs r0, #0
_080A405E:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A406C
sub_080A406C: @ 0x080A406C
	push {r4, lr}
	ldr r0, _080A408C @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A4090 @ =0x00001FA8
	adds r4, r0, r1
	ldrb r0, [r4, #0x11]
	cmp r0, #1
	bne _080A4098
	ldr r1, [r4, #0xc]
	ldr r0, _080A4094 @ =0x0000063F
	cmp r1, r0
	ble _080A4098
	movs r0, #0x64
	movs r1, #0xc8
	b _080A40F8
	.align 2, 0
_080A408C: .4byte gUnk_03006B54
_080A4090: .4byte 0x00001FA8
_080A4094: .4byte 0x0000063F
_080A4098:
	movs r0, #0x63
	bl sub_0800180C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r1, [r4, #0x10]
	cmp r1, #1
	bne _080A40B6
	cmp r0, #9
	bls _080A40DC
	movs r1, #2
	cmp r0, #0x3b
	bhi _080A40D8
	movs r1, #1
	b _080A40E4
_080A40B6:
	cmp r1, #0
	beq _080A40BE
	cmp r1, #2
	bne _080A40CC
_080A40BE:
	cmp r0, #0x13
	bls _080A40DC
	movs r1, #2
	cmp r0, #0x45
	bhi _080A40D8
	movs r1, #1
	b _080A40E4
_080A40CC:
	cmp r0, #0x1d
	bls _080A40DC
	movs r1, #2
	cmp r0, #0x4f
	bhi _080A40D8
	movs r1, #1
_080A40D8:
	cmp r1, #0
	bne _080A40E4
_080A40DC:
	movs r1, #0xfa
	lsls r1, r1, #1
	movs r0, #0xc8
	b _080A40F8
_080A40E4:
	cmp r1, #1
	bne _080A40F2
	movs r0, #0xfa
	lsls r0, r0, #1
	movs r1, #0xe1
	lsls r1, r1, #2
	b _080A40F8
_080A40F2:
	movs r0, #0xe1
	lsls r0, r0, #2
	ldr r1, _080A4108 @ =0x00000514
_080A40F8:
	bl sub_08001894
	lsls r0, r0, #4
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A4108: .4byte 0x00000514

	thumb_func_start sub_080A410C
sub_080A410C: @ 0x080A410C
	push {r4, r5, r6, r7, lr}
	sub sp, #0xc
	mov r4, sp
	adds r4, #2
	add r5, sp, #4
	mov r0, sp
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_0809AB98
	mov r0, sp
	ldrh r0, [r0]
	lsls r0, r0, #4
	ldrh r4, [r4]
	adds r0, r0, r4
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #3
	ldr r0, _080A4154 @ =gUnk_08BD20B8
	adds r7, r1, r0
	movs r2, #0xff
	movs r0, #0x63
	str r2, [sp, #8]
	bl sub_0800180C
	lsls r0, r0, #0x10
	movs r4, #0
	ldrb r1, [r7, #0xa]
	lsrs r6, r0, #0x10
	asrs r0, r0, #0x10
	ldr r2, [sp, #8]
	cmp r0, r1
	bge _080A4158
	ldrb r2, [r7]
	b _080A417C
	.align 2, 0
_080A4154: .4byte gUnk_08BD20B8
_080A4158:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bhi _080A417C
	adds r0, r7, #0
	adds r0, #0xa
	adds r0, r0, r4
	ldrb r0, [r0]
	adds r0, r1, r0
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	cmp r0, r1
	bge _080A4158
	adds r0, r7, r4
	ldrb r2, [r0]
_080A417C:
	cmp r2, #0xff
	bne _080A4182
	movs r2, #0
_080A4182:
	movs r0, #0xfe
	lsls r0, r0, #1
	str r2, [sp, #8]
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	ldr r2, [sp, #8]
	cmp r4, #0
	beq _080A41B0
	adds r0, r2, #0
	movs r1, #0xa
	bl __udivsi3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #1
	adds r1, r4, r1
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r2, r1, #0x18
_080A41B0:
	ldr r0, _080A41DC @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A41E0 @ =0x00001FA8
	adds r1, r1, r0
	lsls r2, r2, #2
	ldr r0, _080A41E4 @ =gUnk_08BD3D38
	adds r7, r2, r0
	ldrb r0, [r1, #0x11]
	cmp r0, #2
	bne _080A41E8
	bl GetPlayerLevel
	adds r4, r0, #0
	ldrb r0, [r7]
	bl sub_08018FB8
	lsls r4, r4, #0x18
	lsls r0, r0, #0x18
	cmp r4, r0
	blo _080A41E8
	movs r0, #0
	b _080A4346
	.align 2, 0
_080A41DC: .4byte gUnk_03006B54
_080A41E0: .4byte 0x00001FA8
_080A41E4: .4byte gUnk_08BD3D38
_080A41E8:
	movs r0, #0xd0
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	ldr r0, _080A424C @ =0x000001AB
	movs r1, #0x64
	bl sub_08012F0C
	ldr r0, _080A4250 @ =0x000001BF
	movs r1, #0
	bl sub_08012F0C
	movs r0, #0x63
	bl sub_0800180C
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	bl GetPlayerLevel
	adds r4, r0, #0
	ldrb r0, [r7]
	bl sub_08018FB8
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	subs r4, r4, r0
	lsls r0, r4, #0x10
	asrs r1, r0, #0x10
	cmp r1, #9
	ble _080A4258
	lsls r0, r6, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _080A423A
	ldr r0, _080A4254 @ =0x000001A7
	movs r1, #0
	bl sub_08012F0C
_080A423A:
	cmp r4, #0x4f
	ble _080A4246
	ldr r0, _080A4254 @ =0x000001A7
	movs r1, #1
	bl sub_08012F0C
_080A4246:
	cmp r4, #0x59
	ble _080A42E8
	b _080A42B0
	.align 2, 0
_080A424C: .4byte 0x000001AB
_080A4250: .4byte 0x000001BF
_080A4254: .4byte 0x000001A7
_080A4258:
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _080A4284
	lsls r0, r6, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _080A426E
	ldr r0, _080A4280 @ =0x000001A7
	movs r1, #0
	bl sub_08012F0C
_080A426E:
	cmp r4, #0x45
	ble _080A427A
	ldr r0, _080A4280 @ =0x000001A7
	movs r1, #1
	bl sub_08012F0C
_080A427A:
	cmp r4, #0x59
	ble _080A42E8
	b _080A42B0
	.align 2, 0
_080A4280: .4byte 0x000001A7
_080A4284:
	adds r0, r1, #0
	adds r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _080A42C0
	lsls r0, r6, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _080A42A0
	ldr r0, _080A42BC @ =0x000001A7
	movs r1, #0
	bl sub_08012F0C
_080A42A0:
	cmp r4, #0x3b
	ble _080A42AC
	ldr r0, _080A42BC @ =0x000001A7
	movs r1, #1
	bl sub_08012F0C
_080A42AC:
	cmp r4, #0x4f
	ble _080A42E8
_080A42B0:
	ldr r0, _080A42BC @ =0x000001A7
	movs r1, #2
	bl sub_08012F0C
	b _080A42E8
	.align 2, 0
_080A42BC: .4byte 0x000001A7
_080A42C0:
	lsls r0, r6, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	blt _080A42D0
	ldr r0, _080A4350 @ =0x000001A7
	movs r1, #0
	bl sub_08012F0C
_080A42D0:
	cmp r4, #0x31
	ble _080A42DC
	ldr r0, _080A4350 @ =0x000001A7
	movs r1, #1
	bl sub_08012F0C
_080A42DC:
	cmp r4, #0x4f
	ble _080A42E8
	ldr r0, _080A4350 @ =0x000001A7
	movs r1, #2
	bl sub_08012F0C
_080A42E8:
	movs r0, #0xde
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	adds r1, r0, #0
	movs r0, #0x60
	bl sub_08012F0C
	ldr r0, _080A4354 @ =0x000001A1
	ldrh r1, [r5]
	bl sub_08012F0C
	movs r5, #0
	movs r4, #0
_080A430E:
	adds r1, r7, r4
	ldrb r0, [r1]
	cmp r0, #0xff
	beq _080A4326
	adds r0, r5, #0
	adds r0, #0x61
	ldrb r1, [r1]
	bl sub_08012F0C
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
_080A4326:
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #3
	bls _080A430E
	movs r0, #0xd1
	lsls r0, r0, #1
	adds r1, r5, #0
	bl sub_08012F0C
	movs r0, #0xd5
	lsls r0, r0, #1
	movs r1, #0x64
	bl sub_08012F0C
	movs r0, #1
_080A4346:
	add sp, #0xc
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A4350: .4byte 0x000001A7
_080A4354: .4byte 0x000001A1

	thumb_func_start sub_080A4358
sub_080A4358: @ 0x080A4358
	push {r4, r5, r6, r7, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r7, r1, #0x10
	movs r0, #0xfd
	lsls r0, r0, #1
	bl sub_08012F60
	adds r5, r0, #0
	cmp r5, #0
	bne _080A43FA
	ldr r0, _080A43C4 @ =gUnk_03006B54
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	cmp r0, #0
	beq _080A43FA
	ldr r0, _080A43C8 @ =0x00001FA8
	adds r4, r1, r0
	lsls r0, r6, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A4388
	rsbs r0, r0, #0
_080A4388:
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	lsls r0, r7, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A4396
	rsbs r0, r0, #0
_080A4396:
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r1, r1, r0
	ldr r0, [r4, #8]
	subs r0, r0, r1
	str r0, [r4, #8]
	ldrb r0, [r4, #0x11]
	cmp r0, #0
	beq _080A43CC
	ldr r0, [r4, #0xc]
	subs r0, r0, r1
	str r0, [r4, #0xc]
	cmp r0, #0
	bgt _080A43CC
	ldrb r0, [r4, #0x11]
	bl sub_080A4F74
	strb r5, [r4, #0x11]
	str r5, [r4, #0xc]
	bl sub_080A406C
	b _080A43FA
	.align 2, 0
_080A43C4: .4byte gUnk_03006B54
_080A43C8: .4byte 0x00001FA8
_080A43CC:
	ldr r0, [r4, #8]
	cmp r0, #0
	bge _080A43FA
	bl sub_080A410C
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A43FA
	ldr r0, _080A4400 @ =gUnk_03006B54
	ldr r3, [r0]
	ldrh r2, [r3, #2]
	cmp r2, #0
	beq _080A43FA
	ldrh r0, [r3]
	ldr r1, _080A4404 @ =0x0000FFFE
	ands r1, r0
	movs r0, #4
	orrs r1, r0
	strh r1, [r3]
	movs r0, #0
	movs r1, #0
	bl sub_08012E14
_080A43FA:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A4400: .4byte gUnk_03006B54
_080A4404: .4byte 0x0000FFFE

	thumb_func_start sub_080A4408
sub_080A4408: @ 0x080A4408
	push {r4, lr}
	ldr r0, _080A4428 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A442C @ =0x00001FA8
	adds r4, r0, r1
	ldrh r0, [r4]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bhi _080A44C4
	lsls r0, r0, #2
	ldr r1, _080A4430 @ =_080A4434
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A4428: .4byte gUnk_03006B54
_080A442C: .4byte 0x00001FA8
_080A4430: .4byte _080A4434
_080A4434: @ jump table
	.4byte _080A4448 @ case 0
	.4byte _080A4464 @ case 1
	.4byte _080A447A @ case 2
	.4byte _080A4488 @ case 3
	.4byte _080A44C4 @ case 4
_080A4448:
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080A4460 @ =0x00007FFF
	movs r0, #2
	movs r3, #5
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	b _080A44BE
	.align 2, 0
_080A4460: .4byte 0x00007FFF
_080A4464:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A44C4
	movs r0, #2
	bl sub_08011104
	b _080A44BE
_080A447A:
	movs r0, #2
	movs r1, #0
	bl sub_08006394
	bl sub_080950DC
	b _080A44BE
_080A4488:
	ldrb r0, [r4, #0x12]
	cmp r0, #1
	beq _080A44A8
	cmp r0, #1
	bgt _080A4498
	cmp r0, #0
	beq _080A44A2
	b _080A44C4
_080A4498:
	cmp r0, #2
	beq _080A44AE
	cmp r0, #3
	beq _080A44B4
	b _080A44C4
_080A44A2:
	bl sub_08096764
	b _080A44B8
_080A44A8:
	bl sub_080960A8
	b _080A44B8
_080A44AE:
	bl sub_080963EC
	b _080A44B8
_080A44B4:
	bl sub_08096680
_080A44B8:
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A44C4
_080A44BE:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A44C4:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A44CC
sub_080A44CC: @ 0x080A44CC
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, _080A44F0 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r2, _080A44F4 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _080A44F8
	cmp r0, #1
	beq _080A4538
	b _080A4556
	.align 2, 0
_080A44F0: .4byte gUnk_03006B54
_080A44F4: .4byte 0x00001FBC
_080A44F8:
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
	ldrh r0, [r5, #0xc]
	cmp r0, #1
	bne _080A4516
	ldr r4, _080A4534 @ =0x0000C383
	movs r0, #0xd
	bl sub_0806380C
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
_080A4516:
	ldrh r0, [r5, #0xc]
	cmp r0, #2
	bne _080A452C
	ldr r4, _080A4534 @ =0x0000C383
	movs r0, #0xc
	bl sub_0806380C
	adds r1, r0, #0
	adds r0, r4, #0
	bl sub_0800E77C
_080A452C:
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080A4556
	.align 2, 0
_080A4534: .4byte 0x0000C383
_080A4538:
	ldr r0, _080A4560 @ =gUnk_080C0178
	movs r1, #1
	bl sub_080A53AC
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080A4556
	movs r2, #0x80
	lsls r2, r2, #5
	adds r0, r6, #0
	movs r1, #1
	bl sub_080A4FBC
	strh r4, [r5]
_080A4556:
	movs r2, #0
	ldrsh r0, [r5, r2]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A4560: .4byte gUnk_080C0178

	thumb_func_start sub_080A4564
sub_080A4564: @ 0x080A4564
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r4, r0, #0
	lsls r1, r1, #0x18
	lsrs r3, r1, #0x18
	cmp r4, #0
	beq _080A459A
	ldr r0, _080A45A0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A45A4 @ =0x0000FFFE
	ands r0, r1
	movs r1, #4
	orrs r0, r1
	strh r0, [r2]
	cmp r3, #0
	beq _080A4590
	movs r0, #3
	movs r1, #0
	bl sub_0809D69C
_080A4590:
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_08012E14
_080A459A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A45A0: .4byte gUnk_03006B54
_080A45A4: .4byte 0x0000FFFE

	thumb_func_start sub_080A45A8
sub_080A45A8: @ 0x080A45A8
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	cmp r4, #0
	beq _080A45EC
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A45F4 @ =gUnk_03006B54
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r3, _080A45F8 @ =0x00001FBC
	adds r1, r1, r3
	ldr r2, [r2]
	adds r2, r2, r1
	ldr r1, _080A45FC @ =sub_0809B848
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
_080A45EC:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A45F4: .4byte gUnk_03006B54
_080A45F8: .4byte 0x00001FBC
_080A45FC: .4byte sub_0809B848

	thumb_func_start sub_080A4600
sub_080A4600: @ 0x080A4600
	push {r4, r5, lr}
	sub sp, #4
	ldr r0, _080A4648 @ =gUnk_03006B54
	ldr r4, [r0]
	ldr r0, _080A464C @ =0x00001EB8
	adds r4, r4, r0
	movs r5, #0
	str r5, [sp]
	ldr r2, _080A4650 @ =0x05000013
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	strh r5, [r4, #4]
	ldr r0, _080A4654 @ =0x0000FFFF
	strh r0, [r4, #6]
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A465C
	ldr r2, _080A4658 @ =0x000001F1
	movs r0, #0
	movs r1, #0
	movs r3, #0
	bl sub_0809ECCC
	movs r0, #0
	movs r1, #0
	movs r2, #2
	bl sub_0809EB1C
	b _080A4672
	.align 2, 0
_080A4648: .4byte gUnk_03006B54
_080A464C: .4byte 0x00001EB8
_080A4650: .4byte 0x05000013
_080A4654: .4byte 0x0000FFFF
_080A4658: .4byte 0x000001F1
_080A465C:
	ldr r2, _080A467C @ =0x000001F1
	movs r0, #0
	movs r1, #0x14
	movs r3, #0
	bl sub_0809ECCC
	movs r0, #0
	movs r1, #0
	movs r2, #2
	bl sub_0809EB1C
_080A4672:
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A467C: .4byte 0x000001F1

	thumb_func_start sub_080A4680
sub_080A4680: @ 0x080A4680
	push {lr}
	bl sub_0809D7B8
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A4690
	bl sub_080A4BEC
_080A4690:
	pop {r0}
	bx r0

	thumb_func_start sub_080A4694
sub_080A4694: @ 0x080A4694
	push {lr}
	ldr r0, _080A46B4 @ =0x000001E5
	bl sub_08012F60
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A46BC
	ldr r0, _080A46B8 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080A46C8
_080A46AE:
	movs r0, #1
	b _080A46CA
	.align 2, 0
_080A46B4: .4byte 0x000001E5
_080A46B8: .4byte gKeyHeld
_080A46BC:
	ldr r0, _080A46D0 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	bne _080A46AE
_080A46C8:
	movs r0, #0
_080A46CA:
	pop {r1}
	bx r1
	.align 2, 0
_080A46D0: .4byte gKeyHeld

	thumb_func_start sub_080A46D4
sub_080A46D4: @ 0x080A46D4
	push {lr}
	ldr r0, _080A4704 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r1, _080A4708 @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A470C @ =0x00000AB8
	adds r0, r0, r1
	adds r2, r2, r0
	ldrh r1, [r2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	ldrh r2, [r2, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x14
	movs r0, #1
	movs r3, #1
	bl sub_080A4844
	pop {r0}
	bx r0
	.align 2, 0
_080A4704: .4byte gUnk_03006B54
_080A4708: .4byte 0x00001EB8
_080A470C: .4byte 0x00000AB8

	thumb_func_start sub_080A4710
sub_080A4710: @ 0x080A4710
	push {lr}
	movs r0, #1
	bl sub_0809EBF4
	movs r0, #1
	bl sub_080A475C
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A4724
sub_080A4724: @ 0x080A4724
	push {lr}
	ldr r0, _080A4750 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A4754 @ =0x00001EB8
	adds r3, r0, r1
	ldrh r2, [r3, #0x18]
	movs r0, #0xe0
	lsls r0, r0, #3
	ands r0, r2
	movs r1, #0x80
	lsls r1, r1, #1
	cmp r0, r1
	bne _080A474C
	ldr r0, _080A4758 @ =0x0000FEFF
	ands r0, r2
	strh r0, [r3, #0x18]
	bl sub_0809E0D4
	bl sub_080A4D08
_080A474C:
	pop {r0}
	bx r0
	.align 2, 0
_080A4750: .4byte gUnk_03006B54
_080A4754: .4byte 0x00001EB8
_080A4758: .4byte 0x0000FEFF

	thumb_func_start sub_080A475C
sub_080A475C: @ 0x080A475C
	push {r4, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	ldr r1, _080A47A4 @ =gUnk_03006B54
	ldr r1, [r1]
	ldr r3, _080A47A8 @ =0x0000060C
	adds r2, r1, r3
	lsrs r0, r0, #0xc
	adds r3, #0x4c
	adds r0, r0, r3
	adds r4, r1, r0
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A4782
	ldrb r0, [r2]
	subs r0, #1
	strb r0, [r2]
_080A4782:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A47AC @ =0x05000004
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _080A47B0 @ =0x0000FFFF
	strh r0, [r4, #2]
	movs r0, #1
	rsbs r0, r0, #0
	strh r0, [r4, #4]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A47A4: .4byte gUnk_03006B54
_080A47A8: .4byte 0x0000060C
_080A47AC: .4byte 0x05000004
_080A47B0: .4byte 0x0000FFFF

	thumb_func_start sub_080A47B4
sub_080A47B4: @ 0x080A47B4
	lsls r0, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldr r2, _080A47CC @ =gUnk_03006B54
	lsrs r0, r0, #0xc
	movs r3, #0xcb
	lsls r3, r3, #3
	adds r0, r0, r3
	ldr r2, [r2]
	adds r2, r2, r0
	strh r1, [r2, #6]
	bx lr
	.align 2, 0
_080A47CC: .4byte gUnk_03006B54

	thumb_func_start sub_080A47D0
sub_080A47D0: @ 0x080A47D0
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r4, r1, #0x18
	ldr r3, _080A47F8 @ =gUnk_03006B54
	ldr r2, [r3]
	ldr r1, _080A47FC @ =0x00001EB8
	adds r0, r2, r1
	ldrh r1, [r0, #4]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A4800 @ =0x00000AB8
	adds r0, r0, r1
	adds r2, r2, r0
	cmp r4, #5
	beq _080A4804
	cmp r4, #6
	beq _080A4808
	b _080A4812
	.align 2, 0
_080A47F8: .4byte gUnk_03006B54
_080A47FC: .4byte 0x00001EB8
_080A4800: .4byte 0x00000AB8
_080A4804:
	ldrb r4, [r2, #9]
	b _080A4812
_080A4808:
	ldrb r0, [r2, #9]
	adds r0, #1
	movs r1, #3
	ands r0, r1
	adds r4, r0, #1
_080A4812:
	movs r0, #0x54
	muls r0, r5, r0
	ldr r1, _080A483C @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r3]
	adds r2, r1, r0
	strb r4, [r2, #9]
	ldrh r0, [r2, #0xe]
	ldr r3, _080A4840 @ =0x0000FFBF
	ands r3, r0
	strh r3, [r2, #0xe]
	cmp r4, #4
	bne _080A4834
	movs r1, #0x40
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #0xe]
_080A4834:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A483C: .4byte 0x00000AB8
_080A4840: .4byte 0x0000FFBF

	thumb_func_start sub_080A4844
sub_080A4844: @ 0x080A4844
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	ldr r4, _080A4888 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r5, r0
	ldr r6, _080A488C @ =0x00000AB8
	adds r0, r0, r6
	ldr r4, [r4]
	adds r4, r4, r0
	lsls r1, r1, #4
	strh r1, [r4, #4]
	lsls r2, r2, #4
	strh r2, [r4, #6]
	strb r3, [r4, #8]
	ldrh r1, [r4, #0xe]
	movs r2, #0x80
	lsls r2, r2, #6
	adds r0, r2, #0
	orrs r0, r1
	strh r0, [r4, #0xe]
	movs r1, #0x80
	lsls r1, r1, #5
	ands r0, r1
	cmp r0, #0
	beq _080A4882
	movs r0, #0
	adds r1, r5, #0
	movs r2, #0
	bl sub_080A2718
_080A4882:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A4888: .4byte gUnk_03006B54
_080A488C: .4byte 0x00000AB8

	thumb_func_start sub_080A4890
sub_080A4890: @ 0x080A4890
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r3, _080A48A8 @ =gUnk_03006B54
	movs r2, #0x54
	muls r2, r0, r2
	ldr r0, _080A48AC @ =0x00000AB8
	adds r2, r2, r0
	ldr r0, [r3]
	adds r0, r0, r2
	strh r1, [r0, #0x10]
	bx lr
	.align 2, 0
_080A48A8: .4byte gUnk_03006B54
_080A48AC: .4byte 0x00000AB8

	thumb_func_start sub_080A48B0
sub_080A48B0: @ 0x080A48B0
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r4, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r5, r2, #0x10
	ldr r1, _080A48D8 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r6, r0
	ldr r2, _080A48DC @ =0x00000AB8
	adds r0, r0, r2
	ldr r1, [r1]
	adds r2, r1, r0
	cmp r5, #1
	bne _080A48E0
	ldrh r1, [r2, #0xe]
	adds r0, r4, #0
	orrs r0, r1
	b _080A48E8
	.align 2, 0
_080A48D8: .4byte gUnk_03006B54
_080A48DC: .4byte 0x00000AB8
_080A48E0:
	cmp r5, #0
	bne _080A48EA
	ldrh r0, [r2, #0xe]
	bics r0, r4
_080A48E8:
	strh r0, [r2, #0xe]
_080A48EA:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r4
	cmp r0, #0
	beq _080A48FC
	movs r0, #0
	adds r1, r6, #0
	bl sub_080A2570
_080A48FC:
	movs r0, #0x80
	lsls r0, r0, #5
	ands r0, r4
	cmp r0, #0
	beq _080A4912
	lsls r2, r5, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0
	adds r1, r6, #0
	bl sub_080A2718
_080A4912:
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080A4918
sub_080A4918: @ 0x080A4918
	push {r4, r5, r6, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	ldr r2, _080A4998 @ =gUnk_03006B54
	movs r1, #0x54
	muls r0, r1, r0
	ldr r1, _080A499C @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r2]
	adds r3, r1, r0
	ldrb r0, [r3, #9]
	movs r5, #1
	cmp r0, #3
	beq _080A4946
	movs r5, #2
	movs r1, #1
	eors r1, r0
	rsbs r0, r1, #0
	orrs r0, r1
	asrs r0, r0, #0x1f
	ands r5, r0
_080A4946:
	adds r4, r3, #0
	adds r4, #0x1c
	ldrb r1, [r3, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r3, #0xb]
	adds r2, r5, r2
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	ldrb r3, [r3, #0xc]
	adds r0, r4, #0
	bl sub_08009F50
	ldr r0, _080A49A0 @ =0x0000FFFF
	adds r5, r4, #0
	cmp r6, r0
	bne _080A497C
	adds r0, r5, #0
	bl sub_0800A4D0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0800180C
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
_080A497C:
	movs r4, #0
	cmp r4, r6
	bhs _080A4992
_080A4982:
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r6
	blo _080A4982
_080A4992:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A4998: .4byte gUnk_03006B54
_080A499C: .4byte 0x00000AB8
_080A49A0: .4byte 0x0000FFFF

	thumb_func_start sub_080A49A4
sub_080A49A4: @ 0x080A49A4
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x18
	lsrs r5, r1, #0x18
	ldr r2, _080A49E0 @ =gUnk_03006B54
	movs r1, #0x54
	muls r0, r1, r0
	ldr r1, _080A49E4 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r2]
	adds r4, r1, r0
	ldrh r1, [r4, #0xe]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A49DA
	adds r0, r4, #0
	adds r0, #0x1c
	adds r1, r5, #0
	bl sub_0800A72C
	adds r0, r4, #0
	adds r0, #0x44
	adds r1, r5, #0
	bl sub_080094D8
_080A49DA:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A49E0: .4byte gUnk_03006B54
_080A49E4: .4byte 0x00000AB8

	thumb_func_start sub_080A49E8
sub_080A49E8: @ 0x080A49E8
	push {r4, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080A4A30 @ =gUnk_03006B54
	ldr r2, [r1]
	ldr r1, _080A4A34 @ =0x0000060C
	adds r3, r2, r1
	movs r1, #0x2c
	muls r0, r1, r0
	movs r1, #0xff
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r4, r2, r0
	ldrh r1, [r4]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A4A14
	ldrb r0, [r3, #2]
	subs r0, #1
	strb r0, [r3, #2]
_080A4A14:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A4A38 @ =0x0500000B
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	adds r0, r4, #4
	bl sub_08009F0C
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A4A30: .4byte gUnk_03006B54
_080A4A34: .4byte 0x0000060C
_080A4A38: .4byte 0x0500000B

	thumb_func_start sub_080A4A3C
sub_080A4A3C: @ 0x080A4A3C
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	ldr r3, _080A4A68 @ =gUnk_03006B54
	ldr r3, [r3]
	ldr r5, _080A4A6C @ =0x0000060C
	adds r4, r3, r5
	lsrs r0, r0, #0xc
	ldr r5, _080A4A70 @ =0x00001CB8
	adds r0, r0, r5
	adds r3, r3, r0
	strh r1, [r3, #0xe]
	strh r2, [r3, #0xc]
	ldrh r1, [r3, #0xa]
	movs r0, #1
	orrs r0, r1
	strh r0, [r3, #0xa]
	ldrb r0, [r4, #5]
	adds r0, #1
	strb r0, [r4, #5]
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A4A68: .4byte gUnk_03006B54
_080A4A6C: .4byte 0x0000060C
_080A4A70: .4byte 0x00001CB8

	thumb_func_start sub_080A4A74
sub_080A4A74: @ 0x080A4A74
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r0, _080A4AC4 @ =gUnk_03006B54
	ldr r1, [r0]
	ldr r0, _080A4AC8 @ =0x0000060C
	adds r4, r1, r0
	lsls r0, r2, #4
	ldr r3, _080A4ACC @ =0x00001CB8
	adds r0, r0, r3
	adds r5, r1, r0
	ldrh r1, [r5, #0xa]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A4AAE
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A4AA8
	movs r0, #2
	adds r1, r2, #0
	movs r2, #0
	bl sub_080A2718
_080A4AA8:
	ldrb r0, [r4, #5]
	subs r0, #1
	strb r0, [r4, #5]
_080A4AAE:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A4AD0 @ =0x05000004
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A4AC4: .4byte gUnk_03006B54
_080A4AC8: .4byte 0x0000060C
_080A4ACC: .4byte 0x00001CB8
_080A4AD0: .4byte 0x05000004

	thumb_func_start sub_080A4AD4
sub_080A4AD4: @ 0x080A4AD4
	push {r4, lr}
	sub sp, #4
	mov r4, sp
	adds r4, #2
	mov r0, sp
	adds r1, r4, #0
	movs r2, #0
	bl sub_0809AB98
	ldr r0, _080A4AFC @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A4B00 @ =0x00001FA8
	adds r2, r0, r1
	mov r0, sp
	ldrh r1, [r0]
	ldr r0, _080A4B04 @ =0x0000FFFF
	cmp r1, r0
	bne _080A4B08
	movs r0, #0
	b _080A4B1E
	.align 2, 0
_080A4AFC: .4byte gUnk_03006B54
_080A4B00: .4byte 0x00001FA8
_080A4B04: .4byte 0x0000FFFF
_080A4B08:
	mov r0, sp
	ldrh r1, [r0]
	lsls r1, r1, #4
	ldrh r4, [r4]
	adds r1, r1, r4
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	ldr r1, _080A4B28 @ =gUnk_08BD20B8
	adds r0, r0, r1
	ldrb r0, [r0, #0x14]
_080A4B1E:
	strb r0, [r2, #0x10]
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A4B28: .4byte gUnk_08BD20B8

	thumb_func_start sub_080A4B2C
sub_080A4B2C: @ 0x080A4B2C
	push {lr}
	movs r0, #0xf3
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	beq _080A4B78
	ldr r0, _080A4B50 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r3, _080A4B54 @ =0x00001FA8
	adds r2, r0, r3
	cmp r1, #1
	beq _080A4B58
	cmp r1, #2
	beq _080A4B66
	b _080A4B6E
	.align 2, 0
_080A4B50: .4byte gUnk_03006B54
_080A4B54: .4byte 0x00001FA8
_080A4B58:
	strb r1, [r2, #0x11]
	movs r0, #0xc8
	lsls r0, r0, #7
	str r0, [r2, #0xc]
	bl sub_080A406C
	b _080A4B6E
_080A4B66:
	strb r1, [r2, #0x11]
	movs r0, #0xc8
	lsls r0, r0, #9
	str r0, [r2, #0xc]
_080A4B6E:
	movs r0, #0xf3
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
_080A4B78:
	pop {r0}
	bx r0

	thumb_func_start sub_080A4B7C
sub_080A4B7C: @ 0x080A4B7C
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	ldr r1, _080A4BE0 @ =gUnk_03006B54
	ldr r2, [r1]
	ldr r1, _080A4BE4 @ =0x0000060C
	adds r5, r2, r1
	lsrs r0, r0, #0xe
	movs r1, #0xf7
	lsls r1, r1, #3
	adds r0, r0, r1
	adds r3, r2, r0
	ldrh r1, [r3, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A4BC8
	movs r0, #0xc3
	lsls r0, r0, #3
	adds r1, r2, r0
	ldrb r2, [r3]
	ldrb r0, [r3, #1]
	adds r0, #1
	cmp r2, r0
	bge _080A4BC2
	movs r4, #0
_080A4BB0:
	adds r0, r1, r2
	strb r4, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldrb r0, [r3, #1]
	adds r0, #1
	cmp r2, r0
	blt _080A4BB0
_080A4BC2:
	ldrb r0, [r5, #1]
	subs r0, #1
	strb r0, [r5, #1]
_080A4BC8:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A4BE8 @ =0x05000001
	mov r0, sp
	adds r1, r3, #0
	bl CpuSet
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A4BE0: .4byte gUnk_03006B54
_080A4BE4: .4byte 0x0000060C
_080A4BE8: .4byte 0x05000001

	thumb_func_start sub_080A4BEC
sub_080A4BEC: @ 0x080A4BEC
	push {r4, lr}
	bl sub_080A5518
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r1, _080A4C30 @ =gUnk_03006B54
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A4C34 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _080A4C38 @ =sub_0809D858
	str r0, [r1, #0x18]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r4, #0
	movs r2, #1
	bl sub_080A4FBC
	bl sub_0809E6DC
	movs r0, #0
	movs r1, #1
	bl sub_0809D69C
	bl sub_080A4C98
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A4C30: .4byte gUnk_03006B54
_080A4C34: .4byte 0x00001FBC
_080A4C38: .4byte sub_0809D858

	thumb_func_start sub_080A4C3C
sub_080A4C3C: @ 0x080A4C3C
	push {r4, r5, r6, lr}
	ldr r5, _080A4C88 @ =gUnk_03006B54
	ldr r4, [r5]
	ldr r0, _080A4C8C @ =0x00001EB8
	adds r4, r4, r0
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r6, r0, #0
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r1, _080A4C90 @ =0x00001FBC
	adds r0, r0, r1
	ldr r1, [r5]
	adds r1, r1, r0
	ldr r0, _080A4C94 @ =sub_0809DA98
	str r0, [r1, #0x18]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r6, #0
	movs r2, #1
	bl sub_080A4FBC
	movs r0, #1
	movs r1, #1
	bl sub_0809D69C
	ldrb r0, [r4, #0xf]
	cmp r0, #6
	beq _080A4C80
	bl sub_080A4C98
_080A4C80:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A4C88: .4byte gUnk_03006B54
_080A4C8C: .4byte 0x00001EB8
_080A4C90: .4byte 0x00001FBC
_080A4C94: .4byte sub_0809DA98

	thumb_func_start sub_080A4C98
sub_080A4C98: @ 0x080A4C98
	push {lr}
	ldr r0, _080A4CB4 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A4CB8 @ =0x00001EB8
	adds r0, r0, r1
	ldrb r0, [r0, #0xf]
	cmp r0, #6
	bhi _080A4D02
	lsls r0, r0, #2
	ldr r1, _080A4CBC @ =_080A4CC0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A4CB4: .4byte gUnk_03006B54
_080A4CB8: .4byte 0x00001EB8
_080A4CBC: .4byte _080A4CC0
_080A4CC0: @ jump table
	.4byte _080A4CDC @ case 0
	.4byte _080A4CE0 @ case 1
	.4byte _080A4CE4 @ case 2
	.4byte _080A4CE8 @ case 3
	.4byte _080A4CEC @ case 4
	.4byte _080A4CF0 @ case 5
	.4byte _080A4CFA @ case 6
_080A4CDC:
	movs r0, #0x7c
	b _080A4CF2
_080A4CE0:
	movs r0, #0x7d
	b _080A4CF2
_080A4CE4:
	movs r0, #0x7e
	b _080A4CF2
_080A4CE8:
	movs r0, #0x7f
	b _080A4CF2
_080A4CEC:
	movs r0, #0x80
	b _080A4CF2
_080A4CF0:
	movs r0, #0x81
_080A4CF2:
	movs r1, #0
	bl sub_080147B8
	b _080A4D02
_080A4CFA:
	movs r0, #0x82
	movs r1, #0
	bl sub_080147B8
_080A4D02:
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A4D08
sub_080A4D08: @ 0x080A4D08
	push {r4, lr}
	bl sub_080A5518
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r1, _080A4D3C @ =gUnk_03006B54
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A4D40 @ =0x00001FBC
	adds r0, r0, r2
	ldr r1, [r1]
	adds r1, r1, r0
	ldr r0, _080A4D44 @ =sub_0809E3EC
	str r0, [r1, #0x18]
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r4, #0
	movs r2, #1
	bl sub_080A4FBC
	adds r0, r4, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A4D3C: .4byte gUnk_03006B54
_080A4D40: .4byte 0x00001FBC
_080A4D44: .4byte sub_0809E3EC

	thumb_func_start sub_080A4D48
sub_080A4D48: @ 0x080A4D48
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _080A4D7C @ =0x0000FFFF
	cmp r4, r0
	beq _080A4D8C
	bl sub_080A5518
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A4D80 @ =gUnk_03006B54
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r3, _080A4D84 @ =0x00001FBC
	adds r1, r1, r3
	ldr r2, [r2]
	adds r2, r2, r1
	ldr r1, _080A4D88 @ =sub_080A4D94
	str r1, [r2, #0x18]
	strh r4, [r2, #0xc]
	strh r5, [r2, #0xe]
	b _080A4D8E
	.align 2, 0
_080A4D7C: .4byte 0x0000FFFF
_080A4D80: .4byte gUnk_03006B54
_080A4D84: .4byte 0x00001FBC
_080A4D88: .4byte sub_080A4D94
_080A4D8C:
	adds r0, r4, #0
_080A4D8E:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080A4D94
sub_080A4D94: @ 0x080A4D94
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A4DB8 @ =gUnk_03006B54
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A4DBC @ =0x00001FBC
	adds r1, r1, r0
	ldr r0, [r2]
	adds r4, r0, r1
	movs r1, #0
	ldrsh r5, [r4, r1]
	cmp r5, #0
	beq _080A4DC0
	cmp r5, #1
	beq _080A4DDE
	b _080A4DF6
	.align 2, 0
_080A4DB8: .4byte gUnk_03006B54
_080A4DBC: .4byte 0x00001FBC
_080A4DC0:
	ldrh r0, [r4, #0xc]
	bl sub_080A06E0
	ldrh r1, [r4, #0xe]
	ldr r0, _080A4DD4 @ =0x0000FFFF
	cmp r1, r0
	bne _080A4DD8
	strh r5, [r4]
	b _080A4DF6
	.align 2, 0
_080A4DD4: .4byte 0x0000FFFF
_080A4DD8:
	ldrh r0, [r4]
	adds r0, #1
	b _080A4DF4
_080A4DDE:
	ldrh r0, [r4, #8]
	adds r1, r0, #1
	strh r1, [r4, #8]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	ble _080A4DF6
	ldrh r0, [r4, #0xe]
	bl sub_080A06E0
	movs r0, #0
_080A4DF4:
	strh r0, [r4]
_080A4DF6:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080A4E00
sub_080A4E00: @ 0x080A4E00
	push {r4, lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A4E34 @ =gUnk_03006B54
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A4E38 @ =0x00001538
	adds r1, r1, r0
	ldr r0, [r2]
	adds r2, r0, r1
	ldrh r1, [r2, #0xe]
	adds r4, r1, #0
	ldr r0, _080A4E3C @ =0x0000FFFF
	cmp r1, r0
	bne _080A4E40
	ldrb r0, [r2, #4]
	bl sub_080A1860
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, r4
	bne _080A4E40
	movs r0, #0
	b _080A4E74
	.align 2, 0
_080A4E34: .4byte gUnk_03006B54
_080A4E38: .4byte 0x00001538
_080A4E3C: .4byte 0x0000FFFF
_080A4E40:
	ldr r0, _080A4E58 @ =0x000003E7
	cmp r1, r0
	bhi _080A4E60
	adds r0, r1, #0
	movs r1, #1
	bl sub_0806D054
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A4E5C
	movs r0, #1
	b _080A4E74
	.align 2, 0
_080A4E58: .4byte 0x000003E7
_080A4E5C:
	movs r0, #2
	b _080A4E74
_080A4E60:
	adds r0, r1, #0
	movs r1, #1
	bl sub_0806D054
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A4E72
	movs r0, #4
	b _080A4E74
_080A4E72:
	movs r0, #3
_080A4E74:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A4E7C
sub_080A4E7C: @ 0x080A4E7C
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A4EA8 @ =gUnk_03006B54
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A4EAC @ =0x00001538
	adds r1, r1, r0
	ldr r0, [r2]
	adds r2, r0, r1
	ldrh r1, [r2, #0xc]
	ldr r0, _080A4EB0 @ =0x0000FFFF
	cmp r1, r0
	beq _080A4EA2
	adds r0, r1, #0
	movs r1, #1
	bl sub_08012FB8
_080A4EA2:
	pop {r0}
	bx r0
	.align 2, 0
_080A4EA8: .4byte gUnk_03006B54
_080A4EAC: .4byte 0x00001538
_080A4EB0: .4byte 0x0000FFFF

	thumb_func_start sub_080A4EB4
sub_080A4EB4: @ 0x080A4EB4
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldr r1, _080A4ECC @ =0x0000FFFF
	cmp r0, #0
	beq _080A4ED0
	cmp r0, #1
	beq _080A4ED4
	b _080A4EDC
	.align 2, 0
_080A4ECC: .4byte 0x0000FFFF
_080A4ED0:
	adds r1, r2, #0
	b _080A4EDC
_080A4ED4:
	adds r0, r2, #0
	adds r0, #0x20
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_080A4EDC:
	adds r0, r1, #0
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A4EE4
sub_080A4EE4: @ 0x080A4EE4
	push {lr}
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r3, #0
	ldr r1, _080A4F08 @ =gUnk_03006B58
	ldr r2, [r1]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #2
	adds r1, #4
	adds r0, r2, r1
	ldrh r1, [r0]
	cmp r1, #0
	beq _080A4F0C
	cmp r1, #1
	beq _080A4F40
	b _080A4F60
	.align 2, 0
_080A4F08: .4byte gUnk_03006B58
_080A4F0C:
	ldr r2, _080A4F34 @ =gUnk_03006B54
	ldrh r1, [r0, #2]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A4F38 @ =0x00000AB8
	adds r0, r0, r1
	ldr r1, [r2]
	adds r0, r1, r0
	ldrh r0, [r0, #0x12]
	lsls r0, r0, #4
	movs r2, #0xcb
	lsls r2, r2, #3
	adds r0, r0, r2
	adds r1, r1, r0
	ldrh r1, [r1, #6]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A4F3C @ =gUnk_08BD505C
	b _080A4F5C
	.align 2, 0
_080A4F34: .4byte gUnk_03006B54
_080A4F38: .4byte 0x00000AB8
_080A4F3C: .4byte gUnk_08BD505C
_080A4F40:
	ldr r2, _080A4F68 @ =gUnk_03006B54
	ldrh r1, [r0, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A4F6C @ =0x00001538
	adds r0, r0, r1
	ldr r1, [r2]
	adds r1, r1, r0
	ldrb r1, [r1, #4]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #2
	ldr r1, _080A4F70 @ =gUnk_08BD5110
_080A4F5C:
	adds r0, r0, r1
	ldrh r3, [r0, #6]
_080A4F60:
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	pop {r1}
	bx r1
	.align 2, 0
_080A4F68: .4byte gUnk_03006B54
_080A4F6C: .4byte 0x00001538
_080A4F70: .4byte gUnk_08BD5110

	thumb_func_start sub_080A4F74
sub_080A4F74: @ 0x080A4F74
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl sub_080A5518
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r1, _080A4FB0 @ =gUnk_03006B54
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A4FB4 @ =0x00001FBC
	adds r0, r0, r2
	ldr r5, [r1]
	adds r5, r5, r0
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r4, #0
	movs r2, #1
	bl sub_080A4FBC
	ldr r0, _080A4FB8 @ =sub_080A44CC
	str r0, [r5, #0x18]
	strh r6, [r5, #0xc]
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A4FB0: .4byte gUnk_03006B54
_080A4FB4: .4byte 0x00001FBC
_080A4FB8: .4byte sub_080A44CC

	thumb_func_start sub_080A4FBC
sub_080A4FBC: @ 0x080A4FBC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov sb, r1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	mov ip, r2
	ldr r2, _080A50E0 @ =gUnk_03006B54
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r1, _080A50E4 @ =0x00001FBC
	adds r0, r0, r1
	ldr r1, [r2]
	adds r3, r1, r0
	ldrh r0, [r3, #0x12]
	mov r4, ip
	bics r0, r4
	ldrh r1, [r3, #0x14]
	mov r4, sb
	bics r1, r4
	orrs r0, r4
	strh r0, [r3, #0x12]
	mov r0, ip
	orrs r1, r0
	strh r1, [r3, #0x14]
	movs r7, #0
	movs r5, #0
	movs r4, #0
	mov r8, r2
_080A5002:
	cmp r4, r6
	beq _080A5026
	lsls r0, r4, #3
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r1, _080A50E4 @ =0x00001FBC
	adds r0, r0, r1
	ldr r1, [r2]
	adds r3, r1, r0
	ldrh r1, [r3, #0x16]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A5026
	ldrh r0, [r3, #0x12]
	orrs r7, r0
	ldrh r0, [r3, #0x14]
	orrs r5, r0
_080A5026:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #7
	bls _080A5002
	movs r1, #1
	mov r0, sb
	ands r0, r1
	cmp r0, #0
	beq _080A5054
	ands r5, r1
	cmp r5, #0
	bne _080A5054
	mov r4, r8
	ldr r2, [r4]
	ldrh r1, [r2]
	movs r0, #4
	ands r0, r1
	cmp r0, #0
	bne _080A5054
	movs r0, #1
	orrs r0, r1
	strh r0, [r2]
_080A5054:
	movs r0, #1
	mov r1, ip
	ands r0, r1
	cmp r0, #0
	beq _080A506A
	mov r4, r8
	ldr r2, [r4]
	ldrh r1, [r2]
	ldr r0, _080A50E8 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
_080A506A:
	movs r1, #4
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	beq _080A5088
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	bne _080A5088
	mov r0, r8
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A50EC @ =0x0000FFFB
	ands r0, r1
	strh r0, [r2]
_080A5088:
	movs r0, #4
	mov r1, sb
	ands r0, r1
	cmp r0, #0
	beq _080A509E
	mov r4, r8
	ldr r2, [r4]
	ldrh r1, [r2]
	movs r0, #4
	orrs r0, r1
	strh r0, [r2]
_080A509E:
	movs r1, #0x80
	lsls r1, r1, #5
	mov r0, ip
	ands r0, r1
	cmp r0, #0
	beq _080A50BC
	ands r7, r1
	cmp r7, #0
	bne _080A50BC
	mov r0, r8
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A50F0 @ =0x0000EFFF
	ands r0, r1
	strh r0, [r2]
_080A50BC:
	movs r3, #0x80
	lsls r3, r3, #5
	mov r0, sb
	ands r0, r3
	cmp r0, #0
	beq _080A50D4
	mov r1, r8
	ldr r2, [r1]
	ldrh r1, [r2]
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2]
_080A50D4:
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A50E0: .4byte gUnk_03006B54
_080A50E4: .4byte 0x00001FBC
_080A50E8: .4byte 0x0000FFFE
_080A50EC: .4byte 0x0000FFFB
_080A50F0: .4byte 0x0000EFFF

	thumb_func_start sub_080A50F4
sub_080A50F4: @ 0x080A50F4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	movs r6, #0
	ldr r0, _080A5164 @ =gUnk_03006B54
	mov r8, r0
_080A5102:
	lsls r0, r6, #3
	subs r0, r0, r6
	lsls r0, r0, #2
	ldr r1, _080A5168 @ =0x00001FBC
	adds r7, r0, r1
	mov r1, r8
	ldr r0, [r1]
	adds r4, r0, r7
	ldrh r1, [r4, #0x16]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A514C
	ldr r1, [r4, #0x18]
	adds r0, r6, #0
	bl _call_via_r1
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A514C
	ldrh r1, [r4, #0x16]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	bne _080A514C
	mov r0, r8
	ldr r4, [r0]
	adds r4, r4, r7
	str r5, [sp]
	mov r0, sp
	adds r1, r4, #0
	ldr r2, _080A516C @ =0x05000007
	bl CpuSet
	str r5, [r4, #0x18]
_080A514C:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #7
	bls _080A5102
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A5164: .4byte gUnk_03006B54
_080A5168: .4byte 0x00001FBC
_080A516C: .4byte 0x05000007

	thumb_func_start sub_080A5170
sub_080A5170: @ 0x080A5170
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x2c
	movs r3, #0
	ldr r0, _080A51DC @ =0x0000FFFF
	mov r8, r0
	movs r6, #0
	ldr r2, _080A51E0 @ =gUnk_03006B54
	ldr r5, _080A51E4 @ =0x0000FFFD
_080A5188:
	lsls r0, r6, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #8
	movs r0, #0x80
	lsls r0, r0, #6
	strh r0, [r1]
	lsls r0, r6, #4
	ldr r1, _080A51E8 @ =0x0000056C
	adds r0, r0, r1
	ldr r1, [r2]
	adds r4, r1, r0
	ldrh r1, [r4, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A51C4
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A51C4
	mov r8, r6
	adds r0, r5, #0
	ands r0, r1
	strh r0, [r4, #8]
_080A51C4:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _080A5188
	cmp r3, #0
	bne _080A51EC
	ldr r0, _080A51DC @ =0x0000FFFF
	cmp r8, r0
	bne _080A51DA
	b _080A539C
_080A51DA:
	b _080A532C
	.align 2, 0
_080A51DC: .4byte 0x0000FFFF
_080A51E0: .4byte gUnk_03006B54
_080A51E4: .4byte 0x0000FFFD
_080A51E8: .4byte 0x0000056C
_080A51EC:
	ldr r2, _080A52A0 @ =gUnk_03006B54
	ldr r0, [r2]
	movs r4, #0x98
	lsls r4, r4, #3
	adds r0, r0, r4
	ldrh r1, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r1, #0x78
	ldrh r0, [r0, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x14
	adds r0, #0x50
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp, #0x20]
	movs r3, #0
	movs r6, #0
	add r7, sp, #0x10
	mov sl, r7
	lsls r1, r1, #0x10
	mov sb, r1
_080A5218:
	lsls r0, r6, #1
	mov r1, sl
	adds r1, r1, r0
	str r1, [sp, #0x28]
	movs r1, #0x80
	lsls r1, r1, #6
	ldr r2, [sp, #0x28]
	strh r1, [r2]
	adds r0, r0, r6
	lsls r0, r0, #2
	ldr r4, _080A52A4 @ =0x000005AC
	adds r0, r0, r4
	ldr r7, _080A52A0 @ =gUnk_03006B54
	ldr r2, [r7]
	adds r5, r2, r0
	ldrh r1, [r5, #2]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A5288
	ldrh r0, [r5]
	lsls r0, r0, #4
	ldr r1, _080A52A8 @ =0x0000056C
	adds r0, r0, r1
	adds r4, r2, r0
	adds r0, r5, #4
	ldr r7, [sp, #0x20]
	lsls r2, r7, #0x10
	mov r7, sb
	asrs r1, r7, #0x10
	asrs r2, r2, #0x10
	str r3, [sp, #0x24]
	bl sub_080A5924
	adds r1, r0, #0
	ldr r0, [sp, #0x28]
	strh r1, [r0]
	lsls r0, r1, #0x10
	lsrs r2, r0, #0x10
	ldr r3, [sp, #0x24]
	ldrh r4, [r4, #4]
	cmp r2, r4
	bhi _080A5288
	lsls r0, r3, #0x10
	movs r3, #0x80
	lsls r3, r3, #9
	adds r0, r0, r3
	lsrs r3, r0, #0x10
	ldrh r0, [r5]
	lsls r0, r0, #1
	add r0, sp
	adds r0, #8
	ldrh r4, [r0]
	cmp r2, r4
	bhs _080A5288
	strh r1, [r0]
_080A5288:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #7
	bls _080A5218
	cmp r3, #0
	bne _080A52B0
	ldr r0, _080A52AC @ =0x0000FFFF
	cmp r8, r0
	bne _080A529E
	b _080A539C
_080A529E:
	b _080A532C
	.align 2, 0
_080A52A0: .4byte gUnk_03006B54
_080A52A4: .4byte 0x000005AC
_080A52A8: .4byte 0x0000056C
_080A52AC: .4byte 0x0000FFFF
_080A52B0:
	ldr r7, _080A52F0 @ =0x0000FFFF
	movs r5, #3
	movs r3, #0x80
	lsls r3, r3, #6
	movs r6, #0
	mov sl, r3
	ldr r0, _080A52F4 @ =gUnk_03006B54
	mov sb, r0
_080A52C0:
	lsls r0, r6, #1
	mov r2, sp
	adds r2, r2, r0
	adds r2, #8
	ldrh r0, [r2]
	cmp r0, sl
	beq _080A5318
	lsls r0, r6, #4
	ldr r1, _080A52F8 @ =0x0000056C
	adds r0, r0, r1
	mov r4, sb
	ldr r1, [r4]
	adds r4, r1, r0
	ldrh r1, [r4, #6]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	cmp r1, r0
	bgt _080A5318
	cmp r1, r0
	bge _080A52FC
	adds r7, r6, #0
	adds r5, r1, #0
	ldrh r3, [r2]
	b _080A5318
	.align 2, 0
_080A52F0: .4byte 0x0000FFFF
_080A52F4: .4byte gUnk_03006B54
_080A52F8: .4byte 0x0000056C
_080A52FC:
	ldrh r2, [r2]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	cmp r2, r0
	bgt _080A5318
	cmp r2, r0
	bge _080A530E
	adds r7, r6, #0
	b _080A5314
_080A530E:
	cmp r6, r8
	bne _080A5318
	mov r7, r8
_080A5314:
	adds r5, r1, #0
	adds r3, r2, #0
_080A5318:
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #3
	bls _080A52C0
	ldr r0, _080A5334 @ =0x0000FFFF
	cmp r7, r0
	bne _080A5338
	cmp r8, r7
	beq _080A539C
_080A532C:
	movs r0, #2
	bl sub_08014848
	b _080A539C
	.align 2, 0
_080A5334: .4byte 0x0000FFFF
_080A5338:
	ldr r1, _080A5384 @ =gUnk_03006B54
	lsls r0, r7, #4
	ldr r2, _080A5388 @ =0x0000056C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4, #8]
	movs r0, #2
	orrs r0, r1
	strh r0, [r4, #8]
	cmp r8, r7
	beq _080A5364
	ldrh r0, [r4]
	ldrh r3, [r4, #0xa]
	ldrh r1, [r4, #0xc]
	str r1, [sp]
	movs r1, #1
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	bl sub_080147DC
_080A5364:
	ldrh r1, [r4, #4]
	lsls r0, r7, #1
	add r0, sp
	adds r0, #8
	ldrh r0, [r0]
	subs r0, r1, r0
	ldrh r2, [r4, #2]
	muls r0, r2, r0
	bl __divsi3
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #1
	bhi _080A538C
	movs r1, #2
	b _080A5396
	.align 2, 0
_080A5384: .4byte gUnk_03006B54
_080A5388: .4byte 0x0000056C
_080A538C:
	movs r0, #0xbd
	lsls r0, r0, #1
	cmp r1, r0
	bls _080A5396
	adds r1, r0, #0
_080A5396:
	movs r0, #2
	bl sub_080138D4
_080A539C:
	add sp, #0x2c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080A53AC
sub_080A53AC: @ 0x080A53AC
	push {r4, r5, r6, r7, lr}
	sub sp, #0x2c
	adds r7, r0, #0
	lsls r1, r1, #0x18
	lsrs r6, r1, #0x18
	ldr r0, _080A53D4 @ =gUnk_03006B54
	ldr r0, [r0]
	ldr r1, _080A53D8 @ =0x00000564
	adds r5, r0, r1
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #4
	bls _080A53C8
	b _080A54F0
_080A53C8:
	lsls r0, r0, #2
	ldr r1, _080A53DC @ =_080A53E0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A53D4: .4byte gUnk_03006B54
_080A53D8: .4byte 0x00000564
_080A53DC: .4byte _080A53E0
_080A53E0: @ jump table
	.4byte _080A53F4 @ case 0
	.4byte _080A5440 @ case 1
	.4byte _080A549C @ case 2
	.4byte _080A54B0 @ case 3
	.4byte _080A54DC @ case 4
_080A53F4:
	movs r4, #0
	str r4, [sp, #0x14]
	ldr r2, _080A543C @ =0x05000002
	add r0, sp, #0x14
	adds r1, r5, #0
	bl CpuSet
	add r1, sp, #0x18
	strb r4, [r1]
	strb r4, [r1, #1]
	movs r0, #1
	strb r0, [r1, #2]
	movs r0, #0x10
	strb r0, [r1, #3]
	movs r0, #0x1c
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	strb r4, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	strb r4, [r1, #9]
	strb r4, [r1, #6]
	str r4, [r1, #0xc]
	str r4, [r1, #0x10]
	adds r0, r5, #4
	bl sub_08019944
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r5]
	adds r0, #1
	b _080A54EE
	.align 2, 0
_080A543C: .4byte 0x05000002
_080A5440:
	adds r4, r5, #4
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A54F0
	cmp r6, #1
	bne _080A545C
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
_080A545C:
	adds r0, r7, #0
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	adds r0, r5, #6
	movs r1, #0x11
	str r1, [sp]
	ldr r1, _080A5498 @ =0x44444444
	str r1, [sp, #4]
	movs r2, #0
	str r2, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r2, [sp, #0x10]
	movs r1, #0
	adds r2, r7, #0
	bl sub_0800B1AC
	ldrh r0, [r5]
	adds r0, #1
	b _080A54EE
	.align 2, 0
_080A5498: .4byte 0x44444444
_080A549C:
	ldrh r0, [r5, #2]
	adds r0, #1
	strh r0, [r5, #2]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x1d
	ble _080A54F0
	ldrh r0, [r5]
	adds r0, #1
	b _080A54EE
_080A54B0:
	ldr r0, _080A54D8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A54C4
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A54F0
_080A54C4:
	adds r0, r5, #6
	bl sub_0800B4E4
	adds r0, r5, #4
	bl sub_0801BA7C
	ldrh r0, [r5]
	adds r0, #1
	b _080A54EE
	.align 2, 0
_080A54D8: .4byte gKeyNewPress
_080A54DC:
	adds r0, r5, #4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A54F0
	strh r0, [r5, #6]
	strh r0, [r5, #4]
_080A54EE:
	strh r0, [r5]
_080A54F0:
	movs r1, #0
	ldrsh r0, [r5, r1]
	add sp, #0x2c
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A54FC
sub_080A54FC: @ 0x080A54FC
	push {r4, lr}
	movs r4, #0
_080A5500:
	adds r0, r4, #0
	bl sub_080A5564
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #7
	bls _080A5500
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A5518
sub_080A5518: @ 0x080A5518
	push {r4, r5, r6, lr}
	movs r3, #0
	ldr r5, _080A5544 @ =gUnk_03006B54
	movs r6, #1
	ldr r4, _080A5548 @ =0x00001FBC
_080A5522:
	lsls r0, r3, #3
	subs r0, r0, r3
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r1, [r5]
	adds r1, r1, r0
	ldrh r2, [r1, #0x16]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	bne _080A554C
	adds r0, r2, #0
	orrs r0, r6
	strh r0, [r1, #0x16]
	adds r0, r3, #0
	b _080A5558
	.align 2, 0
_080A5544: .4byte gUnk_03006B54
_080A5548: .4byte 0x00001FBC
_080A554C:
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #7
	bls _080A5522
	ldr r0, _080A5560 @ =0x0000FFFF
_080A5558:
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A5560: .4byte 0x0000FFFF

	thumb_func_start sub_080A5564
sub_080A5564: @ 0x080A5564
	push {r4, r5, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A5594 @ =gUnk_03006B54
	lsls r1, r0, #3
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A5598 @ =0x00001FBC
	adds r1, r1, r0
	ldr r4, [r2]
	adds r4, r4, r1
	movs r5, #0
	str r5, [sp]
	ldr r2, _080A559C @ =0x05000007
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	str r5, [r4, #0x18]
	add sp, #4
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A5594: .4byte gUnk_03006B54
_080A5598: .4byte 0x00001FBC
_080A559C: .4byte 0x05000007

	thumb_func_start sub_080A55A0
sub_080A55A0: @ 0x080A55A0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	ldr r3, _080A55B4 @ =gUnk_03006B60
	adds r0, r0, r3
	str r1, [r1]
	lsrs r2, r2, #3
	str r2, [r1, #4]
	str r1, [r0]
	str r1, [r0, #4]
	bx lr
	.align 2, 0
_080A55B4: .4byte gUnk_03006B60

	thumb_func_start sub_080A55B8
sub_080A55B8: @ 0x080A55B8
	push {r4, lr}
	adds r3, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	ldr r1, _080A55DC @ =gUnk_03006B60
	adds r4, r0, r1
	ldr r1, [r4, #4]
	ldr r2, [r1]
	adds r0, r3, #7
	lsrs r0, r0, #3
	adds r3, r0, #1
	cmp r1, r2
	bne _080A55F0
	ldr r0, [r2, #4]
	cmp r0, r3
	bhs _080A55F0
_080A55D8:
	movs r0, #0
	b _080A560E
	.align 2, 0
_080A55DC: .4byte gUnk_03006B60
_080A55E0:
	ldr r0, [r2]
	str r0, [r1]
	b _080A5608
_080A55E6:
	ldr r0, [r4, #4]
	cmp r2, r0
	beq _080A55D8
	adds r1, r2, #0
	ldr r2, [r2]
_080A55F0:
	ldr r0, [r2, #4]
	cmp r0, r3
	blo _080A55E6
	cmp r0, r3
	beq _080A55E0
	cmp r0, r3
	bls _080A55E6
	subs r0, r0, r3
	str r0, [r2, #4]
	lsls r0, r0, #3
	adds r2, r2, r0
	str r3, [r2, #4]
_080A5608:
	str r1, [r4, #4]
	adds r0, r2, #0
	adds r0, #8
_080A560E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080A5614
sub_080A5614: @ 0x080A5614
	push {r4, r5, lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	ldr r2, _080A5624 @ =gUnk_03006B60
	adds r5, r0, r2
	subs r1, #8
	ldr r2, [r5, #4]
	b _080A562A
	.align 2, 0
_080A5624: .4byte gUnk_03006B60
_080A5628:
	ldr r2, [r2]
_080A562A:
	ldr r3, [r2]
	cmp r1, r2
	bls _080A5634
	cmp r1, r3
	blo _080A5640
_080A5634:
	cmp r2, r3
	blo _080A5628
	cmp r1, r2
	bhi _080A5640
	cmp r1, r3
	bhs _080A5628
_080A5640:
	ldr r4, [r1, #4]
	lsls r0, r4, #3
	adds r0, r1, r0
	cmp r0, r3
	bne _080A5656
	ldr r0, [r3, #4]
	adds r0, r4, r0
	str r0, [r1, #4]
	ldr r0, [r3]
	str r0, [r1]
	b _080A5658
_080A5656:
	str r3, [r1]
_080A5658:
	ldr r3, [r2, #4]
	lsls r0, r3, #3
	adds r0, r2, r0
	cmp r0, r1
	bne _080A566E
	ldr r0, [r1, #4]
	adds r0, r3, r0
	str r0, [r2, #4]
	ldr r0, [r1]
	str r0, [r2]
	b _080A5670
_080A566E:
	str r1, [r2]
_080A5670:
	str r2, [r5, #4]
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080A5678
sub_080A5678: @ 0x080A5678
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x15
	ldr r1, _080A569C @ =gUnk_03006B60
	adds r0, r0, r1
	ldr r1, [r0, #4]
	movs r2, #0
	adds r3, r1, #0
_080A5688:
	ldr r0, [r1, #4]
	adds r0, r2, r0
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	ldr r1, [r1]
	cmp r1, r3
	bne _080A5688
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A569C: .4byte gUnk_03006B60

	thumb_func_start sub_080A56A0
sub_080A56A0: @ 0x080A56A0
	push {r4, r5, r6, lr}
	adds r6, r0, #0
	adds r5, r1, #0
	ldr r0, [r6]
	adds r4, r0, #0
	adds r4, #8
	adds r0, r4, #0
	bl __umodsi3
	cmp r0, #0
	beq _080A56BA
	subs r0, r5, r0
	adds r4, r4, r0
_080A56BA:
	adds r0, r4, #0
	subs r0, #8
	str r0, [r6]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A56C8
sub_080A56C8: @ 0x080A56C8
	push {r4, lr}
	movs r4, #0
_080A56CC:
	adds r0, r4, #0
	bl sub_080A573C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #3
	bls _080A56CC
	movs r4, #0
_080A56DE:
	adds r0, r4, #0
	bl sub_080A57F4
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #7
	bls _080A56DE
	movs r0, #2
	bl sub_08014848
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #2
	bl sub_080138D4
	pop {r4}
	pop {r0}
	bx r0

	thumb_func_start sub_080A5704
sub_080A5704: @ 0x080A5704
	push {r4, r5, r6, lr}
	ldr r6, [sp, #0x10]
	lsls r0, r0, #0x10
	ldr r4, _080A5734 @ =gUnk_03006B54
	lsrs r0, r0, #0xc
	ldr r5, _080A5738 @ =0x0000056C
	adds r0, r0, r5
	ldr r4, [r4]
	adds r4, r4, r0
	movs r5, #0
	strh r1, [r4]
	strh r2, [r4, #2]
	strh r3, [r4, #4]
	strh r6, [r4, #6]
	movs r0, #3
	strh r0, [r4, #0xa]
	strh r5, [r4, #0xc]
	ldrh r1, [r4, #8]
	movs r0, #1
	orrs r0, r1
	strh r0, [r4, #8]
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A5734: .4byte gUnk_03006B54
_080A5738: .4byte 0x0000056C

	thumb_func_start sub_080A573C
sub_080A573C: @ 0x080A573C
	push {r4, lr}
	sub sp, #4
	lsls r0, r0, #0x10
	ldr r1, _080A5774 @ =gUnk_03006B54
	lsrs r0, r0, #0xc
	ldr r2, _080A5778 @ =0x0000056C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	ldrh r1, [r4, #8]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A575E
	movs r0, #2
	bl sub_08014848
_080A575E:
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A577C @ =0x05000004
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A5774: .4byte gUnk_03006B54
_080A5778: .4byte 0x0000056C
_080A577C: .4byte 0x05000004

	thumb_func_start sub_080A5780
sub_080A5780: @ 0x080A5780
	push {r4, lr}
	lsls r0, r0, #0x10
	ldr r3, _080A579C @ =gUnk_03006B54
	lsrs r0, r0, #0xc
	ldr r4, _080A57A0 @ =0x0000056C
	adds r0, r0, r4
	ldr r3, [r3]
	adds r3, r3, r0
	strh r1, [r3, #0xa]
	strh r2, [r3, #0xc]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A579C: .4byte gUnk_03006B54
_080A57A0: .4byte 0x0000056C

	thumb_func_start sub_080A57A4
sub_080A57A4: @ 0x080A57A4
	push {r4, lr}
	sub sp, #4
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080A57EC @ =gUnk_03006B54
	ldr r4, [r0]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r2, _080A57F0 @ =0x000005AC
	adds r0, r0, r2
	adds r0, r4, r0
	strh r1, [r0]
	ldrh r2, [r0, #2]
	movs r1, #1
	orrs r1, r2
	strh r1, [r0, #2]
	movs r1, #0x9c
	lsls r1, r1, #1
	adds r4, r4, r1
	adds r0, #4
	movs r2, #0
	ldrsh r3, [r4, r2]
	movs r2, #2
	ldrsh r1, [r4, r2]
	str r1, [sp]
	movs r1, #0
	movs r2, #0
	bl sub_080A586C
	add sp, #4
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A57EC: .4byte gUnk_03006B54
_080A57F0: .4byte 0x000005AC

	thumb_func_start sub_080A57F4
sub_080A57F4: @ 0x080A57F4
	push {lr}
	sub sp, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080A5820 @ =gUnk_03006B54
	lsls r2, r0, #1
	adds r2, r2, r0
	lsls r2, r2, #2
	ldr r0, _080A5824 @ =0x000005AC
	adds r2, r2, r0
	ldr r1, [r1]
	adds r1, r1, r2
	movs r0, #0
	str r0, [sp]
	ldr r2, _080A5828 @ =0x05000003
	mov r0, sp
	bl CpuSet
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080A5820: .4byte gUnk_03006B54
_080A5824: .4byte 0x000005AC
_080A5828: .4byte 0x05000003

	thumb_func_start sub_080A582C
sub_080A582C: @ 0x080A582C
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	ldr r5, [sp, #0x14]
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, _080A5868 @ =gUnk_03006B54
	lsls r0, r4, #1
	adds r0, r0, r4
	lsls r0, r0, #2
	ldr r4, [r6]
	adds r0, r0, r4
	movs r4, #0xb6
	lsls r4, r4, #3
	adds r0, r0, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	str r5, [sp]
	bl sub_080A586C
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A5868: .4byte gUnk_03006B54

	thumb_func_start sub_080A586C
sub_080A586C: @ 0x080A586C
	push {r4, lr}
	ldr r4, [sp, #8]
	strh r1, [r0]
	strh r2, [r0, #2]
	strh r3, [r0, #4]
	strh r4, [r0, #6]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A5880
sub_080A5880: @ 0x080A5880
	push {r4, lr}
	adds r2, r0, #0
	adds r3, r1, #0
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r4, #4
	ldrsh r0, [r3, r4]
	cmp r1, r0
	bgt _080A58BA
	movs r0, #4
	ldrsh r1, [r2, r0]
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r1, r0
	blt _080A58BA
	movs r0, #2
	ldrsh r1, [r2, r0]
	movs r4, #6
	ldrsh r0, [r3, r4]
	cmp r1, r0
	bgt _080A58BA
	movs r0, #6
	ldrsh r1, [r2, r0]
	movs r2, #2
	ldrsh r0, [r3, r2]
	cmp r1, r0
	blt _080A58BA
	movs r0, #1
	b _080A58BC
_080A58BA:
	movs r0, #0
_080A58BC:
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A58C4
sub_080A58C4: @ 0x080A58C4
	ldrh r3, [r0]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r3, r1, r3
	strh r3, [r0]
	ldrh r3, [r0, #2]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r3, r2, r3
	strh r3, [r0, #2]
	ldrh r3, [r0, #4]
	adds r1, r1, r3
	strh r1, [r0, #4]
	ldrh r1, [r0, #6]
	adds r2, r2, r1
	strh r2, [r0, #6]
	bx lr
	.align 2, 0

	thumb_func_start sub_080A58E8
sub_080A58E8: @ 0x080A58E8
	push {r4, lr}
	adds r3, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r4, #4
	ldrsh r0, [r3, r4]
	cmp r1, r0
	bgt _080A591C
	movs r4, #0
	ldrsh r0, [r3, r4]
	cmp r1, r0
	blt _080A591C
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	movs r1, #6
	ldrsh r0, [r3, r1]
	cmp r2, r0
	bgt _080A591C
	movs r4, #2
	ldrsh r0, [r3, r4]
	cmp r2, r0
	blt _080A591C
	movs r0, #1
	b _080A591E
_080A591C:
	movs r0, #0
_080A591E:
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080A5924
sub_080A5924: @ 0x080A5924
	push {r4, r5, r6, r7, lr}
	adds r3, r0, #0
	lsls r2, r2, #0x10
	lsrs r6, r2, #0x10
	movs r4, #0
	movs r5, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldrh r2, [r3]
	movs r7, #0
	ldrsh r0, [r3, r7]
	cmp r1, r0
	bge _080A5944
	subs r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080A5944:
	ldrh r2, [r3, #4]
	movs r7, #4
	ldrsh r0, [r3, r7]
	cmp r1, r0
	ble _080A5954
	subs r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080A5954:
	lsls r0, r6, #0x10
	asrs r2, r0, #0x10
	ldrh r1, [r3, #2]
	movs r6, #2
	ldrsh r0, [r3, r6]
	cmp r2, r0
	bge _080A5968
	subs r0, r1, r2
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_080A5968:
	ldrh r1, [r3, #6]
	movs r7, #6
	ldrsh r0, [r3, r7]
	cmp r2, r0
	ble _080A5978
	subs r0, r2, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
_080A5978:
	lsls r0, r4, #0x10
	asrs r0, r0, #0x10
	lsls r1, r5, #0x10
	asrs r1, r1, #0x10
	adds r0, r0, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A598C
sub_080A598C: @ 0x080A598C
	push {r4, r5, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r5, r4, #0
	bl sub_08012EE0
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r0, _080A59BC @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A59C0 @ =0x0000FFFE
	ands r0, r1
	strh r0, [r2]
	cmp r4, #1
	beq _080A59CE
	cmp r4, #1
	bgt _080A59C4
	cmp r4, #0
	beq _080A59CA
	b _080A59D4
	.align 2, 0
_080A59BC: .4byte gUnk_03006B54
_080A59C0: .4byte 0x0000FFFE
_080A59C4:
	cmp r5, #2
	beq _080A59D2
	b _080A59D4
_080A59CA:
	strh r3, [r2, #2]
	b _080A59D4
_080A59CE:
	strh r3, [r2, #4]
	b _080A59D4
_080A59D2:
	strh r3, [r2, #6]
_080A59D4:
	ldr r0, _080A59E4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A59E4: .4byte gUnk_03006578

	thumb_func_start sub_080A59E8
sub_080A59E8: @ 0x080A59E8
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A5A0C @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A5A10 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A5A14
	cmp r0, #1
	beq _080A5A20
	b _080A5A30
	.align 2, 0
_080A5A0C: .4byte gUnk_03006B54
_080A5A10: .4byte 0x0000209C
_080A5A14:
	bl sub_08012578
	strh r0, [r4, #4]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A5A20:
	ldrh r0, [r4, #4]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bgt _080A5A30
	movs r0, #0
	strh r0, [r4]
_080A5A30:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A5A3C
sub_080A5A3C: @ 0x080A5A3C
	push {r4, r5, r6, r7, lr}
	ldr r7, _080A5AAC @ =gUnk_02002C00
	movs r6, #0
_080A5A42:
	adds r0, r6, #0
	adds r0, #0xd0
	lsls r2, r6, #1
	adds r1, r7, #4
	adds r1, r1, r2
	movs r2, #0
	ldrsh r1, [r1, r2]
	bl sub_08012F0C
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xf
	bls _080A5A42
	movs r6, #0
_080A5A60:
	lsls r4, r6, #1
	adds r0, r4, #0
	adds r0, #0xe0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r5, r6, #2
	adds r5, r7, r5
	movs r2, #0x81
	lsls r2, r2, #2
	adds r1, r5, r2
	movs r2, #0
	ldrsh r1, [r1, r2]
	bl sub_08012F0C
	adds r4, #0xe1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _080A5AB0 @ =0x00000206
	adds r5, r5, r0
	movs r2, #0
	ldrsh r1, [r5, r2]
	adds r0, r4, #0
	bl sub_08012F0C
	adds r0, r6, #1
	lsls r0, r0, #0x18
	lsrs r6, r0, #0x18
	cmp r6, #0xf
	bls _080A5A60
	ldr r0, _080A5AB4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A5AAC: .4byte gUnk_02002C00
_080A5AB0: .4byte 0x00000206
_080A5AB4: .4byte gUnk_03006578

	thumb_func_start sub_080A5AB8
sub_080A5AB8: @ 0x080A5AB8
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r4, r4, #0x14
	asrs r4, r4, #0x10
	lsls r1, r1, #0x14
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_0809B18C
	ldr r0, _080A5AFC @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x98
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	strh r1, [r0, #4]
	ldrh r1, [r0, #2]
	strh r1, [r0, #6]
	ldr r0, _080A5B00 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A5AFC: .4byte gUnk_03006B54
_080A5B00: .4byte gUnk_03006578

	thumb_func_start sub_080A5B04
sub_080A5B04: @ 0x080A5B04
	push {r4, r5, r6, lr}
	ldr r6, _080A5B5C @ =gUnk_03006B54
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	ldr r1, [r6]
	movs r2, #0x98
	lsls r2, r2, #3
	adds r6, r1, r2
	lsls r5, r5, #4
	strh r5, [r6, #8]
	lsls r4, r4, #4
	strh r4, [r6, #0xa]
	strh r0, [r6, #0xc]
	adds r2, #8
	adds r0, r1, r2
	adds r2, #2
	adds r1, r1, r2
	bl sub_0809B130
	ldrh r1, [r6, #0x1a]
	movs r0, #0xff
	lsls r0, r0, #8
	ands r0, r1
	movs r1, #0x10
	orrs r0, r1
	strh r0, [r6, #0x1a]
	ldr r0, _080A5B60 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A5B5C: .4byte gUnk_03006B54
_080A5B60: .4byte gUnk_03006578

	thumb_func_start sub_080A5B64
sub_080A5B64: @ 0x080A5B64
	push {lr}
	bl sub_08012ED0
	ldr r1, _080A5B8C @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A5B90 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r3, r1, r0
	movs r0, #0x98
	lsls r0, r0, #3
	adds r1, r1, r0
	movs r2, #0
	ldrsh r0, [r3, r2]
	cmp r0, #0
	beq _080A5B94
	cmp r0, #1
	beq _080A5B9A
	b _080A5BAE
	.align 2, 0
_080A5B8C: .4byte gUnk_03006B54
_080A5B90: .4byte 0x0000209C
_080A5B94:
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
_080A5B9A:
	ldrh r0, [r1, #0x1a]
	movs r2, #0xf0
	ands r2, r0
	cmp r2, #0
	bne _080A5BAE
	ldr r0, _080A5BB8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	strh r2, [r3]
_080A5BAE:
	movs r1, #0
	ldrsh r0, [r3, r1]
	pop {r1}
	bx r1
	.align 2, 0
_080A5BB8: .4byte gUnk_03006578

	thumb_func_start sub_080A5BBC
sub_080A5BBC: @ 0x080A5BBC
	push {r4, lr}
	ldr r0, _080A5BEC @ =gUnk_03006B54
	ldr r0, [r0]
	movs r1, #0x98
	lsls r1, r1, #3
	adds r4, r0, r1
	bl sub_08012578
	strh r0, [r4, #0xe]
	bl sub_08012578
	adds r1, r0, #0
	strh r1, [r4, #0x10]
	movs r2, #0xe
	ldrsh r0, [r4, r2]
	cmp r0, #0
	bne _080A5BF4
	lsls r0, r1, #0x10
	cmp r0, #0
	bne _080A5BF4
	ldrh r1, [r4, #0x1a]
	ldr r0, _080A5BF0 @ =0x0000FEFF
	ands r0, r1
	b _080A5BFE
	.align 2, 0
_080A5BEC: .4byte gUnk_03006B54
_080A5BF0: .4byte 0x0000FEFF
_080A5BF4:
	ldrh r1, [r4, #0x1a]
	movs r2, #0x80
	lsls r2, r2, #1
	adds r0, r2, #0
	orrs r0, r1
_080A5BFE:
	strh r0, [r4, #0x1a]
	ldr r0, _080A5C10 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A5C10: .4byte gUnk_03006578

	thumb_func_start sub_080A5C14
sub_080A5C14: @ 0x080A5C14
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _080A5C98 @ =gUnk_03006B54
	ldr r5, [r0]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r6, r5, r0
	movs r2, #0x98
	lsls r2, r2, #3
	adds r5, r5, r2
	ldrh r1, [r5]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r4, #0
	bl sub_08012F0C
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r5, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	bl sub_08012F0C
	adds r0, r4, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #0
	ldrsh r1, [r6, r2]
	bl sub_08012F0C
	adds r0, r4, #3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #2
	ldrsh r1, [r6, r2]
	bl sub_08012F0C
	adds r0, r4, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r2, #4
	ldrsh r1, [r6, r2]
	bl sub_08012F0C
	adds r4, #5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #6
	ldrsh r1, [r6, r0]
	adds r0, r4, #0
	bl sub_08012F0C
	ldr r0, _080A5C9C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A5C98: .4byte gUnk_03006B54
_080A5C9C: .4byte gUnk_03006578

	thumb_func_start sub_080A5CA0
sub_080A5CA0: @ 0x080A5CA0
	push {r4, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A5CE4 @ =gUnk_03006B54
	movs r1, #0x2c
	muls r0, r1, r0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r4, [r2]
	adds r4, r4, r0
	bl sub_08012578
	strh r0, [r4, #0x1a]
	bl sub_08012578
	strh r0, [r4, #0x1c]
	bl sub_08012578
	strh r0, [r4, #0x1e]
	ldrh r0, [r4, #0x18]
	movs r1, #1
	orrs r0, r1
	strh r0, [r4, #0x18]
	ldr r0, _080A5CE8 @ =gUnk_03006578
	ldr r0, [r0]
	strb r1, [r0, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A5CE4: .4byte gUnk_03006B54
_080A5CE8: .4byte gUnk_03006578

	thumb_func_start sub_080A5CEC
sub_080A5CEC: @ 0x080A5CEC
	push {r4, r5, lr}
	bl sub_08012ED0
	ldr r1, _080A5D10 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A5D14 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _080A5D18
	cmp r0, #1
	beq _080A5D24
	b _080A5D48
	.align 2, 0
_080A5D10: .4byte gUnk_03006B54
_080A5D14: .4byte 0x0000209C
_080A5D18:
	bl sub_08094A4C
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080A5D48
_080A5D24:
	movs r0, #0
_080A5D26:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_08011104
	movs r2, #0x80
	lsls r2, r2, #9
	adds r4, r4, r2
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xa
	ble _080A5D26
	ldr r0, _080A5D54 @ =gUnk_03006578
	ldr r1, [r0]
	movs r2, #0
	movs r0, #1
	strb r0, [r1, #1]
	strh r2, [r5]
_080A5D48:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A5D54: .4byte gUnk_03006578

	thumb_func_start sub_080A5D58
sub_080A5D58: @ 0x080A5D58
	push {r4, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A5D8C @ =gUnk_03006B54
	movs r1, #0x2c
	muls r0, r1, r0
	movs r1, #0x9c
	lsls r1, r1, #3
	adds r0, r0, r1
	ldr r1, [r2]
	adds r4, r1, r0
	bl sub_08012578
	strh r0, [r4, #8]
	bl sub_08012578
	strh r0, [r4, #0xa]
	ldr r0, [r4, #8]
	cmp r0, #0
	bne _080A5D94
	ldrh r1, [r4, #0x18]
	ldr r0, _080A5D90 @ =0x0000FFDF
	ands r0, r1
	b _080A5D9A
	.align 2, 0
_080A5D8C: .4byte gUnk_03006B54
_080A5D90: .4byte 0x0000FFDF
_080A5D94:
	ldrh r0, [r4, #0x18]
	movs r1, #0x20
	orrs r0, r1
_080A5D9A:
	strh r0, [r4, #0x18]
	ldr r0, _080A5DAC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A5DAC: .4byte gUnk_03006578

	thumb_func_start sub_080A5DB0
sub_080A5DB0: @ 0x080A5DB0
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	bl sub_08012578
	mov sb, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	str r5, [sp]
	str r0, [sp, #4]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_0809B214
	ldr r0, _080A5E24 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A5E24: .4byte gUnk_03006578

	thumb_func_start sub_080A5E28
sub_080A5E28: @ 0x080A5E28
	push {lr}
	bl sub_08012ED0
	ldr r1, _080A5E50 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A5E54 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r3, r1, r0
	movs r0, #0xa8
	lsls r0, r0, #1
	adds r1, r1, r0
	movs r0, #0
	ldrsh r2, [r3, r0]
	cmp r2, #0
	beq _080A5E58
	cmp r2, #1
	beq _080A5E76
	b _080A5E8E
	.align 2, 0
_080A5E50: .4byte gUnk_03006B54
_080A5E54: .4byte 0x0000209C
_080A5E58:
	ldrb r0, [r1, #0xb]
	cmp r0, #0xff
	bne _080A5E70
	strh r2, [r3]
	ldr r0, _080A5E6C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	b _080A5E8E
	.align 2, 0
_080A5E6C: .4byte gUnk_03006578
_080A5E70:
	ldrh r0, [r3]
	adds r0, #1
	strh r0, [r3]
_080A5E76:
	movs r2, #0
	ldrsh r1, [r1, r2]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _080A5E8E
	ldr r0, _080A5E98 @ =gUnk_03006578
	ldr r1, [r0]
	movs r2, #0
	movs r0, #1
	strb r0, [r1, #1]
	strh r2, [r3]
_080A5E8E:
	movs r1, #0
	ldrsh r0, [r3, r1]
	pop {r1}
	bx r1
	.align 2, 0
_080A5E98: .4byte gUnk_03006578

	thumb_func_start sub_080A5E9C
sub_080A5E9C: @ 0x080A5E9C
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r7, r4, #0
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r1, #0
	cmp r5, #0xf
	bhi _080A5ED8
	movs r0, #1
	movs r1, #2
	bl sub_08001D3C
	adds r1, r4, #0
	b _080A5F06
_080A5ED8:
	adds r0, r5, #0
	subs r0, #0x11
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080A5EF0
	movs r0, #1
	movs r1, #1
	bl sub_08001D3C
	adds r1, r4, #0
	b _080A5F06
_080A5EF0:
	adds r0, r5, #0
	subs r0, #0x16
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _080A5F0C
	movs r0, #1
	movs r1, #3
	bl sub_08001D3C
	adds r1, r7, #0
_080A5F06:
	bl sub_08001D78
	adds r1, r0, #0
_080A5F0C:
	cmp r6, #0
	bne _080A5F1E
	adds r0, r1, #0
	adds r0, #0x20
	adds r1, r5, #0
	mov r2, r8
	bl sub_08010D40
	b _080A5F30
_080A5F1E:
	adds r0, r1, #0
	adds r0, #0x20
	adds r1, r5, #0
	mov r2, r8
	adds r3, r6, #0
	bl sub_08010D68
	bl sub_08010DF4
_080A5F30:
	ldr r0, _080A5F44 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A5F44: .4byte gUnk_03006578

	thumb_func_start sub_080A5F48
sub_080A5F48: @ 0x080A5F48
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r0, r8
	bl sub_080A57A4
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_080A582C
	ldr r0, _080A5FC4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A5FC4: .4byte gUnk_03006578

	thumb_func_start sub_080A5FC8
sub_080A5FC8: @ 0x080A5FC8
	push {r4, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A6010 @ =gUnk_03006B54
	movs r1, #0x54
	muls r0, r1, r0
	ldr r1, _080A6014 @ =0x00000AB8
	adds r0, r0, r1
	ldr r4, [r2]
	adds r4, r4, r0
	bl sub_08012578
	strb r0, [r4, #0xb]
	bl sub_08012578
	strb r0, [r4, #0xc]
	adds r0, r4, #0
	adds r0, #0x1c
	ldrb r1, [r4, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	ldrb r2, [r4, #0xb]
	ldrb r3, [r4, #0xc]
	bl sub_08009F50
	ldr r0, _080A6018 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6010: .4byte gUnk_03006B54
_080A6014: .4byte 0x00000AB8
_080A6018: .4byte gUnk_03006578

	thumb_func_start sub_080A601C
sub_080A601C: @ 0x080A601C
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A6040 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6044 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6048
	cmp r0, #1
	beq _080A6054
	b _080A6072
	.align 2, 0
_080A6040: .4byte gUnk_03006B54
_080A6044: .4byte 0x0000209C
_080A6048:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6054:
	ldr r2, _080A607C @ =gUnk_03006B54
	ldrh r1, [r4, #2]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, [r2]
	adds r0, r0, r1
	ldr r2, _080A6080 @ =0x00000AD4
	adds r0, r0, r2
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A6072
	movs r0, #0
	strh r0, [r4]
_080A6072:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A607C: .4byte gUnk_03006B54
_080A6080: .4byte 0x00000AD4

	thumb_func_start sub_080A6084
sub_080A6084: @ 0x080A6084
	push {r4, r5, r6, r7, lr}
	bl sub_08012ED0
	ldr r1, _080A60A8 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A60AC @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A60B0
	cmp r0, #1
	beq _080A60BC
	b _080A6146
	.align 2, 0
_080A60A8: .4byte gUnk_03006B54
_080A60AC: .4byte 0x0000209C
_080A60B0:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A60BC:
	movs r7, #1
	movs r6, #0
	ldr r0, _080A60EC @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _080A60F0 @ =0x0000060C
	adds r3, r2, r0
	ldrh r1, [r4, #2]
	ldr r0, _080A60F4 @ =0x0000FFFF
	cmp r1, r0
	beq _080A60FC
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A60F8 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r2, r0
	ldrh r1, [r0, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	cmp r0, #0
	beq _080A613E
_080A60E6:
	movs r7, #0
	b _080A613E
	.align 2, 0
_080A60EC: .4byte gUnk_03006B54
_080A60F0: .4byte 0x0000060C
_080A60F4: .4byte 0x0000FFFF
_080A60F8: .4byte 0x00000AB8
_080A60FC:
	movs r5, #0
	ldrb r0, [r3, #3]
	adds r3, r0, #0
	cmp r3, #0
	beq _080A613E
	ldrh r1, [r4, #2]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A6150 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r2, r0
	ldrh r1, [r0, #0xe]
	adds r2, r7, #0
	ands r2, r1
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_080A6122:
	cmp r2, #0
	beq _080A6130
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r1, #0
	bne _080A60E6
_080A6130:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x1f
	bhi _080A613E
	cmp r3, r6
	bne _080A6122
_080A613E:
	cmp r7, #1
	bne _080A6146
	movs r0, #0
	strh r0, [r4]
_080A6146:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A6150: .4byte 0x00000AB8

	thumb_func_start sub_080A6154
sub_080A6154: @ 0x080A6154
	push {r4, r5, lr}
	bl sub_08012ED0
	ldr r1, _080A6178 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A617C @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6180
	cmp r0, #1
	beq _080A618C
	b _080A6202
	.align 2, 0
_080A6178: .4byte gUnk_03006B54
_080A617C: .4byte 0x0000209C
_080A6180:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A618C:
	movs r5, #1
	ldrh r0, [r4, #2]
	ldr r3, _080A61B0 @ =0x0000FFFF
	cmp r0, r3
	beq _080A61BC
	ldr r2, _080A61B4 @ =gUnk_03006B54
	adds r1, r0, #0
	movs r0, #0x54
	muls r1, r0, r1
	ldr r0, _080A61B8 @ =0x00000AB8
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	ldrh r0, [r0, #0x16]
	cmp r0, r3
	beq _080A61FA
	b _080A61F8
	.align 2, 0
_080A61B0: .4byte 0x0000FFFF
_080A61B4: .4byte gUnk_03006B54
_080A61B8: .4byte 0x00000AB8
_080A61BC:
	movs r3, #0
	ldr r2, _080A61D0 @ =gUnk_03006B54
	ldr r0, [r2]
	movs r1, #0xff
	lsls r1, r1, #3
	adds r0, r0, r1
	ldrh r1, [r0]
	adds r0, r5, #0
	b _080A61F2
	.align 2, 0
_080A61D0: .4byte gUnk_03006B54
_080A61D4:
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0xf
	bhi _080A61FA
	movs r0, #0x2c
	adds r1, r3, #0
	muls r1, r0, r1
	movs r0, #0xff
	lsls r0, r0, #3
	adds r1, r1, r0
	ldr r0, [r2]
	adds r0, r0, r1
	ldrh r1, [r0]
	movs r0, #1
_080A61F2:
	ands r0, r1
	cmp r0, #0
	beq _080A61D4
_080A61F8:
	movs r5, #0
_080A61FA:
	cmp r5, #1
	bne _080A6202
	movs r0, #0
	strh r0, [r4]
_080A6202:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080A620C
sub_080A620C: @ 0x080A620C
	push {r4, r5, r6, r7, lr}
	bl sub_08012ED0
	ldr r1, _080A6230 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6234 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6238
	cmp r0, #1
	beq _080A6244
	b _080A62CE
	.align 2, 0
_080A6230: .4byte gUnk_03006B54
_080A6234: .4byte 0x0000209C
_080A6238:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6244:
	movs r7, #1
	movs r6, #0
	ldr r0, _080A6274 @ =gUnk_03006B54
	ldr r2, [r0]
	ldr r0, _080A6278 @ =0x0000060C
	adds r3, r2, r0
	ldrh r1, [r4, #2]
	ldr r0, _080A627C @ =0x0000FFFF
	cmp r1, r0
	beq _080A6284
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A6280 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r2, r0
	ldrh r1, [r0, #0xe]
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	cmp r0, #0
	beq _080A62C6
_080A626E:
	movs r7, #0
	b _080A62C6
	.align 2, 0
_080A6274: .4byte gUnk_03006B54
_080A6278: .4byte 0x0000060C
_080A627C: .4byte 0x0000FFFF
_080A6280: .4byte 0x00000AB8
_080A6284:
	movs r5, #0
	ldrb r0, [r3, #3]
	adds r3, r0, #0
	cmp r3, #0
	beq _080A62C6
	ldrh r1, [r4, #2]
	movs r0, #0x54
	muls r0, r1, r0
	ldr r1, _080A62D8 @ =0x00000AB8
	adds r0, r0, r1
	adds r0, r2, r0
	ldrh r1, [r0, #0xe]
	adds r2, r7, #0
	ands r2, r1
	movs r0, #0x80
	lsls r0, r0, #4
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_080A62AA:
	cmp r2, #0
	beq _080A62B8
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r1, #0
	bne _080A626E
_080A62B8:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0x1f
	bhi _080A62C6
	cmp r3, r6
	bne _080A62AA
_080A62C6:
	cmp r7, #1
	bne _080A62CE
	movs r0, #0
	strh r0, [r4]
_080A62CE:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A62D8: .4byte 0x00000AB8

	thumb_func_start sub_080A62DC
sub_080A62DC: @ 0x080A62DC
	push {r4, r5, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012EE0
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r1, _080A6334 @ =gUnk_03006B54
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A6338 @ =0x00001538
	adds r0, r0, r2
	ldr r1, [r1]
	adds r1, r1, r0
	ldrh r2, [r1, #8]
	movs r0, #1
	ands r0, r2
	cmp r0, #0
	beq _080A6322
	strh r5, [r1, #0xa]
	cmp r3, #0
	bne _080A6322
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r3, #0
	orrs r0, r2
	strh r0, [r1, #8]
_080A6322:
	ldr r0, _080A633C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6334: .4byte gUnk_03006B54
_080A6338: .4byte 0x00001538
_080A633C: .4byte gUnk_03006578

	thumb_func_start sub_080A6340
sub_080A6340: @ 0x080A6340
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A6364 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6368 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A636C
	cmp r0, #1
	beq _080A6378
	b _080A6398
	.align 2, 0
_080A6364: .4byte gUnk_03006B54
_080A6368: .4byte 0x0000209C
_080A636C:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6378:
	ldr r2, _080A63A4 @ =gUnk_03006B54
	ldrh r1, [r4, #2]
	lsls r0, r1, #4
	subs r0, r0, r1
	lsls r0, r0, #2
	ldr r1, [r2]
	adds r0, r0, r1
	ldr r2, _080A63A8 @ =0x0000154C
	adds r0, r0, r2
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A6398
	movs r0, #0
	strh r0, [r4]
_080A6398:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A63A4: .4byte gUnk_03006B54
_080A63A8: .4byte 0x0000154C

	thumb_func_start sub_080A63AC
sub_080A63AC: @ 0x080A63AC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	bl sub_08012ED0
	ldr r1, _080A63DC @ =gUnk_03006B54
	mov r8, r1
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r1, _080A63E0 @ =0x0000209C
	adds r0, r0, r1
	mov r1, r8
	ldr r3, [r1]
	adds r7, r3, r0
	movs r0, #0
	ldrsh r6, [r7, r0]
	cmp r6, #1
	beq _080A643C
	cmp r6, #1
	bgt _080A63E4
	cmp r6, #0
	beq _080A63EA
	b _080A648C
	.align 2, 0
_080A63DC: .4byte gUnk_03006B54
_080A63E0: .4byte 0x0000209C
_080A63E4:
	cmp r6, #2
	beq _080A6478
	b _080A648C
_080A63EA:
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	adds r0, r4, #0
	bl sub_0809DDC0
	mov r1, r8
	ldr r0, [r1]
	ldr r1, _080A6434 @ =0x00000B0C
	adds r2, r0, r1
	movs r1, #6
	strb r1, [r2, #0xb]
	strb r6, [r2, #0xc]
	ldr r1, _080A6438 @ =0x00000B28
	adds r0, r0, r1
	ldrb r1, [r2, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	adds r0, r5, #0
	bl sub_0809DE98
	ldrh r0, [r7]
	adds r0, #1
	b _080A648A
	.align 2, 0
_080A6434: .4byte 0x00000B0C
_080A6438: .4byte 0x00000B28
_080A643C:
	ldr r0, _080A6470 @ =0x00000B0C
	adds r2, r3, r0
	ldrh r1, [r2, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080A648C
	movs r0, #3
	strb r0, [r2, #0xb]
	strb r1, [r2, #0xc]
	ldr r1, _080A6474 @ =0x00000B28
	adds r0, r3, r1
	ldrb r1, [r2, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	ldrh r0, [r7]
	adds r0, #1
	b _080A648A
	.align 2, 0
_080A6470: .4byte 0x00000B0C
_080A6474: .4byte 0x00000B28
_080A6478:
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #1
	bl sub_080A47D0
	movs r0, #0
_080A648A:
	strh r0, [r7]
_080A648C:
	movs r1, #0
	ldrsh r0, [r7, r1]
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A649C
sub_080A649C: @ 0x080A649C
	push {r4, r5, lr}
	bl sub_08012ED0
	ldr r1, _080A64C0 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A64C4 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r5, r1, r0
	movs r0, #0
	ldrsh r3, [r5, r0]
	cmp r3, #0
	beq _080A64C8
	cmp r3, #1
	beq _080A64FC
	b _080A6516
	.align 2, 0
_080A64C0: .4byte gUnk_03006B54
_080A64C4: .4byte 0x0000209C
_080A64C8:
	ldr r0, _080A64F4 @ =0x00000B0C
	adds r2, r1, r0
	movs r0, #6
	strb r0, [r2, #0xb]
	strb r3, [r2, #0xc]
	ldr r3, _080A64F8 @ =0x00000B28
	adds r0, r1, r3
	ldrb r1, [r2, #0x12]
	adds r1, #7
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	bl sub_080A46D4
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080A6516
	.align 2, 0
_080A64F4: .4byte 0x00000B0C
_080A64F8: .4byte 0x00000B28
_080A64FC:
	ldr r0, _080A6520 @ =0x00000B0C
	adds r2, r1, r0
	ldrh r1, [r2, #0xe]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0
	bne _080A6516
	bl sub_080A4710
	strh r4, [r5]
_080A6516:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6520: .4byte 0x00000B0C

	thumb_func_start sub_080A6524
sub_080A6524: @ 0x080A6524
	push {r4, r5, lr}
	ldr r5, _080A6554 @ =gUnk_03006B54
	ldr r0, [r5]
	ldr r1, _080A6558 @ =0x00001FA8
	adds r4, r0, r1
	ldrh r2, [r0]
	ldr r1, _080A655C @ =0x0000FFFE
	ands r1, r2
	strh r1, [r0]
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080A6560
	bl sub_08012578
	strb r0, [r4, #0x12]
	movs r0, #1
	strh r0, [r4]
	ldr r2, [r5]
	ldrh r0, [r2]
	movs r1, #0x40
	orrs r0, r1
	strh r0, [r2]
	b _080A6568
	.align 2, 0
_080A6554: .4byte gUnk_03006B54
_080A6558: .4byte 0x00001FA8
_080A655C: .4byte 0x0000FFFE
_080A6560:
	cmp r0, #5
	bne _080A6568
	movs r0, #0
	strh r0, [r4]
_080A6568:
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080A6580
	ldr r0, _080A657C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	b _080A6582
	.align 2, 0
_080A657C: .4byte gUnk_03006578
_080A6580:
	movs r0, #1
_080A6582:
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080A6588
sub_080A6588: @ 0x080A6588
	push {r4, r5, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldr r1, _080A65F4 @ =gUnk_03006B54
	movs r0, #0x54
	muls r0, r4, r0
	ldr r2, _080A65F8 @ =0x00000AB8
	adds r0, r0, r2
	ldr r4, [r1]
	adds r4, r4, r0
	ldrh r1, [r4]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	adds r0, r5, #0
	bl sub_08012F0C
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrh r1, [r4, #2]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x14
	bl sub_08012F0C
	adds r0, r5, #2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldrb r1, [r4, #9]
	bl sub_08012F0C
	adds r5, #3
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	ldrh r1, [r4, #0x18]
	adds r0, r5, #0
	bl sub_08012F0C
	ldr r0, _080A65FC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A65F4: .4byte gUnk_03006B54
_080A65F8: .4byte 0x00000AB8
_080A65FC: .4byte gUnk_03006578

	thumb_func_start sub_080A6600
sub_080A6600: @ 0x080A6600
	push {r4, r5, r6, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A6638
	movs r0, #0xa1
	adds r1, r6, #0
	bl sub_08012F0C
	movs r0, #0xa2
	adds r1, r4, #0
	bl sub_08012F0C
	movs r0, #0xa3
	movs r1, #1
	bl sub_08012F0C
	b _080A6644
_080A6638:
	cmp r0, #2
	bne _080A6644
	movs r0, #0xa3
	movs r1, #0
	bl sub_08012F0C
_080A6644:
	movs r0, #0xa3
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A6666
	movs r0, #0xa1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r0, #0xa2
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080A6666:
	ldr r5, _080A6680 @ =0x0000FFFF
	cmp r4, r5
	bne _080A666E
	movs r4, #2
_080A666E:
	adds r0, r4, #0
	bl sub_0801444C
	cmp r6, r5
	bne _080A6684
	bl sub_08014614
	b _080A6698
	.align 2, 0
_080A6680: .4byte 0x0000FFFF
_080A6684:
	bl sub_080144CC
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, r6
	beq _080A6698
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08014544
_080A6698:
	ldr r0, _080A66A8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A66A8: .4byte gUnk_03006578

	thumb_func_start sub_080A66AC
sub_080A66AC: @ 0x080A66AC
	push {r4, r5, r6, lr}
	bl sub_08012ED0
	ldr r6, _080A66D0 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r1, _080A66D4 @ =0x0000209C
	adds r0, r0, r1
	ldr r1, [r6]
	adds r4, r1, r0
	movs r0, #0
	ldrsh r5, [r4, r0]
	cmp r5, #0
	beq _080A66D8
	cmp r5, #1
	beq _080A6716
	b _080A67C4
	.align 2, 0
_080A66D0: .4byte gUnk_03006B54
_080A66D4: .4byte 0x0000209C
_080A66D8:
	bl sub_08012578
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r4, #0xe]
	bl sub_08012578
	strh r0, [r4, #8]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A66FA
	ldr r0, [r6]
	ldrh r1, [r0]
	movs r2, #0x20
	orrs r1, r2
	strh r1, [r0]
_080A66FA:
	movs r0, #1
	movs r1, #0
	bl sub_080048CC
	movs r0, #0x1f
	bl sub_08004A34
	movs r0, #1
	bl sub_08004A60
	strh r5, [r4, #0xa]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6716:
	ldrh r0, [r4, #0xa]
	adds r1, r0, #1
	strh r1, [r4, #0xa]
	ldrh r0, [r4, #0xe]
	cmp r0, #0
	beq _080A6728
	cmp r0, #1
	beq _080A6768
	b _080A67C4
_080A6728:
	ldrh r0, [r4, #8]
	cmp r0, #1
	bne _080A6744
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x11
	movs r3, #0xa0
	subs r3, r3, r1
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0
	movs r2, #0xf0
	bl sub_0800493C
	b _080A675E
_080A6744:
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x11
	movs r1, #0x10
	subs r1, r1, r3
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r3, #0x90
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0
	movs r2, #0xf0
	bl sub_0800493C
_080A675E:
	ldrh r0, [r4, #0xa]
	lsrs r0, r0, #1
	cmp r0, #0x1b
	bls _080A67C4
	b _080A67A6
_080A6768:
	ldrh r0, [r4, #8]
	cmp r0, #1
	bne _080A6784
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x11
	movs r3, #0xa0
	subs r3, r3, r1
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0
	movs r2, #0xf0
	bl sub_0800493C
	b _080A679E
_080A6784:
	lsls r3, r1, #0x10
	lsrs r3, r3, #0x11
	movs r1, #0x10
	subs r1, r1, r3
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r3, #0x90
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	movs r0, #0
	movs r2, #0xf0
	bl sub_0800493C
_080A679E:
	ldrh r0, [r4, #0xa]
	lsrs r0, r0, #1
	cmp r0, #0x1f
	bls _080A67C4
_080A67A6:
	ldrh r0, [r4, #8]
	cmp r0, #0
	bne _080A67C0
	ldr r0, _080A67D0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A67D4 @ =0x0000FFDF
	ands r0, r1
	strh r0, [r2]
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
_080A67C0:
	movs r0, #0
	strh r0, [r4]
_080A67C4:
	movs r1, #0
	ldrsh r0, [r4, r1]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A67D0: .4byte gUnk_03006B54
_080A67D4: .4byte 0x0000FFDF

	thumb_func_start sub_080A67D8
sub_080A67D8: @ 0x080A67D8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	movs r5, #0
	movs r6, #0
	lsls r0, r4, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	blt _080A6814
	cmp r1, #1
	bne _080A6822
	movs r5, #1
	mov r1, sp
	ldr r0, _080A6810 @ =0x00007B81
	strh r0, [r1]
	b _080A6822
	.align 2, 0
_080A6810: .4byte 0x00007B81
_080A6814:
	movs r5, #1
	mov r1, sp
	ldr r0, _080A6944 @ =0x00007C81
	strh r0, [r1]
	rsbs r0, r2, #0
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080A6822:
	lsls r4, r4, #0x10
	asrs r0, r4, #0x10
	ldr r1, _080A6948 @ =0x00002710
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080A6842
	cmp r6, #0
	beq _080A6858
_080A6842:
	movs r6, #1
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #1
	add r1, sp
	lsls r0, r2, #8
	ldr r2, _080A694C @ =0x00004F82
	adds r0, r0, r2
	strh r0, [r1]
_080A6858:
	asrs r0, r4, #0x10
	movs r1, #0xfa
	lsls r1, r1, #2
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080A6878
	cmp r6, #0
	beq _080A688E
_080A6878:
	movs r6, #1
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #1
	add r1, sp
	lsls r0, r2, #8
	ldr r2, _080A694C @ =0x00004F82
	adds r0, r0, r2
	strh r0, [r1]
_080A688E:
	asrs r0, r4, #0x10
	movs r1, #0x64
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080A68AC
	cmp r6, #0
	beq _080A68C2
_080A68AC:
	movs r6, #1
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #1
	add r1, sp
	lsls r0, r2, #8
	ldr r2, _080A694C @ =0x00004F82
	adds r0, r0, r2
	strh r0, [r1]
_080A68C2:
	asrs r0, r4, #0x10
	movs r1, #0xa
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080A68E0
	cmp r6, #0
	beq _080A68F6
_080A68E0:
	movs r6, #1
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #1
	add r1, sp
	lsls r0, r2, #8
	ldr r2, _080A694C @ =0x00004F82
	adds r0, r0, r2
	strh r0, [r1]
_080A68F6:
	asrs r0, r4, #0x10
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080A690A
	cmp r6, #0
	beq _080A691E
_080A690A:
	adds r1, r5, #0
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r5, r0, #0x18
	lsls r1, r1, #1
	add r1, sp
	lsls r0, r2, #8
	ldr r2, _080A694C @ =0x00004F82
	adds r0, r0, r2
	strh r0, [r1]
_080A691E:
	lsls r0, r5, #1
	mov r2, sp
	adds r1, r2, r0
	movs r0, #0
	strh r0, [r1]
	adds r0, r7, #0
	mov r1, sp
	bl sub_0800E77C
	ldr r0, _080A6950 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #0x10
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A6944: .4byte 0x00007C81
_080A6948: .4byte 0x00002710
_080A694C: .4byte 0x00004F82
_080A6950: .4byte gUnk_03006578

	thumb_func_start sub_080A6954
sub_080A6954: @ 0x080A6954
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080946C0
	ldr r0, _080A6970 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6970: .4byte gUnk_03006578

	thumb_func_start sub_080A6974
sub_080A6974: @ 0x080A6974
	push {lr}
	bl nullsub_7
	bl sub_0809480C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	beq _080A698A
	bl sub_08093EC0
_080A698A:
	bl sub_080A4B2C
	movs r0, #1
	bl sub_08096BEC
	ldr r0, _080A69C8 @ =sub_08093994
	ldr r1, _080A69CC @ =0x00002710
	movs r2, #0
	bl sub_080197B8
	ldr r0, _080A69D0 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	movs r0, #4
	orrs r0, r1
	strh r0, [r2]
	bl sub_0809480C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bne _080A69BA
	bl sub_08094818
_080A69BA:
	ldr r0, _080A69D4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A69C8: .4byte sub_08093994
_080A69CC: .4byte 0x00002710
_080A69D0: .4byte gUnk_03006B54
_080A69D4: .4byte gUnk_03006578

	thumb_func_start sub_080A69D8
sub_080A69D8: @ 0x080A69D8
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A69FC @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6A00 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6A04
	cmp r0, #1
	beq _080A6A0E
	b _080A6A22
	.align 2, 0
_080A69FC: .4byte gUnk_03006B54
_080A6A00: .4byte 0x0000209C
_080A6A04:
	bl sub_08019830
	ldrh r0, [r4]
	adds r0, #1
	b _080A6A20
_080A6A0E:
	ldr r0, _080A6A2C @ =0x000001E1
	movs r1, #0
	bl sub_08012F0C
	bl sub_08093D28
	bl sub_08094724
	movs r0, #0
_080A6A20:
	strh r0, [r4]
_080A6A22:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6A2C: .4byte 0x000001E1

	thumb_func_start sub_080A6A30
sub_080A6A30: @ 0x080A6A30
	ldr r0, _080A6A44 @ =gUnk_03006B54
	ldr r2, [r0]
	ldrh r1, [r2]
	ldr r0, _080A6A48 @ =0x0000FFFB
	ands r0, r1
	movs r1, #1
	orrs r0, r1
	strh r0, [r2]
	movs r0, #0
	bx lr
	.align 2, 0
_080A6A44: .4byte gUnk_03006B54
_080A6A48: .4byte 0x0000FFFB

	thumb_func_start sub_080A6A4C
sub_080A6A4C: @ 0x080A6A4C
	push {lr}
	bl sub_080941A0
	ldr r0, _080A6A60 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6A60: .4byte gUnk_03006578

	thumb_func_start sub_080A6A64
sub_080A6A64: @ 0x080A6A64
	push {lr}
	bl sub_080943A8
	ldr r0, _080A6A78 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6A78: .4byte gUnk_03006578

	thumb_func_start sub_080A6A7C
sub_080A6A7C: @ 0x080A6A7C
	push {lr}
	bl sub_080947FC
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0xa4
	bl sub_08012F0C
	ldr r0, _080A6A9C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6A9C: .4byte gUnk_03006578

	thumb_func_start sub_080A6AA0
sub_080A6AA0: @ 0x080A6AA0
	push {lr}
	bl sub_0809480C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	movs r0, #0xa5
	bl sub_08012F0C
	ldr r0, _080A6AC0 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6AC0: .4byte gUnk_03006578

	thumb_func_start sub_080A6AC4
sub_080A6AC4: @ 0x080A6AC4
	push {lr}
	ldr r1, _080A6AE8 @ =gUnk_02002C00
	movs r0, #3
	strh r0, [r1]
	bl sub_08094818
	movs r0, #0xa5
	movs r1, #0
	bl sub_08012F0C
	ldr r0, _080A6AEC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6AE8: .4byte gUnk_02002C00
_080A6AEC: .4byte gUnk_03006578

	thumb_func_start sub_080A6AF0
sub_080A6AF0: @ 0x080A6AF0
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_0809B0CC
	ldr r0, _080A6B1C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6B1C: .4byte gUnk_03006578

	thumb_func_start sub_080A6B20
sub_080A6B20: @ 0x080A6B20
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809B0F0
	ldr r0, _080A6B58 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6B58: .4byte gUnk_03006578

	thumb_func_start sub_080A6B5C
sub_080A6B5C: @ 0x080A6B5C
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A6B80 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6B84 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6B88
	cmp r0, #1
	beq _080A6B8E
	b _080A6BA4
	.align 2, 0
_080A6B80: .4byte gUnk_03006B54
_080A6B84: .4byte 0x0000209C
_080A6B88:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6B8E:
	bl sub_08096E64
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	cmp r2, #1
	bne _080A6BA4
	ldr r0, _080A6BB0 @ =gUnk_03006578
	ldr r0, [r0]
	movs r1, #0
	strb r2, [r0, #1]
	strh r1, [r4]
_080A6BA4:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6BB0: .4byte gUnk_03006578

	thumb_func_start sub_080A6BB4
sub_080A6BB4: @ 0x080A6BB4
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_0809AF84
	ldr r0, _080A6BE0 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6BE0: .4byte gUnk_03006578

	thumb_func_start sub_080A6BE4
sub_080A6BE4: @ 0x080A6BE4
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r4, r4, #0x14
	asrs r4, r4, #0x10
	lsls r2, r2, #0x14
	asrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809AFB4
	ldr r0, _080A6C20 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6C20: .4byte gUnk_03006578

	thumb_func_start sub_080A6C24
sub_080A6C24: @ 0x080A6C24
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809AFF4
	ldr r0, _080A6C5C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6C5C: .4byte gUnk_03006578

	thumb_func_start sub_080A6C60
sub_080A6C60: @ 0x080A6C60
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809B030
	ldr r0, _080A6C9C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6C9C: .4byte gUnk_03006578

	thumb_func_start sub_080A6CA0
sub_080A6CA0: @ 0x080A6CA0
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809B078
	ldr r0, _080A6CDC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6CDC: .4byte gUnk_03006578

	thumb_func_start sub_080A6CE0
sub_080A6CE0: @ 0x080A6CE0
	push {r4, lr}
	ldr r0, _080A6D04 @ =gUnk_03006B54
	ldr r4, [r0]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r4, r4, r0
	bl sub_08012578
	strh r0, [r4, #0xc]
	ldr r0, _080A6D08 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6D04: .4byte gUnk_03006B54
_080A6D08: .4byte gUnk_03006578

	thumb_func_start sub_080A6D0C
sub_080A6D0C: @ 0x080A6D0C
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_0809B280
	ldr r0, _080A6D38 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6D38: .4byte gUnk_03006578

	thumb_func_start sub_080A6D3C
sub_080A6D3C: @ 0x080A6D3C
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A6D60 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6D64 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6D68
	cmp r0, #1
	beq _080A6D74
	b _080A6D84
	.align 2, 0
_080A6D60: .4byte gUnk_03006B54
_080A6D64: .4byte 0x0000209C
_080A6D68:
	bl sub_08012578
	strh r0, [r4, #2]
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6D74:
	ldrh r0, [r4, #2]
	bl sub_0809B2DC
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080A6D84
	movs r0, #0
	strh r0, [r4]
_080A6D84:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A6D90
sub_080A6D90: @ 0x080A6D90
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_08097368
	ldr r0, _080A6DDC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A6DDC: .4byte gUnk_03006578

	thumb_func_start sub_080A6DE0
sub_080A6DE0: @ 0x080A6DE0
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080972BC
	ldr r0, _080A6E18 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A6E18: .4byte gUnk_03006578

	thumb_func_start sub_080A6E1C
sub_080A6E1C: @ 0x080A6E1C
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0809B2F8
	ldr r0, _080A6E38 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6E38: .4byte gUnk_03006578

	thumb_func_start sub_080A6E3C
sub_080A6E3C: @ 0x080A6E3C
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_0809B350
	ldr r0, _080A6E68 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6E68: .4byte gUnk_03006578

	thumb_func_start sub_080A6E6C
sub_080A6E6C: @ 0x080A6E6C
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_0809B3A4
	ldr r0, _080A6E98 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6E98: .4byte gUnk_03006578

	thumb_func_start sub_080A6E9C
sub_080A6E9C: @ 0x080A6E9C
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #8
	bl sub_08012578
	mov sb, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r0
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08012578
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	str r4, [sp]
	str r0, [sp, #4]
	mov r0, sb
	mov r1, r8
	adds r2, r6, #0
	adds r3, r5, #0
	bl sub_0809B3E0
	ldr r0, _080A6F0C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #8
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A6F0C: .4byte gUnk_03006578

	thumb_func_start sub_080A6F10
sub_080A6F10: @ 0x080A6F10
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0809B434
	ldr r0, _080A6F2C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A6F2C: .4byte gUnk_03006578

	thumb_func_start sub_080A6F30
sub_080A6F30: @ 0x080A6F30
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_0809B488
	ldr r0, _080A6F5C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6F5C: .4byte gUnk_03006578

	thumb_func_start sub_080A6F60
sub_080A6F60: @ 0x080A6F60
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_0809B4E0
	ldr r0, _080A6F8C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A6F8C: .4byte gUnk_03006578

	thumb_func_start sub_080A6F90
sub_080A6F90: @ 0x080A6F90
	push {r4, lr}
	bl sub_08012ED0
	ldr r1, _080A6FB4 @ =gUnk_03006B54
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	ldr r2, _080A6FB8 @ =0x0000209C
	adds r0, r0, r2
	ldr r1, [r1]
	adds r4, r1, r0
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080A6FBC
	cmp r0, #1
	beq _080A6FC2
	b _080A6FD0
	.align 2, 0
_080A6FB4: .4byte gUnk_03006B54
_080A6FB8: .4byte 0x0000209C
_080A6FBC:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
_080A6FC2:
	bl sub_08010E00
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A6FD0
	strh r0, [r4]
_080A6FD0:
	movs r2, #0
	ldrsh r0, [r4, r2]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A6FDC
sub_080A6FDC: @ 0x080A6FDC
	push {r4, lr}
	ldr r0, _080A7004 @ =gUnk_03006B54
	ldr r4, [r0]
	movs r0, #0x9c
	lsls r0, r0, #1
	adds r4, r4, r0
	bl sub_08012578
	strh r0, [r4, #0xe]
	bl sub_08099AD8
	ldr r0, _080A7008 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7004: .4byte gUnk_03006B54
_080A7008: .4byte gUnk_03006578

	thumb_func_start sub_080A700C
sub_080A700C: @ 0x080A700C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_0809B508
	ldr r0, _080A7078 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A7078: .4byte gUnk_03006578

	thumb_func_start sub_080A707C
sub_080A707C: @ 0x080A707C
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl sub_08012578
	adds r3, r0, #0
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	adds r2, r6, #0
	bl sub_0809ADDC
	ldr r0, _080A70C8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A70C8: .4byte gUnk_03006578

	thumb_func_start sub_080A70CC
sub_080A70CC: @ 0x080A70CC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_080A5704
	ldr r0, _080A712C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A712C: .4byte gUnk_03006578

	thumb_func_start sub_080A7130
sub_080A7130: @ 0x080A7130
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080A573C
	ldr r0, _080A714C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A714C: .4byte gUnk_03006578

	thumb_func_start sub_080A7150
sub_080A7150: @ 0x080A7150
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080A5780
	ldr r0, _080A7188 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A7188: .4byte gUnk_03006578

	thumb_func_start sub_080A718C
sub_080A718C: @ 0x080A718C
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r0, r4, #0
	bl sub_080A57F4
	ldr r0, _080A71B4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A71B4: .4byte gUnk_03006578

	thumb_func_start sub_080A71B8
sub_080A71B8: @ 0x080A71B8
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r6, r6, #0x10
	asrs r6, r6, #0x10
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_080A582C
	ldr r0, _080A7224 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A7224: .4byte gUnk_03006578

	thumb_func_start sub_080A7228
sub_080A7228: @ 0x080A7228
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_0809ECCC
	ldr r0, _080A726C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A726C: .4byte gUnk_03006578

	thumb_func_start sub_080A7270
sub_080A7270: @ 0x080A7270
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080A475C
	ldr r0, _080A728C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A728C: .4byte gUnk_03006578

	thumb_func_start sub_080A7290
sub_080A7290: @ 0x080A7290
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809EB1C
	ldr r0, _080A72C8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A72C8: .4byte gUnk_03006578

	thumb_func_start sub_080A72CC
sub_080A72CC: @ 0x080A72CC
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0809EBF4
	ldr r0, _080A72E8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A72E8: .4byte gUnk_03006578

	thumb_func_start sub_080A72EC
sub_080A72EC: @ 0x080A72EC
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_080A47D0
	ldr r0, _080A7318 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7318: .4byte gUnk_03006578

	thumb_func_start sub_080A731C
sub_080A731C: @ 0x080A731C
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_0809F734
	ldr r0, _080A7358 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A7358: .4byte gUnk_03006578

	thumb_func_start sub_080A735C
sub_080A735C: @ 0x080A735C
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r3, r0, #0
	lsls r3, r3, #0x18
	lsrs r3, r3, #0x18
	lsls r5, r5, #0x10
	asrs r5, r5, #0x10
	lsls r4, r4, #0x10
	asrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r5, #0
	adds r2, r4, #0
	bl sub_080A4844
	ldr r0, _080A73A8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A73A8: .4byte gUnk_03006578

	thumb_func_start sub_080A73AC
sub_080A73AC: @ 0x080A73AC
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012EE0
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_080A4890
	ldr r0, _080A73D8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A73D8: .4byte gUnk_03006578

	thumb_func_start sub_080A73DC
sub_080A73DC: @ 0x080A73DC
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080A48B0
	ldr r0, _080A7414 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A7414: .4byte gUnk_03006578

	thumb_func_start sub_080A7418
sub_080A7418: @ 0x080A7418
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_080A4918
	ldr r0, _080A7444 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7444: .4byte gUnk_03006578

	thumb_func_start sub_080A7448
sub_080A7448: @ 0x080A7448
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r1, r0, #0
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl sub_0809F9C8
	ldr r0, _080A7474 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7474: .4byte gUnk_03006578

	thumb_func_start sub_080A7478
sub_080A7478: @ 0x080A7478
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #0
	adds r1, r4, #0
	bl sub_080A2718
	ldr r0, _080A74A8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A74A8: .4byte gUnk_03006578

	thumb_func_start sub_080A74AC
sub_080A74AC: @ 0x080A74AC
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	ldr r3, _080A74EC @ =gUnk_03006B54
	movs r1, #0x54
	adds r2, r4, #0
	muls r2, r1, r2
	ldr r1, _080A74F0 @ =0x00000AB8
	adds r2, r2, r1
	ldr r1, [r3]
	adds r1, r1, r2
	strb r0, [r1, #0xd]
	adds r0, r1, #0
	adds r0, #0x44
	ldrb r2, [r1, #0xd]
	movs r1, #3
	bl sub_08009400
	ldr r0, _080A74F4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A74EC: .4byte gUnk_03006B54
_080A74F0: .4byte 0x00000AB8
_080A74F4: .4byte gUnk_03006578

	thumb_func_start sub_080A74F8
sub_080A74F8: @ 0x080A74F8
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A7544 @ =gUnk_03006B54
	movs r1, #0x54
	muls r1, r5, r1
	ldr r3, _080A7548 @ =0x00000AB8
	adds r1, r1, r3
	ldr r2, [r2]
	adds r2, r2, r1
	orrs r4, r0
	strh r4, [r2, #0x1a]
	ldrh r1, [r2, #0xe]
	movs r3, #0x80
	lsls r3, r3, #4
	adds r0, r3, #0
	orrs r0, r1
	strh r0, [r2, #0xe]
	ldr r0, _080A754C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A7544: .4byte gUnk_03006B54
_080A7548: .4byte 0x00000AB8
_080A754C: .4byte gUnk_03006578

	thumb_func_start sub_080A7550
sub_080A7550: @ 0x080A7550
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080A0328
	ldr r0, _080A7588 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A7588: .4byte gUnk_03006578

	thumb_func_start sub_080A758C
sub_080A758C: @ 0x080A758C
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080A04E8
	ldr r0, _080A75A8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A75A8: .4byte gUnk_03006578

	thumb_func_start sub_080A75AC
sub_080A75AC: @ 0x080A75AC
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08012578
	adds r2, r0, #0
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080A0570
	ldr r0, _080A75E8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A75E8: .4byte gUnk_03006578

	thumb_func_start sub_080A75EC
sub_080A75EC: @ 0x080A75EC
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #1
	adds r1, r4, #0
	bl sub_080A2718
	ldr r0, _080A761C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A761C: .4byte gUnk_03006578

	thumb_func_start sub_080A7620
sub_080A7620: @ 0x080A7620
	push {r4, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A7664 @ =gUnk_03006B54
	lsls r1, r0, #4
	subs r1, r1, r0
	lsls r1, r1, #2
	ldr r0, _080A7668 @ =0x00001538
	adds r1, r1, r0
	ldr r4, [r2]
	adds r4, r4, r1
	bl sub_08012578
	strb r0, [r4, #5]
	bl sub_08012578
	strb r0, [r4, #6]
	adds r0, r4, #0
	adds r0, #0x14
	ldrb r2, [r4, #5]
	ldrb r3, [r4, #6]
	movs r1, #3
	bl sub_08009F50
	ldr r0, _080A766C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7664: .4byte gUnk_03006B54
_080A7668: .4byte 0x00001538
_080A766C: .4byte gUnk_03006578

	thumb_func_start sub_080A7670
sub_080A7670: @ 0x080A7670
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r2, _080A76AC @ =gUnk_03006B54
	lsls r1, r4, #4
	subs r1, r1, r4
	lsls r1, r1, #2
	ldr r3, _080A76B0 @ =0x00001538
	adds r1, r1, r3
	ldr r2, [r2]
	adds r2, r2, r1
	ldrh r1, [r2, #8]
	orrs r0, r1
	strh r0, [r2, #8]
	ldr r0, _080A76B4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A76AC: .4byte gUnk_03006B54
_080A76B0: .4byte 0x00001538
_080A76B4: .4byte gUnk_03006578

	thumb_func_start sub_080A76B8
sub_080A76B8: @ 0x080A76B8
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	ldr r1, _080A76F8 @ =gUnk_03006B54
	lsls r0, r4, #4
	subs r0, r0, r4
	lsls r0, r0, #2
	ldr r2, _080A76FC @ =0x00001538
	adds r0, r0, r2
	ldr r1, [r1]
	adds r2, r1, r0
	ldrh r1, [r2, #8]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A76E8
	strh r3, [r2, #0xe]
_080A76E8:
	ldr r0, _080A7700 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A76F8: .4byte gUnk_03006B54
_080A76FC: .4byte 0x00001538
_080A7700: .4byte gUnk_03006578

	thumb_func_start sub_080A7704
sub_080A7704: @ 0x080A7704
	push {r4, r5, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012EE0
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_080A4A3C
	ldr r0, _080A773C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080A773C: .4byte gUnk_03006578

	thumb_func_start sub_080A7740
sub_080A7740: @ 0x080A7740
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080A4A74
	ldr r0, _080A775C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A775C: .4byte gUnk_03006578

	thumb_func_start sub_080A7760
sub_080A7760: @ 0x080A7760
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	bl sub_08012578
	mov r8, r0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov r8, r0
	bl sub_08012578
	adds r6, r0, #0
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	bl sub_08012578
	lsls r6, r6, #0x18
	asrs r6, r6, #0x18
	lsls r5, r5, #0x18
	asrs r5, r5, #0x18
	lsls r4, r4, #0x18
	asrs r4, r4, #0x18
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	str r0, [sp]
	mov r0, r8
	adds r1, r6, #0
	adds r2, r5, #0
	adds r3, r4, #0
	bl sub_080A2A94
	ldr r0, _080A77CC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A77CC: .4byte gUnk_03006578

	thumb_func_start sub_080A77D0
sub_080A77D0: @ 0x080A77D0
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r2, r0, #0
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	movs r0, #2
	adds r1, r4, #0
	bl sub_080A2718
	ldr r0, _080A7800 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7800: .4byte gUnk_03006578

	thumb_func_start sub_080A7804
sub_080A7804: @ 0x080A7804
	push {lr}
	bl sub_08012578
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_0809DDC0
	ldr r0, _080A7820 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A7820: .4byte gUnk_03006578

	thumb_func_start sub_080A7824
sub_080A7824: @ 0x080A7824
	push {lr}
	bl sub_080A4710
	ldr r0, _080A7838 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A7838: .4byte gUnk_03006578

	thumb_func_start sub_080A783C
sub_080A783C: @ 0x080A783C
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	movs r0, #0xf1
	lsls r0, r0, #1
	adds r1, r4, #0
	bl sub_08012F0C
	cmp r4, #1
	bne _080A785A
	bl sub_0809E568
_080A785A:
	ldr r0, _080A786C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A786C: .4byte gUnk_03006578

	thumb_func_start sub_080A7870
sub_080A7870: @ 0x080A7870
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r6, r0, #0
	adds r4, #1
	cmp r5, r4
	bge _080A78A4
_080A7892:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08012F0C
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, r4
	blt _080A7892
_080A78A4:
	ldr r0, _080A78B4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A78B4: .4byte gUnk_03006578

	thumb_func_start sub_080A78B8
sub_080A78B8: @ 0x080A78B8
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r5, r0, #0
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	adds r6, r0, #0
	adds r4, #1
	cmp r5, r4
	bge _080A78EC
_080A78DA:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_08012FB8
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, r4
	blt _080A78DA
_080A78EC:
	ldr r0, _080A78FC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A78FC: .4byte gUnk_03006578

	thumb_func_start sub_080A7900
sub_080A7900: @ 0x080A7900
	push {r4, r5, r6, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r6, #1
	adds r5, r0, #1
	b _080A7920
_080A791A:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
_080A7920:
	cmp r4, r5
	bge _080A7930
	adds r0, r4, #0
	bl sub_08013038
	cmp r0, #0
	bne _080A791A
	movs r6, #0
_080A7930:
	ldr r0, _080A7948 @ =0x000001E3
	adds r1, r6, #0
	bl sub_08012F0C
	ldr r0, _080A794C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080A7948: .4byte 0x000001E3
_080A794C: .4byte gUnk_03006578

	thumb_func_start sub_080A7950
sub_080A7950: @ 0x080A7950
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0800180C
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08012F0C
	ldr r0, _080A7984 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A7984: .4byte gUnk_03006578

	thumb_func_start sub_080A7988
sub_080A7988: @ 0x080A7988
	push {r4, lr}
	bl sub_08012578
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08001850
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08012F0C
	ldr r0, _080A79BC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080A79BC: .4byte gUnk_03006578

	thumb_func_start sub_080A79C0
sub_080A79C0: @ 0x080A79C0
	push {lr}
	bl sub_0809B5A0
	ldr r0, _080A79D4 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A79D4: .4byte gUnk_03006578

	thumb_func_start sub_080A79D8
sub_080A79D8: @ 0x080A79D8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x4c
	ldr r0, _080A7D4C @ =gUnk_03006B80
	ldr r1, _080A7D50 @ =gUnk_0200E000
	str r1, [r0]
	movs r0, #0
	str r0, [sp, #0x38]
	add r0, sp, #0x38
	ldr r2, _080A7D54 @ =0x05000045
	bl CpuSet
	movs r0, #0
	add r5, sp, #0x3c
	add r7, sp, #0x40
	add r1, sp, #0x44
	mov sl, r1
	mov r1, sp
	adds r1, #0x28
	str r1, [sp, #0x48]
_080A7A06:
	lsls r4, r0, #0x10
	lsrs r0, r4, #0x10
	bl sub_08011104
	movs r0, #0x80
	lsls r0, r0, #9
	adds r4, r4, r0
	lsrs r0, r4, #0x10
	asrs r4, r4, #0x10
	cmp r4, #0xa
	ble _080A7A06
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	movs r1, #0
	bl sub_080047C4
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #4
	bl sub_080045E4
	movs r0, #0xc0
	lsls r0, r0, #0x13
	bl sub_08004570
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E74C
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r1, #0
	mov r8, r1
	str r1, [sp, #0x3c]
	ldr r4, _080A7D58 @ =gUnk_02010800
	ldr r2, _080A7D5C @ =0x05001000
	adds r0, r5, #0
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _080A7D60 @ =0x06001800
	movs r1, #0xc0
	lsls r1, r1, #7
	bl sub_0800E690
	movs r1, #0x80
	lsls r1, r1, #7
	adds r0, r4, #0
	bl sub_0800E6B0
	movs r0, #0x80
	movs r1, #0
	bl sub_0800E6D0
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0
	bl sub_0801B9BC
	movs r0, #0
	bl sub_0801B9EC
	mov r0, r8
	str r0, [sp, #0x40]
	movs r1, #0xc0
	lsls r1, r1, #0x12
	mov sb, r1
	ldr r6, _080A7D64 @ =0x05000200
	adds r0, r7, #0
	adds r2, r6, #0
	bl CpuSet
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #0
	mov r1, sb
	bl sub_0800E6F0
	movs r5, #0x20
	str r5, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	mov r1, r8
	str r1, [sp, #0x44]
	ldr r4, _080A7D68 @ =gUnk_03000800
	mov r0, sl
	adds r1, r4, #0
	adds r2, r6, #0
	bl CpuSet
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0x10
	movs r2, #0
	bl sub_0800476C
	movs r2, #5
	rsbs r2, r2, #0
	movs r0, #1
	movs r1, #0
	bl sub_08005E18
	movs r0, #1
	adds r1, r4, #0
	bl sub_0800E6F0
	str r5, [sp]
	mov r0, r8
	str r0, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x20
	bl sub_0801BBB8
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0x11
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	movs r1, #0
	bl sub_08001D3C
	movs r1, #0
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080A7D6C @ =gUnk_02014800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	ldr r0, [sp, #0x1c]
	ldr r1, _080A7D70 @ =0x06009000
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	movs r3, #0x80
	lsls r3, r3, #0x13
	orrs r2, r3
	bl CpuSet
	movs r0, #1
	movs r1, #0
	bl sub_08001D3C
	movs r1, #1
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080A7D74 @ =gUnk_02019800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	ldr r1, [sp, #0x48]
	bl sub_08001DC4
	ldr r5, _080A7D78 @ =gUnk_03001000
	ldr r6, _080A7D7C @ =0x06008800
	movs r0, #2
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08005CF4
	movs r0, #0x80
	str r0, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r1, [sp, #8]
	movs r0, #2
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #4
	bl sub_08005F14
	ldr r0, _080A7D80 @ =gUnk_03001020
	ldr r2, _080A7D84 @ =0x04000200
	adds r1, r6, #0
	bl CpuSet
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	mov r0, sb
	bl sub_080016D4
	movs r0, #0
	movs r1, #0xc0
	lsls r1, r1, #0x13
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	movs r1, #3
	bl sub_08001D3C
	adds r5, r0, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r4, _080A7D88 @ =0x06010000
	movs r0, #2
	add r1, sp, #0xc
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x1c]
	ldr r2, [sp, #0x10]
	adds r1, r4, #0
	bl sub_08006BA4
	movs r0, #3
	movs r1, #4
	bl sub_08001D3C
	adds r5, r0, #0
	movs r0, #2
	movs r1, #2
	adds r2, r5, #0
	bl sub_0800A630
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	ldr r4, _080A7D4C @ =gUnk_03006B80
	ldr r0, [r4]
	adds r0, #0x74
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, #0x74
	movs r1, #2
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, #0x74
	movs r1, #0
	movs r2, #0x10
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, #0x74
	movs r1, #0
	movs r2, #0
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, #0x74
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldr r0, [r4]
	adds r0, #0x9c
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, #0x9c
	movs r1, #2
	movs r2, #8
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, #0x9c
	movs r1, #0
	movs r2, #0x10
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, #0x9c
	movs r1, #0
	movs r2, #0x98
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, #0x9c
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldr r0, [r4]
	adds r0, #0xc4
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, #0xc4
	movs r1, #2
	movs r2, #9
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, #0xc4
	movs r1, #0
	movs r2, #0x10
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, #0xc4
	movs r1, #0xe3
	movs r2, #0x98
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, #0xc4
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	add sp, #0x4c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A7D4C: .4byte gUnk_03006B80
_080A7D50: .4byte gUnk_0200E000
_080A7D54: .4byte 0x05000045
_080A7D58: .4byte gUnk_02010800
_080A7D5C: .4byte 0x05001000
_080A7D60: .4byte 0x06001800
_080A7D64: .4byte 0x05000200
_080A7D68: .4byte gUnk_03000800
_080A7D6C: .4byte gUnk_02014800
_080A7D70: .4byte 0x06009000
_080A7D74: .4byte gUnk_02019800
_080A7D78: .4byte gUnk_03001000
_080A7D7C: .4byte 0x06008800
_080A7D80: .4byte gUnk_03001020
_080A7D84: .4byte 0x04000200
_080A7D88: .4byte 0x06010000

	thumb_func_start sub_080A7D8C
sub_080A7D8C: @ 0x080A7D8C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	ldr r0, _080A7E70 @ =gUnk_03006B80
	ldr r4, [r0]
	ldrh r0, [r4, #0x26]
	cmp r0, #0
	beq _080A7DA8
	adds r0, r4, #0
	adds r0, #0x26
	bl sub_0800B4E4
_080A7DA8:
	ldrh r0, [r4, #0x20]
	cmp r0, #0
	beq _080A7DB6
	adds r0, r4, #0
	adds r0, #0x20
	bl sub_0800B4E4
_080A7DB6:
	ldrh r0, [r4, #0x22]
	cmp r0, #0
	beq _080A7DC4
	adds r0, r4, #0
	adds r0, #0x22
	bl sub_0800B4E4
_080A7DC4:
	movs r5, #0
	adds r6, r4, #0
	adds r6, #0x12
	adds r7, r4, #0
	adds r7, #0x4c
	movs r0, #0x74
	adds r0, r0, r4
	mov r8, r0
	movs r0, #0x9c
	adds r0, r0, r4
	mov sb, r0
	movs r0, #0xc4
	adds r0, r0, r4
	mov sl, r0
_080A7DE0:
	lsls r1, r5, #1
	adds r0, r6, r1
	ldrh r0, [r0]
	cmp r0, #0
	beq _080A7DF4
	adds r0, r1, #0
	adds r0, #0x12
	adds r0, r4, r0
	bl sub_0800B4E4
_080A7DF4:
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #6
	bls _080A7DE0
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	bl sub_08004A8C
	adds r0, r7, #0
	bl sub_08009F0C
	mov r0, r8
	bl sub_08009F0C
	mov r0, sb
	bl sub_08009F0C
	mov r0, sl
	bl sub_08009F0C
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A7E70: .4byte gUnk_03006B80

	thumb_func_start sub_080A7E74
sub_080A7E74: @ 0x080A7E74
	push {r4, r5, lr}
	ldr r0, _080A7E90 @ =gUnk_03006B80
	ldr r5, [r0]
	movs r1, #0
	ldrsh r0, [r5, r1]
	cmp r0, #0xc
	bls _080A7E84
	b _080A8024
_080A7E84:
	lsls r0, r0, #2
	ldr r1, _080A7E94 @ =_080A7E98
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A7E90: .4byte gUnk_03006B80
_080A7E94: .4byte _080A7E98
_080A7E98: @ jump table
	.4byte _080A7ECC @ case 0
	.4byte _080A7EF0 @ case 1
	.4byte _080A7F08 @ case 2
	.4byte _080A7F1C @ case 3
	.4byte _080A7F22 @ case 4
	.4byte _080A7F28 @ case 5
	.4byte _080A7F86 @ case 6
	.4byte _080A7F98 @ case 7
	.4byte _080A7F9E @ case 8
	.4byte _080A7FA4 @ case 9
	.4byte _080A7FDA @ case 10
	.4byte _080A7FF6 @ case 11
	.4byte _080A8012 @ case 12
_080A7ECC:
	bl sub_080A8030
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #2
	bl sub_08011174
	movs r0, #1
	b _080A8022
_080A7EF0:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A7F02
	movs r0, #2
	strh r0, [r5]
_080A7F02:
	bl sub_080A86C8
	b _080A8024
_080A7F08:
	bl sub_080A86C8
	bl sub_080A8BF8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A7F18
	b _080A8024
_080A7F18:
	movs r0, #3
	b _080A8022
_080A7F1C:
	bl sub_080A812C
	b _080A7FEC
_080A7F22:
	bl sub_080A957C
	b _080A7FEC
_080A7F28:
	bl sub_080A8DAC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A7FEC
	movs r0, #0x10
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bne _080A7F82
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	bne _080A7F62
	bl sub_080A856C
	bl sub_080A8364
	movs r4, #6
	strh r4, [r5]
	bl sub_080A87CC
	movs r0, #0xf
	strh r0, [r5, #4]
	strh r4, [r5, #6]
	strh r0, [r5, #8]
	strh r4, [r5, #0xa]
	movs r1, #6
	bl sub_080A8924
	b _080A8024
_080A7F62:
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0xa
	b _080A7FEA
_080A7F82:
	movs r0, #3
	b _080A7FEA
_080A7F86:
	bl sub_080A87CC
	bl sub_080A8AC4
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A8024
	movs r0, #7
	b _080A8022
_080A7F98:
	bl sub_080A812C
	b _080A8008
_080A7F9E:
	bl sub_080A957C
	b _080A8008
_080A7FA4:
	bl sub_080A90AC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A8008
	movs r0, #0x10
	ldrsb r0, [r5, r0]
	cmp r0, #0
	bne _080A7FD6
	movs r0, #2
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #2
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #2
	movs r1, #1
	bl sub_08011174
	movs r0, #0xb
	b _080A8006
_080A7FD6:
	movs r0, #7
	b _080A8006
_080A7FDA:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A7FEC
	movs r0, #0xc
_080A7FEA:
	strh r0, [r5]
_080A7FEC:
	bl sub_080A86C8
	bl sub_080A9618
	b _080A8024
_080A7FF6:
	movs r0, #2
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A8008
	movs r0, #0xc
_080A8006:
	strh r0, [r5]
_080A8008:
	bl sub_080A87CC
	bl sub_080A9618
	b _080A8024
_080A8012:
	bl sub_080A93EC
	bl sub_080A7D8C
	movs r0, #2
	bl sub_08011104
	movs r0, #0
_080A8022:
	strh r0, [r5]
_080A8024:
	movs r1, #0
	ldrsh r0, [r5, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A8030
sub_080A8030: @ 0x080A8030
	push {r4, lr}
	ldr r0, _080A8098 @ =gUnk_03006B80
	ldr r4, [r0]
	movs r0, #0
	strh r0, [r4, #0x20]
	strh r0, [r4, #0x22]
	strh r0, [r4, #0x26]
	movs r1, #0
	adds r2, r4, #0
	adds r2, #0x12
	movs r3, #0
_080A8046:
	lsls r0, r1, #1
	adds r0, r2, r0
	strh r3, [r0]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #6
	bls _080A8046
	movs r1, #0
	adds r2, r4, #0
	adds r2, #0x28
	movs r3, #0
_080A805E:
	lsls r0, r1, #1
	adds r0, r2, r0
	strh r3, [r0]
	adds r0, r1, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #3
	bls _080A805E
	movs r0, #0
	strh r0, [r4, #0x24]
	movs r0, #0xf0
	lsls r0, r0, #1
	bl sub_08012F60
	strb r0, [r4, #0xc]
	bl sub_080A82A4
	movs r0, #0
	bl sub_080A9520
	bl sub_080A95A8
	movs r0, #0xf
	movs r1, #6
	bl sub_080A8924
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A8098: .4byte gUnk_03006B80

	thumb_func_start sub_080A809C
sub_080A809C: @ 0x080A809C
	push {r4, r5, lr}
	movs r0, #0xf0
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0
	beq _080A80B4
	cmp r0, #1
	beq _080A80F8
	b _080A8118
_080A80B4:
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	ldr r0, _080A80E8 @ =0x0000C083
	ldr r5, _080A80EC @ =gUnk_08BD5788
	lsrs r4, r4, #0xe
	adds r5, r4, r5
	ldr r1, [r5]
	bl sub_0800E77C
	ldr r0, [r5]
	bl SetPlayerName
	ldr r0, _080A80F0 @ =0x0000C283
	ldr r1, _080A80F4 @ =gUnk_08BD57B0
	adds r4, r4, r1
	ldr r1, [r4]
	bl sub_0800E77C
	ldr r0, [r4]
	bl sub_08017B7C
	b _080A8118
	.align 2, 0
_080A80E8: .4byte 0x0000C083
_080A80EC: .4byte gUnk_08BD5788
_080A80F0: .4byte 0x0000C283
_080A80F4: .4byte gUnk_08BD57B0
_080A80F8:
	ldr r0, _080A8120 @ =0x00000183
	bl sub_08012F60
	adds r4, r0, #0
	lsls r4, r4, #0x10
	ldr r0, _080A8124 @ =0x0000C183
	ldr r1, _080A8128 @ =gUnk_08BD5788
	lsrs r4, r4, #0xe
	adds r4, #8
	adds r4, r4, r1
	ldr r1, [r4]
	bl sub_0800E77C
	ldr r0, [r4]
	bl SetGuardimalName
_080A8118:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A8120: .4byte 0x00000183
_080A8124: .4byte 0x0000C183
_080A8128: .4byte gUnk_08BD5788

	thumb_func_start sub_080A812C
sub_080A812C: @ 0x080A812C
	push {lr}
	ldr r0, _080A8164 @ =gUnk_03006B80
	ldr r2, [r0]
	ldr r0, _080A8168 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A81CE
	movs r0, #8
	ldrsh r1, [r2, r0]
	cmp r1, #5
	ble _080A81C8
	movs r3, #0xa
	ldrsh r0, [r2, r3]
	cmp r0, #6
	bne _080A81C8
	cmp r1, #6
	bne _080A8186
	movs r0, #0xe
	ldrsb r0, [r2, r0]
	cmp r0, #1
	beq _080A817A
	cmp r0, #1
	bgt _080A816C
	cmp r0, #0
	beq _080A8172
	b _080A81B0
	.align 2, 0
_080A8164: .4byte gUnk_03006B80
_080A8168: .4byte gKeyNewPress
_080A816C:
	cmp r0, #2
	beq _080A8182
	b _080A81B0
_080A8172:
	movs r0, #1
	bl sub_080A9520
	b _080A81B0
_080A817A:
	movs r0, #0
	bl sub_080A9520
	b _080A81B0
_080A8182:
	movs r0, #0
	b _080A81AC
_080A8186:
	cmp r1, #9
	bne _080A81B8
	movs r0, #0xe
	ldrsb r0, [r2, r0]
	cmp r0, #1
	beq _080A81A2
	cmp r0, #1
	bgt _080A819C
	cmp r0, #0
	beq _080A81A2
	b _080A81B0
_080A819C:
	cmp r0, #2
	beq _080A81AA
	b _080A81B0
_080A81A2:
	movs r0, #2
	bl sub_080A9520
	b _080A81B0
_080A81AA:
	movs r0, #1
_080A81AC:
	bl sub_080A9520
_080A81B0:
	movs r0, #2
	bl sub_080A954C
	b _080A82A0
_080A81B8:
	cmp r1, #0xc
	beq _080A81D6
	cmp r1, #0xf
	bne _080A82A0
	bl sub_080A94DC
	movs r0, #0x65
	b _080A8278
_080A81C8:
	bl sub_080A83C8
	b _080A82A0
_080A81CE:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A81DC
_080A81D6:
	bl sub_080A8448
	b _080A82A0
_080A81DC:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080A81FA
	ldrb r0, [r2, #0xe]
	subs r0, #1
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_080A9520
	movs r0, #0
	bl sub_080A954C
	b _080A82A0
_080A81FA:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A8218
	ldrb r0, [r2, #0xe]
	adds r0, #1
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	bl sub_080A9520
	movs r0, #1
	bl sub_080A954C
	b _080A82A0
_080A8218:
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A8228
	bl sub_080A94DC
	movs r0, #0x65
	b _080A8278
_080A8228:
	ldr r0, _080A8244 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080A8248
	movs r1, #4
	ldrsh r0, [r2, r1]
	ldrh r1, [r2, #6]
	subs r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	b _080A8272
	.align 2, 0
_080A8244: .4byte gCurrentKeyPress
_080A8248:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A825E
	movs r3, #4
	ldrsh r0, [r2, r3]
	ldrh r1, [r2, #6]
	adds r1, #1
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	b _080A8272
_080A825E:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080A8280
	ldrh r0, [r2, #4]
	subs r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #6
	ldrsh r1, [r2, r3]
_080A8272:
	bl sub_080A8924
	movs r0, #0x64
_080A8278:
	movs r1, #0
	bl sub_080147B8
	b _080A82A0
_080A8280:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A82A0
	ldrh r0, [r2, #4]
	adds r0, #1
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	movs r3, #6
	ldrsh r1, [r2, r3]
	bl sub_080A8924
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_080A82A0:
	pop {r0}
	bx r0

	thumb_func_start sub_080A82A4
sub_080A82A4: @ 0x080A82A4
	push {r4, r5, r6, lr}
	ldr r6, _080A82B8 @ =gUnk_03006B80
	ldr r0, [r6]
	ldrb r4, [r0, #0xc]
	cmp r4, #0
	beq _080A82BC
	cmp r4, #1
	beq _080A830C
	b _080A8356
	.align 2, 0
_080A82B8: .4byte gUnk_03006B80
_080A82BC:
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	ldr r1, _080A8308 @ =gUnk_08BD5788
	lsrs r0, r0, #0xe
	adds r0, r0, r1
	ldr r5, [r0]
	ldr r2, [r6]
	strb r4, [r2, #0xf]
	adds r1, r2, #0
	adds r1, #0x30
	ldrh r0, [r5]
	strh r0, [r2, #0x30]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A8356
	adds r3, r1, #0
_080A82E2:
	ldrb r0, [r2, #0xf]
	adds r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r1, r3, r0
	adds r0, r0, r5
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080A82E2
	b _080A8356
	.align 2, 0
_080A8308: .4byte gUnk_08BD5788
_080A830C:
	ldr r0, _080A835C @ =0x00000183
	bl sub_08012F60
	lsls r0, r0, #0x10
	ldr r1, _080A8360 @ =gUnk_08BD5788
	lsrs r0, r0, #0xe
	adds r0, #8
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r2, [r6]
	movs r0, #0
	strb r0, [r2, #0xf]
	adds r1, r2, #0
	adds r1, #0x30
	ldrh r0, [r4]
	strh r0, [r2, #0x30]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A8356
	adds r3, r1, #0
_080A8334:
	ldrb r0, [r2, #0xf]
	adds r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r1, r3, r0
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080A8334
_080A8356:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A835C: .4byte 0x00000183
_080A8360: .4byte gUnk_08BD5788

	thumb_func_start sub_080A8364
sub_080A8364: @ 0x080A8364
	push {r4, r5, r6, lr}
	ldr r6, _080A83C0 @ =gUnk_03006B80
	ldr r0, [r6]
	ldrb r5, [r0, #0xc]
	cmp r5, #0
	bne _080A83B8
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	ldr r1, _080A83C4 @ =gUnk_08BD57B0
	lsrs r0, r0, #0xe
	adds r0, r0, r1
	ldr r4, [r0]
	ldr r2, [r6]
	strb r5, [r2, #0xf]
	adds r1, r2, #0
	adds r1, #0x3e
	ldrh r0, [r4]
	strh r0, [r2, #0x3e]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A83B8
	adds r3, r1, #0
_080A8396:
	ldrb r0, [r2, #0xf]
	adds r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r1, r3, r0
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080A8396
_080A83B8:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080A83C0: .4byte gUnk_03006B80
_080A83C4: .4byte gUnk_08BD57B0

	thumb_func_start sub_080A83C8
sub_080A83C8: @ 0x080A83C8
	push {r4, lr}
	ldr r0, _080A83EC @ =gUnk_03006B80
	ldr r3, [r0]
	movs r0, #0xf
	ldrsb r0, [r3, r0]
	cmp r0, #5
	bgt _080A843C
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r0, #3
	bne _080A83F0
	movs r0, #0xf
	ldrsb r0, [r3, r0]
	lsls r0, r0, #1
	adds r2, r3, #0
	adds r2, #0x30
	b _080A83FE
	.align 2, 0
_080A83EC: .4byte gUnk_03006B80
_080A83F0:
	cmp r0, #7
	bne _080A8422
	movs r0, #0xf
	ldrsb r0, [r3, r0]
	lsls r0, r0, #1
	adds r2, r3, #0
	adds r2, #0x3e
_080A83FE:
	adds r2, r2, r0
	ldr r1, _080A8444 @ =gUnk_08BD566C
	movs r0, #0xe
	ldrsb r0, [r3, r0]
	lsls r0, r0, #2
	adds r0, r0, r1
	movs r4, #0xa
	ldrsh r1, [r3, r4]
	ldr r0, [r0]
	lsls r1, r1, #2
	adds r1, r1, r0
	movs r4, #8
	ldrsh r0, [r3, r4]
	ldr r1, [r1]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	strh r0, [r2]
_080A8422:
	ldrb r0, [r3, #0xf]
	adds r0, #1
	strb r0, [r3, #0xf]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #6
	bne _080A8434
	bl sub_080A94DC
_080A8434:
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
_080A843C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A8444: .4byte gUnk_08BD566C

	thumb_func_start sub_080A8448
sub_080A8448: @ 0x080A8448
	push {lr}
	ldr r0, _080A8470 @ =gUnk_03006B80
	ldr r2, [r0]
	ldrb r0, [r2, #0xf]
	subs r0, #1
	movs r3, #0
	strb r0, [r2, #0xf]
	lsls r0, r0, #0x18
	cmp r0, #0
	blt _080A8488
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #3
	bne _080A8474
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	lsls r1, r1, #1
	adds r0, r2, #0
	adds r0, #0x30
	b _080A8482
	.align 2, 0
_080A8470: .4byte gUnk_03006B80
_080A8474:
	cmp r0, #7
	bne _080A84A0
	movs r1, #0xf
	ldrsb r1, [r2, r1]
	lsls r1, r1, #1
	adds r0, r2, #0
	adds r0, #0x3e
_080A8482:
	adds r0, r0, r1
	strh r3, [r0]
	b _080A84A0
_080A8488:
	strb r3, [r2, #0xf]
	movs r1, #0
	ldrsh r0, [r2, r1]
	cmp r0, #3
	bne _080A8498
	bl sub_080A82A4
	b _080A84A0
_080A8498:
	cmp r0, #7
	bne _080A84A0
	bl sub_080A8364
_080A84A0:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	pop {r0}
	bx r0

	thumb_func_start sub_080A84AC
sub_080A84AC: @ 0x080A84AC
	push {r4, r5, lr}
	ldr r0, _080A8540 @ =gUnk_03006B80
	ldr r0, [r0]
	mov ip, r0
	ldrb r0, [r0, #0xf]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	lsls r2, r0, #0x10
	asrs r0, r2, #0x10
	cmp r0, #0
	blt _080A84F4
	lsls r0, r0, #1
	mov r1, ip
	adds r1, #0x30
	adds r0, r1, r0
	ldrh r4, [r0]
	ldr r0, _080A8544 @ =0x00004081
	adds r3, r1, #0
	cmp r4, r0
	bne _080A84F4
	movs r5, #0
_080A84D8:
	asrs r1, r2, #0x10
	lsls r0, r1, #1
	adds r0, r3, r0
	strh r5, [r0]
	subs r1, #1
	lsls r2, r1, #0x10
	asrs r0, r2, #0x10
	cmp r0, #0
	blt _080A84F4
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, r4
	beq _080A84D8
_080A84F4:
	mov r1, ip
	ldrh r0, [r1, #0x30]
	adds r2, r0, #0
	ldr r1, _080A8544 @ =0x00004081
	cmp r2, r1
	bne _080A8530
	mov r3, ip
	adds r3, #0x30
	adds r4, r2, #0
_080A8506:
	movs r0, #0
_080A8508:
	lsls r1, r0, #0x10
	asrs r1, r1, #0x10
	lsls r2, r1, #1
	adds r2, r3, r2
	adds r1, #1
	lsls r0, r1, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	strh r0, [r2]
	lsls r1, r1, #0x10
	lsrs r0, r1, #0x10
	asrs r1, r1, #0x10
	cmp r1, #5
	ble _080A8508
	movs r0, #0
	mov r1, ip
	strh r0, [r1, #0x3c]
	ldrh r0, [r1, #0x30]
	cmp r0, r4
	beq _080A8506
_080A8530:
	movs r2, #0
	cmp r0, #0
	bne _080A8548
	movs r0, #0
	mov r1, ip
	strb r0, [r1, #0xf]
	b _080A8564
	.align 2, 0
_080A8540: .4byte gUnk_03006B80
_080A8544: .4byte 0x00004081
_080A8548:
	lsls r0, r2, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r0, r1
	lsrs r2, r0, #0x10
	asrs r0, r0, #0xf
	mov r1, ip
	adds r1, #0x30
	adds r1, r1, r0
	ldrh r0, [r1]
	cmp r0, #0
	bne _080A8548
	mov r0, ip
	strb r2, [r0, #0xf]
_080A8564:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A856C
sub_080A856C: @ 0x080A856C
	push {r4, r5, r6, r7, lr}
	ldr r0, _080A85BC @ =gUnk_03006B80
	ldr r5, [r0]
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	beq _080A857A
	b _080A86C2
_080A857A:
	movs r0, #0xe8
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	bne _080A8588
	b _080A86C2
_080A8588:
	movs r7, #0
	movs r4, #0
	adds r6, r5, #0
	adds r6, #0x30
	ldr r0, _080A85C0 @ =gUnk_08BD57F8
	mov ip, r0
_080A8594:
	movs r3, #0
	lsls r0, r4, #2
	add r0, ip
	ldr r5, [r0]
_080A859C:
	lsls r2, r3, #1
	adds r0, r2, r5
	ldrh r1, [r0]
	lsrs r0, r1, #8
	lsls r1, r1, #8
	adds r0, r0, r1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r2, r6, r2
	ldrh r1, [r2]
	cmp r1, #0
	beq _080A85C4
	cmp r0, #0
	bne _080A85CC
	b _080A85DA
	.align 2, 0
_080A85BC: .4byte gUnk_03006B80
_080A85C0: .4byte gUnk_08BD57F8
_080A85C4:
	cmp r0, #0
	bne _080A85DA
	movs r7, #1
	b _080A85DA
_080A85CC:
	cmp r1, r0
	bne _080A85DA
	adds r0, r3, #1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #6
	bls _080A859C
_080A85DA:
	cmp r7, #1
	beq _080A85E8
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #5
	bls _080A8594
_080A85E8:
	cmp r7, #0
	beq _080A86C2
	cmp r4, #5
	bhi _080A86C2
	lsls r0, r4, #2
	ldr r1, _080A85FC @ =_080A8600
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A85FC: .4byte _080A8600
_080A8600: @ jump table
	.4byte _080A8618 @ case 0
	.4byte _080A8650 @ case 1
	.4byte _080A866C @ case 2
	.4byte _080A8678 @ case 3
	.4byte _080A86AC @ case 4
	.4byte _080A86BA @ case 5
_080A8618:
	movs r4, #0x96
	lsls r4, r4, #1
	movs r5, #0xae
	lsls r5, r5, #1
_080A8620:
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_0806D054
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r5
	bls _080A8620
	movs r4, #0xc8
	lsls r4, r4, #1
	ldr r5, _080A864C @ =0x000001BF
_080A8638:
	adds r0, r4, #0
	movs r1, #0xa
	bl sub_0806D054
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r5
	bls _080A8638
	b _080A86C2
	.align 2, 0
_080A864C: .4byte 0x000001BF
_080A8650:
	movs r4, #0
_080A8652:
	ldr r0, _080A8668 @ =0x00007918
	movs r1, #1
	bl sub_0806D054
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #0x20
	bls _080A8652
	b _080A86C2
	.align 2, 0
_080A8668: .4byte 0x00007918
_080A866C:
	movs r0, #0xae
	lsls r0, r0, #1
	movs r1, #0x63
	bl sub_0806D054
	b _080A86C2
_080A8678:
	movs r4, #0xa8
	lsls r4, r4, #1
	movs r5, #0xaa
	lsls r5, r5, #1
_080A8680:
	adds r0, r4, #0
	movs r1, #0x63
	bl sub_0806D054
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r5
	bls _080A8680
	ldr r0, _080A86A8 @ =0x000001F5
	movs r1, #1
	bl sub_0806D054
	movs r0, #0xfb
	lsls r0, r0, #1
	movs r1, #1
	bl sub_0806D054
	b _080A86C2
	.align 2, 0
_080A86A8: .4byte 0x000001F5
_080A86AC:
	movs r0, #0x5a
	bl SetPlayerLevel
	movs r0, #0x5a
	bl sub_080165E0
	b _080A86C2
_080A86BA:
	movs r0, #0xa6
	movs r1, #1
	bl sub_08012F0C
_080A86C2:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080A86C8
sub_080A86C8: @ 0x080A86C8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x2c
	ldr r0, _080A87B8 @ =gUnk_03006B80
	ldr r4, [r0]
	movs r2, #0
	add r0, sp, #0x24
	mov r8, r0
	adds r3, r4, #0
	adds r3, #0x30
_080A86DE:
	lsls r0, r2, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	adds r0, r3, r0
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #6
	bls _080A86DE
	movs r2, #0
	adds r6, r4, #0
	adds r6, #0x26
	adds r7, r4, #0
	adds r7, #0x20
	mov r5, r8
	ldr r0, _080A87BC @ =gUnk_08BD573C
	ldr r3, [r0]
_080A8706:
	lsls r0, r2, #1
	adds r1, r5, r0
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #2
	bls _080A8706
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _080A8730
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	ldr r0, _080A87C0 @ =gUnk_080C018C
	ldrh r0, [r0]
	strh r0, [r1]
_080A8730:
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #4
	bgt _080A8760
	cmp r0, #3
	blt _080A8760
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	cmp r0, #5
	bgt _080A8760
	ldr r0, _080A87C4 @ =gUnk_03003364
	ldr r0, [r0]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A8760
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	ldr r0, _080A87C8 @ =0x00005181
	strh r0, [r1]
_080A8760:
	ldrh r0, [r4, #0x26]
	cmp r0, #0
	beq _080A876C
	adds r0, r6, #0
	bl sub_0800B4E4
_080A876C:
	ldrh r0, [r4, #0x20]
	cmp r0, #0
	beq _080A8778
	adds r0, r7, #0
	bl sub_0800B4E4
_080A8778:
	movs r5, #2
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #1
	mov r2, r8
	movs r3, #2
	bl sub_0800B1AC
	str r5, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #1
	add r2, sp, #0x14
	movs r3, #0xb
	bl sub_0800B1AC
	add sp, #0x2c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A87B8: .4byte gUnk_03006B80
_080A87BC: .4byte gUnk_08BD573C
_080A87C0: .4byte gUnk_080C018C
_080A87C4: .4byte gUnk_03003364
_080A87C8: .4byte 0x00005181

	thumb_func_start sub_080A87CC
sub_080A87CC: @ 0x080A87CC
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x2c
	add r0, sp, #0x14
	movs r1, #0
	movs r2, #0xe
	bl memset
	ldr r0, _080A8850 @ =gUnk_03006B80
	ldr r4, [r0]
	movs r2, #0
	add r0, sp, #0x24
	mov r8, r0
	adds r3, r4, #0
	adds r3, #0x3e
_080A87EC:
	lsls r0, r2, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	adds r0, r3, r0
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #6
	bls _080A87EC
	movs r2, #0
	adds r6, r4, #0
	adds r6, #0x26
	adds r7, r4, #0
	adds r7, #0x22
	mov r5, r8
	ldr r0, _080A8854 @ =gUnk_08BD573C
	ldr r3, [r0, #4]
_080A8814:
	lsls r0, r2, #1
	adds r1, r5, r0
	adds r0, r0, r3
	ldrh r0, [r0]
	strh r0, [r1]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #2
	bls _080A8814
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bne _080A883E
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	ldr r0, _080A8858 @ =gUnk_080C018C
	ldrh r0, [r0]
	strh r0, [r1]
_080A883E:
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #6
	beq _080A885C
	cmp r0, #6
	blt _080A88C2
	cmp r0, #8
	bgt _080A88C2
	b _080A887C
	.align 2, 0
_080A8850: .4byte gUnk_03006B80
_080A8854: .4byte gUnk_08BD573C
_080A8858: .4byte gUnk_080C018C
_080A885C:
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #5
	bhi _080A887C
	ldr r1, _080A8918 @ =0x00004081
_080A886A:
	lsls r0, r2, #1
	add r0, sp
	adds r0, #0x14
	strh r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #5
	bls _080A886A
_080A887C:
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	cmp r0, #5
	bgt _080A88C2
	ldr r0, _080A891C @ =gUnk_03003364
	ldr r0, [r0]
	movs r1, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080A88C2
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	lsls r0, r0, #1
	mov r1, sp
	adds r1, r1, r0
	adds r1, #0x14
	ldr r0, _080A8920 @ =0x00005181
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	adds r0, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #5
	bhi _080A88C2
	ldr r1, _080A8918 @ =0x00004081
_080A88B0:
	lsls r0, r2, #1
	add r0, sp
	adds r0, #0x14
	strh r1, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #5
	bls _080A88B0
_080A88C2:
	ldrh r0, [r4, #0x26]
	cmp r0, #0
	beq _080A88CE
	adds r0, r6, #0
	bl sub_0800B4E4
_080A88CE:
	ldrh r0, [r4, #0x22]
	cmp r0, #0
	beq _080A88DA
	adds r0, r7, #0
	bl sub_0800B4E4
_080A88DA:
	movs r5, #2
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #1
	str r0, [sp, #8]
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r6, #0
	movs r1, #1
	mov r2, r8
	movs r3, #2
	bl sub_0800B1AC
	str r5, [sp]
	str r4, [sp, #4]
	str r4, [sp, #8]
	str r4, [sp, #0xc]
	str r4, [sp, #0x10]
	adds r0, r7, #0
	movs r1, #1
	add r2, sp, #0x14
	movs r3, #0xb
	bl sub_0800B1AC
	add sp, #0x2c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A8918: .4byte 0x00004081
_080A891C: .4byte gUnk_03003364
_080A8920: .4byte 0x00005181

	thumb_func_start sub_080A8924
sub_080A8924: @ 0x080A8924
	push {r4, r5, lr}
	lsls r0, r0, #0x10
	lsls r1, r1, #0x10
	ldr r2, _080A8960 @ =gUnk_03006B80
	ldr r5, [r2]
	ldrh r2, [r5, #4]
	lsrs r3, r0, #0x10
	asrs r4, r0, #0x10
	subs r2, r4, r2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	lsrs r0, r1, #0x10
	asrs r1, r1, #0x10
	strh r3, [r5, #4]
	strh r0, [r5, #6]
	cmp r4, #5
	ble _080A89CE
	cmp r1, #6
	bne _080A89CE
	lsls r0, r2, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bge _080A8994
	subs r0, r3, #6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A8964
	movs r0, #4
	b _080A89CC
	.align 2, 0
_080A8960: .4byte gUnk_03006B80
_080A8964:
	adds r0, r3, #0
	subs r0, #8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A8974
	strh r1, [r5, #4]
	b _080A89CE
_080A8974:
	adds r0, r3, #0
	subs r0, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A8984
	movs r0, #0xa
	b _080A89CC
_080A8984:
	adds r0, r3, #0
	subs r0, #0xe
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A89CE
	movs r0, #0xc
	b _080A89CC
_080A8994:
	cmp r0, #0
	ble _080A89CE
	subs r0, r3, #7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080A89A6
	movs r0, #0xa
	b _080A89CC
_080A89A6:
	adds r0, r3, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A89B6
	movs r0, #0xc
	b _080A89CC
_080A89B6:
	adds r0, r3, #0
	subs r0, #0xd
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080A89C6
	movs r0, #0x10
	b _080A89CC
_080A89C6:
	cmp r4, #0x10
	bne _080A89CE
	movs r0, #0
_080A89CC:
	strh r0, [r5, #4]
_080A89CE:
	ldrh r1, [r5, #4]
	movs r3, #4
	ldrsh r0, [r5, r3]
	cmp r0, #5
	beq _080A89DC
	cmp r0, #0xb
	bne _080A89F2
_080A89DC:
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	ble _080A89E8
	adds r0, r1, #1
	strh r0, [r5, #4]
_080A89E8:
	cmp r2, #0
	bge _080A89F2
	ldrh r0, [r5, #4]
	subs r0, #1
	strh r0, [r5, #4]
_080A89F2:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0
	bge _080A89FE
	movs r0, #0x10
	strh r0, [r5, #4]
_080A89FE:
	movs r3, #6
	ldrsh r0, [r5, r3]
	cmp r0, #0
	bge _080A8A0A
	movs r0, #6
	strh r0, [r5, #6]
_080A8A0A:
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0x10
	ble _080A8A16
	movs r0, #0
	strh r0, [r5, #4]
_080A8A16:
	movs r3, #6
	ldrsh r0, [r5, r3]
	cmp r0, #6
	ble _080A8A22
	movs r0, #0
	strh r0, [r5, #6]
_080A8A22:
	ldrh r3, [r5, #4]
	strh r3, [r5, #8]
	ldrh r2, [r5, #6]
	strh r2, [r5, #0xa]
	lsls r0, r3, #0x10
	asrs r0, r0, #0x10
	adds r1, r3, #0
	cmp r0, #5
	ble _080A8A8A
	lsls r0, r2, #0x10
	asrs r2, r0, #0x10
	cmp r2, #6
	bne _080A8A8A
	subs r0, r1, #6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080A8A48
	strh r2, [r5, #8]
_080A8A48:
	adds r0, r1, #0
	subs r0, #9
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A8A58
	movs r0, #9
	strh r0, [r5, #8]
_080A8A58:
	adds r0, r1, #0
	subs r0, #0xc
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bhi _080A8A68
	movs r0, #0xc
	strh r0, [r5, #8]
_080A8A68:
	adds r0, r3, #0
	subs r0, #0xf
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080A8A78
	movs r0, #0xf
	strh r0, [r5, #8]
_080A8A78:
	adds r4, r5, #0
	adds r4, #0x74
	adds r0, r4, #0
	movs r1, #2
	movs r2, #7
	movs r3, #0
	bl sub_08009F50
	b _080A8A9A
_080A8A8A:
	adds r4, r5, #0
	adds r4, #0x74
	adds r0, r4, #0
	movs r1, #2
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
_080A8A9A:
	movs r1, #8
	ldrsh r0, [r5, r1]
	lsls r1, r0, #1
	adds r1, r1, r0
	lsls r1, r1, #0x12
	movs r3, #0x80
	lsls r3, r3, #0xd
	adds r1, r1, r3
	asrs r1, r1, #0x10
	ldrh r2, [r5, #0xa]
	lsls r2, r2, #0x14
	movs r0, #0xa0
	lsls r0, r0, #0xe
	adds r2, r2, r0
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080A8AC4
sub_080A8AC4: @ 0x080A8AC4
	push {r4, r5, lr}
	sub sp, #0x28
	ldr r0, _080A8AE0 @ =gUnk_03006B80
	ldr r5, [r0]
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #4
	bls _080A8AD6
	b _080A8BEA
_080A8AD6:
	lsls r0, r0, #2
	ldr r1, _080A8AE4 @ =_080A8AE8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A8AE0: .4byte gUnk_03006B80
_080A8AE4: .4byte _080A8AE8
_080A8AE8: @ jump table
	.4byte _080A8AFC @ case 0
	.4byte _080A8B3A @ case 1
	.4byte _080A8BA8 @ case 2
	.4byte _080A8BC0 @ case 3
	.4byte _080A8BD6 @ case 4
_080A8AFC:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	adds r1, r0, #0
	movs r0, #3
	strb r0, [r1, #2]
	movs r0, #9
	strb r0, [r1, #3]
	movs r0, #0x18
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r4, [r0, #6]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #9]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_08019944
	strb r4, [r5, #0x10]
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8BE8
_080A8B3A:
	adds r4, r5, #0
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A8BEA
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r0, _080A8B9C @ =0x0000C483
	adds r1, r5, #0
	adds r1, #0x3e
	bl sub_0800E77C
	ldr r4, _080A8BA0 @ =gUnk_08BD56E0
	ldr r0, [r4]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	adds r0, r5, #0
	adds r0, #0x28
	ldr r2, [r4]
	movs r1, #0xa
	str r1, [sp]
	ldr r1, _080A8BA4 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8BE8
	.align 2, 0
_080A8B9C: .4byte 0x0000C483
_080A8BA0: .4byte gUnk_08BD56E0
_080A8BA4: .4byte 0x44444444
_080A8BA8:
	ldr r0, _080A8BBC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A8BEA
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8BE8
	.align 2, 0
_080A8BBC: .4byte gKeyNewPress
_080A8BC0:
	adds r0, r5, #0
	adds r0, #0x28
	bl sub_0800B4E4
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_0801BA7C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8BE8
_080A8BD6:
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A8BEA
	strh r0, [r5, #0x24]
_080A8BE8:
	strh r0, [r5, #2]
_080A8BEA:
	movs r1, #2
	ldrsh r0, [r5, r1]
	add sp, #0x28
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A8BF8
sub_080A8BF8: @ 0x080A8BF8
	push {r4, r5, r6, lr}
	sub sp, #0x3c
	ldr r0, _080A8C14 @ =gUnk_03006B80
	ldr r5, [r0]
	movs r1, #2
	ldrsh r0, [r5, r1]
	cmp r0, #4
	bls _080A8C0A
	b _080A8D9E
_080A8C0A:
	lsls r0, r0, #2
	ldr r1, _080A8C18 @ =_080A8C1C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A8C14: .4byte gUnk_03006B80
_080A8C18: .4byte _080A8C1C
_080A8C1C: @ jump table
	.4byte _080A8C30 @ case 0
	.4byte _080A8CA4 @ case 1
	.4byte _080A8D5C @ case 2
	.4byte _080A8D74 @ case 3
	.4byte _080A8D8A @ case 4
_080A8C30:
	ldrb r2, [r5, #0xc]
	cmp r2, #0
	bne _080A8C6C
	add r0, sp, #0x14
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, #0
	movs r0, #3
	strb r0, [r1, #2]
	movs r0, #9
	strb r0, [r1, #3]
	movs r0, #0x18
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r2, [r0, #6]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r2, [r0, #9]
	str r2, [sp, #0x20]
	str r2, [sp, #0x24]
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_08019944
	b _080A8C9A
_080A8C6C:
	add r1, sp, #0x28
	movs r2, #0
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r3, #2
	strb r3, [r1, #2]
	movs r0, #9
	strb r0, [r1, #3]
	movs r0, #0x1a
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	strb r2, [r1, #6]
	strb r3, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	strb r2, [r1, #9]
	str r2, [r1, #0xc]
	str r2, [r1, #0x10]
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_08019944
_080A8C9A:
	movs r0, #0
	strb r0, [r5, #0x10]
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8D9C
_080A8CA4:
	adds r4, r5, #0
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A8D9E
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	ldr r0, _080A8D08 @ =0x0000C483
	adds r1, r5, #0
	adds r1, #0x30
	bl sub_0800E77C
	ldrb r6, [r5, #0xc]
	cmp r6, #0
	bne _080A8D14
	ldr r4, _080A8D0C @ =gUnk_08BD5704
	ldr r0, [r4]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	adds r0, r5, #0
	adds r0, #0x28
	ldr r2, [r4]
	movs r1, #0xa
	str r1, [sp]
	ldr r1, _080A8D10 @ =0x44444444
	str r1, [sp, #4]
	str r6, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	b _080A8D4C
	.align 2, 0
_080A8D08: .4byte 0x0000C483
_080A8D0C: .4byte gUnk_08BD5704
_080A8D10: .4byte 0x44444444
_080A8D14:
	ldr r4, _080A8D54 @ =gUnk_08BD572C
	ldr r0, [r4]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	adds r0, r5, #0
	adds r0, #0x28
	ldr r2, [r4]
	movs r1, #0xa
	str r1, [sp]
	ldr r1, _080A8D58 @ =0x44444444
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
_080A8D4C:
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8D9C
	.align 2, 0
_080A8D54: .4byte gUnk_08BD572C
_080A8D58: .4byte 0x44444444
_080A8D5C:
	ldr r0, _080A8D70 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A8D9E
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8D9C
	.align 2, 0
_080A8D70: .4byte gKeyNewPress
_080A8D74:
	adds r0, r5, #0
	adds r0, #0x28
	bl sub_0800B4E4
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_0801BA7C
	ldrh r0, [r5, #2]
	adds r0, #1
	b _080A8D9C
_080A8D8A:
	adds r0, r5, #0
	adds r0, #0x24
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A8D9E
	strh r0, [r5, #0x24]
_080A8D9C:
	strh r0, [r5, #2]
_080A8D9E:
	movs r1, #2
	ldrsh r0, [r5, r1]
	add sp, #0x3c
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A8DAC
sub_080A8DAC: @ 0x080A8DAC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	ldr r0, _080A8DD0 @ =gUnk_03006B80
	ldr r6, [r0]
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #7
	bls _080A8DC4
	b _080A909A
_080A8DC4:
	lsls r0, r0, #2
	ldr r1, _080A8DD4 @ =_080A8DD8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A8DD0: .4byte gUnk_03006B80
_080A8DD4: .4byte _080A8DD8
_080A8DD8: @ jump table
	.4byte _080A8DF8 @ case 0
	.4byte _080A8E36 @ case 1
	.4byte _080A8F20 @ case 2
	.4byte _080A8F46 @ case 3
	.4byte _080A901A @ case 4
	.4byte _080A9036 @ case 5
	.4byte _080A9060 @ case 6
	.4byte _080A9086 @ case 7
_080A8DF8:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	adds r1, r0, #0
	movs r0, #6
	strb r0, [r1, #2]
	movs r0, #4
	strb r0, [r1, #3]
	movs r0, #0x13
	strb r0, [r1, #4]
	movs r0, #0xb
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r4, [r0, #6]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #9]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r6, #0
	adds r0, #0x24
	bl sub_08019944
	strb r4, [r6, #0x10]
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9098
_080A8E36:
	adds r4, r6, #0
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080A8E4A
	b _080A909A
_080A8E4A:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	ldr r3, _080A8F0C @ =gUnk_080C0190
	movs r1, #7
	movs r2, #7
	bl sub_08001284
	ldr r0, _080A8F10 @ =0x0000C483
	adds r1, r6, #0
	adds r1, #0x30
	bl sub_0800E77C
	movs r7, #0
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	movs r5, #0
	mov sb, r5
_080A8E76:
	ldr r0, _080A8F14 @ =gUnk_08BD56A8
	lsls r5, r7, #2
	adds r5, r5, r0
	ldr r0, [r5]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	lsls r4, r7, #1
	adds r0, r4, #0
	adds r0, #0x28
	adds r0, r6, r0
	ldr r2, [r5]
	ldr r1, _080A8F18 @ =gUnk_08BD56B8
	adds r4, r4, r1
	movs r5, #0
	ldrsh r1, [r4, r5]
	str r1, [sp]
	ldr r1, _080A8F1C @ =0x44444444
	str r1, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	mov r5, sb
	str r5, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #3
	bls _080A8E76
	mov r0, r8
	bl sub_08009F0C
	mov r0, r8
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	mov r0, r8
	movs r1, #0
	movs r2, #0x10
	bl sub_0800A6C0
	movs r2, #0x10
	ldrsb r2, [r6, r2]
	lsls r2, r2, #0x14
	movs r0, #0xa0
	lsls r0, r0, #0xf
	adds r2, r2, r0
	asrs r2, r2, #0x10
	mov r0, r8
	movs r1, #0x56
	bl sub_0800A678
	mov r0, r8
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9098
	.align 2, 0
_080A8F0C: .4byte gUnk_080C0190
_080A8F10: .4byte 0x0000C483
_080A8F14: .4byte gUnk_08BD56A8
_080A8F18: .4byte gUnk_08BD56B8
_080A8F1C: .4byte 0x44444444
_080A8F20:
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A8F32
	b _080A9052
_080A8F32:
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _080A9052
_080A8F46:
	ldr r0, _080A8F68 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080A8F6C
	ldrb r1, [r6, #0x10]
	movs r0, #0x10
	ldrsb r0, [r6, r0]
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	cmp r0, #1
	bne _080A900C
	subs r0, r1, #1
	b _080A8F86
	.align 2, 0
_080A8F68: .4byte gKeyNewPress
_080A8F6C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A8FA8
	ldrb r1, [r6, #0x10]
	movs r0, #0x10
	ldrsb r0, [r6, r0]
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	cmp r0, #0
	bne _080A900C
	adds r0, r1, #1
_080A8F86:
	strb r0, [r6, #0x10]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r2, #0x10
	ldrsb r2, [r6, r2]
	lsls r2, r2, #0x14
	movs r5, #0xa0
	lsls r5, r5, #0xf
	adds r2, r2, r5
	asrs r2, r2, #0x10
	mov r0, r8
	movs r1, #0x56
	bl sub_0800A678
	b _080A900C
_080A8FA8:
	movs r7, #1
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080A8FEE
	movs r5, #0x10
	ldrsb r5, [r6, r5]
	cmp r5, #0
	bne _080A8FE2
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #0x65
	movs r1, #0
	movs r2, #0x14
	movs r3, #0
	bl sub_080147DC
	movs r0, #4
	strh r0, [r6, #2]
	mov r8, r4
	b _080A900C
_080A8FE2:
	movs r0, #0xec
	adds r0, r0, r6
	mov r8, r0
	cmp r5, #1
	bne _080A900C
	b _080A9000
_080A8FEE:
	movs r0, #2
	ands r0, r1
	movs r1, #0xec
	adds r1, r1, r6
	mov r8, r1
	cmp r0, #0
	beq _080A900C
	movs r0, #1
	strb r0, [r6, #0x10]
_080A9000:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #6
	strh r0, [r6, #2]
_080A900C:
	mov r0, r8
	bl sub_08009FF8
	mov r0, r8
	bl sub_0800A778
	b _080A909A
_080A901A:
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A9052
	movs r0, #0
	strb r0, [r6, #0x11]
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _080A9052
_080A9036:
	ldrb r0, [r6, #0x11]
	adds r0, #1
	strb r0, [r6, #0x11]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #5
	ble _080A904E
	movs r0, #0
	strb r0, [r6, #0x11]
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
_080A904E:
	adds r4, r6, #0
	adds r4, #0xec
_080A9052:
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _080A909A
_080A9060:
	movs r7, #0
	adds r4, r6, #0
	adds r4, #0x24
_080A9066:
	lsls r0, r7, #1
	adds r0, #0x28
	adds r0, r6, r0
	bl sub_0800B4E4
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #3
	bls _080A9066
	adds r0, r4, #0
	bl sub_0801BA7C
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9098
_080A9086:
	adds r0, r6, #0
	adds r0, #0x24
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A909A
	strh r0, [r6, #0x24]
_080A9098:
	strh r0, [r6, #2]
_080A909A:
	movs r2, #2
	ldrsh r0, [r6, r2]
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A90AC
sub_080A90AC: @ 0x080A90AC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x28
	ldr r0, _080A90D0 @ =gUnk_03006B80
	ldr r6, [r0]
	movs r1, #2
	ldrsh r0, [r6, r1]
	cmp r0, #7
	bls _080A90C4
	b _080A939A
_080A90C4:
	lsls r0, r0, #2
	ldr r1, _080A90D4 @ =_080A90D8
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A90D0: .4byte gUnk_03006B80
_080A90D4: .4byte _080A90D8
_080A90D8: @ jump table
	.4byte _080A90F8 @ case 0
	.4byte _080A9136 @ case 1
	.4byte _080A9220 @ case 2
	.4byte _080A9246 @ case 3
	.4byte _080A931A @ case 4
	.4byte _080A9336 @ case 5
	.4byte _080A9360 @ case 6
	.4byte _080A9386 @ case 7
_080A90F8:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	adds r1, r0, #0
	movs r0, #6
	strb r0, [r1, #2]
	movs r0, #4
	strb r0, [r1, #3]
	movs r0, #0x13
	strb r0, [r1, #4]
	movs r0, #0xb
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r4, [r0, #6]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #9]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r6, #0
	adds r0, #0x24
	bl sub_08019944
	strb r4, [r6, #0x10]
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9398
_080A9136:
	adds r4, r6, #0
	adds r4, #0x24
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080A914A
	b _080A939A
_080A914A:
	adds r0, r4, #0
	movs r1, #0
	bl sub_080199C0
	movs r0, #0xc0
	lsls r0, r0, #0x12
	ldr r3, _080A920C @ =gUnk_080C0190
	movs r1, #7
	movs r2, #7
	bl sub_08001284
	ldr r0, _080A9210 @ =0x0000C483
	adds r1, r6, #0
	adds r1, #0x3e
	bl sub_0800E77C
	movs r7, #0
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	movs r5, #0
	mov sb, r5
_080A9176:
	ldr r0, _080A9214 @ =gUnk_08BD56A8
	lsls r5, r7, #2
	adds r5, r5, r0
	ldr r0, [r5]
	bl sub_0800B130
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	lsls r1, r0, #1
	adds r1, r1, r0
	lsrs r1, r1, #1
	movs r3, #0x1e
	subs r3, r3, r1
	lsls r3, r3, #0xf
	asrs r3, r3, #0x10
	lsls r4, r7, #1
	adds r0, r4, #0
	adds r0, #0x28
	adds r0, r6, r0
	ldr r2, [r5]
	ldr r1, _080A9218 @ =gUnk_08BD56B8
	adds r4, r4, r1
	movs r5, #0
	ldrsh r1, [r4, r5]
	str r1, [sp]
	ldr r1, _080A921C @ =0x44444444
	str r1, [sp, #4]
	mov r1, sb
	str r1, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	mov r5, sb
	str r5, [sp, #0x10]
	movs r1, #0
	bl sub_0800B1AC
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #3
	bls _080A9176
	mov r0, r8
	bl sub_08009F0C
	mov r0, r8
	movs r1, #2
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	mov r0, r8
	movs r1, #0
	movs r2, #0x10
	bl sub_0800A6C0
	movs r2, #0x10
	ldrsb r2, [r6, r2]
	lsls r2, r2, #0x14
	movs r0, #0xa0
	lsls r0, r0, #0xf
	adds r2, r2, r0
	asrs r2, r2, #0x10
	mov r0, r8
	movs r1, #0x56
	bl sub_0800A678
	mov r0, r8
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9398
	.align 2, 0
_080A920C: .4byte gUnk_080C0190
_080A9210: .4byte 0x0000C483
_080A9214: .4byte gUnk_08BD56A8
_080A9218: .4byte gUnk_08BD56B8
_080A921C: .4byte 0x44444444
_080A9220:
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080A9232
	b _080A9352
_080A9232:
	adds r0, r4, #0
	movs r1, #2
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _080A9352
_080A9246:
	ldr r0, _080A9268 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080A926C
	ldrb r1, [r6, #0x10]
	movs r0, #0x10
	ldrsb r0, [r6, r0]
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	cmp r0, #1
	bne _080A930C
	subs r0, r1, #1
	b _080A9286
	.align 2, 0
_080A9268: .4byte gKeyNewPress
_080A926C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080A92A8
	ldrb r1, [r6, #0x10]
	movs r0, #0x10
	ldrsb r0, [r6, r0]
	movs r2, #0xec
	adds r2, r2, r6
	mov r8, r2
	cmp r0, #0
	bne _080A930C
	adds r0, r1, #1
_080A9286:
	strb r0, [r6, #0x10]
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	movs r2, #0x10
	ldrsb r2, [r6, r2]
	lsls r2, r2, #0x14
	movs r5, #0xa0
	lsls r5, r5, #0xf
	adds r2, r2, r5
	asrs r2, r2, #0x10
	mov r0, r8
	movs r1, #0x56
	bl sub_0800A678
	b _080A930C
_080A92A8:
	movs r7, #1
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080A92EE
	movs r5, #0x10
	ldrsb r5, [r6, r5]
	cmp r5, #0
	bne _080A92E2
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	movs r1, #2
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	str r5, [sp]
	str r7, [sp, #4]
	movs r0, #0x65
	movs r1, #0
	movs r2, #0x14
	movs r3, #0
	bl sub_080147DC
	movs r0, #4
	strh r0, [r6, #2]
	mov r8, r4
	b _080A930C
_080A92E2:
	movs r0, #0xec
	adds r0, r0, r6
	mov r8, r0
	cmp r5, #1
	bne _080A930C
	b _080A9300
_080A92EE:
	movs r0, #2
	ands r0, r1
	movs r1, #0xec
	adds r1, r1, r6
	mov r8, r1
	cmp r0, #0
	beq _080A930C
	movs r0, #1
	strb r0, [r6, #0x10]
_080A9300:
	movs r0, #0x66
	movs r1, #0
	bl sub_080147B8
	movs r0, #6
	strh r0, [r6, #2]
_080A930C:
	mov r0, r8
	bl sub_08009FF8
	mov r0, r8
	bl sub_0800A778
	b _080A939A
_080A931A:
	adds r4, r6, #0
	adds r4, #0xec
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A9352
	movs r0, #0
	strb r0, [r6, #0x11]
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
	b _080A9352
_080A9336:
	ldrb r0, [r6, #0x11]
	adds r0, #1
	strb r0, [r6, #0x11]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #5
	ble _080A934E
	movs r0, #0
	strb r0, [r6, #0x11]
	ldrh r0, [r6, #2]
	adds r0, #1
	strh r0, [r6, #2]
_080A934E:
	adds r4, r6, #0
	adds r4, #0xec
_080A9352:
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	b _080A939A
_080A9360:
	movs r7, #0
	adds r4, r6, #0
	adds r4, #0x24
_080A9366:
	lsls r0, r7, #1
	adds r0, #0x28
	adds r0, r6, r0
	bl sub_0800B4E4
	adds r0, r7, #1
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	cmp r7, #3
	bls _080A9366
	adds r0, r4, #0
	bl sub_0801BA7C
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080A9398
_080A9386:
	adds r0, r6, #0
	adds r0, #0x24
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080A939A
	strh r0, [r6, #0x24]
_080A9398:
	strh r0, [r6, #2]
_080A939A:
	movs r2, #2
	ldrsh r0, [r6, r2]
	add sp, #0x28
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080A93AC
sub_080A93AC: @ 0x080A93AC
	push {lr}
	bl sub_080A79D8
	ldr r0, _080A93C0 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A93C0: .4byte gUnk_03006578

	thumb_func_start sub_080A93C4
sub_080A93C4: @ 0x080A93C4
	push {lr}
	bl sub_080A7E74
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080A93D4
sub_080A93D4: @ 0x080A93D4
	push {lr}
	bl sub_080A809C
	ldr r0, _080A93E8 @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r1}
	bx r1
	.align 2, 0
_080A93E8: .4byte gUnk_03006578

	thumb_func_start sub_080A93EC
sub_080A93EC: @ 0x080A93EC
	push {r4, r5, lr}
	ldr r0, _080A9400 @ =gUnk_03006B80
	ldr r5, [r0]
	ldrb r0, [r5, #0xc]
	cmp r0, #0
	beq _080A9404
	cmp r0, #1
	beq _080A9430
	b _080A9442
	.align 2, 0
_080A9400: .4byte gUnk_03006B80
_080A9404:
	ldr r0, _080A9428 @ =0x0000C083
	adds r4, r5, #0
	adds r4, #0x30
	adds r1, r4, #0
	bl sub_0800E77C
	adds r0, r4, #0
	bl SetPlayerName
	ldr r0, _080A942C @ =0x0000C283
	adds r4, #0xe
	adds r1, r4, #0
	bl sub_0800E77C
	adds r0, r4, #0
	bl sub_08017B7C
	b _080A9442
	.align 2, 0
_080A9428: .4byte 0x0000C083
_080A942C: .4byte 0x0000C283
_080A9430:
	ldr r0, _080A9448 @ =0x0000C183
	adds r4, r5, #0
	adds r4, #0x30
	adds r1, r4, #0
	bl sub_0800E77C
	adds r0, r4, #0
	bl SetGuardimalName
_080A9442:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A9448: .4byte 0x0000C183

	thumb_func_start sub_080A944C
sub_080A944C: @ 0x080A944C
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080A9490 @ =gUnk_03006B80
	ldr r2, [r0]
	movs r0, #0
	strb r0, [r2, #0xf]
	adds r1, r2, #0
	adds r1, #0x30
	ldrh r0, [r4]
	strh r0, [r2, #0x30]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A948A
	adds r3, r1, #0
_080A9468:
	ldrb r0, [r2, #0xf]
	adds r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r1, r3, r0
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080A9468
_080A948A:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A9490: .4byte gUnk_03006B80

	thumb_func_start sub_080A9494
sub_080A9494: @ 0x080A9494
	push {r4, lr}
	adds r4, r0, #0
	ldr r0, _080A94D8 @ =gUnk_03006B80
	ldr r2, [r0]
	movs r0, #0
	strb r0, [r2, #0xf]
	adds r1, r2, #0
	adds r1, #0x3e
	ldrh r0, [r4]
	strh r0, [r2, #0x3e]
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080A94D2
	adds r3, r1, #0
_080A94B0:
	ldrb r0, [r2, #0xf]
	adds r0, #1
	strb r0, [r2, #0xf]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r1, r3, r0
	adds r0, r0, r4
	ldrh r0, [r0]
	strh r0, [r1]
	movs r0, #0xf
	ldrsb r0, [r2, r0]
	lsls r0, r0, #1
	adds r0, r3, r0
	ldrh r0, [r0]
	cmp r0, #0
	bne _080A94B0
_080A94D2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080A94D8: .4byte gUnk_03006B80

	thumb_func_start sub_080A94DC
sub_080A94DC: @ 0x080A94DC
	push {r4, lr}
	ldr r0, _080A94F8 @ =gUnk_03006B80
	ldr r4, [r0]
	movs r0, #0xf
	ldrsb r0, [r4, r0]
	cmp r0, #0
	bgt _080A9504
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #3
	bne _080A94FC
	bl sub_080A82A4
	b _080A9504
	.align 2, 0
_080A94F8: .4byte gUnk_03006B80
_080A94FC:
	cmp r0, #7
	bne _080A9504
	bl sub_080A8364
_080A9504:
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #3
	bne _080A9510
	movs r0, #5
	b _080A9516
_080A9510:
	cmp r0, #7
	bne _080A9518
	movs r0, #9
_080A9516:
	strh r0, [r4]
_080A9518:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A9520
sub_080A9520: @ 0x080A9520
	push {lr}
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldr r1, _080A9548 @ =gUnk_03006B80
	ldr r1, [r1]
	strb r0, [r1, #0xe]
	lsls r0, r0, #0x18
	cmp r0, #0
	bge _080A9536
	movs r0, #2
	strb r0, [r1, #0xe]
_080A9536:
	movs r0, #0xe
	ldrsb r0, [r1, r0]
	cmp r0, #2
	ble _080A9542
	movs r0, #0
	strb r0, [r1, #0xe]
_080A9542:
	pop {r0}
	bx r0
	.align 2, 0
_080A9548: .4byte gUnk_03006B80

	thumb_func_start sub_080A954C
sub_080A954C: @ 0x080A954C
	push {r4, lr}
	ldr r0, _080A9568 @ =gUnk_03006B80
	ldr r4, [r0]
	movs r0, #0x6a
	movs r1, #0
	bl sub_080147B8
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #3
	bne _080A956C
	movs r0, #4
	b _080A9572
	.align 2, 0
_080A9568: .4byte gUnk_03006B80
_080A956C:
	cmp r0, #7
	bne _080A9574
	movs r0, #8
_080A9572:
	strh r0, [r4]
_080A9574:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A957C
sub_080A957C: @ 0x080A957C
	push {r4, lr}
	ldr r0, _080A9594 @ =gUnk_03006B80
	ldr r4, [r0]
	bl sub_080A95A8
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #4
	bne _080A9598
	movs r0, #3
	b _080A959E
	.align 2, 0
_080A9594: .4byte gUnk_03006B80
_080A9598:
	cmp r0, #8
	bne _080A95A0
	movs r0, #7
_080A959E:
	strh r0, [r4]
_080A95A0:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080A95A8
sub_080A95A8: @ 0x080A95A8
	push {r4, r5, r6, r7, lr}
	sub sp, #0x14
	ldr r0, _080A9610 @ =gUnk_03006B80
	ldr r5, [r0]
	movs r6, #0
	movs r7, #0
_080A95B4:
	lsls r4, r6, #1
	adds r0, r5, #0
	adds r0, #0x12
	adds r0, r0, r4
	ldrh r0, [r0]
	cmp r0, #0
	beq _080A95CC
	adds r0, r4, #0
	adds r0, #0x12
	adds r0, r5, r0
	bl sub_0800B4E4
_080A95CC:
	adds r0, r4, #0
	adds r0, #0x12
	adds r0, r5, r0
	ldr r2, _080A9614 @ =gUnk_08BD566C
	movs r1, #0xe
	ldrsb r1, [r5, r1]
	lsls r1, r1, #2
	adds r1, r1, r2
	ldr r2, [r1]
	lsls r1, r6, #2
	adds r1, r1, r2
	ldr r2, [r1]
	adds r1, r4, #4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	str r1, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r1, #4
	str r1, [sp, #0xc]
	str r7, [sp, #0x10]
	movs r1, #1
	movs r3, #2
	bl sub_0800B1AC
	adds r0, r6, #1
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	cmp r6, #6
	bls _080A95B4
	add sp, #0x14
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080A9610: .4byte gUnk_03006B80
_080A9614: .4byte gUnk_08BD566C

	thumb_func_start sub_080A9618
sub_080A9618: @ 0x080A9618
	push {r4, r5, lr}
	ldr r0, _080A9650 @ =gUnk_03006B80
	ldr r5, [r0]
	adds r4, r5, #0
	adds r4, #0x74
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r4, #0x28
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080A9650: .4byte gUnk_03006B80

	thumb_func_start sub_080A9654
sub_080A9654: @ 0x080A9654
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x5c
	movs r0, #0xc3
	lsls r0, r0, #1
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, _080A9680 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	cmp r0, #0x16
	bls _080A9676
	b _080A9DA2
_080A9676:
	lsls r0, r0, #2
	ldr r1, _080A9684 @ =_080A9688
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A9680: .4byte gUnk_03006B84
_080A9684: .4byte _080A9688
_080A9688: @ jump table
	.4byte _080A96E4 @ case 0
	.4byte _080A97B8 @ case 1
	.4byte _080A9808 @ case 2
	.4byte _080A9874 @ case 3
	.4byte _080A98F4 @ case 4
	.4byte _080A9920 @ case 5
	.4byte _080A998C @ case 6
	.4byte _080A9ABC @ case 7
	.4byte _080A9BB8 @ case 8
	.4byte _080A9C68 @ case 9
	.4byte _080A9CC4 @ case 10
	.4byte _080A9DA2 @ case 11
	.4byte _080A9DA2 @ case 12
	.4byte _080A9DA2 @ case 13
	.4byte _080A9DA2 @ case 14
	.4byte _080A9CE8 @ case 15
	.4byte _080A9DA2 @ case 16
	.4byte _080A9DA2 @ case 17
	.4byte _080A9DA2 @ case 18
	.4byte _080A9DA2 @ case 19
	.4byte _080A9D18 @ case 20
	.4byte _080A9D4C @ case 21
	.4byte _080A9D68 @ case 22
_080A96E4:
	ldr r0, _080A9794 @ =gUnk_03006B84
	mov sb, r0
	ldr r0, [r0]
	movs r5, #0
	strh r5, [r0, #0x10]
	strh r5, [r0, #0x12]
	strh r5, [r0, #0x14]
	strh r5, [r0, #0x16]
	ldr r0, _080A9798 @ =0x20A920A9
	str r0, [sp, #0x14]
	ldr r1, _080A979C @ =gUnk_02007000
	mov r8, r1
	ldr r2, _080A97A0 @ =0x05000140
	add r0, sp, #0x14
	bl CpuSet
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	ldr r4, _080A97A4 @ =0x06000800
	adds r0, r4, #0
	bl sub_08004570
	movs r0, #2
	bl sub_080012D4
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	adds r1, r4, #0
	bl sub_080012E0
	ldr r0, _080A97A8 @ =0x06004500
	movs r1, #0x80
	lsls r1, r1, #6
	bl sub_0800E690
	ldr r4, _080A97AC @ =gUnk_02007800
	movs r6, #0x80
	lsls r6, r6, #5
	adds r0, r4, #0
	adds r1, r6, #0
	bl sub_0800E6B0
	movs r0, #0
	mov r1, r8
	bl sub_0800E6F0
	movs r0, #0x80
	movs r1, #2
	bl sub_0800E6D0
	str r5, [sp, #0x18]
	add r0, sp, #0x18
	ldr r2, _080A97B0 @ =0x05000400
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	adds r1, r6, #0
	bl sub_0801B9BC
	ldr r0, _080A97B4 @ =0x06010000
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_0801B8E8
	movs r0, #0
	bl sub_0801B9EC
	mov r0, sb
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9794: .4byte gUnk_03006B84
_080A9798: .4byte 0x20A920A9
_080A979C: .4byte gUnk_02007000
_080A97A0: .4byte 0x05000140
_080A97A4: .4byte 0x06000800
_080A97A8: .4byte 0x06004500
_080A97AC: .4byte gUnk_02007800
_080A97B0: .4byte 0x05000400
_080A97B4: .4byte 0x06010000
_080A97B8:
	movs r0, #0
	movs r1, #0x21
	bl sub_08001D3C
	movs r1, #0
	bl sub_08001D78
	ldr r5, _080A97FC @ =gUnk_0200E000
	adds r1, r5, #0
	bl LZ77UnCompWram
	add r4, sp, #0x1c
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001CBC
	ldr r0, [r4, #0x14]
	ldrh r2, [r4, #0xe]
	lsrs r2, r2, #4
	movs r1, #6
	bl sub_08010D40
	ldr r0, [r4, #0x10]
	ldr r1, _080A9800 @ =0x06008000
	ldr r2, [r4, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	ldr r0, _080A9804 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A97FC: .4byte gUnk_0200E000
_080A9800: .4byte 0x06008000
_080A9804: .4byte gUnk_03006B84
_080A9808:
	movs r0, #0
	movs r1, #0x21
	bl sub_08001D3C
	movs r1, #1
	bl sub_08001D78
	ldr r6, _080A9864 @ =gUnk_0200E000
	adds r1, r6, #0
	bl LZ77UnCompWram
	ldr r5, _080A9868 @ =gUnk_02010800
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #6
	bl sub_08005F14
	add r4, sp, #0x38
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	adds r3, r5, #0
	bl sub_08005CF4
	ldr r0, [r4, #0xc]
	ldr r1, _080A986C @ =0x06002800
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	movs r3, #0x80
	lsls r3, r3, #0x13
	orrs r2, r3
	bl CpuSet
	ldr r0, _080A9870 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9864: .4byte gUnk_0200E000
_080A9868: .4byte gUnk_02010800
_080A986C: .4byte 0x06002800
_080A9870: .4byte gUnk_03006B84
_080A9874:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #5
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	bl sub_0800480C
	ldr r0, _080A98F0 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A98F0: .4byte gUnk_03006B84
_080A98F4:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080A9904
	b _080A9DA2
_080A9904:
	ldr r0, _080A9918 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #2]
	cmp r6, #0
	beq _080A991C
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9918: .4byte gUnk_03006B84
_080A991C:
	movs r0, #0xf
	b _080A9DA0
_080A9920:
	ldr r2, _080A9984 @ =gUnk_03006B84
	ldr r1, [r2]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r7, r2, #0
	cmp r0, #0x78
	bhi _080A994A
	ldr r0, _080A9988 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080A994A
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A994A
	b _080A9DA2
_080A994A:
	add r1, sp, #0x48
	movs r2, #0
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #4
	strb r0, [r1, #2]
	movs r0, #0xc
	strb r0, [r1, #3]
	movs r0, #0x16
	strb r0, [r1, #4]
	movs r0, #6
	strb r0, [r1, #5]
	strb r2, [r1, #6]
	movs r0, #8
	strb r0, [r1, #7]
	movs r0, #5
	strb r0, [r1, #8]
	strb r2, [r1, #9]
	str r2, [r1, #0xc]
	str r2, [r1, #0x10]
	ldr r0, [r7]
	adds r0, #0x10
	bl sub_08019944
	ldr r1, [r7]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9984: .4byte gUnk_03006B84
_080A9988: .4byte gKeyNewPress
_080A998C:
	ldr r4, _080A99C8 @ =gUnk_03006B84
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #1
	beq _080A99A0
	b _080A9DA2
_080A99A0:
	cmp r6, #0
	beq _080A99D4
	ldr r0, [r4]
	adds r0, #0x12
	ldr r1, _080A99CC @ =gUnk_08BD5894
	ldr r2, [r1, #4]
	movs r1, #0xd
	str r1, [sp]
	ldr r1, _080A99D0 @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #7
	bl sub_0800B1AC
	b _080A99F4
	.align 2, 0
_080A99C8: .4byte gUnk_03006B84
_080A99CC: .4byte gUnk_08BD5894
_080A99D0: .4byte 0x44444444
_080A99D4:
	ldr r0, [r4]
	adds r0, #0x12
	ldr r1, _080A9A2C @ =gUnk_08BD5894
	ldr r2, [r1, #4]
	movs r1, #0xd
	str r1, [sp]
	ldr r1, _080A9A30 @ =0x44444444
	str r1, [sp, #4]
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	movs r1, #0
	movs r3, #7
	bl sub_0800B1AC
_080A99F4:
	ldr r5, _080A9A34 @ =gUnk_03006B84
	ldr r0, [r5]
	adds r0, #0x14
	ldr r7, _080A9A2C @ =gUnk_08BD5894
	ldr r2, [r7, #8]
	movs r1, #0xf
	str r1, [sp]
	ldr r1, _080A9A30 @ =0x44444444
	mov r8, r1
	str r1, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r1, #2
	mov sb, r1
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #7
	bl sub_0800B1AC
	cmp r6, #0
	beq _080A9A38
	cmp r6, #1
	beq _080A9A52
	ldr r0, [r5]
	adds r0, #0x16
	ldr r2, [r7, #0x14]
	b _080A9A58
	.align 2, 0
_080A9A2C: .4byte gUnk_08BD5894
_080A9A30: .4byte 0x44444444
_080A9A34: .4byte gUnk_03006B84
_080A9A38:
	ldr r0, [r5]
	adds r0, #0x16
	ldr r2, [r7, #0xc]
	movs r1, #0xd
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	movs r1, #1
	str r1, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	b _080A9A68
_080A9A52:
	ldr r0, [r5]
	adds r0, #0x16
	ldr r2, [r7, #0x10]
_080A9A58:
	movs r1, #0xd
	str r1, [sp]
	mov r1, r8
	str r1, [sp, #4]
	str r4, [sp, #8]
	mov r1, sb
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
_080A9A68:
	movs r1, #0
	movs r3, #0x13
	bl sub_0800B1AC
	ldr r4, _080A9AB8 @ =gUnk_03006B84
	ldr r0, [r4]
	adds r0, #0x1c
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, #0x1c
	movs r1, #0
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, #0x1c
	movs r1, #0x78
	movs r2, #0x50
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, #0x1c
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, #0x1c
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0x18]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9AB8: .4byte gUnk_03006B84
_080A9ABC:
	ldr r1, _080A9ADC @ =gUnk_03006B84
	ldr r4, [r1]
	ldrh r5, [r4, #0x18]
	ldr r0, _080A9AE0 @ =gCurrentKeyPress
	ldrh r3, [r0]
	movs r0, #0x40
	ands r0, r3
	adds r7, r1, #0
	cmp r0, #0
	beq _080A9AE4
	cmp r5, #0
	beq _080A9B46
	subs r0, r5, #1
	strh r0, [r4, #0x18]
	b _080A9B46
	.align 2, 0
_080A9ADC: .4byte gUnk_03006B84
_080A9AE0: .4byte gCurrentKeyPress
_080A9AE4:
	movs r0, #0x80
	ands r0, r3
	cmp r0, #0
	beq _080A9AF6
	cmp r5, #0
	bne _080A9B46
	adds r0, r5, #1
	strh r0, [r4, #0x18]
	b _080A9B46
_080A9AF6:
	ldr r0, _080A9B2C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080A9B46
	cmp r5, #0
	bne _080A9B0A
	cmp r6, #0
	beq _080A9B46
_080A9B0A:
	adds r0, r4, #0
	adds r0, #0x1c
	movs r1, #0
	movs r2, #2
	movs r3, #1
	bl sub_08009F50
	ldr r0, [r7]
	ldrh r0, [r0, #0x18]
	cmp r0, #0
	bne _080A9B30
	movs r0, #0xc2
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	b _080A9B3A
	.align 2, 0
_080A9B2C: .4byte gKeyNewPress
_080A9B30:
	movs r0, #0xc2
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
_080A9B3A:
	ldr r2, _080A9BB4 @ =gUnk_03006B84
	ldr r1, [r2]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
	adds r7, r2, #0
_080A9B46:
	ldr r0, [r7]
	ldrh r0, [r0, #0x18]
	cmp r5, r0
	beq _080A9B60
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0x64
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080A9B60:
	ldr r1, [r7]
	adds r0, r1, #0
	adds r0, #0x1c
	ldrh r2, [r1, #0x18]
	lsls r2, r2, #0x14
	movs r1, #0xd0
	lsls r1, r1, #0xf
	adds r2, r2, r1
	asrs r2, r2, #0x10
	movs r1, #0x28
	bl sub_0800A678
	ldr r0, [r7]
	adds r0, #0x1c
	bl sub_08009FF8
	ldr r0, [r7]
	adds r0, #0x1c
	bl sub_0800A778
	ldr r0, [r7]
	adds r0, #0x1c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _080A9B9A
	b _080A9DA2
_080A9B9A:
	ldr r1, [r7]
	ldrb r0, [r1, #0x1d]
	cmp r0, #1
	bne _080A9BA4
	b _080A9DA2
_080A9BA4:
	adds r0, r1, #0
	adds r0, #0x1c
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	b _080A9DA2
	.align 2, 0
_080A9BB4: .4byte gUnk_03006B84
_080A9BB8:
	ldr r5, _080A9C04 @ =gUnk_03006B84
	ldr r0, [r5]
	adds r0, #0x1c
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r7, r0, #0x10
	cmp r7, #1
	bne _080A9C56
	movs r0, #0
	str r0, [sp]
	movs r0, #3
	str r0, [sp, #4]
	movs r0, #0x65
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	ldr r0, [r5]
	ldrh r4, [r0, #0x18]
	cmp r4, #0
	bne _080A9C48
	adds r0, #0x16
	movs r1, #0x85
	movs r2, #0
	bl sub_0800B57C
	cmp r6, #0
	beq _080A9C0C
	cmp r6, #1
	beq _080A9C28
	ldr r0, [r5]
	adds r0, #0x16
	ldr r1, _080A9C08 @ =gUnk_08BD5894
	ldr r2, [r1, #0x10]
	b _080A9C30
	.align 2, 0
_080A9C04: .4byte gUnk_03006B84
_080A9C08: .4byte gUnk_08BD5894
_080A9C0C:
	ldr r0, [r5]
	adds r0, #0x16
	ldr r1, _080A9C20 @ =gUnk_08BD5894
	ldr r2, [r1, #0xc]
	movs r1, #0xd
	str r1, [sp]
	ldr r1, _080A9C24 @ =0x44444444
	str r1, [sp, #4]
	str r7, [sp, #8]
	b _080A9C3A
	.align 2, 0
_080A9C20: .4byte gUnk_08BD5894
_080A9C24: .4byte 0x44444444
_080A9C28:
	ldr r0, [r5]
	adds r0, #0x16
	ldr r1, _080A9C5C @ =gUnk_08BD5894
	ldr r2, [r1, #0xc]
_080A9C30:
	movs r1, #0xd
	str r1, [sp]
	ldr r1, _080A9C60 @ =0x44444444
	str r1, [sp, #4]
	str r4, [sp, #8]
_080A9C3A:
	movs r1, #2
	str r1, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #0x13
	bl sub_0800B1AC
_080A9C48:
	ldr r0, _080A9C64 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #2]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080A9C56:
	ldr r4, _080A9C64 @ =gUnk_03006B84
	b _080A9CAE
	.align 2, 0
_080A9C5C: .4byte gUnk_08BD5894
_080A9C60: .4byte 0x44444444
_080A9C64: .4byte gUnk_03006B84
_080A9C68:
	ldr r4, _080A9CC0 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bls _080A9CAE
	adds r0, r1, #0
	adds r0, #0x10
	bl sub_0801BA7C
	ldr r0, [r4]
	adds r0, #0x12
	movs r1, #0x85
	movs r2, #0
	bl sub_0800B57C
	ldr r0, [r4]
	adds r0, #0x14
	movs r1, #0x85
	movs r2, #0
	bl sub_0800B57C
	ldr r0, [r4]
	adds r0, #0x16
	movs r1, #0x85
	movs r2, #0
	bl sub_0800B57C
	ldr r1, [r4]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080A9CAE:
	ldr r0, [r4]
	adds r0, #0x1c
	bl sub_08009FF8
	ldr r0, [r4]
	adds r0, #0x1c
	bl sub_0800A778
	b _080A9DA2
	.align 2, 0
_080A9CC0: .4byte gUnk_03006B84
_080A9CC4:
	ldr r4, _080A9CE4 @ =gUnk_03006B84
	ldr r0, [r4]
	adds r0, #0x10
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	bne _080A9DA2
	ldr r0, [r4]
	strh r1, [r0, #0x12]
	strh r1, [r0, #0x14]
	strh r1, [r0, #0x16]
	movs r1, #0x14
	strb r1, [r0]
	b _080A9DA2
	.align 2, 0
_080A9CE4: .4byte gUnk_03006B84
_080A9CE8:
	ldr r0, _080A9D10 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080A9CFC
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080A9DA2
_080A9CFC:
	movs r0, #0xc2
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	ldr r0, _080A9D14 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0x14
	b _080A9DA0
	.align 2, 0
_080A9D10: .4byte gKeyNewPress
_080A9D14: .4byte gUnk_03006B84
_080A9D18:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #0x78
	bl sub_0801457C
	ldr r0, _080A9D48 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9D48: .4byte gUnk_03006B84
_080A9D4C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080A9DA2
	ldr r0, _080A9D64 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080A9DA0
	.align 2, 0
_080A9D64: .4byte gUnk_03006B84
_080A9D68:
	bl sub_08014614
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	bl sub_080048CC
	movs r0, #0
	bl sub_08011104
	ldr r0, _080A9DC4 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
_080A9DA0:
	strb r0, [r1]
_080A9DA2:
	ldr r0, _080A9DC8 @ =gUnk_02007000
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #4
	bl sub_08006BA4
	ldr r0, _080A9DC4 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	add sp, #0x5c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080A9DC4: .4byte gUnk_03006B84
_080A9DC8: .4byte gUnk_02007000

	thumb_func_start sub_080A9DCC
sub_080A9DCC: @ 0x080A9DCC
	push {r4, r5, lr}
	sub sp, #0x20
	ldr r0, _080A9DE8 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	cmp r0, #0xb
	bls _080A9DDC
	b _080AA110
_080A9DDC:
	lsls r0, r0, #2
	ldr r1, _080A9DEC @ =_080A9DF0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080A9DE8: .4byte gUnk_03006B84
_080A9DEC: .4byte _080A9DF0
_080A9DF0: @ jump table
	.4byte _080A9E20 @ case 0
	.4byte _080A9ECC @ case 1
	.4byte _080AA064 @ case 2
	.4byte _080AA074 @ case 3
	.4byte _080AA084 @ case 4
	.4byte _080AA110 @ case 5
	.4byte _080AA110 @ case 6
	.4byte _080AA110 @ case 7
	.4byte _080AA110 @ case 8
	.4byte _080AA110 @ case 9
	.4byte _080AA0D0 @ case 10
	.4byte _080AA108 @ case 11
_080A9E20:
	movs r0, #0
	bl sub_08004554
	ldr r0, _080A9EB0 @ =0x06000800
	bl sub_08004570
	movs r0, #0
	movs r1, #4
	bl sub_080045E4
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	movs r1, #5
	bl sub_08001D3C
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	movs r1, #0
	movs r2, #1
	bl sub_08010D40
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800476C
	ldr r4, _080A9EB4 @ =gUnk_0200E000
	adds r0, r4, #0
	bl sub_080016D4
	add r0, sp, #0x1c
	movs r1, #0x40
	strh r1, [r0]
	ldr r2, _080A9EB8 @ =0x01000400
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _080A9EBC @ =gUnk_08BD5810
	ldr r1, _080A9EC0 @ =gUnk_08BD581B
	ldr r2, _080A9EC4 @ =gUnk_08BD5830
	ldr r2, [r2]
	bl sub_080AB4A8
	ldr r2, _080A9EC8 @ =gUnk_03006B84
	ldr r3, [r2]
	str r0, [r3, #0x44]
	movs r1, #0
	strb r1, [r3, #4]
	movs r4, #0
	ldr r0, [r2]
	strb r4, [r0, #5]
	ldr r0, [r2]
	strb r1, [r0, #6]
	ldr r0, [r2]
	strb r1, [r0, #7]
	ldr r0, [r2]
	strb r1, [r0, #8]
	ldr r1, [r2]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA10E
	.align 2, 0
_080A9EB0: .4byte 0x06000800
_080A9EB4: .4byte gUnk_0200E000
_080A9EB8: .4byte 0x01000400
_080A9EBC: .4byte gUnk_08BD5810
_080A9EC0: .4byte gUnk_08BD581B
_080A9EC4: .4byte gUnk_08BD5830
_080A9EC8: .4byte gUnk_03006B84
_080A9ECC:
	movs r4, #0
	movs r5, #0x80
	lsls r5, r5, #0xa
_080A9ED2:
	lsrs r2, r5, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0x80
	lsls r0, r0, #9
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0x80
	lsls r0, r0, #0xa
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0xc0
	lsls r0, r0, #0xa
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0x80
	lsls r0, r0, #0xb
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0xa0
	lsls r0, r0, #0xb
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0xc0
	lsls r0, r0, #0xb
	adds r2, r5, r0
	adds r4, #8
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0xe0
	lsls r0, r0, #0xb
	adds r2, r5, r0
	lsrs r2, r2, #0x10
	ldr r0, _080A9FF8 @ =gUnk_0200E000
	movs r1, #4
	ldr r3, _080A9FFC @ =gUnk_080C01A8
	bl sub_08001284
	movs r0, #0x80
	lsls r0, r0, #0xc
	adds r5, r5, r0
	cmp r4, #0xf
	bls _080A9ED2
	ldr r4, _080A9FF8 @ =gUnk_0200E000
	ldr r3, _080AA000 @ =gUnk_080C01C0
	adds r0, r4, #0
	movs r1, #6
	movs r2, #3
	bl sub_08001284
	ldr r3, _080AA004 @ =gUnk_08BD5810
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #3
	bl sub_08001284
	ldr r3, _080AA008 @ =gUnk_080C01C4
	adds r0, r4, #0
	movs r1, #6
	movs r2, #5
	bl sub_08001284
	ldr r3, _080AA00C @ =gUnk_08BD582C
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #5
	bl sub_08001284
	ldr r3, _080AA010 @ =gUnk_080C01C8
	adds r0, r4, #0
	movs r1, #6
	movs r2, #7
	bl sub_08001284
	ldr r3, _080AA014 @ =gUnk_08BD581B
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #7
	bl sub_08001284
	ldr r3, _080AA018 @ =gUnk_080C01D0
	adds r0, r4, #0
	movs r1, #6
	movs r2, #9
	bl sub_08001284
	ldr r3, _080AA01C @ =gUnk_08BD582E
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #9
	bl sub_08001284
	ldr r3, _080AA020 @ =gUnk_080C01D8
	adds r0, r4, #0
	movs r1, #6
	movs r2, #0xb
	bl sub_08001284
	ldr r1, _080AA024 @ =gUnk_08BD9FB0
	ldr r5, _080AA028 @ =gUnk_03006B84
	ldr r0, [r5]
	ldr r1, [r1]
	ldr r0, [r0, #0x44]
	cmp r1, r0
	bne _080AA030
	ldr r3, _080AA02C @ =gUnk_080C01E4
	adds r0, r4, #0
	movs r1, #0x11
	movs r2, #0xb
	bl sub_08001284
	ldr r1, [r5]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA040
	.align 2, 0
_080A9FF8: .4byte gUnk_0200E000
_080A9FFC: .4byte gUnk_080C01A8
_080AA000: .4byte gUnk_080C01C0
_080AA004: .4byte gUnk_08BD5810
_080AA008: .4byte gUnk_080C01C4
_080AA00C: .4byte gUnk_08BD582C
_080AA010: .4byte gUnk_080C01C8
_080AA014: .4byte gUnk_08BD581B
_080AA018: .4byte gUnk_080C01D0
_080AA01C: .4byte gUnk_08BD582E
_080AA020: .4byte gUnk_080C01D8
_080AA024: .4byte gUnk_08BD9FB0
_080AA028: .4byte gUnk_03006B84
_080AA02C: .4byte gUnk_080C01E4
_080AA030:
	ldr r3, _080AA05C @ =gUnk_080C01E8
	adds r0, r4, #0
	movs r1, #0x11
	movs r2, #0xb
	bl sub_08001284
	ldr r1, [r5]
	movs r0, #0xa
_080AA040:
	strb r0, [r1]
	ldr r0, _080AA060 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #4
	bl sub_08006BA4
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	b _080AA110
	.align 2, 0
_080AA05C: .4byte gUnk_080C01E8
_080AA060: .4byte gUnk_0200E000
_080AA064:
	ldr r0, _080AA070 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA10E
	.align 2, 0
_080AA070: .4byte gUnk_03006B84
_080AA074:
	ldr r0, _080AA080 @ =gKeyNewPress
	ldrh r0, [r0]
	cmp r0, #0
	beq _080AA0E6
	b _080AA0DC
	.align 2, 0
_080AA080: .4byte gKeyNewPress
_080AA084:
	mov r0, sp
	adds r0, #0x1e
	movs r1, #0x40
	strh r1, [r0]
	ldr r1, _080AA0C4 @ =gUnk_0200E000
	ldr r2, _080AA0C8 @ =0x01000400
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	ldr r0, _080AA0CC @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	b _080AA10E
	.align 2, 0
_080AA0C4: .4byte gUnk_0200E000
_080AA0C8: .4byte 0x01000400
_080AA0CC: .4byte gUnk_03006B84
_080AA0D0:
	ldr r0, _080AA0F8 @ =gUnk_08BD5810
	ldr r1, _080AA0FC @ =gUnk_08BD9FB0
	ldr r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bne _080AA0E6
_080AA0DC:
	ldr r0, _080AA100 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080AA0E6:
	ldr r0, _080AA104 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #4
	bl sub_08006BA4
	b _080AA110
	.align 2, 0
_080AA0F8: .4byte gUnk_08BD5810
_080AA0FC: .4byte gUnk_08BD9FB0
_080AA100: .4byte gUnk_03006B84
_080AA104: .4byte gUnk_0200E000
_080AA108:
	ldr r0, _080AA120 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0xa
_080AA10E:
	strb r0, [r1]
_080AA110:
	ldr r0, _080AA120 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	add sp, #0x20
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AA120: .4byte gUnk_03006B84

	thumb_func_start sub_080AA124
sub_080AA124: @ 0x080AA124
	push {lr}
	ldr r0, _080AA13C @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	cmp r0, #0xb
	bhi _080AA210
	lsls r0, r0, #2
	ldr r1, _080AA140 @ =_080AA144
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AA13C: .4byte gUnk_03006B84
_080AA140: .4byte _080AA144
_080AA144: @ jump table
	.4byte _080AA174 @ case 0
	.4byte _080AA19C @ case 1
	.4byte _080AA1C2 @ case 2
	.4byte _080AA210 @ case 3
	.4byte _080AA210 @ case 4
	.4byte _080AA210 @ case 5
	.4byte _080AA210 @ case 6
	.4byte _080AA210 @ case 7
	.4byte _080AA210 @ case 8
	.4byte _080AA210 @ case 9
	.4byte _080AA1D0 @ case 10
	.4byte _080AA208 @ case 11
_080AA174:
	ldr r0, _080AA18C @ =gUnk_08BD5810
	ldr r1, _080AA190 @ =gUnk_08BD581B
	ldr r2, _080AA194 @ =gUnk_08BD5830
	ldr r2, [r2]
	bl sub_080AB4A8
	ldr r1, _080AA198 @ =gUnk_03006B84
	ldr r1, [r1]
	str r0, [r1, #0x44]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA20E
	.align 2, 0
_080AA18C: .4byte gUnk_08BD5810
_080AA190: .4byte gUnk_08BD581B
_080AA194: .4byte gUnk_08BD5830
_080AA198: .4byte gUnk_03006B84
_080AA19C:
	ldr r1, _080AA1B4 @ =gUnk_08BD9FB0
	ldr r0, _080AA1B8 @ =gUnk_03006B84
	ldr r2, [r0]
	ldr r1, [r1]
	ldr r0, [r2, #0x44]
	cmp r1, r0
	bne _080AA1BC
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	b _080AA210
	.align 2, 0
_080AA1B4: .4byte gUnk_08BD9FB0
_080AA1B8: .4byte gUnk_03006B84
_080AA1BC:
	movs r0, #0xa
	strb r0, [r2]
	b _080AA210
_080AA1C2:
	ldr r0, _080AA1CC @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	b _080AA20E
	.align 2, 0
_080AA1CC: .4byte gUnk_03006B84
_080AA1D0:
	ldr r0, _080AA1F8 @ =gUnk_08BD5810
	ldr r1, _080AA1FC @ =gUnk_08BD9FB0
	ldr r1, [r1]
	ldrb r0, [r0]
	cmp r1, r0
	bne _080AA1E6
	ldr r0, _080AA200 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080AA1E6:
	ldr r0, _080AA204 @ =gUnk_0200E000
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0x80
	lsls r2, r2, #4
	bl sub_08006BA4
	b _080AA210
	.align 2, 0
_080AA1F8: .4byte gUnk_08BD5810
_080AA1FC: .4byte gUnk_08BD9FB0
_080AA200: .4byte gUnk_03006B84
_080AA204: .4byte gUnk_0200E000
_080AA208:
	ldr r0, _080AA21C @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0xa
_080AA20E:
	strb r0, [r1]
_080AA210:
	ldr r0, _080AA21C @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	pop {r1}
	bx r1
	.align 2, 0
_080AA21C: .4byte gUnk_03006B84

	thumb_func_start sub_080AA220
sub_080AA220: @ 0x080AA220
	push {r4, r5, lr}
	ldr r0, _080AA244 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r5, #1
	ldr r0, _080AA248 @ =gKeyNewPress
	ldrh r0, [r0]
	adds r3, r5, #0
	ands r3, r0
	cmp r3, #0
	beq _080AA24C
	adds r4, r1, #5
	adds r0, r4, #0
	bl sub_080AB51C
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r5, r1, #0x1f
	b _080AA2BE
	.align 2, 0
_080AA244: .4byte gUnk_03006B84
_080AA248: .4byte gKeyNewPress
_080AA24C:
	ldr r0, _080AA26C @ =gCurrentKeyPress
	ldrh r2, [r0]
	movs r0, #0x40
	ands r0, r2
	cmp r0, #0
	beq _080AA274
	ldrb r0, [r1, #4]
	adds r1, #5
	adds r2, r1, r0
	ldrb r0, [r2]
	adds r4, r1, #0
	cmp r0, #0x22
	bhi _080AA270
	adds r0, #1
	strb r0, [r2]
	b _080AA2BE
	.align 2, 0
_080AA26C: .4byte gCurrentKeyPress
_080AA270:
	strb r3, [r2]
	b _080AA2BE
_080AA274:
	movs r0, #0x80
	ands r0, r2
	cmp r0, #0
	beq _080AA296
	ldrb r0, [r1, #4]
	adds r1, #5
	adds r2, r1, r0
	ldrb r0, [r2]
	adds r4, r1, #0
	cmp r0, #0
	beq _080AA290
	subs r0, #1
	strb r0, [r2]
	b _080AA2BE
_080AA290:
	movs r0, #0x23
	strb r0, [r2]
	b _080AA2BE
_080AA296:
	movs r0, #0x20
	ands r0, r2
	cmp r0, #0
	beq _080AA2AA
	ldrb r0, [r1, #4]
	adds r4, r1, #5
	cmp r0, #0
	beq _080AA2BE
	subs r0, #1
	b _080AA2BC
_080AA2AA:
	movs r0, #0x10
	ands r0, r2
	adds r4, r1, #5
	cmp r0, #0
	beq _080AA2BE
	ldrb r0, [r1, #4]
	cmp r0, #2
	bhi _080AA2BE
	adds r0, #1
_080AA2BC:
	strb r0, [r1, #4]
_080AA2BE:
	adds r0, r4, #0
	bl sub_080AA2CC
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080AA2CC
sub_080AA2CC: @ 0x080AA2CC
	push {r4, r5, lr}
	sub sp, #8
	adds r4, r0, #0
	ldr r5, _080AA358 @ =gUnk_0200E000
	ldr r3, _080AA35C @ =gUnk_080C01EC
	adds r0, r5, #0
	movs r1, #6
	movs r2, #0xd
	bl sub_08001284
	mov r2, sp
	ldr r1, _080AA360 @ =gUnk_08BD5834
	ldrb r0, [r4]
	adds r0, r0, r1
	ldrb r0, [r0]
	movs r3, #0
	strb r0, [r2]
	ldrb r0, [r4, #1]
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2, #1]
	ldrb r0, [r4, #2]
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2, #2]
	ldrb r0, [r4, #3]
	adds r0, r0, r1
	ldrb r0, [r0]
	strb r0, [r2, #3]
	mov r0, sp
	strb r3, [r0, #4]
	ldr r4, _080AA364 @ =gUnk_080C01F8
	adds r0, r5, #0
	movs r1, #9
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0xa
	movs r2, #0xf
	mov r3, sp
	bl sub_08001284
	adds r0, r5, #0
	movs r1, #0xe
	movs r2, #0xf
	adds r3, r4, #0
	bl sub_08001284
	ldr r0, _080AA368 @ =gUnk_03003364
	ldr r0, [r0]
	movs r1, #7
	ands r0, r1
	cmp r0, #5
	bls _080AA34E
	ldr r0, _080AA36C @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r1, [r0, #4]
	adds r1, #0xa
	ldr r3, _080AA370 @ =gUnk_080C01FC
	adds r0, r5, #0
	movs r2, #0xf
	bl sub_08001284
_080AA34E:
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080AA358: .4byte gUnk_0200E000
_080AA35C: .4byte gUnk_080C01EC
_080AA360: .4byte gUnk_08BD5834
_080AA364: .4byte gUnk_080C01F8
_080AA368: .4byte gUnk_03003364
_080AA36C: .4byte gUnk_03006B84
_080AA370: .4byte gUnk_080C01FC

	thumb_func_start sub_080AA374
sub_080AA374: @ 0x080AA374
	push {r4, r5, r6, lr}
	sub sp, #0x68
	ldr r0, _080AA390 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	cmp r0, #0xb
	bls _080AA384
	b _080AA72A
_080AA384:
	lsls r0, r0, #2
	ldr r1, _080AA394 @ =_080AA398
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AA390: .4byte gUnk_03006B84
_080AA394: .4byte _080AA398
_080AA398: @ jump table
	.4byte _080AA3C8 @ case 0
	.4byte _080AA450 @ case 1
	.4byte _080AA514 @ case 2
	.4byte _080AA54C @ case 3
	.4byte _080AA69C @ case 4
	.4byte _080AA568 @ case 5
	.4byte _080AA588 @ case 6
	.4byte _080AA630 @ case 7
	.4byte _080AA684 @ case 8
	.4byte _080AA69C @ case 9
	.4byte _080AA6F8 @ case 10
	.4byte _080AA714 @ case 11
_080AA3C8:
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	ldr r0, _080AA440 @ =0x06000800
	bl sub_08004570
	movs r0, #0
	movs r1, #4
	bl sub_080045E4
	movs r0, #0
	bl sub_080012D4
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800476C
	ldr r4, _080AA444 @ =gUnk_0200E000
	adds r0, r4, #0
	bl sub_080016D4
	add r1, sp, #0xc
	movs r0, #0x40
	strh r0, [r1]
	ldr r2, _080AA448 @ =0x01000400
	adds r0, r1, #0
	adds r1, r4, #0
	bl CpuSet
	ldr r0, _080AA44C @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA440: .4byte 0x06000800
_080AA444: .4byte gUnk_0200E000
_080AA448: .4byte 0x01000400
_080AA44C: .4byte gUnk_03006B84
_080AA450:
	movs r0, #0
	movs r1, #0x22
	bl sub_08001D3C
	movs r1, #0
	bl sub_08001D78
	ldr r6, _080AA504 @ =gUnk_0200E000
	adds r1, r6, #0
	bl LZ77UnCompWram
	add r4, sp, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001CBC
	ldr r0, [r4, #0x14]
	ldrh r2, [r4, #0xe]
	lsrs r2, r2, #4
	movs r1, #0
	bl sub_08010D40
	ldr r0, [r4, #0x10]
	ldr r1, _080AA508 @ =0x06004000
	ldr r2, [r4, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	movs r0, #0
	movs r1, #0x22
	bl sub_08001D3C
	movs r1, #1
	bl sub_08001D78
	adds r1, r6, #0
	bl LZ77UnCompWram
	ldr r5, _080AA50C @ =gUnk_02010800
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_08005F14
	add r4, sp, #0x2c
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	adds r3, r5, #0
	bl sub_08005CF4
	ldr r0, [r4, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	movs r3, #0x80
	lsls r3, r3, #0x13
	orrs r2, r3
	bl CpuSet
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r0, _080AA510 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA504: .4byte gUnk_0200E000
_080AA508: .4byte 0x06004000
_080AA50C: .4byte gUnk_02010800
_080AA510: .4byte gUnk_03006B84
_080AA514:
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800476C
	ldr r3, _080AA548 @ =gUnk_03006B84
	ldr r1, [r3]
	movs r2, #0
	movs r0, #0
	strh r0, [r1, #2]
	strb r2, [r1, #1]
	ldr r1, [r3]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA548: .4byte gUnk_03006B84
_080AA54C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AA55C
	b _080AA6DC
_080AA55C:
	ldr r0, _080AA564 @ =gUnk_03006B84
	ldr r1, [r0]
	b _080AA6D6
	.align 2, 0
_080AA564: .4byte gUnk_03006B84
_080AA568:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AA578
	b _080AA72A
_080AA578:
	ldr r0, _080AA584 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA584: .4byte gUnk_03006B84
_080AA588:
	movs r0, #0
	movs r1, #0x22
	bl sub_08001D3C
	movs r1, #2
	bl sub_08001D78
	ldr r6, _080AA620 @ =gUnk_0200E000
	adds r1, r6, #0
	bl LZ77UnCompWram
	add r4, sp, #0x3c
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001CBC
	ldr r0, [r4, #0x14]
	ldrh r2, [r4, #0xe]
	lsrs r2, r2, #4
	movs r1, #0
	bl sub_08010D40
	ldr r0, [r4, #0x10]
	ldr r1, _080AA624 @ =0x06004000
	ldr r2, [r4, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	movs r0, #0
	movs r1, #0x22
	bl sub_08001D3C
	movs r1, #3
	bl sub_08001D78
	adds r1, r6, #0
	bl LZ77UnCompWram
	ldr r5, _080AA628 @ =gUnk_02010800
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r1, r6, #0
	adds r2, r5, #0
	movs r3, #0
	bl sub_08005F14
	add r4, sp, #0x58
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	movs r0, #0
	adds r1, r6, #0
	movs r2, #0
	adds r3, r5, #0
	bl sub_08005CF4
	ldr r0, [r4, #0xc]
	movs r1, #0xc0
	lsls r1, r1, #0x13
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	movs r3, #0x80
	lsls r3, r3, #0x13
	orrs r2, r3
	bl CpuSet
	ldr r0, _080AA62C @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA620: .4byte gUnk_0200E000
_080AA624: .4byte 0x06004000
_080AA628: .4byte gUnk_02010800
_080AA62C: .4byte gUnk_03006B84
_080AA630:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0x80
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800476C
	ldr r3, _080AA680 @ =gUnk_03006B84
	ldr r1, [r3]
	movs r2, #0
	movs r0, #0
	strh r0, [r1, #2]
	strb r2, [r1, #1]
	ldr r1, [r3]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA680: .4byte gUnk_03006B84
_080AA684:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AA6DC
	ldr r0, _080AA698 @ =gUnk_03006B84
	ldr r1, [r0]
	b _080AA6D6
	.align 2, 0
_080AA698: .4byte gUnk_03006B84
_080AA69C:
	ldr r4, _080AA6F0 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x46
	bhi _080AA6B8
	cmp r0, #0x1e
	bls _080AA6DC
	ldrb r0, [r1, #1]
	cmp r0, #1
	bne _080AA6DC
_080AA6B8:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
_080AA6D6:
	ldrb r0, [r1]
	adds r0, #1
	strb r0, [r1]
_080AA6DC:
	ldr r0, _080AA6F4 @ =gKeyNewPress
	ldrh r0, [r0]
	cmp r0, #0
	beq _080AA72A
	ldr r0, _080AA6F0 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	b _080AA72A
	.align 2, 0
_080AA6F0: .4byte gUnk_03006B84
_080AA6F4: .4byte gKeyNewPress
_080AA6F8:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AA72A
	ldr r0, _080AA710 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA728
	.align 2, 0
_080AA710: .4byte gUnk_03006B84
_080AA714:
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	ldr r0, _080AA738 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
_080AA728:
	strb r0, [r1]
_080AA72A:
	ldr r0, _080AA738 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	add sp, #0x68
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080AA738: .4byte gUnk_03006B84

	thumb_func_start sub_080AA73C
sub_080AA73C: @ 0x080AA73C
	push {r4, lr}
	ldr r0, _080AA754 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	cmp r0, #6
	bls _080AA74A
	b _080AA8F4
_080AA74A:
	lsls r0, r0, #2
	ldr r1, _080AA758 @ =_080AA75C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AA754: .4byte gUnk_03006B84
_080AA758: .4byte _080AA75C
_080AA75C: @ jump table
	.4byte _080AA778 @ case 0
	.4byte _080AA798 @ case 1
	.4byte _080AA808 @ case 2
	.4byte _080AA834 @ case 3
	.4byte _080AA85C @ case 4
	.4byte _080AA8B8 @ case 5
	.4byte _080AA8D4 @ case 6
_080AA778:
	movs r0, #0
	bl sub_08004554
	ldr r1, _080AA790 @ =gUnk_03006B8C
	movs r0, #0
	str r0, [r1]
	ldr r0, _080AA794 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA790: .4byte gUnk_03006B8C
_080AA794: .4byte gUnk_03006B84
_080AA798:
	ldr r1, _080AA7E8 @ =0x040000D4
	ldr r0, _080AA7EC @ =gUnk_08BD5AB0
	str r0, [r1]
	ldr r0, _080AA7F0 @ =0x06008000
	str r0, [r1, #4]
	ldr r0, _080AA7F4 @ =0x80002000
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080AA7F8 @ =gUnk_08BD9AB0
	str r0, [r1]
	movs r0, #0xc0
	lsls r0, r0, #0x13
	str r0, [r1, #4]
	ldr r0, _080AA7FC @ =0x80000280
	str r0, [r1, #8]
	ldr r0, [r1, #8]
	ldr r0, _080AA800 @ =gUnk_08BD58B0
	movs r1, #0
	movs r2, #4
	bl sub_08010D40
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r0, _080AA804 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA7E8: .4byte 0x040000D4
_080AA7EC: .4byte gUnk_08BD5AB0
_080AA7F0: .4byte 0x06008000
_080AA7F4: .4byte 0x80002000
_080AA7F8: .4byte gUnk_08BD9AB0
_080AA7FC: .4byte 0x80000280
_080AA800: .4byte gUnk_08BD58B0
_080AA804: .4byte gUnk_03006B84
_080AA808:
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0x80
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0
	movs r2, #2
	bl sub_0800476C
	ldr r0, _080AA830 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA830: .4byte gUnk_03006B84
_080AA834:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AA8F4
	ldr r3, _080AA858 @ =gUnk_03006B84
	ldr r1, [r3]
	movs r2, #0
	movs r0, #0
	strh r0, [r1, #2]
	strb r2, [r1, #1]
	ldr r1, [r3]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA858: .4byte gUnk_03006B84
_080AA85C:
	ldr r4, _080AA894 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bls _080AA898
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA894: .4byte gUnk_03006B84
_080AA898:
	ldr r0, _080AA8B0 @ =gKeyHeld
	ldrh r0, [r0]
	cmp r0, #0xf0
	bne _080AA8F4
	ldr r1, _080AA8B4 @ =gUnk_03006B8C
	ldr r0, [r1]
	cmp r0, #1
	beq _080AA8F4
	movs r0, #1
	str r0, [r1]
	b _080AA8F4
	.align 2, 0
_080AA8B0: .4byte gKeyHeld
_080AA8B4: .4byte gUnk_03006B8C
_080AA8B8:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AA8F4
	ldr r0, _080AA8D0 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AA8F2
	.align 2, 0
_080AA8D0: .4byte gUnk_03006B84
_080AA8D4:
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800F224
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	ldr r0, _080AA900 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
_080AA8F2:
	strb r0, [r1]
_080AA8F4:
	ldr r0, _080AA900 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AA900: .4byte gUnk_03006B84

	thumb_func_start sub_080AA904
sub_080AA904: @ 0x080AA904
	push {r4, r5, lr}
	ldr r1, _080AA920 @ =gUnk_03006B84
	ldr r0, [r1]
	ldrb r0, [r0]
	adds r2, r1, #0
	cmp r0, #0x64
	bls _080AA916
	bl _080AB154
_080AA916:
	lsls r0, r0, #2
	ldr r1, _080AA924 @ =_080AA928
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AA920: .4byte gUnk_03006B84
_080AA924: .4byte _080AA928
_080AA928: @ jump table
	.4byte _080AAABC @ case 0
	.4byte _080AAADC @ case 1
	.4byte _080AAB04 @ case 2
	.4byte _080AAB28 @ case 3
	.4byte _080AAB54 @ case 4
	.4byte _080AAB9C @ case 5
	.4byte _080AABE0 @ case 6
	.4byte _080AAC04 @ case 7
	.4byte _080AAC54 @ case 8
	.4byte _080AAC78 @ case 9
	.4byte _080AACBC @ case 10
	.4byte _080AAD08 @ case 11
	.4byte _080AAD48 @ case 12
	.4byte _080AB154 @ case 13
	.4byte _080AB154 @ case 14
	.4byte _080AB154 @ case 15
	.4byte _080AB154 @ case 16
	.4byte _080AB154 @ case 17
	.4byte _080AB154 @ case 18
	.4byte _080AB154 @ case 19
	.4byte _080AAD68 @ case 20
	.4byte _080AADAC @ case 21
	.4byte _080AADC0 @ case 22
	.4byte _080AAE4C @ case 23
	.4byte _080AB154 @ case 24
	.4byte _080AB154 @ case 25
	.4byte _080AB154 @ case 26
	.4byte _080AB154 @ case 27
	.4byte _080AB154 @ case 28
	.4byte _080AB154 @ case 29
	.4byte _080AAE80 @ case 30
	.4byte _080AAEB4 @ case 31
	.4byte _080AAED8 @ case 32
	.4byte _080AAF1C @ case 33
	.4byte _080AAF68 @ case 34
	.4byte _080AAFAC @ case 35
	.4byte _080AB000 @ case 36
	.4byte _080AB040 @ case 37
	.4byte _080AB060 @ case 38
	.4byte _080AB154 @ case 39
	.4byte _080AB154 @ case 40
	.4byte _080AB154 @ case 41
	.4byte _080AB154 @ case 42
	.4byte _080AB154 @ case 43
	.4byte _080AB154 @ case 44
	.4byte _080AB154 @ case 45
	.4byte _080AB154 @ case 46
	.4byte _080AB154 @ case 47
	.4byte _080AB154 @ case 48
	.4byte _080AB154 @ case 49
	.4byte _080AB080 @ case 50
	.4byte _080AB0B4 @ case 51
	.4byte _080AB0D4 @ case 52
	.4byte _080AB114 @ case 53
	.4byte _080AB134 @ case 54
	.4byte _080AB154 @ case 55
	.4byte _080AB154 @ case 56
	.4byte _080AB154 @ case 57
	.4byte _080AB154 @ case 58
	.4byte _080AB154 @ case 59
	.4byte _080AB154 @ case 60
	.4byte _080AB154 @ case 61
	.4byte _080AB154 @ case 62
	.4byte _080AB154 @ case 63
	.4byte _080AB154 @ case 64
	.4byte _080AB154 @ case 65
	.4byte _080AB154 @ case 66
	.4byte _080AB154 @ case 67
	.4byte _080AB154 @ case 68
	.4byte _080AB154 @ case 69
	.4byte _080AB154 @ case 70
	.4byte _080AB154 @ case 71
	.4byte _080AB154 @ case 72
	.4byte _080AB154 @ case 73
	.4byte _080AB154 @ case 74
	.4byte _080AB154 @ case 75
	.4byte _080AB154 @ case 76
	.4byte _080AB154 @ case 77
	.4byte _080AB154 @ case 78
	.4byte _080AB154 @ case 79
	.4byte _080AB154 @ case 80
	.4byte _080AB154 @ case 81
	.4byte _080AB154 @ case 82
	.4byte _080AB154 @ case 83
	.4byte _080AB154 @ case 84
	.4byte _080AB154 @ case 85
	.4byte _080AB154 @ case 86
	.4byte _080AB154 @ case 87
	.4byte _080AB154 @ case 88
	.4byte _080AB154 @ case 89
	.4byte _080AB154 @ case 90
	.4byte _080AB154 @ case 91
	.4byte _080AB154 @ case 92
	.4byte _080AB154 @ case 93
	.4byte _080AB154 @ case 94
	.4byte _080AB154 @ case 95
	.4byte _080AB154 @ case 96
	.4byte _080AB154 @ case 97
	.4byte _080AB154 @ case 98
	.4byte _080AB154 @ case 99
	.4byte _080AB154 @ case 100
_080AAABC:
	movs r0, #0
	bl sub_08004554
	movs r0, #1
	bl sub_08014440
	movs r0, #0
	bl sub_08006C10
	ldr r0, _080AAAD8 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAAD8: .4byte gUnk_03006B84
_080AAADC:
	ldr r5, _080AAAFC @ =gUnk_03006B84
	ldr r1, [r5]
	ldrb r4, [r1, #1]
	cmp r4, #0
	bne _080AAB00
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #3
	bl sub_08014544
	ldr r1, [r5]
	strh r4, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAAFC: .4byte gUnk_03006B84
_080AAB00:
	movs r0, #0x32
	b _080AB192
_080AAB04:
	ldr r0, _080AAB24 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x78
	bhi _080AAB18
	b _080AB194
_080AAB18:
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAB24: .4byte gUnk_03006B84
_080AAB28:
	movs r0, #0
	movs r1, #0
	bl sub_080AB1A4
	ldr r4, _080AAB50 @ =gUnk_03006B84
	ldr r1, [r4]
	movs r2, #0
	strh r2, [r1, #0xa]
	movs r0, #0xa0
	strh r0, [r1, #0xc]
	strh r2, [r1, #0xe]
	movs r0, #0
	movs r1, #0
	movs r2, #0xa0
	bl sub_08005E18
	ldr r1, [r4]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAB50: .4byte gUnk_03006B84
_080AAB54:
	ldr r4, _080AAB98 @ =gUnk_03006B84
	ldr r0, [r4]
	movs r2, #0xc
	ldrsh r1, [r0, r2]
	ldrh r0, [r0, #0xe]
	muls r0, r1, r0
	movs r5, #0xa0
	lsls r5, r5, #1
	adds r1, r5, #0
	bl __divsi3
	movs r2, #0xa0
	subs r2, r2, r0
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	movs r0, #0
	movs r1, #0
	bl sub_08005E18
	ldr r4, [r4]
	ldrh r0, [r4, #0xe]
	adds r0, #1
	strh r0, [r4, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, r5
	bhi _080AAB8C
	b _080AB194
_080AAB8C:
	movs r0, #0
	strh r0, [r4, #0xe]
	ldrb r0, [r4]
	adds r0, #1
	strb r0, [r4]
	b _080AB194
	.align 2, 0
_080AAB98: .4byte gUnk_03006B84
_080AAB9C:
	ldr r4, _080AABD8 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x5a
	bhi _080AABB0
	b _080AB194
_080AABB0:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080AABDC @ =0x00007FFF
	movs r0, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AABD8: .4byte gUnk_03006B84
_080AABDC: .4byte 0x00007FFF
_080AABE0:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AABF0
	b _080AB194
_080AABF0:
	ldr r0, _080AAC00 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAC00: .4byte gUnk_03006B84
_080AAC04:
	ldr r4, _080AAC4C @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x1e
	bhi _080AAC18
	b _080AB194
_080AAC18:
	movs r0, #0
	movs r1, #1
	bl sub_080AB1A4
	movs r0, #1
	movs r1, #2
	bl sub_080AB1A4
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	ldr r2, _080AAC50 @ =0x00007FFF
	movs r0, #0
	movs r3, #0x5a
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r1, [r4]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAC4C: .4byte gUnk_03006B84
_080AAC50: .4byte 0x00007FFF
_080AAC54:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AAC64
	b _080AB194
_080AAC64:
	ldr r0, _080AAC74 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAC74: .4byte gUnk_03006B84
_080AAC78:
	ldr r4, _080AACB8 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x78
	bhi _080AAC8C
	b _080AB194
_080AAC8C:
	movs r0, #0x40
	bl sub_08004840
	movs r0, #1
	bl sub_0800485C
	movs r0, #0x80
	lsls r0, r0, #2
	bl sub_08004878
	movs r0, #0x10
	bl sub_08004894
	movs r0, #0
	bl sub_080048B0
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AACB8: .4byte gUnk_03006B84
_080AACBC:
	ldr r5, _080AAD04 @ =gUnk_03006B84
	ldr r0, [r5]
	ldrh r4, [r0, #0xe]
	lsrs r4, r4, #3
	movs r0, #0x10
	subs r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08004894
	adds r0, r4, #0
	bl sub_080048B0
	ldr r1, [r5]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x7f
	bhi _080AACE8
	b _080AB194
_080AACE8:
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	ldr r1, [r5]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAD04: .4byte gUnk_03006B84
_080AAD08:
	ldr r4, _080AAD44 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x78
	bhi _080AAD1C
	b _080AB194
_080AAD1C:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAD44: .4byte gUnk_03006B84
_080AAD48:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AAD58
	b _080AB194
_080AAD58:
	ldr r0, _080AAD64 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	movs r0, #0x14
	b _080AB192
	.align 2, 0
_080AAD64: .4byte gUnk_03006B84
_080AAD68:
	ldr r4, _080AADA8 @ =gUnk_03006B84
	ldr r0, [r4]
	ldrh r1, [r0, #2]
	adds r1, #3
	movs r0, #0
	bl sub_080AB1A4
	ldr r0, [r4]
	ldrh r1, [r0, #2]
	adds r1, #4
	movs r0, #1
	bl sub_080AB1A4
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r1, [r4]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AADA8: .4byte gUnk_03006B84
_080AADAC:
	ldr r0, _080AADBC @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xa]
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AADBC: .4byte gUnk_03006B84
_080AADC0:
	ldr r4, [r2]
	ldrh r0, [r4, #2]
	lsrs r0, r0, #1
	movs r1, #1
	ands r0, r1
	cmp r0, #0
	bne _080AADDE
	ldrh r0, [r4, #0xe]
	lsls r0, r0, #6
	movs r1, #0x88
	lsls r1, r1, #1
	bl __divsi3
	strh r0, [r4, #0xa]
	b _080AADF0
_080AADDE:
	ldrh r0, [r4, #0xe]
	lsls r0, r0, #6
	movs r1, #0x88
	lsls r1, r1, #1
	bl __divsi3
	movs r1, #0x40
	subs r1, r1, r0
	strh r1, [r4, #0xa]
_080AADF0:
	ldr r4, _080AAE48 @ =gUnk_03006B84
	ldr r0, [r4]
	movs r3, #0xa
	ldrsh r1, [r0, r3]
	movs r3, #0xc
	ldrsh r2, [r0, r3]
	movs r0, #1
	bl sub_08005E18
	ldr r0, [r4]
	ldrh r0, [r0, #0xe]
	cmp r0, #0xfc
	bne _080AAE26
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x14
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
_080AAE26:
	ldr r2, [r4]
	ldrh r0, [r2, #0xe]
	adds r0, #1
	strh r0, [r2, #0xe]
	lsls r0, r0, #0x10
	movs r1, #0x88
	lsls r1, r1, #0x11
	cmp r0, r1
	bhi _080AAE3A
	b _080AB194
_080AAE3A:
	movs r0, #0
	strh r0, [r2, #0xe]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	b _080AB194
	.align 2, 0
_080AAE48: .4byte gUnk_03006B84
_080AAE4C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AAE5C
	b _080AB194
_080AAE5C:
	ldr r0, _080AAE78 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrh r0, [r1, #2]
	adds r0, #2
	strh r0, [r1, #2]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x21
	bls _080AAE7C
	movs r0, #0x1e
	b _080AB192
	.align 2, 0
_080AAE78: .4byte gUnk_03006B84
_080AAE7C:
	movs r0, #0x14
	b _080AB192
_080AAE80:
	movs r0, #0
	movs r1, #0x25
	bl sub_080AB1A4
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r0, _080AAEB0 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAEB0: .4byte gUnk_03006B84
_080AAEB4:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AAEC4
	b _080AB194
_080AAEC4:
	ldr r0, _080AAED4 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAED4: .4byte gUnk_03006B84
_080AAED8:
	ldr r4, _080AAF18 @ =gUnk_03006B84
	ldr r0, [r4]
	ldrh r1, [r0, #0xe]
	adds r1, #1
	strh r1, [r0, #0xe]
	lsls r1, r1, #0x10
	movs r0, #0x87
	lsls r0, r0, #0x11
	cmp r1, r0
	bhi _080AAEEE
	b _080AB194
_080AAEEE:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAF18: .4byte gUnk_03006B84
_080AAF1C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AAF2C
	b _080AB194
_080AAF2C:
	movs r0, #0
	movs r1, #0x26
	bl sub_080AB1A4
	movs r0, #1
	movs r1, #0x27
	bl sub_080AB1A4
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r0, _080AAF64 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAF64: .4byte gUnk_03006B84
_080AAF68:
	ldr r4, _080AAFA8 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bhi _080AAF7C
	b _080AB194
_080AAF7C:
	movs r0, #0x40
	bl sub_08004840
	movs r0, #1
	bl sub_0800485C
	movs r0, #0x80
	lsls r0, r0, #2
	bl sub_08004878
	movs r0, #0x10
	bl sub_08004894
	movs r0, #0
	bl sub_080048B0
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAFA8: .4byte gUnk_03006B84
_080AAFAC:
	ldr r5, _080AAFFC @ =gUnk_03006B84
	ldr r0, [r5]
	ldrh r0, [r0, #0xe]
	movs r1, #0xa
	bl __udivsi3
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	movs r0, #0x10
	subs r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08004894
	adds r0, r4, #0
	bl sub_080048B0
	ldr r1, [r5]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x9f
	bhi _080AAFE2
	b _080AB194
_080AAFE2:
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	ldr r1, [r5]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AAFFC: .4byte gUnk_03006B84
_080AB000:
	ldr r4, _080AB03C @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bhi _080AB014
	b _080AB194
_080AB014:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x78
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB03C: .4byte gUnk_03006B84
_080AB040:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AB050
	b _080AB194
_080AB050:
	ldr r0, _080AB05C @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB05C: .4byte gUnk_03006B84
_080AB060:
	ldr r0, _080AB07C @ =gUnk_03006B84
	ldr r1, [r0]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x78
	bhi _080AB074
	b _080AB194
_080AB074:
	movs r0, #0
	strh r0, [r1, #0xe]
	movs r0, #0x64
	b _080AB192
	.align 2, 0
_080AB07C: .4byte gUnk_03006B84
_080AB080:
	movs r0, #0
	movs r1, #0x28
	bl sub_080AB1A4
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	ldr r0, _080AB0B0 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB0B0: .4byte gUnk_03006B84
_080AB0B4:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AB194
	ldr r0, _080AB0D0 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB0D0: .4byte gUnk_03006B84
_080AB0D4:
	ldr r4, _080AB110 @ =gUnk_03006B84
	ldr r1, [r4]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb4
	bls _080AB194
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x3c
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r1, [r4]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB110: .4byte gUnk_03006B84
_080AB114:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AB194
	ldr r0, _080AB130 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
	strh r0, [r1, #0xe]
	ldrb r0, [r1]
	adds r0, #1
	b _080AB192
	.align 2, 0
_080AB130: .4byte gUnk_03006B84
_080AB134:
	ldr r0, _080AB150 @ =gUnk_03006B84
	ldr r1, [r0]
	ldrh r0, [r1, #0xe]
	adds r0, #1
	strh r0, [r1, #0xe]
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x3c
	bls _080AB194
	movs r0, #0
	strh r0, [r1, #0xe]
	movs r0, #0x64
	b _080AB192
	.align 2, 0
_080AB150: .4byte gUnk_03006B84
_080AB154:
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	ldr r0, _080AB1A0 @ =gUnk_03006B84
	ldr r1, [r0]
	movs r0, #0
_080AB192:
	strb r0, [r1]
_080AB194:
	ldr r0, _080AB1A0 @ =gUnk_03006B84
	ldr r0, [r0]
	ldrb r0, [r0]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AB1A0: .4byte gUnk_03006B84

	thumb_func_start sub_080AB1A4
sub_080AB1A4: @ 0x080AB1A4
	push {r4, r5, r6, lr}
	mov r6, sl
	mov r5, sb
	mov r4, r8
	push {r4, r5, r6}
	sub sp, #0x38
	adds r6, r0, #0
	adds r4, r1, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	movs r0, #0
	movs r1, #0x1d
	bl sub_08001D3C
	mov sl, r0
	lsls r5, r4, #1
	lsls r4, r4, #0x11
	lsrs r4, r4, #0x10
	adds r1, r4, #0
	bl sub_08001D78
	ldr r4, _080AB288 @ =gUnk_02013000
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x20]
	lsls r1, r6, #0x13
	mov r8, r1
	lsrs r1, r1, #0x10
	add r2, sp, #0xc
	ldrh r2, [r2, #0xe]
	lsrs r2, r2, #4
	bl sub_08010D40
	ldr r0, [sp, #0x1c]
	lsls r2, r6, #0xf
	mov sb, r2
	movs r1, #0xc0
	lsls r1, r1, #0x13
	add r1, sb
	ldr r2, [sp, #0x10]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	adds r5, #1
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov r0, sl
	adds r1, r5, #0
	bl sub_08001D78
	lsls r4, r6, #0xd
	ldr r1, _080AB28C @ =gUnk_0200F000
	adds r4, r4, r1
	adds r1, r4, #0
	bl LZ77UnCompWram
	add r1, sp, #0x28
	adds r0, r4, #0
	bl sub_08001DC4
	lsls r2, r6, #0xa
	ldr r5, _080AB290 @ =gUnk_0200E000
	adds r2, r2, r5
	mov r0, r8
	asrs r0, r0, #0x10
	mov r8, r0
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	adds r0, r6, #0
	adds r1, r4, #0
	mov r3, r8
	bl sub_08005F14
	lsls r0, r6, #0x18
	lsrs r0, r0, #0x18
	lsls r2, r6, #0xb
	adds r2, r2, r5
	ldr r1, _080AB294 @ =0x06007800
	add sb, r1
	adds r1, r4, #0
	mov r3, sb
	bl sub_08005CF4
	cmp r6, #0
	bne _080AB298
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #0xf
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	b _080AB2C0
	.align 2, 0
_080AB288: .4byte gUnk_02013000
_080AB28C: .4byte gUnk_0200F000
_080AB290: .4byte gUnk_0200E000
_080AB294: .4byte 0x06007800
_080AB298:
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0x1f
	movs r2, #2
	bl sub_0800476C
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
_080AB2C0:
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6}
	pop {r0}
	bx r0

	thumb_func_start sub_080AB2D0
sub_080AB2D0: @ 0x080AB2D0
	ldr r1, _080AB2D8 @ =gUnk_03006B88
	movs r0, #0
	strh r0, [r1]
	bx lr
	.align 2, 0
_080AB2D8: .4byte gUnk_03006B88

	thumb_func_start sub_080AB2DC
sub_080AB2DC: @ 0x080AB2DC
	push {r4, lr}
	ldr r4, _080AB2EC @ =gUnk_03006B88
	ldrh r0, [r4]
	cmp r0, #0
	beq _080AB2F0
	cmp r0, #1
	beq _080AB310
	b _080AB31E
	.align 2, 0
_080AB2EC: .4byte gUnk_03006B88
_080AB2F0:
	bl sub_08001AFC
	adds r2, r0, #0
	cmp r2, #0
	bne _080AB31E
	ldr r1, _080AB30C @ =gUnk_03006B84
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r1]
	strb r2, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _080AB31C
	.align 2, 0
_080AB30C: .4byte gUnk_03006B84
_080AB310:
	bl sub_080AA124
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080AB31E
_080AB31C:
	strh r0, [r4]
_080AB31E:
	ldr r0, _080AB32C @ =gUnk_03006B88
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AB32C: .4byte gUnk_03006B88

	thumb_func_start sub_080AB330
sub_080AB330: @ 0x080AB330
	push {r4, lr}
	ldr r4, _080AB340 @ =gUnk_03006B88
	ldrh r2, [r4]
	cmp r2, #0
	beq _080AB344
	cmp r2, #1
	beq _080AB358
	b _080AB366
	.align 2, 0
_080AB340: .4byte gUnk_03006B88
_080AB344:
	ldr r1, _080AB354 @ =gUnk_03006B84
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r1]
	strb r2, [r0]
	ldrh r0, [r4]
	adds r0, #1
	b _080AB364
	.align 2, 0
_080AB354: .4byte gUnk_03006B84
_080AB358:
	bl sub_080A9654
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080AB366
_080AB364:
	strh r0, [r4]
_080AB366:
	ldr r0, _080AB374 @ =gUnk_03006B88
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AB374: .4byte gUnk_03006B88

	thumb_func_start sub_080AB378
sub_080AB378: @ 0x080AB378
	push {r4, r5, lr}
	ldr r5, _080AB388 @ =gUnk_03006B88
	ldrh r0, [r5]
	cmp r0, #0
	beq _080AB38C
	cmp r0, #1
	beq _080AB3B0
	b _080AB3C6
	.align 2, 0
_080AB388: .4byte gUnk_03006B88
_080AB38C:
	bl sub_08001AFC
	adds r2, r0, #0
	cmp r2, #0
	bne _080AB3C6
	ldr r1, _080AB3AC @ =gUnk_03006B84
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r1]
	strb r2, [r0]
	strh r2, [r0, #2]
	ldrh r0, [r5]
	adds r0, #1
	strh r0, [r5]
	b _080AB3C6
	.align 2, 0
_080AB3AC: .4byte gUnk_03006B84
_080AB3B0:
	bl sub_080AA374
	adds r4, r0, #0
	cmp r4, #0
	bne _080AB3C6
	bl sub_08001B08
	movs r0, #1
	bl sub_08001B14
	strh r4, [r5]
_080AB3C6:
	ldr r0, _080AB3D4 @ =gUnk_03006B88
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AB3D4: .4byte gUnk_03006B88

	thumb_func_start sub_080AB3D8
sub_080AB3D8: @ 0x080AB3D8
	push {r4, lr}
	ldr r4, _080AB3E8 @ =gUnk_03006B88
	ldrh r0, [r4]
	cmp r0, #0
	beq _080AB3EC
	cmp r0, #1
	beq _080AB40C
	b _080AB416
	.align 2, 0
_080AB3E8: .4byte gUnk_03006B88
_080AB3EC:
	bl sub_08001AFC
	adds r2, r0, #0
	cmp r2, #0
	bne _080AB416
	ldr r1, _080AB408 @ =gUnk_03006B84
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r1]
	strb r2, [r0]
	strh r2, [r0, #2]
	ldrh r0, [r4]
	adds r0, #1
	b _080AB414
	.align 2, 0
_080AB408: .4byte gUnk_03006B84
_080AB40C:
	bl sub_080AA73C
	cmp r0, #0
	bne _080AB416
_080AB414:
	strh r0, [r4]
_080AB416:
	ldr r0, _080AB424 @ =gUnk_03006B88
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AB424: .4byte gUnk_03006B88

	thumb_func_start sub_080AB428
sub_080AB428: @ 0x080AB428
	push {r4, r5, lr}
	ldr r5, _080AB438 @ =gUnk_03006B88
	ldrh r1, [r5]
	cmp r1, #0
	beq _080AB43C
	cmp r1, #1
	beq _080AB45C
	b _080AB466
	.align 2, 0
_080AB438: .4byte gUnk_03006B88
_080AB43C:
	ldr r4, _080AB458 @ =gUnk_03006B84
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r4]
	strb r1, [r0]
	strh r1, [r0, #2]
	bl sub_08012578
	ldr r1, [r4]
	strb r0, [r1, #1]
	ldrh r0, [r5]
	adds r0, #1
	b _080AB464
	.align 2, 0
_080AB458: .4byte gUnk_03006B84
_080AB45C:
	bl sub_080AA904
	cmp r0, #0
	bne _080AB466
_080AB464:
	strh r0, [r5]
_080AB466:
	ldr r0, _080AB474 @ =gUnk_03006B88
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AB474: .4byte gUnk_03006B88

	thumb_func_start sub_080AB478
sub_080AB478: @ 0x080AB478
	push {r4, lr}
	movs r4, #0xc3
	lsls r4, r4, #1
	adds r0, r4, #0
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	ble _080AB494
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
_080AB494:
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08012F0C
	movs r0, #0
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AB4A8
sub_080AB4A8: @ 0x080AB4A8
	push {r4, r5, lr}
	ldrb r4, [r1, #5]
	lsls r4, r4, #4
	ldrb r3, [r1, #6]
	lsls r3, r3, #8
	adds r4, r4, r3
	ldrb r3, [r1, #8]
	lsls r3, r3, #0xc
	adds r4, r4, r3
	ldrb r3, [r1, #9]
	lsls r3, r3, #0x10
	adds r5, r4, r3
	ldrb r4, [r1, #0xb]
	lsls r4, r4, #4
	ldrb r3, [r1, #0xc]
	lsls r3, r3, #8
	adds r4, r4, r3
	ldrb r3, [r1, #0xe]
	lsls r3, r3, #0xc
	adds r4, r4, r3
	ldrb r1, [r1, #0xf]
	lsls r1, r1, #0x10
	adds r4, r4, r1
	adds r4, r5, r4
	ldrb r1, [r0]
	adds r5, r4, r1
	ldrb r1, [r0, #1]
	lsls r1, r1, #1
	adds r5, r5, r1
	ldrb r1, [r0, #2]
	lsls r1, r1, #2
	adds r5, r5, r1
	ldrb r1, [r0, #3]
	lsls r1, r1, #3
	adds r5, r5, r1
	ldrb r1, [r0, #4]
	lsls r1, r1, #4
	adds r5, r5, r1
	ldrb r1, [r0, #5]
	lsls r1, r1, #5
	adds r5, r5, r1
	ldrb r1, [r0, #6]
	lsls r1, r1, #6
	adds r5, r5, r1
	ldrb r1, [r0, #7]
	lsls r1, r1, #7
	adds r5, r5, r1
	ldrb r1, [r0, #8]
	lsls r1, r1, #8
	adds r5, r5, r1
	ldrb r0, [r0, #9]
	lsls r0, r0, #9
	adds r5, r5, r0
	adds r5, r5, r2
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080AB51C
sub_080AB51C: @ 0x080AB51C
	push {r4, r5, r6, lr}
	movs r4, #0
	movs r5, #0
	ldr r6, _080AB538 @ =gUnk_08BD9FB4
	adds r3, r0, #0
_080AB526:
	adds r0, r5, r6
	ldrb r2, [r0]
	cmp r2, #0x39
	bgt _080AB53C
	cmp r2, #0x30
	bge _080AB552
	cmp r2, #0x20
	beq _080AB55E
	b _080AB568
	.align 2, 0
_080AB538: .4byte gUnk_08BD9FB4
_080AB53C:
	cmp r2, #0x5a
	bgt _080AB568
	cmp r2, #0x41
	blt _080AB568
	ldrb r0, [r3]
	subs r0, #0xa
	adds r1, r2, #0
	subs r1, #0x41
	cmp r0, r1
	beq _080AB568
	b _080AB564
_080AB552:
	ldrb r1, [r3]
	adds r0, r2, #0
	subs r0, #0x30
	cmp r1, r0
	beq _080AB568
	b _080AB564
_080AB55E:
	ldrb r0, [r3]
	cmp r0, #0x25
	beq _080AB568
_080AB564:
	movs r4, #1
	rsbs r4, r4, #0
_080AB568:
	adds r0, r5, #1
	adds r0, r0, r6
	ldrb r2, [r0]
	cmp r2, #0x39
	bgt _080AB57C
	cmp r2, #0x30
	bge _080AB592
	cmp r2, #0x20
	beq _080AB59E
	b _080AB5A8
_080AB57C:
	cmp r2, #0x5a
	bgt _080AB5A8
	cmp r2, #0x41
	blt _080AB5A8
	ldrb r0, [r3, #1]
	subs r0, #0xa
	adds r1, r2, #0
	subs r1, #0x41
	cmp r0, r1
	beq _080AB5A8
	b _080AB5A4
_080AB592:
	ldrb r1, [r3, #1]
	adds r0, r2, #0
	subs r0, #0x30
	cmp r1, r0
	beq _080AB5A8
	b _080AB5A4
_080AB59E:
	ldrb r0, [r3, #1]
	cmp r0, #0x25
	beq _080AB5A8
_080AB5A4:
	movs r4, #1
	rsbs r4, r4, #0
_080AB5A8:
	adds r3, #2
	adds r5, #2
	cmp r5, #3
	bls _080AB526
	adds r0, r4, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080AB5B8
sub_080AB5B8: @ 0x080AB5B8
	push {r4, r5, r6, lr}
	sub sp, #4
	ldr r6, _080AB670 @ =gUnk_03006B90
	movs r0, #0xc0
	lsls r0, r0, #0x12
	str r0, [r6]
	ldr r4, _080AB674 @ =gUnk_02003200
	movs r5, #0
	str r5, [sp]
	ldr r2, _080AB678 @ =0x05000400
	mov r0, sp
	adds r1, r4, #0
	bl CpuSet
	ldr r1, [r6]
	movs r2, #0xdb
	lsls r2, r2, #2
	adds r0, r1, r2
	str r4, [r0]
	adds r4, #0x3c
	ldr r3, _080AB67C @ =0x000006FC
	adds r0, r1, r3
	str r4, [r0]
	adds r4, #0x3c
	movs r2, #0xca
	lsls r2, r2, #1
	adds r0, r1, r2
	str r4, [r0]
	adds r4, #0x4c
	ldr r3, _080AB680 @ =0x00000524
	adds r1, r1, r3
	str r4, [r1]
	movs r0, #0xd0
	lsls r0, r0, #1
	movs r1, #6
	bl sub_08012F0C
	ldr r0, [r6]
	movs r4, #0
	strh r5, [r0]
	strh r5, [r0, #2]
	movs r1, #1
	strh r1, [r0, #4]
	ldr r2, _080AB684 @ =0x0000113C
	adds r1, r0, r2
	strh r5, [r1]
	ldr r3, _080AB688 @ =0x0000113E
	adds r1, r0, r3
	strh r5, [r1]
	adds r2, #8
	adds r1, r0, r2
	strh r5, [r1]
	adds r3, #2
	adds r1, r0, r3
	strh r5, [r1]
	ldr r1, _080AB68C @ =0x00001142
	adds r0, r0, r1
	strh r5, [r0]
	movs r0, #0xc
	bl sub_08012F60
	ldr r1, [r6]
	ldr r3, _080AB690 @ =0x00001146
	adds r2, r1, r3
	strh r0, [r2]
	movs r0, #0xe1
	lsls r0, r0, #4
	str r0, [r1, #8]
	str r5, [r1, #0xc]
	ldr r2, _080AB694 @ =0x00000BB8
	adds r0, r1, r2
	strh r5, [r0]
	ldr r3, _080AB698 @ =0x00000BBA
	adds r1, r1, r3
	strb r4, [r1]
	ldr r0, [r6]
	adds r2, #4
	adds r1, r0, r2
	str r5, [r1]
	adds r3, #1
	adds r0, r0, r3
	strb r4, [r0]
	ldr r0, [r6]
	strb r4, [r0, #6]
	ldr r0, [r6]
	strb r4, [r0, #7]
	movs r0, #0
	add sp, #4
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080AB670: .4byte gUnk_03006B90
_080AB674: .4byte gUnk_02003200
_080AB678: .4byte 0x05000400
_080AB67C: .4byte 0x000006FC
_080AB680: .4byte 0x00000524
_080AB684: .4byte 0x0000113C
_080AB688: .4byte 0x0000113E
_080AB68C: .4byte 0x00001142
_080AB690: .4byte 0x00001146
_080AB694: .4byte 0x00000BB8
_080AB698: .4byte 0x00000BBA

	thumb_func_start sub_080AB69C
sub_080AB69C: @ 0x080AB69C
	push {lr}
	ldr r0, _080AB6B4 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0]
	cmp r0, #4
	bls _080AB6AA
	b _080AB7A0
_080AB6AA:
	lsls r0, r0, #2
	ldr r1, _080AB6B8 @ =_080AB6BC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AB6B4: .4byte gUnk_03006B90
_080AB6B8: .4byte _080AB6BC
_080AB6BC: @ jump table
	.4byte _080AB6D0 @ case 0
	.4byte _080AB738 @ case 1
	.4byte _080AB750 @ case 2
	.4byte _080AB77C @ case 3
	.4byte _080AB794 @ case 4
_080AB6D0:
	movs r1, #0x80
	lsls r1, r1, #1
	movs r0, #0x1e
	bl sub_08014544
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	movs r1, #0
	bl sub_080047C4
	movs r0, #1
	movs r1, #0
	bl sub_080047C4
	movs r0, #2
	movs r1, #0
	bl sub_080047C4
	movs r0, #3
	movs r1, #0
	bl sub_080047C4
	movs r0, #0
	movs r1, #0
	bl sub_080047E8
	movs r0, #0
	movs r1, #0
	bl sub_08004828
	ldr r0, _080AB734 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1]
	adds r0, #1
	b _080AB79E
	.align 2, 0
_080AB734: .4byte gUnk_03006B90
_080AB738:
	bl sub_080AC80C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AB7A0
	ldr r0, _080AB74C @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1]
	adds r0, #1
	b _080AB79E
	.align 2, 0
_080AB74C: .4byte gUnk_03006B90
_080AB750:
	bl sub_080AB7B0
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	bl sub_08006CA4
	ldr r0, _080AB778 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1]
	adds r0, #1
	b _080AB79E
	.align 2, 0
_080AB778: .4byte gUnk_03006B90
_080AB77C:
	bl sub_080ABF34
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AB7A0
	ldr r0, _080AB790 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1]
	adds r0, #1
	b _080AB79E
	.align 2, 0
_080AB790: .4byte gUnk_03006B90
_080AB794:
	bl sub_080AB940
	ldr r0, _080AB7AC @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0
_080AB79E:
	strh r0, [r1]
_080AB7A0:
	ldr r0, _080AB7AC @ =gUnk_03006B90
	ldr r0, [r0]
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r1}
	bx r1
	.align 2, 0
_080AB7AC: .4byte gUnk_03006B90

	thumb_func_start sub_080AB7B0
sub_080AB7B0: @ 0x080AB7B0
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	ldr r5, _080AB924 @ =gUnk_03006B90
	ldr r0, [r5]
	ldr r1, _080AB928 @ =0x000007D4
	mov r8, r1
	add r0, r8
	movs r6, #0
	strb r6, [r0]
	bl sub_08026B1C
	bl sub_080ABB40
	bl sub_080ADAAC
	bl sub_080AF334
	bl sub_080AF3CC
	bl sub_080AC9AC
	ldr r0, [r5]
	movs r4, #0xfa
	lsls r4, r4, #3
	adds r0, r0, r4
	bl sub_08031360
	ldr r0, [r5]
	movs r2, #0x8e
	lsls r2, r2, #5
	adds r0, r0, r2
	bl sub_08034D28
	ldr r0, [r5]
	ldr r1, _080AB92C @ =0x00001270
	adds r0, r0, r1
	bl sub_0803D764
	ldr r0, [r5]
	ldr r2, _080AB930 @ =0x000012F2
	adds r0, r0, r2
	strb r6, [r0]
	ldr r0, [r5]
	ldr r1, _080AB934 @ =0x000012F3
	adds r0, r0, r1
	strb r6, [r0]
	ldr r0, [r5]
	subs r2, #2
	adds r1, r0, r2
	strh r6, [r1]
	adds r4, r0, r4
	add r0, r8
	ldrb r1, [r0]
	adds r0, r4, #0
	bl sub_08031420
	ldr r0, [r5]
	movs r1, #0xa7
	lsls r1, r1, #4
	adds r0, r0, r1
	strh r6, [r0]
	bl sub_08034FB8
	bl sub_080ACD1C
	ldr r4, [r5]
	adds r4, #0x10
	movs r0, #0x60
	bl sub_08012F60
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0
	bl sub_0803E48C
	ldr r4, [r5]
	movs r6, #0xe8
	lsls r6, r6, #2
	adds r4, r4, r6
	movs r0, #0x61
	bl sub_08012F60
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #1
	bl sub_0803E48C
	ldr r0, [r5]
	adds r0, #0x10
	movs r1, #0
	bl sub_080AF364
	ldr r0, [r5]
	adds r0, r0, r6
	movs r1, #1
	bl sub_080AF364
	ldr r0, [r5]
	adds r0, #0x10
	movs r1, #0
	bl sub_080ABBF0
	ldr r0, [r5]
	adds r0, #0x10
	bl sub_080493B0
	ldr r0, [r5]
	adds r0, r0, r6
	movs r1, #1
	bl sub_080ABBF0
	ldr r0, [r5]
	adds r0, r0, r6
	bl sub_080493B0
	ldr r0, [r5]
	movs r1, #0xcc
	lsls r1, r1, #1
	adds r2, r0, r1
	movs r1, #0x80
	lsls r1, r1, #7
	str r1, [r2]
	movs r2, #0xce
	lsls r2, r2, #1
	adds r1, r0, r2
	movs r3, #0x98
	lsls r3, r3, #8
	str r3, [r1]
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r2, r0, r1
	movs r1, #0xe8
	lsls r1, r1, #8
	str r1, [r2]
	ldr r2, _080AB938 @ =0x0000052C
	adds r1, r0, r2
	str r3, [r1]
	movs r1, #0xc7
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r1, #0
	movs r2, #1
	bl sub_0800A680
	ldr r0, [r5]
	ldr r2, _080AB93C @ =0x000006AC
	adds r0, r0, r2
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	ldr r0, [r5]
	adds r0, #0x10
	movs r1, #0
	bl sub_080403A8
	ldr r0, [r5]
	adds r0, r0, r6
	movs r1, #0
	bl sub_080403A8
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xa
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080AB924: .4byte gUnk_03006B90
_080AB928: .4byte 0x000007D4
_080AB92C: .4byte 0x00001270
_080AB930: .4byte 0x000012F2
_080AB934: .4byte 0x000012F3
_080AB938: .4byte 0x0000052C
_080AB93C: .4byte 0x000006AC

	thumb_func_start sub_080AB940
sub_080AB940: @ 0x080AB940
	push {r4, r5, r6, lr}
	ldr r4, _080ABA48 @ =gUnk_03006B90
	ldr r0, [r4]
	ldr r2, _080ABA4C @ =0x00000BB8
	adds r1, r0, r2
	ldrh r0, [r1]
	cmp r0, #0
	beq _080AB95A
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #2
	bl sub_0800B57C
_080AB95A:
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0801145C
	movs r0, #1
	bl sub_0801145C
	bl sub_08006FF0
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004840
	movs r0, #0
	bl sub_0800485C
	movs r0, #0
	bl sub_08004878
	movs r0, #0
	bl sub_08004554
	ldr r0, [r4]
	ldr r5, _080ABA50 @ =0x0000113C
	adds r2, r0, r5
	ldr r1, _080ABA54 @ =0x00001146
	adds r0, r0, r1
	ldrh r1, [r2]
	ldrh r0, [r0]
	cmp r1, r0
	bls _080AB9DE
	movs r0, #0xc
	bl sub_08012F0C
_080AB9DE:
	ldr r0, [r4]
	adds r0, r0, r5
	ldrh r1, [r0]
	movs r0, #0x6d
	bl sub_08012F0C
	ldr r2, [r4]
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r2, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r2, r0
	movs r1, #0x8c
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	cmp r0, #0xf6
	beq _080ABA40
	adds r4, r2, #0
	adds r4, #0xd4
	movs r0, #0xc4
	lsls r0, r0, #1
	adds r6, r2, r0
	ldrb r0, [r6]
	bl GetEquipWeapon
	adds r5, r0, #0
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldrb r1, [r6]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r4, r4, r0
	adds r4, #0x50
	movs r1, #0
	ldrsh r0, [r4, r1]
	movs r1, #0x64
	bl __divsi3
	adds r1, r0, #0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl SetBagWeaponTec
_080ABA40:
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080ABA48: .4byte gUnk_03006B90
_080ABA4C: .4byte 0x00000BB8
_080ABA50: .4byte 0x0000113C
_080ABA54: .4byte 0x00001146

	thumb_func_start sub_080ABA58
sub_080ABA58: @ 0x080ABA58
	push {r4, r5, r6, r7, lr}
	sub sp, #0x30
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	adds r7, r6, #0
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	adds r5, r0, #0
	adds r1, r6, #0
	bl sub_08001D78
	adds r4, r0, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x19
	bl sub_08010D40
	ldr r2, _080ABAC0 @ =0x06013600
	movs r0, #3
	mov r1, sp
	adds r3, r4, #0
	bl sub_08009334
	adds r1, r6, #1
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r5, #0
	bl sub_08001D78
	adds r4, r0, #0
	add r1, sp, #0x1c
	bl sub_08001D98
	movs r0, #3
	movs r1, #3
	adds r2, r4, #0
	bl sub_0800A630
	cmp r6, #0x10
	beq _080ABACE
	cmp r6, #0x10
	bgt _080ABAC4
	cmp r6, #0xc
	beq _080ABACE
	b _080ABADA
	.align 2, 0
_080ABAC0: .4byte 0x06013600
_080ABAC4:
	cmp r7, #0x14
	beq _080ABACE
	cmp r7, #0x18
	beq _080ABAD4
	b _080ABADA
_080ABACE:
	movs r7, #0x78
	movs r6, #0x3c
	b _080ABADE
_080ABAD4:
	movs r7, #0x4c
	movs r6, #0x2c
	b _080ABADE
_080ABADA:
	movs r7, #0
	movs r6, #0
_080ABADE:
	ldr r5, _080ABB34 @ =gUnk_03006B90
	ldr r0, [r5]
	ldr r4, _080ABB38 @ =0x00001148
	adds r0, r0, r4
	bl sub_08009F0C
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #3
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	ldr r0, [r5]
	adds r0, r0, r4
	adds r1, r7, #0
	adds r2, r6, #0
	bl sub_0800A678
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #9
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r0, [r5]
	adds r0, r0, r4
	ldr r2, _080ABB3C @ =0x06013600
	movs r3, #0xa0
	lsls r3, r3, #5
	movs r1, #1
	bl sub_0800A6F0
	add sp, #0x30
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080ABB34: .4byte gUnk_03006B90
_080ABB38: .4byte 0x00001148
_080ABB3C: .4byte 0x06013600

	thumb_func_start sub_080ABB40
sub_080ABB40: @ 0x080ABB40
	push {r4, r5, lr}
	sub sp, #0x30
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	adds r5, r0, #0
	movs r1, #0x20
	bl sub_08001D78
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x10]
	ldr r4, _080ABBE8 @ =0x06010000
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	adds r1, r4, #0
	bl CpuFastSet
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x10
	bl sub_08010D40
	movs r0, #0
	mov r1, sp
	adds r2, r4, #0
	movs r3, #0
	bl sub_08009334
	adds r0, r5, #0
	movs r1, #0x21
	bl sub_08001D78
	adds r4, r0, #0
	add r1, sp, #0x1c
	bl sub_08001D98
	movs r0, #0
	movs r1, #0
	adds r2, r4, #0
	bl sub_0800A630
	ldr r5, _080ABBEC @ =gUnk_03006B90
	ldr r0, [r5]
	movs r4, #0xbc
	lsls r4, r4, #4
	adds r0, r0, r4
	bl sub_08009F0C
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	movs r2, #0xf
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0x46
	movs r2, #0x80
	bl sub_0800A678
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [r5]
	adds r0, r0, r4
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	add sp, #0x30
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080ABBE8: .4byte 0x06010000
_080ABBEC: .4byte gUnk_03006B90

	thumb_func_start sub_080ABBF0
sub_080ABBF0: @ 0x080ABBF0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x44
	adds r7, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	str r1, [sp, #0x30]
	ldrh r0, [r7]
	bl sub_08048E50
	mov r8, r0
	ldr r1, [sp, #0x30]
	adds r1, #1
	ldr r2, _080ABEFC @ =0x00000389
	adds r0, r7, r2
	strb r1, [r0]
	ldr r3, _080ABF00 @ =0x0000038A
	adds r0, r7, r3
	strb r1, [r0]
	mov r4, r8
	ldrb r0, [r4, #7]
	add r1, sp, #0x20
	add r2, sp, #0x24
	add r3, sp, #0x28
	add r4, sp, #0x2c
	str r4, [sp]
	bl sub_08048E6C
	movs r0, #0xdf
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r2, [sp, #0x20]
	ldr r3, [sp, #0x30]
	adds r0, r3, #0
	muls r0, r2, r0
	ldr r4, _080ABF04 @ =0x06011400
	adds r0, r0, r4
	str r0, [r1]
	mov r1, r8
	ldrb r0, [r1, #0x1c]
	cmp r0, #0
	beq _080ABC5A
	cmp r0, #0xff
	beq _080ABC5A
	adds r1, r0, #0
	mov r3, r8
	ldrh r0, [r3, #0x1a]
	muls r0, r1, r0
	subs r0, r2, r0
	str r0, [sp, #0x20]
_080ABC5A:
	ldr r0, [sp, #0x20]
	movs r4, #0xe1
	lsls r4, r4, #2
	adds r4, r7, r4
	str r4, [sp, #0x38]
	strh r0, [r4]
	ldr r1, [sp, #0x28]
	ldr r2, [sp, #0x30]
	adds r0, r1, #0
	muls r0, r2, r0
	adds r0, #3
	ldr r3, _080ABF08 @ =0x00000386
	adds r3, r3, r7
	mov sl, r3
	strb r0, [r3]
	ldr r4, _080ABF0C @ =0x00000387
	adds r4, r4, r7
	mov sb, r4
	strb r1, [r4]
	mov r1, r8
	ldrb r0, [r1, #8]
	movs r2, #0xe2
	lsls r2, r2, #2
	adds r4, r7, r2
	strb r0, [r4]
	movs r3, #0xe0
	lsls r3, r3, #2
	adds r1, r7, r3
	ldr r0, _080ABF10 @ =gUnk_02009800
	str r0, [r1]
	movs r0, #0
	movs r1, #0x10
	bl sub_08001D3C
	mov r2, r8
	ldrh r1, [r2]
	bl sub_08001D78
	adds r1, r0, #0
	movs r3, #0xdc
	lsls r3, r3, #2
	adds r5, r7, r3
	str r1, [r5]
	movs r0, #0
	movs r1, #0x11
	bl sub_08001D3C
	mov r2, r8
	ldrh r1, [r2, #2]
	bl sub_08001D78
	adds r1, r0, #0
	movs r3, #0xdd
	lsls r3, r3, #2
	adds r6, r7, r3
	str r1, [r6]
	movs r0, #0
	movs r1, #0x12
	bl sub_08001D3C
	mov r2, r8
	ldrh r1, [r2, #4]
	bl sub_08001D78
	adds r1, r0, #0
	movs r3, #0xde
	lsls r3, r3, #2
	adds r0, r7, r3
	str r1, [r0]
	ldr r0, [r5]
	add r1, sp, #4
	bl sub_08001CBC
	ldrb r1, [r4]
	lsls r1, r1, #5
	ldr r0, [sp, #0x18]
	adds r0, r0, r1
	mov r4, sl
	ldrb r1, [r4]
	adds r1, #0x10
	mov r3, sb
	ldrb r2, [r3]
	bl sub_08010D40
	ldr r0, _080ABEFC @ =0x00000389
	adds r4, r7, r0
	ldrb r0, [r4]
	movs r1, #0xdf
	lsls r1, r1, #2
	adds r1, r1, r7
	mov r8, r1
	ldr r2, [r1]
	ldr r3, [r5]
	add r1, sp, #4
	bl sub_08009334
	ldr r2, _080ABF00 @ =0x0000038A
	adds r5, r7, r2
	ldrb r0, [r5]
	ldrb r1, [r4]
	ldr r2, [r6]
	bl sub_0800A630
	ldr r3, [sp, #0x30]
	cmp r3, #0
	bne _080ABD36
	ldr r4, _080ABF14 @ =0x0000038B
	adds r1, r7, r4
	movs r0, #3
	strb r0, [r1]
_080ABD36:
	movs r0, #0xc3
	lsls r0, r0, #2
	adds r4, r7, r0
	ldrb r1, [r5]
	adds r0, r4, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	mov r2, sl
	ldrb r1, [r2]
	mov r3, sb
	ldrb r2, [r3]
	adds r0, r4, #0
	bl sub_0800A6C0
	mov r0, r8
	ldr r2, [r0]
	ldr r3, [sp, #0x20]
	lsls r3, r3, #0x10
	lsrs r3, r3, #0x10
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	ldr r1, _080ABF14 @ =0x0000038B
	adds r0, r7, r1
	ldrb r1, [r0]
	adds r0, r4, #0
	movs r2, #2
	bl sub_0800A6C4
	ldr r1, [sp, #0x30]
	adds r1, #1
	ldr r2, _080ABF18 @ =0x0000038E
	adds r0, r7, r2
	strb r1, [r0]
	ldr r1, [sp, #0x30]
	adds r1, #2
	ldr r3, _080ABF1C @ =0x0000038F
	adds r0, r7, r3
	strb r1, [r0]
	ldr r4, [sp, #0x30]
	cmp r4, #0
	beq _080ABD92
	b _080ABEEC
_080ABD92:
	movs r1, #0xd8
	lsls r1, r1, #2
	adds r0, r7, r1
	movs r2, #0
	strb r2, [r0]
	subs r3, #0x2e
	adds r0, r7, r3
	strb r2, [r0]
	ldr r4, _080ABF20 @ =0x00000363
	adds r3, r7, r4
	movs r0, #0xf
	strb r0, [r3]
	movs r0, #0xda
	lsls r0, r0, #2
	adds r2, r7, r0
	ldr r4, [sp, #0x38]
	ldrh r1, [r4]
	mov r4, r8
	ldr r0, [r4]
	adds r0, r0, r1
	str r0, [r2]
	movs r0, #0xd9
	lsls r0, r0, #2
	adds r2, r7, r0
	movs r0, #0x40
	strb r0, [r2]
	ldr r4, _080ABF24 @ =0x00000365
	adds r1, r7, r4
	movs r0, #0x80
	strb r0, [r1]
	ldr r1, _080ABF28 @ =0x00000366
	adds r0, r7, r1
	mov r4, sp
	ldrh r4, [r4, #0x30]
	strh r4, [r0]
	ldrb r0, [r3]
	movs r1, #0
	bl sub_08009364
	movs r0, #0xdb
	lsls r0, r0, #2
	adds r1, r7, r0
	ldr r0, _080ABF2C @ =gUnk_03006B90
	ldr r0, [r0]
	movs r2, #0xe6
	lsls r2, r2, #3
	adds r0, r0, r2
	str r0, [r1]
	movs r3, #0
	str r3, [sp, #0x34]
	movs r4, #0xdb
	lsls r4, r4, #2
	adds r4, r7, r4
	str r4, [sp, #0x3c]
	mov sl, r3
	movs r0, #0xdf
	lsls r0, r0, #2
	adds r0, r7, r0
	str r0, [sp, #0x40]
_080ABE08:
	ldr r1, [sp, #0x3c]
	ldr r5, [r1]
	add r5, sl
	movs r2, #0
	mov sb, r2
	mov r3, sb
	strb r3, [r5]
	movs r4, #0xe1
	lsls r4, r4, #2
	adds r4, r4, r7
	mov r8, r4
	ldrh r0, [r4]
	ldr r1, [sp, #0x40]
	ldr r4, [r1]
	adds r4, r4, r0
	ldr r2, _080ABF30 @ =0xF9FF0000
	adds r4, r4, r2
	lsrs r4, r4, #5
	adds r5, #0x18
	adds r0, r5, #0
	bl CpuClear16Bytes
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800944C
	ldr r3, _080ABF08 @ =0x00000386
	adds r6, r7, r3
	ldrb r1, [r6]
	adds r0, r5, #0
	bl sub_08009448
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r1, r7, r2
	adds r2, r4, #0
	bl sub_08009434
	mov r0, sl
	adds r0, #0x28
	ldr r3, [sp, #0x3c]
	ldr r5, [r3]
	adds r5, r5, r0
	mov r4, sb
	strb r4, [r5]
	mov r1, r8
	ldrh r0, [r1]
	ldr r2, [sp, #0x40]
	ldr r4, [r2]
	adds r4, r4, r0
	ldr r3, _080ABF30 @ =0xF9FF0000
	adds r4, r4, r3
	lsrs r4, r4, #5
	adds r5, #0x18
	adds r0, r5, #0
	bl CpuClear16Bytes
	adds r0, r5, #0
	movs r1, #2
	movs r2, #2
	bl sub_0800944C
	ldrb r1, [r6]
	adds r0, r5, #0
	bl sub_08009448
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r5, #0
	movs r2, #0xd9
	lsls r2, r2, #2
	adds r1, r7, r2
	adds r2, r4, #0
	bl sub_08009434
	movs r3, #0x50
	add sl, r3
	ldr r4, [sp, #0x34]
	adds r4, #2
	str r4, [sp, #0x34]
	cmp r4, #3
	bls _080ABE08
	ldr r0, [sp, #0x30]
	cmp r0, #0
	bne _080ABEEC
	movs r1, #0xbc
	lsls r1, r1, #1
	adds r0, r7, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r7, r0
	movs r2, #0x84
	lsls r2, r2, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	adds r0, r7, #0
	bl sub_08045574
	movs r3, #0xc3
	lsls r3, r3, #2
	adds r0, r7, r3
	movs r4, #0xe0
	lsls r4, r4, #2
	adds r1, r7, r4
	ldr r2, [r1]
	movs r1, #0
	bl sub_0800A770
_080ABEEC:
	add sp, #0x44
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080ABEFC: .4byte 0x00000389
_080ABF00: .4byte 0x0000038A
_080ABF04: .4byte 0x06011400
_080ABF08: .4byte 0x00000386
_080ABF0C: .4byte 0x00000387
_080ABF10: .4byte gUnk_02009800
_080ABF14: .4byte 0x0000038B
_080ABF18: .4byte 0x0000038E
_080ABF1C: .4byte 0x0000038F
_080ABF20: .4byte 0x00000363
_080ABF24: .4byte 0x00000365
_080ABF28: .4byte 0x00000366
_080ABF2C: .4byte gUnk_03006B90
_080ABF30: .4byte 0xF9FF0000

	thumb_func_start sub_080ABF34
sub_080ABF34: @ 0x080ABF34
	push {r4, r5, r6, r7, lr}
	movs r7, #1
	ldr r5, _080ABF84 @ =gUnk_03006B90
	ldr r1, [r5]
	movs r2, #0xfa
	lsls r2, r2, #3
	adds r0, r1, r2
	adds r2, #0xa
	adds r1, r1, r2
	ldrh r2, [r1]
	movs r1, #0x98
	subs r1, r1, r2
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl sub_08034C24
	ldr r1, [r5]
	ldr r2, _080ABF88 @ =0x000007D6
	adds r1, r1, r2
	strh r0, [r1]
	bl sub_080AF514
	ldr r2, [r5]
	ldrh r0, [r2, #4]
	cmp r0, #3
	bne _080ABFA8
	ldr r0, _080ABF8C @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080ABF90
	movs r0, #0x80
	lsls r0, r0, #1
	bl sub_0801444C
	ldr r1, [r5]
	movs r0, #2
	strh r0, [r1, #4]
	b _080AC0D4
	.align 2, 0
_080ABF84: .4byte gUnk_03006B90
_080ABF88: .4byte 0x000007D6
_080ABF8C: .4byte gKeyNewPress
_080ABF90:
	ldr r4, _080ABFA4 @ =0x00001148
	adds r0, r2, r4
	bl sub_08009FF8
	ldr r0, [r5]
	adds r0, r0, r4
	bl sub_0800A778
	b _080AC0D4
	.align 2, 0
_080ABFA4: .4byte 0x00001148
_080ABFA8:
	cmp r0, #2
	bne _080AC090
	ldr r0, _080ABFC8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080ABFCC
	movs r0, #0x40
	bl sub_0801444C
	ldr r1, [r5]
	movs r0, #3
	strh r0, [r1, #4]
	b _080AC082
	.align 2, 0
_080ABFC8: .4byte gKeyNewPress
_080ABFCC:
	ldr r0, [r2, #0xc]
	adds r0, #1
	str r0, [r2, #0xc]
	ldr r0, [r2, #8]
	cmp r0, #0
	beq _080ABFE0
	subs r0, #1
	str r0, [r2, #8]
	cmp r0, #0
	bne _080AC014
_080ABFE0:
	bl sub_080AF4AC
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0x14
	bne _080AC014
	ldr r0, [r5]
	adds r0, #0x10
	movs r1, #0
	bl sub_080412D8
	ldr r1, [r5]
	adds r0, r1, #0
	adds r0, #0x10
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r1, r1, r2
	bl sub_080AC5C4
	ldr r1, [r5]
	ldr r0, [r1, #0x18]
	cmp r0, #0
	bne _080AC05A
	movs r0, #4
	strh r0, [r1, #4]
	b _080AC05A
_080AC014:
	ldr r6, _080AC088 @ =gUnk_03006B90
	ldr r0, [r6]
	adds r0, #0x10
	ldr r1, _080AC08C @ =gKeyHeld
	ldrh r1, [r1]
	bl sub_080412D8
	ldr r1, [r6]
	adds r0, r1, #0
	adds r0, #0x10
	movs r2, #0x8c
	lsls r2, r2, #2
	adds r1, r1, r2
	bl sub_080AC5C4
	ldr r4, [r6]
	movs r5, #0xe8
	lsls r5, r5, #2
	adds r4, r4, r5
	bl sub_080AD194
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_080412D8
	ldr r1, [r6]
	adds r5, r1, r5
	movs r0, #0xb8
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r0, r5, #0
	bl sub_080AC5C4
_080AC05A:
	bl sub_080ACA78
	ldr r3, _080AC088 @ =gUnk_03006B90
	ldr r0, [r3]
	movs r2, #0xcc
	lsls r2, r2, #1
	adds r1, r0, r2
	ldr r0, [r1]
	movs r2, #0x98
	lsls r2, r2, #8
	cmp r0, r2
	ble _080AC074
	str r2, [r1]
_080AC074:
	ldr r0, [r3]
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r1, #0xe8
	lsls r1, r1, #8
	str r1, [r0]
_080AC082:
	bl sub_080AC30C
	b _080AC0D4
	.align 2, 0
_080AC088: .4byte gUnk_03006B90
_080AC08C: .4byte gKeyHeld
_080AC090:
	cmp r0, #1
	bne _080AC0BC
	bl sub_080AC0F8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AC0AE
	ldr r1, [r5]
	movs r0, #2
	strh r0, [r1, #4]
	ldr r0, _080AC0B8 @ =gUnk_08BDA0C0
	ldr r0, [r0]
	movs r1, #2
	bl sub_080AF46C
_080AC0AE:
	bl sub_080AC30C
	bl sub_080ACA78
	b _080AC0D4
	.align 2, 0
_080AC0B8: .4byte gUnk_08BDA0C0
_080AC0BC:
	cmp r0, #4
	bne _080AC0D4
	bl sub_080AC1FC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AC0CC
	movs r7, #0
_080AC0CC:
	bl sub_080AC30C
	bl sub_080ACA78
_080AC0D4:
	bl sub_080AC3C8
	bl sub_080AD10C
	ldr r0, _080AC0F4 @ =gUnk_02007000
	movs r1, #0xc0
	lsls r1, r1, #0x13
	movs r2, #0xa0
	lsls r2, r2, #3
	bl sub_08006BA4
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AC0F4: .4byte gUnk_02007000

	thumb_func_start sub_080AC0F8
sub_080AC0F8: @ 0x080AC0F8
	push {r4, r5, lr}
	sub sp, #0xc
	ldr r5, _080AC110 @ =gUnk_03006B90
	ldr r0, [r5]
	ldrh r1, [r0, #2]
	cmp r1, #1
	beq _080AC138
	cmp r1, #1
	bgt _080AC114
	cmp r1, #0
	beq _080AC11E
	b _080AC1E8
	.align 2, 0
_080AC110: .4byte gUnk_03006B90
_080AC114:
	cmp r1, #2
	beq _080AC1B0
	cmp r1, #3
	beq _080AC1DC
	b _080AC1E8
_080AC11E:
	movs r1, #0xfa
	lsls r1, r1, #3
	adds r0, r0, r1
	movs r1, #2
	bl sub_08034C84
	movs r0, #0xc
	bl sub_080ABA58
	ldr r1, [r5]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
_080AC138:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, #1
	bne _080AC1E8
	movs r0, #0
	bl sub_08011104
	movs r0, #0x88
	lsls r0, r0, #1
	movs r5, #0
	str r5, [sp]
	str r5, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r0, #0xc1
	lsls r0, r0, #1
	bl sub_08012F60
	cmp r0, #0
	bne _080AC188
	ldr r0, _080AC184 @ =0x000005C9
	str r5, [sp]
	str r4, [sp, #4]
	movs r1, #0x80
	lsls r1, r1, #1
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #0x3c
	movs r3, #0
	bl sub_080137C0
	b _080AC1A0
	.align 2, 0
_080AC184: .4byte 0x000005C9
_080AC188:
	movs r0, #0xad
	lsls r0, r0, #3
	str r5, [sp]
	str r4, [sp, #4]
	movs r1, #0x80
	lsls r1, r1, #1
	str r1, [sp, #8]
	movs r1, #0
	movs r2, #0x3c
	movs r3, #0
	bl sub_080137C0
_080AC1A0:
	ldr r0, _080AC1AC @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC1E6
	.align 2, 0
_080AC1AC: .4byte gUnk_03006B90
_080AC1B0:
	ldr r4, _080AC1D8 @ =0x00001148
	adds r0, r0, r4
	bl sub_08009FF8
	ldr r0, [r5]
	adds r0, r0, r4
	bl sub_0800A778
	ldr r0, [r5]
	adds r0, r0, r4
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080AC1E8
	ldr r1, [r5]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC1E6
	.align 2, 0
_080AC1D8: .4byte 0x00001148
_080AC1DC:
	movs r0, #0x18
	bl sub_080ABA58
	ldr r1, [r5]
	movs r0, #0
_080AC1E6:
	strh r0, [r1, #2]
_080AC1E8:
	ldr r0, _080AC1F8 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0, #2]
	add sp, #0xc
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AC1F8: .4byte gUnk_03006B90

	thumb_func_start sub_080AC1FC
sub_080AC1FC: @ 0x080AC1FC
	push {r4, r5, lr}
	sub sp, #8
	ldr r0, _080AC218 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0, #2]
	cmp r0, #4
	bls _080AC20C
	b _080AC2FA
_080AC20C:
	lsls r0, r0, #2
	ldr r1, _080AC21C @ =_080AC220
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AC218: .4byte gUnk_03006B90
_080AC21C: .4byte _080AC220
_080AC220: @ jump table
	.4byte _080AC234 @ case 0
	.4byte _080AC25C @ case 1
	.4byte _080AC294 @ case 2
	.4byte _080AC2AC @ case 3
	.4byte _080AC2E0 @ case 4
_080AC234:
	movs r0, #0x10
	bl sub_080ABA58
	ldr r0, _080AC254 @ =0x00000111
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	ldr r0, _080AC258 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC2F8
	.align 2, 0
_080AC254: .4byte 0x00000111
_080AC258: .4byte gUnk_03006B90
_080AC25C:
	ldr r5, _080AC28C @ =gUnk_03006B90
	ldr r0, [r5]
	ldr r4, _080AC290 @ =0x00001148
	adds r0, r0, r4
	bl sub_08009FF8
	ldr r0, [r5]
	adds r0, r0, r4
	bl sub_0800A778
	ldr r0, [r5]
	adds r0, r0, r4
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080AC2FA
	ldr r1, [r5]
	movs r0, #0
	str r0, [r1, #0xc]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC2F8
	.align 2, 0
_080AC28C: .4byte gUnk_03006B90
_080AC290: .4byte 0x00001148
_080AC294:
	ldr r0, _080AC2A8 @ =gUnk_03006B90
	ldr r1, [r0]
	ldr r0, [r1, #0xc]
	adds r0, #1
	str r0, [r1, #0xc]
	cmp r0, #0x3c
	bls _080AC2FA
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC2F8
	.align 2, 0
_080AC2A8: .4byte gUnk_03006B90
_080AC2AC:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #2
	movs r1, #0x1e
	bl sub_0801457C
	ldr r0, _080AC2DC @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC2F8
	.align 2, 0
_080AC2DC: .4byte gUnk_03006B90
_080AC2E0:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AC2FA
	bl sub_08014614
	ldr r0, _080AC308 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0
_080AC2F8:
	strh r0, [r1, #2]
_080AC2FA:
	ldr r0, _080AC308 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0, #2]
	add sp, #8
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080AC308: .4byte gUnk_03006B90

	thumb_func_start sub_080AC30C
sub_080AC30C: @ 0x080AC30C
	push {r4, r5, lr}
	bl sub_080ACE58
	ldr r0, _080AC338 @ =gUnk_03006B90
	ldr r1, [r0]
	adds r3, r1, #0
	adds r3, #0xcc
	ldrh r2, [r3]
	cmp r2, #0
	beq _080AC32C
	movs r4, #0xe7
	lsls r4, r4, #2
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r0, #0x10
	bne _080AC33C
_080AC32C:
	movs r2, #0xc7
	lsls r2, r2, #2
	adds r0, r1, r2
	bl sub_08009FF8
	b _080AC340
	.align 2, 0
_080AC338: .4byte gUnk_03006B90
_080AC33C:
	subs r0, r2, #1
	strh r0, [r3]
_080AC340:
	ldr r5, _080AC3BC @ =gUnk_03006B90
	ldr r0, [r5]
	ldr r4, _080AC3C0 @ =0x000006AC
	adds r0, r0, r4
	bl sub_08009FF8
	ldr r0, [r5]
	movs r1, #0xd1
	lsls r1, r1, #2
	adds r0, r0, r1
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _080AC36C
	ldr r0, [r5]
	movs r2, #0xd1
	lsls r2, r2, #2
	adds r0, r0, r2
	bl sub_08009FF8
_080AC36C:
	ldr r1, [r5]
	adds r0, r1, #0
	adds r0, #0x10
	movs r4, #0xfa
	lsls r4, r4, #3
	adds r1, r1, r4
	movs r2, #1
	bl sub_08046228
	ldr r0, [r5]
	adds r0, #0x10
	bl sub_080477A0
	bl sub_080ADDE8
	bl sub_080AF404
	ldr r1, [r5]
	adds r0, r1, r4
	adds r1, #0x10
	bl sub_08031810
	ldr r1, [r5]
	adds r0, r1, r4
	movs r2, #0x8e
	lsls r2, r2, #5
	adds r1, r1, r2
	bl sub_08034DB8
	ldr r1, [r5]
	adds r4, r1, r4
	ldr r0, _080AC3C4 @ =0x00001270
	adds r1, r1, r0
	adds r0, r4, #0
	bl sub_08039308
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080AC3BC: .4byte gUnk_03006B90
_080AC3C0: .4byte 0x000006AC
_080AC3C4: .4byte 0x00001270

	thumb_func_start sub_080AC3C8
sub_080AC3C8: @ 0x080AC3C8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #4
	ldr r0, _080AC598 @ =gUnk_03006B90
	mov sl, r0
	ldr r4, [r0]
	movs r1, #0xa5
	lsls r1, r1, #3
	adds r0, r4, r1
	ldr r0, [r0]
	asrs r0, r0, #8
	movs r2, #0xa7
	lsls r2, r2, #3
	adds r1, r4, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	adds r1, r1, r0
	ldr r7, _080AC59C @ =0x000007D6
	adds r0, r4, r7
	ldrh r0, [r0]
	subs r1, r1, r0
	lsls r1, r1, #0x10
	ldr r3, _080AC5A0 @ =0x0000052C
	adds r0, r4, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	adds r3, #0xd
	adds r2, r4, r3
	ldrb r2, [r2]
	lsls r2, r2, #0x18
	asrs r2, r2, #0x18
	adds r2, r2, r0
	ldr r3, _080AC5A4 @ =0x000007DA
	adds r0, r4, r3
	ldrh r0, [r0]
	subs r2, r2, r0
	lsls r2, r2, #0x10
	ldr r0, _080AC5A8 @ =0x000006AC
	adds r6, r4, r0
	lsrs r3, r1, #0x10
	mov r8, r3
	asrs r1, r1, #0x10
	lsrs r0, r2, #0x10
	mov sb, r0
	asrs r2, r2, #0x10
	adds r0, r6, #0
	bl sub_0800A678
	ldr r1, _080AC5AC @ =0x0000053A
	adds r0, r4, r1
	mov r2, r8
	strh r2, [r0]
	ldr r3, _080AC5B0 @ =0x0000053C
	adds r4, r4, r3
	mov r0, sb
	strh r0, [r4]
	adds r0, r6, #0
	bl sub_0800A778
	mov r1, sl
	ldr r1, [r1]
	mov r8, r1
	movs r0, #0xcc
	lsls r0, r0, #1
	add r0, r8
	ldr r0, [r0]
	asrs r0, r0, #8
	movs r1, #0xd4
	lsls r1, r1, #1
	add r1, r8
	movs r2, #0
	ldrsb r2, [r1, r2]
	adds r2, r2, r0
	mov r3, r8
	adds r3, r3, r7
	ldrh r0, [r3]
	subs r2, r2, r0
	lsls r2, r2, #0x10
	movs r0, #0xce
	lsls r0, r0, #1
	add r0, r8
	ldr r1, [r0]
	asrs r1, r1, #8
	ldr r0, _080AC5B4 @ =0x000001A9
	add r0, r8
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r0, r1
	ldr r1, _080AC5A4 @ =0x000007DA
	add r1, r8
	ldrh r1, [r1]
	subs r0, r0, r1
	lsls r0, r0, #0x10
	movs r4, #0xc7
	lsls r4, r4, #2
	add r4, r8
	lsrs r1, r2, #0x10
	mov sb, r1
	asrs r5, r2, #0x10
	lsrs r6, r0, #0x10
	asrs r7, r0, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_0800A678
	movs r0, #0xd5
	lsls r0, r0, #1
	add r0, r8
	mov r2, sb
	strh r2, [r0]
	movs r0, #0xd6
	lsls r0, r0, #1
	add r0, r8
	strh r6, [r0]
	adds r0, r4, #0
	bl sub_0800A778
	movs r4, #0xd1
	lsls r4, r4, #2
	add r4, r8
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _080AC4E8
	adds r2, r7, #0
	subs r2, #0x20
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080AC4E8:
	mov r3, sl
	ldr r1, [r3]
	movs r4, #0xfa
	lsls r4, r4, #3
	adds r0, r1, r4
	adds r1, #0x10
	bl sub_08046BAC
	mov r0, sl
	ldr r1, [r0]
	adds r0, r1, r4
	movs r2, #0xe8
	lsls r2, r2, #2
	adds r1, r1, r2
	bl sub_08046BAC
	bl sub_080AF41C
	bl sub_080ADFC8
	mov r3, sl
	ldr r1, [r3]
	adds r0, r1, #0
	adds r0, #0x10
	adds r1, r1, r4
	bl sub_0804669C
	mov r1, sl
	ldr r0, [r1]
	movs r2, #0x8e
	lsls r2, r2, #5
	adds r0, r0, r2
	bl sub_08034E2C
	mov r3, sl
	ldr r1, [r3]
	adds r0, r1, r4
	ldr r2, _080AC5B8 @ =0x00001270
	adds r1, r1, r2
	bl sub_0803D7EC
	mov r3, sl
	ldr r0, [r3]
	adds r0, r0, r4
	movs r1, #0
	bl sub_08031BC8
	mov r0, sl
	ldr r2, [r0]
	ldr r1, _080AC5BC @ =0x000007D5
	adds r0, r2, r1
	ldrb r0, [r0]
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #6
	ldr r3, _080AC5C0 @ =0x000007EC
	adds r0, r2, r3
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r0, r3]
	ldr r0, _080AC5A4 @ =0x000007DA
	adds r2, r2, r0
	movs r3, #0
	ldrsh r2, [r2, r3]
	movs r0, #0
	bl sub_08005E18
	mov r1, sl
	ldr r0, [r1]
	movs r4, #0xbc
	lsls r4, r4, #4
	adds r0, r0, r4
	bl sub_0800A778
	mov r2, sl
	ldr r0, [r2]
	adds r0, r0, r4
	bl sub_08009FF8
	add sp, #4
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AC598: .4byte gUnk_03006B90
_080AC59C: .4byte 0x000007D6
_080AC5A0: .4byte 0x0000052C
_080AC5A4: .4byte 0x000007DA
_080AC5A8: .4byte 0x000006AC
_080AC5AC: .4byte 0x0000053A
_080AC5B0: .4byte 0x0000053C
_080AC5B4: .4byte 0x000001A9
_080AC5B8: .4byte 0x00001270
_080AC5BC: .4byte 0x000007D5
_080AC5C0: .4byte 0x000007EC

	thumb_func_start sub_080AC5C4
sub_080AC5C4: @ 0x080AC5C4
	push {r4, r5, r6, r7, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0x16
	ands r0, r1
	cmp r0, #0
	beq _080AC5DC
	adds r0, r4, #0
	bl sub_08048FD4
_080AC5DC:
	ldr r0, [r4, #8]
	movs r1, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080AC5F6
	ldr r0, _080AC62C @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0x8e
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r0, r4, #0
	bl sub_08043C04
_080AC5F6:
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #0xc
	ands r0, r1
	cmp r0, #0
	beq _080AC60A
	adds r0, r4, #0
	movs r1, #0
	bl sub_08043D94
_080AC60A:
	ldr r1, [r4, #8]
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080AC630
	ldr r0, _080AC62C @ =gUnk_03006B90
	ldr r2, [r0]
	movs r1, #0x8e
	lsls r1, r1, #5
	adds r2, r2, r1
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_0804437C
	b _080AC7E2
	.align 2, 0
_080AC62C: .4byte gUnk_03006B90
_080AC630:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080AC650
	ldr r0, _080AC64C @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0x8e
	lsls r0, r0, #5
	adds r1, r1, r0
	adds r0, r4, #0
	bl sub_08044128
	b _080AC7E2
	.align 2, 0
_080AC64C: .4byte gUnk_03006B90
_080AC650:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080AC664
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08049018
	b _080AC7E2
_080AC664:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080AC676
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08044A54
	b _080AC7E2
_080AC676:
	movs r6, #1
	adds r0, r1, #0
	ands r0, r6
	cmp r0, #0
	beq _080AC6C4
	ldr r0, _080AC6C0 @ =gUnk_03006B90
	ldr r2, [r0]
	movs r1, #0x8e
	lsls r1, r1, #5
	adds r2, r2, r1
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08044720
	ldr r1, [r4, #8]
	movs r0, #0x81
	ands r0, r1
	cmp r0, #0
	bne _080AC69E
	b _080AC7E2
_080AC69E:
	movs r0, #0x10
	ands r1, r0
	cmp r1, #0
	bne _080AC718
	ldrh r1, [r5]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	bne _080AC6B2
	b _080AC7E2
_080AC6B2:
	adds r0, r4, #0
	adds r0, #0xb1
	ldrb r0, [r0]
	cmp r0, #0
	beq _080AC6BE
	b _080AC7E2
_080AC6BE:
	b _080AC740
	.align 2, 0
_080AC6C0: .4byte gUnk_03006B90
_080AC6C4:
	movs r7, #0x80
	adds r0, r1, #0
	ands r0, r7
	cmp r0, #0
	beq _080AC710
	ldr r0, _080AC70C @ =gUnk_03006B90
	ldr r2, [r0]
	movs r0, #0x8e
	lsls r0, r0, #5
	adds r2, r2, r0
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08044960
	ldr r1, [r4, #8]
	movs r0, #0x81
	ands r0, r1
	cmp r0, #0
	bne _080AC6EC
	b _080AC7E2
_080AC6EC:
	movs r0, #0x10
	ands r1, r0
	cmp r1, #0
	bne _080AC718
	ldrh r1, [r5]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080AC7E2
	adds r0, r4, #0
	adds r0, #0xb1
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AC7E2
	b _080AC740
	.align 2, 0
_080AC70C: .4byte gUnk_03006B90
_080AC710:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080AC722
_080AC718:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_0804BF80
	b _080AC7E2
_080AC722:
	movs r0, #0xc
	ands r1, r0
	cmp r1, #0
	beq _080AC736
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r4, r0
	adds r0, r4, #0
	bl sub_08041AF4
_080AC736:
	ldrh r1, [r5]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080AC74A
_080AC740:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08049DA4
	b _080AC7E2
_080AC74A:
	ldr r0, [r5]
	ldr r1, _080AC760 @ =gUnk_03000002
	ands r0, r1
	cmp r0, #2
	bne _080AC764
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_080AF38C
	b _080AC7E2
	.align 2, 0
_080AC760: .4byte gUnk_03000002
_080AC764:
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08042A74
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AC78C
	ldr r0, _080AC788 @ =gUnk_03006B90
	ldr r2, [r0]
	movs r1, #0x8e
	lsls r1, r1, #5
	adds r2, r2, r1
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_080422A4
	b _080AC7E2
	.align 2, 0
_080AC788: .4byte gUnk_03006B90
_080AC78C:
	movs r1, #0x89
	lsls r1, r1, #2
	adds r0, r4, r1
	ldrh r1, [r0]
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	beq _080AC7B8
	movs r0, #0x88
	lsls r0, r0, #2
	adds r1, r4, r0
	ldr r0, _080AC7B4 @ =gUnk_03006B90
	ldr r2, [r0]
	movs r0, #0x8e
	lsls r0, r0, #5
	adds r2, r2, r0
	adds r0, r4, #0
	bl sub_080417D4
	b _080AC7E2
	.align 2, 0
_080AC7B4: .4byte gUnk_03006B90
_080AC7B8:
	ldrh r1, [r5, #4]
	adds r0, r7, #0
	ands r0, r1
	cmp r0, #0
	beq _080AC7E2
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_08048F58
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AC7E2
	ldr r0, _080AC804 @ =gUnk_03006B90
	ldr r2, [r0]
	movs r1, #0x8e
	lsls r1, r1, #5
	adds r2, r2, r1
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_080428C4
_080AC7E2:
	ldr r0, _080AC804 @ =gUnk_03006B90
	ldr r3, [r0]
	movs r1, #0xfa
	lsls r1, r1, #3
	adds r0, r3, r1
	movs r1, #0x88
	lsls r1, r1, #2
	adds r2, r4, r1
	ldr r1, _080AC808 @ =0x000012F0
	adds r3, r3, r1
	adds r1, r4, #0
	bl sub_08044CB8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AC804: .4byte gUnk_03006B90
_080AC808: .4byte 0x000012F0

	thumb_func_start sub_080AC80C
sub_080AC80C: @ 0x080AC80C
	push {r4, lr}
	sub sp, #0x2c
	ldr r0, _080AC828 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0, #2]
	cmp r0, #4
	bls _080AC81C
	b _080AC99A
_080AC81C:
	lsls r0, r0, #2
	ldr r1, _080AC82C @ =_080AC830
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AC828: .4byte gUnk_03006B90
_080AC82C: .4byte _080AC830
_080AC830: @ jump table
	.4byte _080AC844 @ case 0
	.4byte _080AC8C8 @ case 1
	.4byte _080AC914 @ case 2
	.4byte _080AC930 @ case 3
	.4byte _080AC97C @ case 4
_080AC844:
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	adds r4, r0, #0
	movs r1, #0x24
	bl sub_08001D78
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x10]
	ldr r1, _080AC8BC @ =0x06004000
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0
	bl sub_08010D40
	adds r0, r4, #0
	movs r1, #0x25
	bl sub_08001D78
	add r4, sp, #0x1c
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _080AC8C0 @ =0x06002000
	ldrh r2, [r4, #8]
	lsrs r2, r2, #2
	bl CpuFastSet
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #4
	movs r2, #1
	bl sub_0800476C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	ldr r0, _080AC8C4 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC998
	.align 2, 0
_080AC8BC: .4byte 0x06004000
_080AC8C0: .4byte 0x06002000
_080AC8C4: .4byte gUnk_03006B90
_080AC8C8:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	ldr r0, _080AC910 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC998
	.align 2, 0
_080AC910: .4byte gUnk_03006B90
_080AC914:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AC99A
	ldr r0, _080AC92C @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC998
	.align 2, 0
_080AC92C: .4byte gUnk_03006B90
_080AC930:
	ldr r0, _080AC974 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080AC94C
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080AC94C
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080AC99A
_080AC94C:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	ldr r0, _080AC978 @ =gUnk_03006B90
	ldr r1, [r0]
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AC998
	.align 2, 0
_080AC974: .4byte gKeyNewPress
_080AC978: .4byte gUnk_03006B90
_080AC97C:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AC99A
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	ldr r0, _080AC9A8 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0
_080AC998:
	strh r0, [r1, #2]
_080AC99A:
	ldr r0, _080AC9A8 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrh r0, [r0, #2]
	add sp, #0x2c
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AC9A8: .4byte gUnk_03006B90

	thumb_func_start sub_080AC9AC
sub_080AC9AC: @ 0x080AC9AC
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #0x30
	ldr r0, _080ACA58 @ =gUnk_03006B90
	ldr r0, [r0]
	mov r8, r0
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	adds r5, r0, #0
	movs r1, #8
	bl sub_08001D78
	adds r4, r0, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1c
	bl sub_08010D40
	ldr r6, _080ACA5C @ =0x06014A00
	movs r0, #5
	mov r1, sp
	adds r2, r6, #0
	adds r3, r4, #0
	bl sub_08009334
	adds r0, r5, #0
	movs r1, #9
	bl sub_08001D78
	adds r4, r0, #0
	add r1, sp, #0x1c
	bl sub_08001D98
	movs r0, #5
	movs r1, #5
	adds r2, r4, #0
	bl sub_0800A630
	movs r4, #0xb9
	lsls r4, r4, #4
	add r4, r8
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #5
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	movs r3, #0x80
	lsls r3, r3, #2
	adds r0, r4, #0
	movs r1, #1
	adds r2, r6, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #6
	movs r2, #2
	bl sub_0800A6C4
	movs r0, #1
	bl sub_0800180C
	cmp r0, #0
	bne _080ACA60
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A680
	b _080ACA6A
	.align 2, 0
_080ACA58: .4byte gUnk_03006B90
_080ACA5C: .4byte 0x06014A00
_080ACA60:
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
_080ACA6A:
	add sp, #0x30
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ACA78
sub_080ACA78: @ 0x080ACA78
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	ldr r0, _080ACAA4 @ =gUnk_03006B90
	ldr r1, [r0]
	ldr r0, _080ACAA8 @ =0x00000B84
	adds r6, r1, r0
	ldrh r0, [r6, #2]
	cmp r0, #0
	beq _080ACA90
	b _080ACCBA
_080ACA90:
	ldrb r0, [r6]
	cmp r0, #5
	bls _080ACA98
	b _080ACD10
_080ACA98:
	lsls r0, r0, #2
	ldr r1, _080ACAAC @ =_080ACAB0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080ACAA4: .4byte gUnk_03006B90
_080ACAA8: .4byte 0x00000B84
_080ACAAC: .4byte _080ACAB0
_080ACAB0: @ jump table
	.4byte _080ACAC8 @ case 0
	.4byte _080ACB1A @ case 1
	.4byte _080ACBB8 @ case 2
	.4byte _080ACC14 @ case 3
	.4byte _080ACC46 @ case 4
	.4byte _080ACC7E @ case 5
_080ACAC8:
	movs r0, #3
	bl sub_0800180C
	adds r1, r0, #0
	cmp r1, #0
	beq _080ACAE0
	cmp r1, #1
	beq _080ACAF8
	movs r0, #0
	strb r0, [r6]
	movs r0, #0x1e
	b _080ACBAE
_080ACAE0:
	ldrb r0, [r6, #1]
	cmp r0, #2
	beq _080ACAF8
	strb r1, [r6, #1]
	movs r0, #5
	strb r0, [r6]
	strh r1, [r6, #2]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #5
	movs r2, #2
	b _080ACCB2
_080ACAF8:
	movs r0, #1
	strb r0, [r6]
	movs r0, #0xb4
	bl sub_0800180C
	adds r4, r0, #0
	movs r0, #0xb4
	bl sub_0800180C
	adds r4, #0x2d
	adds r4, r4, r0
	strh r4, [r6, #2]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #5
	movs r2, #1
	b _080ACC3E
_080ACB1A:
	movs r0, #1
	strb r0, [r6, #1]
	movs r0, #3
	bl sub_0800180C
	adds r7, r0, #0
	cmp r7, #0
	bne _080ACB40
	strb r7, [r6]
	movs r0, #0x3c
	bl sub_0800180C
	adds r0, #0x1e
	strh r0, [r6, #2]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #5
	movs r2, #0
	b _080ACC3E
_080ACB40:
	cmp r7, #1
	beq _080ACB6E
	ldr r0, [r6, #4]
	asrs r1, r0, #8
	cmp r1, #0x14
	bgt _080ACB56
	mov r0, sp
	adds r0, #2
	ldrh r0, [r0]
	cmp r0, #0
	beq _080ACB68
_080ACB56:
	cmp r1, #0xd1
	bgt _080ACB5C
	b _080ACD10
_080ACB5C:
	mov r0, sp
	adds r0, #2
	ldrh r0, [r0]
	cmp r0, #1
	beq _080ACB68
	b _080ACD10
_080ACB68:
	movs r0, #1
	strb r0, [r6]
	b _080ACBAC
_080ACB6E:
	strb r7, [r6]
	adds r4, r6, #0
	adds r4, #0xc
	mov r5, sp
	adds r5, #2
	adds r0, r4, #0
	mov r1, sp
	adds r2, r5, #0
	bl sub_0800A7DC
	ldrh r0, [r5]
	mov r8, r4
	adds r4, r5, #0
	cmp r0, #1
	bne _080ACB92
	movs r0, #0
	strh r0, [r4]
	b _080ACB94
_080ACB92:
	strh r7, [r4]
_080ACB94:
	ldrh r2, [r4]
	mov r0, r8
	movs r1, #0
	bl sub_0800A680
	movs r0, #2
	bl sub_0800180C
	cmp r0, #0
	bne _080ACBAC
	strh r0, [r6, #2]
	b _080ACD10
_080ACBAC:
	movs r0, #0x3c
_080ACBAE:
	bl sub_0800180C
	adds r0, #0x1e
	strh r0, [r6, #2]
	b _080ACD10
_080ACBB8:
	movs r0, #4
	bl sub_0800180C
	adds r1, r0, #0
	cmp r1, #0
	beq _080ACBCA
	cmp r1, #1
	beq _080ACBEC
	b _080ACC04
_080ACBCA:
	ldrb r0, [r6, #1]
	cmp r0, #0
	bne _080ACBD2
	b _080ACD10
_080ACBD2:
	movs r0, #2
	strb r0, [r6, #1]
	movs r0, #4
	strb r0, [r6]
	strh r1, [r6, #2]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #5
	movs r2, #2
	movs r3, #2
	bl sub_08009F50
	b _080ACD10
_080ACBEC:
	ldrb r0, [r6, #1]
	cmp r0, #3
	beq _080ACC04
	movs r0, #0
	movs r1, #3
	strb r1, [r6]
	strh r0, [r6, #2]
	adds r0, r6, #0
	adds r0, #0xc
	movs r1, #5
	movs r2, #4
	b _080ACCB2
_080ACC04:
	movs r0, #2
	strb r0, [r6]
	movs r0, #0xb4
	bl sub_0800180C
	adds r0, #0x5a
	strh r0, [r6, #2]
	b _080ACD10
_080ACC14:
	movs r0, #3
	strb r0, [r6, #1]
	adds r4, r6, #0
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080ACD10
	movs r0, #2
	strb r0, [r6]
	movs r0, #0xb4
	bl sub_0800180C
	adds r0, #0x5a
	strh r0, [r6, #2]
	adds r0, r4, #0
	movs r1, #5
	movs r2, #3
_080ACC3E:
	movs r3, #0
	bl sub_08009F50
	b _080ACD10
_080ACC46:
	adds r4, r6, #0
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r4
	cmp r0, #1
	bne _080ACD10
	movs r4, #0
	strb r4, [r6]
	movs r0, #2
	bl sub_0800180C
	cmp r0, #0
	bne _080ACC74
	movs r0, #0x5a
	bl sub_0800180C
	adds r0, #0x2d
	strh r0, [r6, #2]
	b _080ACC76
_080ACC74:
	strh r4, [r6, #2]
_080ACC76:
	mov r0, r8
	movs r1, #5
	movs r2, #0
	b _080ACCB2
_080ACC7E:
	adds r4, r6, #0
	adds r4, #0xc
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	mov r8, r4
	cmp r0, #1
	bne _080ACD10
	movs r0, #2
	strb r0, [r6]
	bl sub_0800180C
	cmp r0, #0
	bne _080ACCA8
	movs r0, #0xb4
	bl sub_0800180C
	adds r0, #0x5a
	b _080ACCAA
_080ACCA8:
	movs r0, #0
_080ACCAA:
	strh r0, [r6, #2]
	mov r0, r8
	movs r1, #5
	movs r2, #3
_080ACCB2:
	movs r3, #1
	bl sub_08009F50
	b _080ACD10
_080ACCBA:
	subs r0, #1
	strh r0, [r6, #2]
	ldrb r0, [r6]
	cmp r0, #1
	bne _080ACD10
	movs r2, #0xb9
	lsls r2, r2, #4
	adds r0, r1, r2
	mov r4, sp
	adds r4, #2
	mov r1, sp
	adds r2, r4, #0
	bl sub_0800A7DC
	ldr r0, [r6, #4]
	asrs r0, r0, #8
	cmp r0, #0x14
	bgt _080ACCEA
	ldrh r0, [r4]
	cmp r0, #1
	bne _080ACCEA
	movs r0, #0
	strh r0, [r6, #2]
	b _080ACD10
_080ACCEA:
	ldr r0, [r6, #4]
	asrs r1, r0, #8
	adds r2, r0, #0
	cmp r1, #0xd1
	ble _080ACCFE
	ldrh r4, [r4]
	cmp r4, #0
	bne _080ACD0A
	strh r4, [r6, #2]
	b _080ACD10
_080ACCFE:
	ldrh r0, [r4]
	cmp r0, #0
	bne _080ACD0A
	adds r0, r2, #0
	adds r0, #0x64
	b _080ACD0E
_080ACD0A:
	adds r0, r2, #0
	subs r0, #0x64
_080ACD0E:
	str r0, [r6, #4]
_080ACD10:
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080ACD1C
sub_080ACD1C: @ 0x080ACD1C
	push {r4, r5, lr}
	sub sp, #8
	ldr r4, _080ACE1C @ =gUnk_02007000
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	ldr r5, _080ACE20 @ =0x06000800
	adds r0, r5, #0
	bl sub_08004570
	movs r0, #2
	bl sub_080012D4
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800476C
	movs r0, #0
	adds r1, r5, #0
	bl sub_080012E0
	movs r3, #0x80
	lsls r3, r3, #7
	movs r0, #0
	movs r1, #0
	movs r2, #3
	bl sub_08004744
	movs r0, #0
	movs r1, #7
	movs r2, #2
	bl sub_0800476C
	ldr r0, _080ACE24 @ =0x06004500
	movs r1, #0x80
	lsls r1, r1, #6
	bl sub_0800E690
	ldr r5, _080ACE28 @ =gUnk_02007800
	movs r1, #0x80
	lsls r1, r1, #5
	adds r0, r5, #0
	bl sub_0800E6B0
	movs r0, #0
	adds r1, r4, #0
	bl sub_0800E6F0
	movs r0, #0x80
	movs r1, #2
	bl sub_0800E6D0
	movs r0, #0
	str r0, [sp]
	ldr r2, _080ACE2C @ =0x05000400
	mov r0, sp
	adds r1, r5, #0
	bl CpuSet
	ldr r0, _080ACE30 @ =0x20A920A9
	str r0, [sp, #4]
	add r0, sp, #4
	ldr r2, _080ACE34 @ =0x05000140
	adds r1, r4, #0
	bl CpuSet
	movs r0, #0
	movs r1, #0x10
	movs r2, #0x1e
	movs r3, #4
	bl sub_080331C4
	ldr r3, _080ACE38 @ =gUnk_080C0204
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x10
	bl sub_08001284
	ldr r3, _080ACE3C @ =gUnk_080C0208
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0x11
	bl sub_08001284
	movs r0, #1
	movs r1, #0x12
	movs r2, #0x57
	movs r3, #0
	bl sub_08035190
	ldr r0, _080ACE40 @ =0x00000492
	adds r0, r4, r0
	ldr r2, _080ACE44 @ =0x000030A8
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080ACE48 @ =0x00000494
	adds r0, r4, r0
	movs r2, #0x82
	lsls r2, r2, #6
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080ACE4C @ =0x000004D2
	adds r0, r4, r0
	adds r2, #0x1b
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080ACE50 @ =0x000004D4
	adds r4, r4, r0
	ldr r1, _080ACE54 @ =0x0000209C
	adds r0, r1, #0
	strh r0, [r4]
	bl sub_080ACE58
	add sp, #8
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080ACE1C: .4byte gUnk_02007000
_080ACE20: .4byte 0x06000800
_080ACE24: .4byte 0x06004500
_080ACE28: .4byte gUnk_02007800
_080ACE2C: .4byte 0x05000400
_080ACE30: .4byte 0x20A920A9
_080ACE34: .4byte 0x05000140
_080ACE38: .4byte gUnk_080C0204
_080ACE3C: .4byte gUnk_080C0208
_080ACE40: .4byte 0x00000492
_080ACE44: .4byte 0x000030A8
_080ACE48: .4byte 0x00000494
_080ACE4C: .4byte 0x000004D2
_080ACE50: .4byte 0x000004D4
_080ACE54: .4byte 0x0000209C

	thumb_func_start sub_080ACE58
sub_080ACE58: @ 0x080ACE58
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x14
	ldr r4, _080ACF10 @ =gUnk_03006B90
	ldr r0, [r4]
	adds r1, r0, #0
	adds r1, #0x10
	str r1, [sp, #0x10]
	ldrb r0, [r0, #6]
	adds r0, #1
	add r1, sp, #8
	movs r2, #1
	movs r3, #0
	bl sub_08001314
	add r0, sp, #8
	movs r1, #1
	bl sub_08001488
	ldr r0, _080ACF14 @ =gUnk_02007000
	movs r1, #6
	movs r2, #0x10
	add r3, sp, #8
	bl sub_08001284
	ldr r0, [r4]
	ldr r2, _080ACF18 @ =0x00001146
	adds r0, r0, r2
	ldrh r0, [r0]
	add r1, sp, #8
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	add r0, sp, #8
	movs r1, #3
	bl sub_08001488
	ldr r0, _080ACF14 @ =gUnk_02007000
	movs r1, #4
	movs r2, #0x11
	add r3, sp, #8
	bl sub_08001284
	ldr r0, [r4]
	ldr r1, _080ACF1C @ =0x0000113C
	adds r0, r0, r1
	ldrh r0, [r0]
	add r1, sp, #8
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	add r0, sp, #8
	movs r1, #3
	bl sub_08001488
	movs r6, #0
	ldr r2, _080ACF20 @ =gUnk_080C020C
	mov sl, r2
	movs r0, #0x80
	lsls r0, r0, #6
	mov sb, r0
	add r5, sp, #8
	movs r0, #0x99
	lsls r0, r0, #3
	ldr r1, _080ACF14 @ =gUnk_02007000
	adds r1, r1, r0
	mov r8, r1
	subs r0, #0x40
	ldr r2, _080ACF14 @ =gUnk_02007000
	adds r7, r2, r0
	ldrb r0, [r5]
	cmp r0, #0x20
	bne _080ACF24
	adds r0, r2, #0
	movs r1, #4
	movs r2, #0x12
	mov r3, sl
	bl sub_08001284
	ldr r0, _080ACF14 @ =gUnk_02007000
	movs r1, #4
	movs r2, #0x13
	mov r3, sl
	bl sub_08001284
	b _080ACF42
	.align 2, 0
_080ACF10: .4byte gUnk_03006B90
_080ACF14: .4byte gUnk_02007000
_080ACF18: .4byte 0x00001146
_080ACF1C: .4byte 0x0000113C
_080ACF20: .4byte gUnk_080C020C
_080ACF24:
	ldrb r0, [r5]
	lsls r0, r0, #1
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r2, sb
	orrs r0, r2
	strh r0, [r7]
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	orrs r0, r2
	mov r2, r8
	strh r0, [r2]
_080ACF42:
	adds r5, #1
	movs r0, #2
	add r8, r0
	adds r7, #2
	adds r6, #1
	cmp r6, #2
	bgt _080ACFF0
_080ACF50:
	ldrb r0, [r5]
	cmp r0, #0x20
	bne _080ACF7C
	adds r4, r6, #4
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _080ACF78 @ =gUnk_02007000
	adds r1, r4, #0
	movs r2, #0x12
	mov r3, sl
	bl sub_08001284
	ldr r0, _080ACF78 @ =gUnk_02007000
	adds r1, r4, #0
	movs r2, #0x13
	mov r3, sl
	bl sub_08001284
	b _080ACF9A
	.align 2, 0
_080ACF78: .4byte gUnk_02007000
_080ACF7C:
	ldrb r0, [r5]
	lsls r0, r0, #1
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r2, sb
	orrs r0, r2
	strh r0, [r7]
	ldrb r0, [r5]
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	orrs r0, r2
	mov r2, r8
	strh r0, [r2]
_080ACF9A:
	ldrb r0, [r5, #1]
	cmp r0, #0x20
	bne _080ACFC4
	adds r4, r6, #5
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r0, _080ACFC0 @ =gUnk_02007000
	adds r1, r4, #0
	movs r2, #0x12
	mov r3, sl
	bl sub_08001284
	ldr r0, _080ACFC0 @ =gUnk_02007000
	adds r1, r4, #0
	movs r2, #0x13
	mov r3, sl
	bl sub_08001284
	b _080ACFE2
	.align 2, 0
_080ACFC0: .4byte gUnk_02007000
_080ACFC4:
	ldrb r0, [r5, #1]
	lsls r0, r0, #1
	movs r1, #0xc8
	lsls r1, r1, #2
	adds r0, r0, r1
	mov r2, sb
	orrs r0, r2
	strh r0, [r7, #2]
	ldrb r0, [r5, #1]
	lsls r0, r0, #1
	adds r1, #1
	adds r0, r0, r1
	orrs r0, r2
	mov r2, r8
	strh r0, [r2, #2]
_080ACFE2:
	adds r5, #2
	movs r0, #4
	add r8, r0
	adds r7, #4
	adds r6, #2
	cmp r6, #2
	ble _080ACF50
_080ACFF0:
	ldr r6, _080AD0DC @ =gUnk_03006B90
	ldr r0, [r6]
	ldr r5, [r0, #8]
	movs r4, #0xb4
	lsls r4, r4, #2
	adds r0, r5, #0
	adds r0, #0x3b
	movs r1, #0x3c
	bl __divsi3
	add r1, sp, #8
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	add r0, sp, #8
	movs r1, #3
	bl sub_08001488
	ldr r0, _080AD0E0 @ =gUnk_02007000
	movs r1, #0xb
	movs r2, #0x12
	add r3, sp, #8
	bl sub_08001284
	cmp r5, r4
	bgt _080AD03A
	ldr r2, [r6]
	ldr r0, [r2, #0xc]
	movs r1, #4
	ands r0, r1
	cmp r0, #0
	beq _080AD03A
	ldrh r0, [r2, #4]
	cmp r0, #2
	bne _080AD03A
	movs r5, #0
_080AD03A:
	str r5, [sp]
	movs r0, #0xe1
	lsls r0, r0, #4
	str r0, [sp, #4]
	movs r0, #0xe
	movs r1, #0x12
	movs r2, #0xf
	movs r3, #5
	bl sub_08033700
	ldr r1, [sp, #0x10]
	movs r2, #0xbc
	lsls r2, r2, #1
	adds r0, r1, r2
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	ldr r1, [sp, #0x10]
	adds r0, r1, r0
	subs r2, #0x64
	adds r0, r0, r2
	movs r1, #0
	ldrsh r4, [r0, r1]
	ldr r7, _080AD0DC @ =gUnk_03006B90
	ldr r2, [r7]
	movs r6, #0xc4
	lsls r6, r6, #1
	adds r0, r2, r6
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r2, r2, r0
	movs r5, #0x8c
	lsls r5, r5, #1
	adds r2, r2, r5
	ldrh r0, [r2]
	cmp r0, #0xf6
	bne _080AD08C
	movs r4, #0
_080AD08C:
	adds r0, r4, #0
	movs r1, #0x64
	bl __divsi3
	add r1, sp, #8
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	add r0, sp, #8
	movs r1, #3
	bl sub_08001488
	ldr r0, _080AD0E0 @ =gUnk_02007000
	movs r1, #0xb
	movs r2, #0x13
	add r3, sp, #8
	bl sub_08001284
	ldr r1, [r7]
	adds r0, r1, r6
	ldrb r2, [r0]
	lsls r0, r2, #1
	adds r0, r0, r2
	lsls r0, r0, #3
	adds r1, r1, r0
	adds r1, r1, r5
	ldrh r0, [r1]
	cmp r0, #0xf6
	beq _080AD0E8
	str r4, [sp]
	ldr r0, _080AD0E4 @ =0x0000639C
	str r0, [sp, #4]
	movs r0, #0xe
	movs r1, #0x13
	movs r2, #0xf
	movs r3, #4
	bl sub_08033700
	b _080AD0FA
	.align 2, 0
_080AD0DC: .4byte gUnk_03006B90
_080AD0E0: .4byte gUnk_02007000
_080AD0E4: .4byte 0x0000639C
_080AD0E8:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0xe
	movs r1, #0x13
	movs r2, #0xf
	movs r3, #4
	bl sub_08033700
_080AD0FA:
	add sp, #0x14
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080AD10C
sub_080AD10C: @ 0x080AD10C
	push {r4, r5, r6, lr}
	sub sp, #0x14
	ldr r4, _080AD17C @ =gUnk_03006B90
	ldr r0, [r4]
	ldr r1, _080AD180 @ =0x00000BBA
	adds r0, r0, r1
	ldrb r6, [r0]
	cmp r6, #1
	bne _080AD174
	movs r1, #0
	strb r1, [r0]
	ldr r0, [r4]
	ldr r2, _080AD184 @ =0x00000BBB
	adds r0, r0, r2
	strb r1, [r0]
	movs r0, #0
	movs r2, #0
	bl sub_0800476C
	ldr r0, [r4]
	ldr r5, _080AD188 @ =0x00000BB8
	adds r1, r0, r5
	ldrh r0, [r1]
	cmp r0, #0
	beq _080AD148
	adds r0, r1, #0
	movs r1, #0x80
	movs r2, #2
	bl sub_0800B57C
_080AD148:
	ldr r1, [r4]
	adds r0, r1, r5
	ldr r2, _080AD18C @ =0x00000BBC
	adds r1, r1, r2
	ldr r2, [r1]
	movs r1, #0x10
	str r1, [sp]
	ldr r1, _080AD190 @ =0x44444444
	str r1, [sp, #4]
	movs r1, #2
	str r1, [sp, #8]
	str r1, [sp, #0xc]
	str r6, [sp, #0x10]
	movs r1, #0
	movs r3, #9
	bl sub_0800B1AC
	movs r0, #0
	movs r1, #7
	movs r2, #2
	bl sub_0800476C
_080AD174:
	add sp, #0x14
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080AD17C: .4byte gUnk_03006B90
_080AD180: .4byte 0x00000BBA
_080AD184: .4byte 0x00000BBB
_080AD188: .4byte 0x00000BB8
_080AD18C: .4byte 0x00000BBC
_080AD190: .4byte 0x44444444

	thumb_func_start sub_080AD194
sub_080AD194: @ 0x080AD194
	push {lr}
	movs r2, #0
	ldr r0, _080AD1A8 @ =gUnk_03006B90
	ldr r1, [r0]
	ldr r0, [r1, #8]
	cmp r0, #0
	bne _080AD1AC
	movs r0, #0
	b _080AD200
	.align 2, 0
_080AD1A8: .4byte gUnk_03006B90
_080AD1AC:
	ldrb r0, [r1, #6]
	cmp r0, #5
	bhi _080AD1FE
	lsls r0, r0, #2
	ldr r1, _080AD1BC @ =_080AD1C0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AD1BC: .4byte _080AD1C0
_080AD1C0: @ jump table
	.4byte _080AD1D8 @ case 0
	.4byte _080AD1DE @ case 1
	.4byte _080AD1E4 @ case 2
	.4byte _080AD1EA @ case 3
	.4byte _080AD1F0 @ case 4
	.4byte _080AD1F6 @ case 5
_080AD1D8:
	bl sub_080AD204
	b _080AD1FA
_080AD1DE:
	bl sub_080AD328
	b _080AD1FA
_080AD1E4:
	bl sub_080AD480
	b _080AD1FA
_080AD1EA:
	bl sub_080AD604
	b _080AD1FA
_080AD1F0:
	bl sub_080AD7B8
	b _080AD1FA
_080AD1F6:
	bl sub_080AD948
_080AD1FA:
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
_080AD1FE:
	adds r0, r2, #0
_080AD200:
	pop {r1}
	bx r1

	thumb_func_start sub_080AD204
sub_080AD204: @ 0x080AD204
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r6, _080AD308 @ =gUnk_03006B90
	ldr r4, [r6]
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	ldr r1, _080AD30C @ =0x0000072C
	adds r0, r4, r1
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_08040EAC
	adds r7, r0, #0
	movs r3, #0
	mov r8, r3
	ldr r0, [r6]
	ldr r0, [r0, #0xc]
	movs r1, #0x5a
	bl __umodsi3
	cmp r0, #0
	bne _080AD238
	movs r0, #1
	mov r8, r0
_080AD238:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080AD278
	ldr r1, _080AD310 @ =0x000006AC
	adds r0, r4, r1
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r7, [r7, #0xd]
	cmp r0, r7
	blo _080AD278
	ldr r0, [r6]
	ldrb r2, [r0, #6]
	movs r0, #0
	movs r1, #0
	bl sub_080ADC84
	ldr r0, [r5, #8]
	ldr r1, _080AD314 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r1, [r6]
	movs r3, #0x8a
	lsls r3, r3, #5
	adds r1, r1, r3
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AD278:
	ldr r0, _080AD308 @ =gUnk_03006B90
	ldr r2, [r0]
	ldrb r1, [r2, #7]
	adds r6, r0, #0
	cmp r1, #0
	bne _080AD2A6
	ldr r4, _080AD318 @ =0x00001142
	adds r0, r2, r4
	ldrh r0, [r0]
	cmp r0, #3
	bls _080AD2A6
	ldr r1, [r2, #0xc]
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r1, r0
	bhi _080AD2A2
	ldr r0, [r2, #8]
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r2, #8]
_080AD2A2:
	movs r0, #1
	strb r0, [r2, #7]
_080AD2A6:
	ldr r3, [r6]
	ldrb r4, [r3, #7]
	cmp r4, #1
	bne _080AD2FC
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r2, r0
	cmp r2, #0
	bne _080AD2FC
	str r2, [r3, #0xc]
	movs r5, #0x8a
	lsls r5, r5, #5
	adds r0, r3, r5
	movs r1, #0
	strh r2, [r0]
	strb r1, [r3, #7]
	ldr r1, [r6]
	ldr r3, _080AD318 @ =0x00001142
	adds r0, r1, r3
	strh r2, [r0]
	ldrb r0, [r1, #6]
	adds r0, #1
	strb r0, [r1, #6]
	ldr r0, _080AD31C @ =gUnk_08BDA0C0
	ldr r2, [r0, #4]
	movs r3, #2
	ldr r1, [r6]
	ldr r5, _080AD320 @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r3, r0
	blo _080AD2FC
	subs r5, #1
	adds r0, r1, r5
	strb r4, [r0]
	ldr r0, [r6]
	ldr r4, _080AD324 @ =0x00000BBC
	adds r1, r0, r4
	str r2, [r1]
	adds r5, #1
	adds r0, r0, r5
	strb r3, [r0]
_080AD2FC:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD308: .4byte gUnk_03006B90
_080AD30C: .4byte 0x0000072C
_080AD310: .4byte 0x000006AC
_080AD314: .4byte 0xFFFFDFFF
_080AD318: .4byte 0x00001142
_080AD31C: .4byte gUnk_08BDA0C0
_080AD320: .4byte 0x00000BBB
_080AD324: .4byte 0x00000BBC

	thumb_func_start sub_080AD328
sub_080AD328: @ 0x080AD328
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r6, _080AD3DC @ =gUnk_03006B90
	ldr r4, [r6]
	movs r0, #0xe8
	lsls r0, r0, #2
	adds r5, r4, r0
	ldr r1, _080AD3E0 @ =0x0000072C
	adds r0, r4, r1
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_08040EAC
	adds r7, r0, #0
	movs r2, #0
	mov r8, r2
	ldr r0, [r6]
	ldr r0, [r0, #0xc]
	movs r1, #0x3c
	bl __umodsi3
	cmp r0, #0
	bne _080AD35C
	movs r3, #1
	mov r8, r3
_080AD35C:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080AD3B4
	ldr r1, _080AD3E4 @ =0x000006AC
	adds r0, r4, r1
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r7, [r7, #0xd]
	cmp r0, r7
	blo _080AD3B4
	movs r1, #0
	ldr r4, [r6]
	movs r2, #0xcc
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r0, [r0]
	asrs r0, r0, #8
	cmp r0, #0x87
	ble _080AD3A4
	movs r3, #0x8a
	lsls r3, r3, #5
	adds r0, r4, r3
	ldrh r0, [r0]
	movs r1, #3
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
_080AD3A4:
	ldrb r2, [r4, #6]
	movs r0, #0
	bl sub_080ADC84
	ldr r0, [r5, #8]
	ldr r1, _080AD3E8 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r5, #8]
_080AD3B4:
	ldr r0, _080AD3DC @ =gUnk_03006B90
	ldr r2, [r0]
	ldrb r1, [r2, #7]
	adds r6, r0, #0
	cmp r1, #0
	bne _080AD40C
	ldr r4, _080AD3EC @ =0x00001142
	adds r0, r2, r4
	ldrh r0, [r0]
	cmp r0, #5
	bls _080AD40C
	ldr r1, [r2, #0xc]
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r1, r0
	bls _080AD3F0
	movs r0, #1
	strb r0, [r2, #7]
	b _080AD40C
	.align 2, 0
_080AD3DC: .4byte gUnk_03006B90
_080AD3E0: .4byte 0x0000072C
_080AD3E4: .4byte 0x000006AC
_080AD3E8: .4byte 0xFFFFDFFF
_080AD3EC: .4byte 0x00001142
_080AD3F0:
	ldr r0, [r2, #8]
	movs r1, #0x96
	lsls r1, r1, #1
	adds r0, r0, r1
	str r0, [r2, #8]
	movs r0, #1
	strb r0, [r2, #7]
	ldr r1, [r6]
	movs r2, #0x8a
	lsls r2, r2, #5
	adds r1, r1, r2
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AD40C:
	ldr r3, [r6]
	ldrb r4, [r3, #7]
	cmp r4, #1
	bne _080AD462
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r2, r0
	cmp r2, #0
	bne _080AD462
	str r2, [r3, #0xc]
	movs r5, #0x8a
	lsls r5, r5, #5
	adds r0, r3, r5
	movs r1, #0
	strh r2, [r0]
	strb r1, [r3, #7]
	ldr r1, [r6]
	ldr r3, _080AD470 @ =0x00001142
	adds r0, r1, r3
	strh r2, [r0]
	ldrb r0, [r1, #6]
	adds r0, #1
	strb r0, [r1, #6]
	ldr r0, _080AD474 @ =gUnk_08BDA0C0
	ldr r2, [r0, #8]
	movs r3, #2
	ldr r1, [r6]
	ldr r5, _080AD478 @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r3, r0
	blo _080AD462
	subs r5, #1
	adds r0, r1, r5
	strb r4, [r0]
	ldr r0, [r6]
	ldr r4, _080AD47C @ =0x00000BBC
	adds r1, r0, r4
	str r2, [r1]
	adds r5, #1
	adds r0, r0, r5
	strb r3, [r0]
_080AD462:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD470: .4byte 0x00001142
_080AD474: .4byte gUnk_08BDA0C0
_080AD478: .4byte 0x00000BBB
_080AD47C: .4byte 0x00000BBC

	thumb_func_start sub_080AD480
sub_080AD480: @ 0x080AD480
	push {r4, r5, r6, r7, lr}
	ldr r4, _080AD520 @ =gUnk_03006B90
	ldr r0, [r4]
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r5, r0, r1
	ldr r2, _080AD524 @ =0x0000072C
	adds r0, r0, r2
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_08040EAC
	adds r6, r0, #0
	movs r7, #0
	ldr r4, [r4]
	ldr r0, [r4, #0xc]
	movs r1, #0x32
	bl __umodsi3
	cmp r0, #0
	bne _080AD4BE
	movs r3, #0x8a
	lsls r3, r3, #5
	adds r0, r4, r3
	ldrh r0, [r0]
	movs r1, #7
	ands r0, r1
	movs r7, #0x81
	cmp r0, #0
	beq _080AD4BE
	movs r7, #1
_080AD4BE:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080AD560
	movs r4, #0xc3
	lsls r4, r4, #2
	adds r0, r5, r4
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r6, [r6, #0xd]
	cmp r0, r6
	blo _080AD560
	movs r1, #0
	ldr r2, _080AD528 @ =0x0000030D
	adds r0, r5, r2
	ldrb r0, [r0]
	cmp r0, #1
	bne _080AD52C
	ldr r0, _080AD520 @ =gUnk_03006B90
	ldr r4, [r0]
	movs r3, #0xcc
	lsls r3, r3, #1
	adds r0, r4, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	cmp r0, #0x87
	ble _080AD514
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r4, r1
	ldrh r0, [r0]
	movs r1, #3
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r1, r1, #0x1f
_080AD514:
	ldrb r2, [r4, #6]
	movs r0, #0
	bl sub_080ADC84
	b _080AD548
	.align 2, 0
_080AD520: .4byte gUnk_03006B90
_080AD524: .4byte 0x0000072C
_080AD528: .4byte 0x0000030D
_080AD52C:
	ldr r0, _080AD5EC @ =gUnk_03006B90
	ldr r2, [r0]
	movs r3, #0xcc
	lsls r3, r3, #1
	adds r0, r2, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	cmp r0, #0x87
	ble _080AD540
	movs r1, #2
_080AD540:
	ldrb r2, [r2, #6]
	movs r0, #1
	bl sub_080ADC84
_080AD548:
	ldr r0, [r5, #8]
	ldr r1, _080AD5F0 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r0, _080AD5EC @ =gUnk_03006B90
	ldr r1, [r0]
	movs r4, #0x8a
	lsls r4, r4, #5
	adds r1, r1, r4
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AD560:
	ldr r0, _080AD5EC @ =gUnk_03006B90
	ldr r2, [r0]
	ldrb r1, [r2, #7]
	adds r6, r0, #0
	cmp r1, #0
	bne _080AD58E
	ldr r1, _080AD5F4 @ =0x00001142
	adds r0, r2, r1
	ldrh r0, [r0]
	cmp r0, #7
	bls _080AD58E
	ldr r1, [r2, #0xc]
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r1, r0
	bhi _080AD58A
	ldr r0, [r2, #8]
	movs r3, #0x96
	lsls r3, r3, #1
	adds r0, r0, r3
	str r0, [r2, #8]
_080AD58A:
	movs r0, #1
	strb r0, [r2, #7]
_080AD58E:
	ldr r3, [r6]
	ldrb r4, [r3, #7]
	cmp r4, #1
	bne _080AD5E4
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r2, r0
	cmp r2, #0
	bne _080AD5E4
	str r2, [r3, #0xc]
	movs r5, #0x8a
	lsls r5, r5, #5
	adds r0, r3, r5
	movs r1, #0
	strh r2, [r0]
	strb r1, [r3, #7]
	ldr r1, [r6]
	ldr r3, _080AD5F4 @ =0x00001142
	adds r0, r1, r3
	strh r2, [r0]
	ldrb r0, [r1, #6]
	adds r0, #1
	strb r0, [r1, #6]
	ldr r0, _080AD5F8 @ =gUnk_08BDA0C0
	ldr r2, [r0, #0xc]
	movs r3, #2
	ldr r1, [r6]
	ldr r5, _080AD5FC @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r3, r0
	blo _080AD5E4
	subs r5, #1
	adds r0, r1, r5
	strb r4, [r0]
	ldr r0, [r6]
	ldr r4, _080AD600 @ =0x00000BBC
	adds r1, r0, r4
	str r2, [r1]
	adds r5, #1
	adds r0, r0, r5
	strb r3, [r0]
_080AD5E4:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD5EC: .4byte gUnk_03006B90
_080AD5F0: .4byte 0xFFFFDFFF
_080AD5F4: .4byte 0x00001142
_080AD5F8: .4byte gUnk_08BDA0C0
_080AD5FC: .4byte 0x00000BBB
_080AD600: .4byte 0x00000BBC

	thumb_func_start sub_080AD604
sub_080AD604: @ 0x080AD604
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	ldr r4, _080AD6CC @ =gUnk_03006B90
	ldr r0, [r4]
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r6, r0, r1
	ldr r3, _080AD6D0 @ =0x0000072C
	adds r0, r0, r3
	ldrb r1, [r0]
	adds r0, r6, #0
	bl sub_08040EAC
	adds r5, r0, #0
	movs r0, #0
	mov r8, r0
	ldr r4, [r4]
	ldr r0, [r4, #0xc]
	movs r1, #0x1e
	bl __umodsi3
	cmp r0, #0
	bne _080AD64C
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r4, r1
	ldrh r0, [r0]
	movs r1, #3
	ands r0, r1
	movs r3, #0x21
	mov r8, r3
	cmp r0, #0
	beq _080AD64C
	movs r4, #0x41
	mov r8, r4
_080AD64C:
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080AD70E
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r0, r6, r1
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r5, [r5, #0xd]
	cmp r0, r5
	blo _080AD70E
	movs r7, #0
	ldr r3, _080AD6D4 @ =0x0000030D
	adds r0, r6, r3
	ldrb r0, [r0]
	cmp r0, #1
	bne _080AD6D8
	ldr r0, _080AD6CC @ =gUnk_03006B90
	ldr r4, [r0]
	movs r1, #0xcc
	lsls r1, r1, #1
	adds r0, r4, r1
	ldr r0, [r0]
	asrs r5, r0, #8
	cmp r5, #0x87
	ble _080AD6A2
	movs r3, #0x8a
	lsls r3, r3, #5
	adds r0, r4, r3
	ldrh r0, [r0]
	movs r1, #3
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	rsbs r1, r0, #0
	orrs r1, r0
	lsrs r7, r1, #0x1f
_080AD6A2:
	cmp r5, #0x2e
	bgt _080AD6BC
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r4, r1
	ldrh r0, [r0]
	movs r1, #3
	bl __umodsi3
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AD6BC
	movs r7, #2
_080AD6BC:
	adds r1, r7, #0
	ldr r0, _080AD6CC @ =gUnk_03006B90
	ldr r0, [r0]
	ldrb r2, [r0, #6]
	movs r0, #0
	bl sub_080ADC84
	b _080AD6F6
	.align 2, 0
_080AD6CC: .4byte gUnk_03006B90
_080AD6D0: .4byte 0x0000072C
_080AD6D4: .4byte 0x0000030D
_080AD6D8:
	ldr r0, _080AD7A0 @ =gUnk_03006B90
	ldr r2, [r0]
	movs r3, #0xcc
	lsls r3, r3, #1
	adds r0, r2, r3
	ldr r0, [r0]
	asrs r0, r0, #8
	cmp r0, #0x2e
	bgt _080AD6EC
	movs r7, #2
_080AD6EC:
	adds r1, r7, #0
	ldrb r2, [r2, #6]
	movs r0, #1
	bl sub_080ADC84
_080AD6F6:
	ldr r0, [r6, #8]
	ldr r1, _080AD7A4 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r6, #8]
	ldr r0, _080AD7A0 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r4, #0x8a
	lsls r4, r4, #5
	adds r1, r1, r4
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AD70E:
	ldr r0, _080AD7A0 @ =gUnk_03006B90
	ldr r2, [r0]
	ldrb r1, [r2, #7]
	adds r5, r0, #0
	cmp r1, #0
	bne _080AD73C
	ldr r1, _080AD7A8 @ =0x00001142
	adds r0, r2, r1
	ldrh r0, [r0]
	cmp r0, #9
	bls _080AD73C
	ldr r1, [r2, #0xc]
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r1, r0
	bhi _080AD738
	ldr r0, [r2, #8]
	movs r3, #0x96
	lsls r3, r3, #1
	adds r0, r0, r3
	str r0, [r2, #8]
_080AD738:
	movs r0, #1
	strb r0, [r2, #7]
_080AD73C:
	ldr r3, [r5]
	ldrb r4, [r3, #7]
	cmp r4, #1
	bne _080AD792
	ldr r2, [r6, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r2, r0
	cmp r2, #0
	bne _080AD792
	str r2, [r3, #0xc]
	movs r6, #0x8a
	lsls r6, r6, #5
	adds r0, r3, r6
	movs r1, #0
	strh r2, [r0]
	strb r1, [r3, #7]
	ldr r1, [r5]
	ldr r3, _080AD7A8 @ =0x00001142
	adds r0, r1, r3
	strh r2, [r0]
	ldrb r0, [r1, #6]
	adds r0, #1
	strb r0, [r1, #6]
	ldr r0, _080AD7AC @ =gUnk_08BDA0C0
	ldr r2, [r0, #0x10]
	movs r3, #2
	ldr r1, [r5]
	ldr r6, _080AD7B0 @ =0x00000BBB
	adds r0, r1, r6
	ldrb r0, [r0]
	cmp r3, r0
	blo _080AD792
	subs r6, #1
	adds r0, r1, r6
	strb r4, [r0]
	ldr r0, [r5]
	ldr r4, _080AD7B4 @ =0x00000BBC
	adds r1, r0, r4
	str r2, [r1]
	adds r6, #1
	adds r0, r0, r6
	strb r3, [r0]
_080AD792:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD7A0: .4byte gUnk_03006B90
_080AD7A4: .4byte 0xFFFFDFFF
_080AD7A8: .4byte 0x00001142
_080AD7AC: .4byte gUnk_08BDA0C0
_080AD7B0: .4byte 0x00000BBB
_080AD7B4: .4byte 0x00000BBC

	thumb_func_start sub_080AD7B8
sub_080AD7B8: @ 0x080AD7B8
	push {r4, r5, r6, r7, lr}
	ldr r4, _080AD840 @ =gUnk_03006B90
	ldr r0, [r4]
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r5, r0, r1
	ldr r3, _080AD844 @ =0x0000072C
	adds r0, r0, r3
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_08040EAC
	adds r6, r0, #0
	movs r7, #0
	ldr r4, [r4]
	ldr r0, [r4, #0xc]
	movs r1, #0x2d
	bl __umodsi3
	cmp r0, #0
	bne _080AD7FA
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r4, r1
	ldrh r0, [r0]
	movs r1, #5
	bl __umodsi3
	lsls r0, r0, #0x10
	movs r7, #0x41
	cmp r0, #0
	beq _080AD7FA
	movs r7, #0x21
_080AD7FA:
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080AD8A2
	movs r3, #0xc3
	lsls r3, r3, #2
	adds r0, r5, r3
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r6, [r6, #0xd]
	cmp r0, r6
	blo _080AD8A2
	movs r4, #0
	ldr r0, _080AD840 @ =gUnk_03006B90
	ldr r0, [r0]
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r0, r1
	ldrh r0, [r0]
	movs r1, #5
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AD858
	cmp r0, #1
	bgt _080AD848
	cmp r0, #0
	beq _080AD84E
	b _080AD856
	.align 2, 0
_080AD840: .4byte gUnk_03006B90
_080AD844: .4byte 0x0000072C
_080AD848:
	cmp r0, #2
	beq _080AD852
	b _080AD856
_080AD84E:
	movs r4, #1
	b _080AD858
_080AD852:
	movs r4, #2
	b _080AD858
_080AD856:
	movs r4, #0
_080AD858:
	ldr r3, _080AD874 @ =0x0000030D
	adds r0, r5, r3
	ldrb r0, [r0]
	cmp r0, #1
	bne _080AD87C
	adds r1, r4, #0
	ldr r0, _080AD878 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrb r2, [r0, #6]
	movs r0, #0
	bl sub_080ADC84
	b _080AD88A
	.align 2, 0
_080AD874: .4byte 0x0000030D
_080AD878: .4byte gUnk_03006B90
_080AD87C:
	adds r1, r4, #0
	ldr r0, _080AD930 @ =gUnk_03006B90
	ldr r0, [r0]
	ldrb r2, [r0, #6]
	movs r0, #1
	bl sub_080ADC84
_080AD88A:
	ldr r0, [r5, #8]
	ldr r1, _080AD934 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r5, #8]
	ldr r0, _080AD930 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r4, #0x8a
	lsls r4, r4, #5
	adds r1, r1, r4
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AD8A2:
	ldr r0, _080AD930 @ =gUnk_03006B90
	ldr r2, [r0]
	ldrb r1, [r2, #7]
	adds r6, r0, #0
	cmp r1, #0
	bne _080AD8D0
	ldr r1, _080AD938 @ =0x00001142
	adds r0, r2, r1
	ldrh r0, [r0]
	cmp r0, #1
	bls _080AD8D0
	ldr r1, [r2, #0xc]
	movs r0, #0x96
	lsls r0, r0, #2
	cmp r1, r0
	bhi _080AD8CC
	ldr r0, [r2, #8]
	movs r3, #0x96
	lsls r3, r3, #1
	adds r0, r0, r3
	str r0, [r2, #8]
_080AD8CC:
	movs r0, #1
	strb r0, [r2, #7]
_080AD8D0:
	ldr r3, [r6]
	ldrb r4, [r3, #7]
	cmp r4, #1
	bne _080AD926
	ldr r2, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r2, r0
	cmp r2, #0
	bne _080AD926
	str r2, [r3, #0xc]
	movs r5, #0x8a
	lsls r5, r5, #5
	adds r0, r3, r5
	movs r1, #0
	strh r2, [r0]
	strb r1, [r3, #7]
	ldr r1, [r6]
	ldr r3, _080AD938 @ =0x00001142
	adds r0, r1, r3
	strh r2, [r0]
	ldrb r0, [r1, #6]
	adds r0, #1
	strb r0, [r1, #6]
	ldr r0, _080AD93C @ =gUnk_08BDA0C0
	ldr r2, [r0, #0x14]
	movs r3, #2
	ldr r1, [r6]
	ldr r5, _080AD940 @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r3, r0
	blo _080AD926
	subs r5, #1
	adds r0, r1, r5
	strb r4, [r0]
	ldr r0, [r6]
	ldr r4, _080AD944 @ =0x00000BBC
	adds r1, r0, r4
	str r2, [r1]
	adds r5, #1
	adds r0, r0, r5
	strb r3, [r0]
_080AD926:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AD930: .4byte gUnk_03006B90
_080AD934: .4byte 0xFFFFDFFF
_080AD938: .4byte 0x00001142
_080AD93C: .4byte gUnk_08BDA0C0
_080AD940: .4byte 0x00000BBB
_080AD944: .4byte 0x00000BBC

	thumb_func_start sub_080AD948
sub_080AD948: @ 0x080AD948
	push {r4, r5, r6, r7, lr}
	ldr r4, _080AD994 @ =gUnk_03006B90
	ldr r0, [r4]
	movs r1, #0xe8
	lsls r1, r1, #2
	adds r6, r0, r1
	ldr r1, _080AD998 @ =0x0000072C
	adds r0, r0, r1
	ldrb r1, [r0]
	adds r0, r6, #0
	bl sub_08040EAC
	adds r5, r0, #0
	movs r7, #0
	ldr r4, [r4]
	ldr r0, [r4, #0xc]
	movs r1, #0x1e
	bl __umodsi3
	cmp r0, #0
	bne _080AD9BA
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r4, r1
	ldrh r0, [r0]
	movs r1, #6
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #5
	bhi _080AD9BA
	lsls r0, r0, #2
	ldr r1, _080AD99C @ =_080AD9A0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AD994: .4byte gUnk_03006B90
_080AD998: .4byte 0x0000072C
_080AD99C: .4byte _080AD9A0
_080AD9A0: @ jump table
	.4byte _080AD9B8 @ case 0
	.4byte _080AD9B8 @ case 1
	.4byte _080AD9B8 @ case 2
	.4byte _080AD9B8 @ case 3
	.4byte _080AD9B8 @ case 4
	.4byte _080AD9B8 @ case 5
_080AD9B8:
	movs r7, #0x41
_080AD9BA:
	ldr r0, [r6, #8]
	movs r1, #0x80
	lsls r1, r1, #6
	ands r0, r1
	cmp r0, #0
	beq _080ADA9A
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r0, r6, r1
	bl sub_0800A80C
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	ldrb r5, [r5, #0xd]
	cmp r0, r5
	blo _080ADA9A
	movs r5, #0
	ldr r0, _080ADA00 @ =gUnk_03006B90
	ldr r0, [r0]
	movs r1, #0x8a
	lsls r1, r1, #5
	adds r0, r0, r1
	ldrh r0, [r0]
	movs r1, #5
	bl __umodsi3
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080ADA14
	cmp r0, #1
	bgt _080ADA04
	cmp r0, #0
	beq _080ADA0A
	b _080ADA12
	.align 2, 0
_080ADA00: .4byte gUnk_03006B90
_080ADA04:
	cmp r0, #2
	beq _080ADA0E
	b _080ADA12
_080ADA0A:
	movs r5, #1
	b _080ADA14
_080ADA0E:
	movs r5, #2
	b _080ADA14
_080ADA12:
	movs r5, #0
_080ADA14:
	ldr r1, _080ADA60 @ =0x0000030D
	adds r0, r6, r1
	ldrb r0, [r0]
	cmp r0, #1
	bne _080ADA68
	ldr r4, _080ADA64 @ =gUnk_03006B90
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #0
	adds r1, r5, #0
	bl sub_080ADC84
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #0
	adds r1, r5, #0
	bl sub_080ADC84
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #0
	movs r1, #0
	bl sub_080ADC84
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #0
	movs r1, #0
	bl sub_080ADC84
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #0
	movs r1, #0
	bl sub_080ADC84
	b _080ADA82
	.align 2, 0
_080ADA60: .4byte 0x0000030D
_080ADA64: .4byte gUnk_03006B90
_080ADA68:
	adds r1, r5, #0
	ldr r4, _080ADAA4 @ =gUnk_03006B90
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #1
	bl sub_080ADC84
	ldr r0, [r4]
	ldrb r2, [r0, #6]
	movs r0, #1
	movs r1, #0
	bl sub_080ADC84
_080ADA82:
	ldr r0, [r6, #8]
	ldr r1, _080ADAA8 @ =0xFFFFDFFF
	ands r0, r1
	str r0, [r6, #8]
	ldr r0, _080ADAA4 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r0, #0x8a
	lsls r0, r0, #5
	adds r1, r1, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080ADA9A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080ADAA4: .4byte gUnk_03006B90
_080ADAA8: .4byte 0xFFFFDFFF

	thumb_func_start sub_080ADAAC
sub_080ADAAC: @ 0x080ADAAC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x30
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	adds r5, r0, #0
	movs r1, #4
	bl sub_08001D78
	adds r6, r0, #0
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x10]
	ldr r4, _080ADC70 @ =0x06014C00
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	adds r1, r4, #0
	bl CpuFastSet
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1a
	bl sub_08010D40
	movs r0, #4
	mov r1, sp
	adds r2, r4, #0
	adds r3, r6, #0
	bl sub_08009334
	adds r0, r5, #0
	movs r1, #5
	bl sub_08001D78
	adds r4, r0, #0
	add r1, sp, #0x1c
	bl sub_08001D98
	movs r0, #4
	movs r1, #4
	adds r2, r4, #0
	bl sub_0800A630
	adds r0, r5, #0
	movs r1, #6
	bl sub_08001D78
	ldr r2, _080ADC74 @ =gUnk_03006B90
	ldr r1, [r2]
	ldr r3, _080ADC78 @ =0x00001138
	adds r1, r1, r3
	str r0, [r1]
	movs r0, #0
	mov r8, r0
	mov sb, r2
	ldr r7, _080ADC7C @ =0x00000BE8
_080ADB2C:
	mov r1, sb
	ldr r5, [r1]
	adds r5, r5, r7
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0x78
	movs r2, #0x3c
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #3
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A680
	movs r6, #0
	strb r6, [r5]
	strb r6, [r5, #1]
	adds r0, r7, #0
	adds r0, #0x44
	mov r3, sb
	ldr r5, [r3]
	adds r5, r5, r0
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0x78
	movs r2, #0x3c
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #3
	movs r2, #2
	bl sub_0800A6C4
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A680
	strb r6, [r5]
	strb r6, [r5, #1]
	adds r7, #0x88
	movs r0, #2
	add r8, r0
	mov r1, r8
	cmp r1, #0x13
	bls _080ADB2C
	ldr r4, _080ADC74 @ =gUnk_03006B90
	ldr r0, [r4]
	ldr r5, _080ADC80 @ =0x00001170
	adds r0, r0, r5
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #4
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0x78
	movs r2, #0x3c
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0xa
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #5
	movs r2, #2
	bl sub_0800A6C4
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	ldr r0, [r4]
	adds r5, #0x28
	adds r0, r0, r5
	bl sub_08009F0C
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #4
	movs r2, #6
	movs r3, #0
	bl sub_08009F50
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0x78
	movs r2, #0x3c
	bl sub_0800A678
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0xa
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #6
	movs r2, #2
	bl sub_0800A6C4
	ldr r0, [r4]
	adds r0, r0, r5
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	add sp, #0x30
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080ADC70: .4byte 0x06014C00
_080ADC74: .4byte gUnk_03006B90
_080ADC78: .4byte 0x00001138
_080ADC7C: .4byte 0x00000BE8
_080ADC80: .4byte 0x00001170

	thumb_func_start sub_080ADC84
sub_080ADC84: @ 0x080ADC84
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	movs r4, #0
	ldr r0, _080ADCD4 @ =gUnk_03006B90
	mov ip, r0
	mov r8, r4
	ldr r3, _080ADCD8 @ =0x00000BE8
_080ADCA2:
	mov r1, ip
	ldr r0, [r1]
	adds r5, r0, r3
	ldrb r1, [r5]
	cmp r1, #0
	beq _080ADCB0
	b _080ADDD0
_080ADCB0:
	movs r0, #1
	strb r0, [r5]
	movs r0, #5
	strb r0, [r5, #2]
	strb r1, [r5, #3]
	strb r7, [r5, #1]
	strh r2, [r5, #4]
	cmp r7, #0
	bne _080ADCDC
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	b _080ADCEC
	.align 2, 0
_080ADCD4: .4byte gUnk_03006B90
_080ADCD8: .4byte 0x00000BE8
_080ADCDC:
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	movs r1, #4
	movs r2, #4
	movs r3, #0
	bl sub_08009F50
_080ADCEC:
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A680
	mov r2, r8
	strh r2, [r5, #0xa]
	cmp r7, #0
	bne _080ADD08
	movs r0, #0x18
	bl sub_0800180C
	adds r0, #1
	b _080ADD10
_080ADD08:
	movs r0, #0xc
	bl sub_0800180C
	adds r0, #8
_080ADD10:
	strh r0, [r5, #8]
	ldrh r1, [r5, #0xa]
	adds r0, r4, #0
	movs r2, #0
	bl sub_0800A74C
	cmp r6, #1
	beq _080ADD4E
	cmp r6, #1
	bgt _080ADD2A
	cmp r6, #0
	beq _080ADD30
	b _080ADD84
_080ADD2A:
	cmp r6, #2
	beq _080ADD66
	b _080ADD84
_080ADD30:
	movs r0, #0x80
	bl sub_0800180C
	movs r1, #0x90
	lsls r1, r1, #1
	adds r0, r0, r1
	strh r0, [r5, #0xc]
	movs r0, #0xc0
	lsls r0, r0, #1
	bl sub_0800180C
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r0, r0, r2
	b _080ADD82
_080ADD4E:
	movs r0, #0x40
	bl sub_0800180C
	adds r0, #0xa0
	strh r0, [r5, #0xc]
	movs r0, #0xc0
	lsls r0, r0, #1
	bl sub_0800180C
	movs r1, #0x94
	lsls r1, r1, #3
	b _080ADD80
_080ADD66:
	movs r0, #0x80
	bl sub_0800180C
	movs r2, #0xc8
	lsls r2, r2, #2
	adds r0, r0, r2
	strh r0, [r5, #0xc]
	movs r0, #0x80
	lsls r0, r0, #2
	bl sub_0800180C
	movs r1, #0x90
	lsls r1, r1, #1
_080ADD80:
	adds r0, r0, r1
_080ADD82:
	strh r0, [r5, #0xe]
_080ADD84:
	mov r2, r8
	strh r2, [r5, #0x10]
	movs r0, #6
	bl sub_0800180C
	adds r0, #0x10
	strh r0, [r5, #0x12]
	ldr r0, _080ADDC4 @ =gUnk_03006B90
	ldr r1, [r0]
	movs r2, #0xa5
	lsls r2, r2, #3
	adds r0, r1, r2
	ldr r0, [r0]
	str r0, [r5, #0x14]
	ldr r0, _080ADDC8 @ =0x0000052C
	adds r1, r1, r0
	ldr r0, [r1]
	ldr r1, _080ADDCC @ =0xFFFFE800
	adds r0, r0, r1
	str r0, [r5, #0x18]
	mov r2, r8
	str r2, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0x92
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080ADDDA
	.align 2, 0
_080ADDC4: .4byte gUnk_03006B90
_080ADDC8: .4byte 0x0000052C
_080ADDCC: .4byte 0xFFFFE800
_080ADDD0:
	adds r3, #0x44
	adds r4, #1
	cmp r4, #0x13
	bhi _080ADDDA
	b _080ADCA2
_080ADDDA:
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080ADDE8
sub_080ADDE8: @ 0x080ADDE8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r0, #0
	mov sl, r0
	ldr r1, _080ADE58 @ =gUnk_03006B90
	mov r8, r1
	ldr r2, _080ADE5C @ =0x00000BE8
	mov sb, r2
_080ADDFE:
	mov r3, r8
	ldr r0, [r3]
	mov r4, sb
	adds r5, r0, r4
	ldrb r0, [r5]
	cmp r0, #0
	bne _080ADE0E
	b _080ADF88
_080ADE0E:
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	bl sub_08009FF8
	ldrb r0, [r5]
	subs r0, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	adds r7, r4, #0
	cmp r0, #1
	bls _080ADE28
	b _080ADF3A
_080ADE28:
	movs r0, #0xc
	ldrsh r1, [r5, r0]
	ldr r0, [r5, #0x14]
	subs r0, r0, r1
	str r0, [r5, #0x14]
	movs r2, #0xe
	ldrsh r1, [r5, r2]
	ldr r0, [r5, #0x18]
	subs r0, r0, r1
	movs r3, #0x10
	ldrsh r1, [r5, r3]
	adds r0, r0, r1
	str r0, [r5, #0x18]
	ldrh r2, [r5, #0x10]
	movs r0, #0xfa
	lsls r0, r0, #3
	cmp r1, r0
	ble _080ADE60
	movs r1, #0x12
	ldrsh r0, [r5, r1]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	b _080ADE62
	.align 2, 0
_080ADE58: .4byte gUnk_03006B90
_080ADE5C: .4byte 0x00000BE8
_080ADE60:
	ldrh r0, [r5, #0x12]
_080ADE62:
	adds r0, r2, r0
	strh r0, [r5, #0x10]
	ldrh r0, [r5, #8]
	ldrh r3, [r5, #0xa]
	adds r2, r0, r3
	movs r4, #0
	strh r2, [r5, #0xa]
	lsls r1, r2, #0x10
	movs r0, #0xb4
	lsls r0, r0, #0x11
	cmp r1, r0
	bls _080ADE80
	ldr r1, _080ADEB0 @ =0xFFFFFE98
	adds r0, r2, r1
	strh r0, [r5, #0xa]
_080ADE80:
	ldrh r1, [r5, #0xa]
	adds r0, r7, #0
	movs r2, #0
	bl sub_0800A74C
	ldr r0, [r5, #0x14]
	asrs r2, r0, #8
	ldr r6, _080ADEB4 @ =gUnk_03006B90
	ldr r1, [r6]
	ldr r3, _080ADEB8 @ =0x00000A72
	adds r0, r1, r3
	movs r3, #0
	ldrsh r0, [r0, r3]
	subs r0, #0x20
	cmp r2, r0
	bge _080ADEC0
	strb r4, [r5]
	ldrb r0, [r5, #1]
	cmp r0, #0
	bne _080ADF3A
	ldr r0, [r6]
	ldr r4, _080ADEBC @ =0x0000113E
	adds r0, r0, r4
	b _080ADEFA
	.align 2, 0
_080ADEB0: .4byte 0xFFFFFE98
_080ADEB4: .4byte gUnk_03006B90
_080ADEB8: .4byte 0x00000A72
_080ADEBC: .4byte 0x0000113E
_080ADEC0:
	ldr r3, _080ADEDC @ =0x00000A74
	adds r0, r1, r3
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r2, r0
	ble _080ADEE4
	strb r4, [r5]
	ldrb r0, [r5, #1]
	cmp r0, #0
	bne _080ADF3A
	ldr r0, [r6]
	ldr r2, _080ADEE0 @ =0x0000113E
	adds r0, r0, r2
	b _080ADEFA
	.align 2, 0
_080ADEDC: .4byte 0x00000A74
_080ADEE0: .4byte 0x0000113E
_080ADEE4:
	ldr r0, [r5, #0x18]
	asrs r0, r0, #8
	cmp r0, #0xa0
	ble _080ADF3A
	strb r4, [r5]
	ldrb r0, [r5, #1]
	cmp r0, #0
	bne _080ADF3A
	ldr r0, [r6]
	ldr r3, _080ADF60 @ =0x0000113E
	adds r0, r0, r3
_080ADEFA:
	ldrh r4, [r0]
	movs r0, #5
	bl sub_0800180C
	adds r0, #5
	cmp r4, r0
	ble _080ADF2E
	ldr r0, _080ADF64 @ =gUnk_08BDA0C0
	ldr r3, [r0, #0x3c]
	movs r2, #1
	ldr r1, [r6]
	ldr r4, _080ADF68 @ =0x00000BBB
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r2, r0
	blo _080ADF2E
	subs r4, #1
	adds r0, r1, r4
	strb r2, [r0]
	ldr r1, [r6]
	adds r4, #2
	adds r0, r1, r4
	str r3, [r0]
	ldr r0, _080ADF68 @ =0x00000BBB
	adds r1, r1, r0
	strb r2, [r1]
_080ADF2E:
	mov r1, r8
	ldr r0, [r1]
	ldr r2, _080ADF60 @ =0x0000113E
	adds r0, r0, r2
	movs r1, #0
	strh r1, [r0]
_080ADF3A:
	ldrb r1, [r5]
	subs r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080ADF88
	cmp r1, #3
	bne _080ADF6C
	adds r0, r7, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080ADF88
	movs r0, #0
	strb r0, [r5]
	b _080ADF88
	.align 2, 0
_080ADF60: .4byte 0x0000113E
_080ADF64: .4byte gUnk_08BDA0C0
_080ADF68: .4byte 0x00000BBB
_080ADF6C:
	ldrb r0, [r5, #3]
	cmp r0, #0
	bne _080ADF84
	movs r0, #1
	strb r0, [r5]
	adds r0, r7, #0
	movs r1, #4
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	b _080ADF88
_080ADF84:
	subs r0, #1
	strb r0, [r5, #3]
_080ADF88:
	movs r3, #0x44
	add sb, r3
	movs r4, #1
	add sl, r4
	mov r0, sl
	cmp r0, #0x13
	bhi _080ADF98
	b _080ADDFE
_080ADF98:
	ldr r4, _080ADFBC @ =gUnk_03006B90
	ldr r0, [r4]
	ldr r1, _080ADFC0 @ =0x00001170
	adds r0, r0, r1
	bl sub_08009FF8
	ldr r0, [r4]
	ldr r2, _080ADFC4 @ =0x00001198
	adds r0, r0, r2
	bl sub_08009FF8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080ADFBC: .4byte gUnk_03006B90
_080ADFC0: .4byte 0x00001170
_080ADFC4: .4byte 0x00001198

	thumb_func_start sub_080ADFC8
sub_080ADFC8: @ 0x080ADFC8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	movs r6, #0
	ldr r0, _080AE0C4 @ =gUnk_03006B90
	mov r8, r0
	ldr r5, _080AE0C8 @ =0x00000BE8
_080ADFD6:
	mov r1, r8
	ldr r3, [r1]
	adds r4, r3, r5
	ldrb r0, [r4]
	cmp r0, #0
	beq _080AE010
	ldr r1, [r4, #0x14]
	asrs r1, r1, #8
	ldr r2, _080AE0CC @ =0x000007D6
	adds r0, r3, r2
	ldrh r0, [r0]
	subs r1, r1, r0
	ldr r2, [r4, #0x18]
	asrs r2, r2, #8
	ldr r7, _080AE0D0 @ =0x000007DA
	adds r0, r3, r7
	ldrh r0, [r0]
	subs r2, r2, r0
	adds r4, #0x1c
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080AE010:
	adds r0, r5, #0
	adds r0, #0x44
	mov r1, r8
	ldr r3, [r1]
	adds r4, r3, r0
	ldrb r0, [r4]
	cmp r0, #0
	beq _080AE04E
	ldr r1, [r4, #0x14]
	asrs r1, r1, #8
	ldr r2, _080AE0CC @ =0x000007D6
	adds r0, r3, r2
	ldrh r0, [r0]
	subs r1, r1, r0
	ldr r2, [r4, #0x18]
	asrs r2, r2, #8
	ldr r7, _080AE0D0 @ =0x000007DA
	adds r0, r3, r7
	ldrh r0, [r0]
	subs r2, r2, r0
	adds r4, #0x1c
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
_080AE04E:
	adds r5, #0x88
	adds r6, #2
	cmp r6, #0x13
	bls _080ADFD6
	ldr r0, _080AE0C4 @ =gUnk_03006B90
	mov r8, r0
	ldr r0, [r0]
	ldr r5, _080AE0CC @ =0x000007D6
	adds r1, r0, r5
	ldrh r2, [r1]
	movs r1, #0xb0
	subs r1, r1, r2
	ldr r4, _080AE0D0 @ =0x000007DA
	adds r2, r0, r4
	ldrh r3, [r2]
	movs r2, #0x98
	subs r2, r2, r3
	ldr r6, _080AE0D4 @ =0x00001170
	adds r0, r0, r6
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0800A678
	mov r1, r8
	ldr r0, [r1]
	adds r0, r0, r6
	bl sub_0800A778
	mov r2, r8
	ldr r0, [r2]
	adds r5, r0, r5
	ldrh r2, [r5]
	movs r1, #0xf0
	subs r1, r1, r2
	adds r4, r0, r4
	ldrh r3, [r4]
	movs r2, #0x8c
	subs r2, r2, r3
	ldr r4, _080AE0D8 @ =0x00001198
	adds r0, r0, r4
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0800A678
	mov r7, r8
	ldr r0, [r7]
	adds r0, r0, r4
	bl sub_0800A778
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AE0C4: .4byte gUnk_03006B90
_080AE0C8: .4byte 0x00000BE8
_080AE0CC: .4byte 0x000007D6
_080AE0D0: .4byte 0x000007DA
_080AE0D4: .4byte 0x00001170
_080AE0D8: .4byte 0x00001198

	thumb_func_start sub_080AE0DC
sub_080AE0DC: @ 0x080AE0DC
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r5, r0, #0
	adds r6, r1, #0
	cmp r2, #0xff
	bne _080AE0EA
	movs r2, #0xa
_080AE0EA:
	ldrb r0, [r5, #2]
	subs r0, r0, r2
	movs r7, #0
	strb r0, [r5, #2]
	lsls r0, r0, #0x18
	cmp r0, #0
	ble _080AE0FA
	b _080AE218
_080AE0FA:
	adds r4, r5, #0
	adds r4, #0x1c
	adds r0, r4, #0
	movs r1, #4
	movs r2, #1
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A74C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	movs r0, #3
	strb r0, [r5]
	strh r7, [r5, #0xa]
	strh r7, [r5, #8]
	ldr r4, _080AE194 @ =gUnk_03006B90
	ldr r2, [r4]
	ldr r0, _080AE198 @ =0x0000113C
	adds r1, r2, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldr r7, _080AE19C @ =0x0000113E
	adds r1, r2, r7
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	ldrb r0, [r2, #6]
	ldrh r5, [r5, #4]
	cmp r0, r5
	bne _080AE150
	ldr r3, _080AE1A0 @ =0x00001142
	adds r1, r2, r3
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
_080AE150:
	movs r5, #0xbc
	lsls r5, r5, #1
	adds r3, r6, r5
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r6, r0
	movs r2, #0x8a
	lsls r2, r2, #1
	adds r0, r0, r2
	ldrh r1, [r0]
	adds r1, #0x64
	strh r1, [r0]
	ldrb r1, [r3]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r6, r0
	adds r2, r0, r2
	movs r1, #0
	ldrsh r0, [r2, r1]
	ldr r1, _080AE1A4 @ =0x0000639C
	cmp r0, r1
	ble _080AE184
	strh r1, [r2]
_080AE184:
	ldr r1, [r4]
	adds r0, r1, r7
	ldrh r0, [r0]
	cmp r0, #5
	bne _080AE1AC
	ldr r0, _080AE1A8 @ =gUnk_08BDA0C0
	ldr r3, [r0, #0x2c]
	b _080AE1D4
	.align 2, 0
_080AE194: .4byte gUnk_03006B90
_080AE198: .4byte 0x0000113C
_080AE19C: .4byte 0x0000113E
_080AE1A0: .4byte 0x00001142
_080AE1A4: .4byte 0x0000639C
_080AE1A8: .4byte gUnk_08BDA0C0
_080AE1AC:
	cmp r0, #9
	bne _080AE1BC
	ldr r0, _080AE1B8 @ =gUnk_08BDA0C0
	ldr r3, [r0, #0x30]
	b _080AE1D4
	.align 2, 0
_080AE1B8: .4byte gUnk_08BDA0C0
_080AE1BC:
	cmp r0, #0xf
	bne _080AE1CC
	ldr r0, _080AE1C8 @ =gUnk_08BDA0C0
	ldr r3, [r0, #0x34]
	b _080AE1D4
	.align 2, 0
_080AE1C8: .4byte gUnk_08BDA0C0
_080AE1CC:
	cmp r0, #0x19
	bne _080AE1F4
	ldr r0, _080AE20C @ =gUnk_08BDA0C0
	ldr r3, [r0, #0x38]
_080AE1D4:
	movs r2, #1
	ldr r5, _080AE210 @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r2, r0
	blo _080AE1F4
	subs r5, #1
	adds r0, r1, r5
	strb r2, [r0]
	ldr r0, [r4]
	ldr r4, _080AE214 @ =0x00000BBC
	adds r1, r0, r4
	str r3, [r1]
	adds r5, #1
	adds r0, r0, r5
	strb r2, [r0]
_080AE1F4:
	movs r0, #0x84
	lsls r0, r0, #1
	movs r1, #0
	str r1, [sp]
	movs r1, #1
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080AE256
	.align 2, 0
_080AE20C: .4byte gUnk_08BDA0C0
_080AE210: .4byte 0x00000BBB
_080AE214: .4byte 0x00000BBC
_080AE218:
	adds r0, r5, #0
	adds r0, #0x1c
	movs r1, #4
	movs r2, #2
	movs r3, #0
	bl sub_08009F50
	movs r0, #2
	strb r0, [r5]
	movs r0, #0xa
	strb r0, [r5, #3]
	ldr r1, _080AE290 @ =0xFFFFFE00
	adds r0, r1, #0
	ldrh r2, [r5, #0xe]
	adds r0, r0, r2
	strh r0, [r5, #0x10]
	movs r3, #0xc
	ldrsh r0, [r5, r3]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	strh r0, [r5, #0xc]
	str r7, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x98
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080AE256:
	adds r0, r6, #0
	bl sub_080492E0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080AE294 @ =gUnk_03006B90
	ldr r4, [r1]
	ldr r5, _080AE298 @ =0x00001270
	adds r4, r4, r5
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r6, r2
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r5, #0xd0
	lsls r5, r5, #1
	adds r1, r6, r5
	movs r5, #0
	ldrsh r3, [r1, r5]
	str r0, [sp]
	str r6, [sp, #4]
	adds r0, r4, #0
	movs r1, #1
	bl sub_0803D860
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AE290: .4byte 0xFFFFFE00
_080AE294: .4byte gUnk_03006B90
_080AE298: .4byte 0x00001270

	thumb_func_start sub_080AE29C
sub_080AE29C: @ 0x080AE29C
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r5, r1, #0
	adds r7, r2, #0
	adds r0, #0x1c
	movs r1, #0
	movs r2, #0
	bl sub_0800A74C
	movs r0, #0
	strb r0, [r4]
	strh r0, [r4, #0xa]
	strh r0, [r4, #8]
	ldr r6, _080AE2D4 @ =gUnk_03006B90
	ldr r3, [r6]
	ldr r0, _080AE2D8 @ =0x00001144
	adds r1, r3, r0
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #1
	bne _080AE2E0
	ldr r0, _080AE2DC @ =gUnk_08BDA0C0
	ldr r4, [r0, #0x40]
	b _080AE2FA
	.align 2, 0
_080AE2D4: .4byte gUnk_03006B90
_080AE2D8: .4byte 0x00001144
_080AE2DC: .4byte gUnk_08BDA0C0
_080AE2E0:
	cmp r2, #4
	bne _080AE2F0
	ldr r0, _080AE2EC @ =gUnk_08BDA0C0
	ldr r4, [r0, #0x44]
	b _080AE2F8
	.align 2, 0
_080AE2EC: .4byte gUnk_08BDA0C0
_080AE2F0:
	cmp r2, #8
	bne _080AE318
	ldr r0, _080AE350 @ =gUnk_08BDA0C0
	ldr r4, [r0, #0x48]
_080AE2F8:
	movs r2, #1
_080AE2FA:
	ldr r1, _080AE354 @ =0x00000BBB
	adds r0, r3, r1
	ldrb r0, [r0]
	cmp r2, r0
	blo _080AE318
	subs r1, #1
	adds r0, r3, r1
	strb r2, [r0]
	ldr r0, [r6]
	ldr r3, _080AE358 @ =0x00000BBC
	adds r1, r0, r3
	str r4, [r1]
	ldr r6, _080AE354 @ =0x00000BBB
	adds r0, r0, r6
	strb r2, [r0]
_080AE318:
	cmp r7, #0
	bne _080AE364
	adds r0, r5, #0
	bl sub_080492E0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080AE35C @ =gUnk_03006B90
	ldr r4, [r1]
	ldr r1, _080AE360 @ =0x00001270
	adds r4, r4, r1
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r6, #0xd0
	lsls r6, r6, #1
	adds r1, r5, r6
	movs r6, #0
	ldrsh r3, [r1, r6]
	str r0, [sp]
	str r5, [sp, #4]
	adds r0, r4, #0
	movs r1, #2
	bl sub_0803D860
	b _080AE396
	.align 2, 0
_080AE350: .4byte gUnk_08BDA0C0
_080AE354: .4byte 0x00000BBB
_080AE358: .4byte 0x00000BBC
_080AE35C: .4byte gUnk_03006B90
_080AE360: .4byte 0x00001270
_080AE364:
	adds r0, r5, #0
	bl sub_080492E0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080AE3B0 @ =gUnk_03006B90
	ldr r4, [r1]
	ldr r1, _080AE3B4 @ =0x00001270
	adds r4, r4, r1
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r6, #0xd0
	lsls r6, r6, #1
	adds r1, r5, r6
	movs r6, #0
	ldrsh r3, [r1, r6]
	str r0, [sp]
	str r5, [sp, #4]
	adds r0, r4, #0
	movs r1, #0x12
	bl sub_0803D860
_080AE396:
	cmp r7, #0
	bne _080AE3B8
	str r7, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x9a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080AE3CC
	.align 2, 0
_080AE3B0: .4byte gUnk_03006B90
_080AE3B4: .4byte 0x00001270
_080AE3B8:
	movs r0, #0
	str r0, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0xa6
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080AE3CC:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080AE3D4
sub_080AE3D4: @ 0x080AE3D4
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	adds r4, r0, #0
	adds r5, r1, #0
	adds r0, #0x1c
	movs r1, #4
	movs r2, #3
	movs r3, #0
	bl sub_08009F50
	movs r6, #0
	movs r0, #2
	strb r0, [r4]
	movs r0, #0xf0
	strb r0, [r4, #3]
	ldr r1, _080AE458 @ =0xFFFFFE00
	adds r0, r1, #0
	ldrh r2, [r4, #0xe]
	adds r0, r0, r2
	strh r0, [r4, #0x10]
	movs r3, #0xc
	ldrsh r0, [r4, r3]
	lsrs r1, r0, #0x1f
	adds r0, r0, r1
	asrs r0, r0, #1
	rsbs r0, r0, #0
	strh r0, [r4, #0xc]
	adds r0, r5, #0
	bl sub_080492E0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, _080AE45C @ =gUnk_03006B90
	ldr r4, [r1]
	ldr r7, _080AE460 @ =0x00001270
	adds r4, r4, r7
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r5, r2
	movs r3, #0
	ldrsh r2, [r1, r3]
	movs r7, #0xd0
	lsls r7, r7, #1
	adds r1, r5, r7
	movs r7, #0
	ldrsh r3, [r1, r7]
	str r0, [sp]
	str r5, [sp, #4]
	adds r0, r4, #0
	movs r1, #1
	bl sub_0803D860
	str r6, [sp]
	movs r0, #1
	str r0, [sp, #4]
	movs r0, #0x9d
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AE458: .4byte 0xFFFFFE00
_080AE45C: .4byte gUnk_03006B90
_080AE460: .4byte 0x00001270

	thumb_func_start sub_080AE464
sub_080AE464: @ 0x080AE464
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	movs r7, #0
	ldr r4, _080AE4C4 @ =gUnk_03006B90
	ldr r0, [r4]
	adds r5, r0, #0
	adds r5, #0x10
	adds r0, r5, #0
	bl sub_08030E38
	mov sb, r0
	movs r0, #0
	mov sl, r0
	ldr r1, _080AE4C8 @ =0x00000BE8
	mov r8, r1
_080AE488:
	ldr r2, _080AE4C4 @ =gUnk_03006B90
	ldr r0, [r2]
	mov r1, r8
	adds r4, r0, r1
	ldrh r0, [r4]
	cmp r0, #1
	bne _080AE4CC
	adds r0, r4, #0
	bl sub_080AF52C
	adds r3, r0, #0
	adds r6, r5, #0
	adds r6, #0xbc
	ldrh r0, [r6]
	cmp r0, #0
	bne _080AE4B6
	adds r0, r5, #0
	mov r1, sb
	adds r2, r4, #0
	bl sub_080AE540
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_080AE4B6:
	cmp r7, #0
	beq _080AE4CC
	movs r2, #0xe3
	lsls r2, r2, #2
	adds r0, r5, r2
	b _080AE506
	.align 2, 0
_080AE4C4: .4byte gUnk_03006B90
_080AE4C8: .4byte 0x00000BE8
_080AE4CC:
	mov r0, r8
	adds r0, #0x44
	ldr r2, _080AE520 @ =gUnk_03006B90
	ldr r1, [r2]
	adds r4, r1, r0
	ldrh r0, [r4]
	cmp r0, #1
	bne _080AE524
	adds r0, r4, #0
	bl sub_080AF52C
	adds r3, r0, #0
	adds r6, r5, #0
	adds r6, #0xbc
	ldrh r0, [r6]
	cmp r0, #0
	bne _080AE4FC
	adds r0, r5, #0
	mov r1, sb
	adds r2, r4, #0
	bl sub_080AE540
	lsls r0, r0, #0x10
	lsrs r7, r0, #0x10
_080AE4FC:
	cmp r7, #0
	beq _080AE524
	movs r1, #0xe3
	lsls r1, r1, #2
	adds r0, r5, r1
_080AE506:
	ldrb r1, [r0]
	adds r0, r5, #0
	bl sub_08040EAC
	ldrb r2, [r0, #4]
	adds r0, r4, #0
	adds r1, r5, #0
	bl sub_080AE0DC
	movs r0, #3
	strh r0, [r6]
	b _080AE532
	.align 2, 0
_080AE520: .4byte gUnk_03006B90
_080AE524:
	movs r2, #0x88
	add r8, r2
	movs r0, #2
	add sl, r0
	mov r1, sl
	cmp r1, #0x13
	bls _080AE488
_080AE532:
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080AE540
sub_080AE540: @ 0x080AE540
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	str r0, [sp, #0x24]
	str r1, [sp, #0x28]
	mov r8, r2
	adds r7, r3, #0
	movs r0, #0
	mov sl, r0
	ldrh r1, [r1, #2]
	str r1, [sp, #0x2c]
	ldr r2, [sp, #0x28]
	ldrh r2, [r2, #4]
	str r2, [sp, #0x30]
	ldrh r3, [r7]
	mov sb, r3
	ldr r4, [sp, #0x24]
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r6, sp
	adds r6, #0xa
	add r1, sp, #8
	adds r2, r6, #0
	bl sub_0800A7DC
	mov r0, r8
	adds r0, #0x1c
	add r4, sp, #0xc
	mov r5, sp
	adds r5, #0xe
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_0800A7DC
	ldr r2, [sp, #0x24]
	ldr r1, [r2, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r1, r0
	cmp r1, #0
	bne _080AE59C
	b _080AE816
_080AE59C:
	movs r3, #0
	str r3, [sp, #0x34]
	ldr r4, [sp, #0x30]
	cmp sl, r4
	blo _080AE5A8
	b _080AE6D6
_080AE5A8:
	add r6, sp, #0x14
_080AE5AA:
	ldr r1, [sp, #0x28]
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	adds r0, r1, r0
	ldr r3, [sp, #0x34]
	lsls r1, r3, #3
	adds r1, r0, r1
	ldr r4, [sp, #0x24]
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r4, r3
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #0x14
	bl sub_08030E84
	movs r4, #0
	cmp r4, sb
	bhs _080AE6C0
	add r5, sp, #0x1c
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r1, #0
	ble _080AE5FA
	cmp r0, #0
	beq _080AE63A
_080AE5FA:
	movs r2, #8
	ldrsh r0, [r7, r2]
	adds r1, r7, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AE634
	movs r0, #3
	mov sl, r0
	b _080AE81C
_080AE634:
	movs r4, #1
	cmp r4, sb
	bhs _080AE6C0
_080AE63A:
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AE6B4
	adds r4, #1
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AE6BA
_080AE6B4:
	movs r4, #3
	mov sl, r4
	b _080AE81C
_080AE6BA:
	adds r4, #1
	cmp r4, sb
	blo _080AE63A
_080AE6C0:
	mov r0, sl
	cmp r0, #0
	beq _080AE6C8
	b _080AE81C
_080AE6C8:
	ldr r1, [sp, #0x34]
	adds r1, #1
	str r1, [sp, #0x34]
	ldr r2, [sp, #0x30]
	cmp r1, r2
	bhs _080AE6D6
	b _080AE5AA
_080AE6D6:
	mov r3, sl
	cmp r3, #0
	beq _080AE6DE
	b _080AE81C
_080AE6DE:
	movs r4, #0
	str r4, [sp, #0x34]
	ldr r0, [sp, #0x2c]
	cmp sl, r0
	blo _080AE6EA
	b _080AE816
_080AE6EA:
	add r6, sp, #0x14
_080AE6EC:
	ldr r1, [sp, #0x28]
	movs r2, #0xa
	ldrsh r0, [r1, r2]
	adds r0, r1, r0
	ldr r3, [sp, #0x34]
	lsls r1, r3, #3
	adds r1, r0, r1
	ldr r4, [sp, #0x24]
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r4, r3
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #0x14
	bl sub_08030E84
	movs r4, #0
	cmp r4, sb
	bhs _080AE802
	add r5, sp, #0x1c
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r1, #0
	ble _080AE73C
	cmp r0, #0
	beq _080AE77C
_080AE73C:
	movs r2, #8
	ldrsh r0, [r7, r2]
	adds r1, r7, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AE776
	movs r0, #1
	mov sl, r0
	b _080AE81C
_080AE776:
	movs r4, #1
	cmp r4, sb
	bhs _080AE802
_080AE77C:
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AE7F6
	adds r4, #1
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AE7FC
_080AE7F6:
	movs r4, #1
	mov sl, r4
	b _080AE81C
_080AE7FC:
	adds r4, #1
	cmp r4, sb
	blo _080AE77C
_080AE802:
	mov r0, sl
	cmp r0, #0
	bne _080AE81C
	ldr r1, [sp, #0x34]
	adds r1, #1
	str r1, [sp, #0x34]
	ldr r2, [sp, #0x2c]
	cmp r1, r2
	bhs _080AE816
	b _080AE6EC
_080AE816:
	mov r3, sl
	cmp r3, #0
	beq _080AE844
_080AE81C:
	add r0, sp, #0x14
	add r1, sp, #0x1c
	add r4, sp, #0x10
	mov r5, sp
	adds r5, #0x12
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08030F68
	ldrh r0, [r4]
	ldr r4, [sp, #0x24]
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r4, r2
	strh r0, [r1]
	ldrh r1, [r5]
	movs r3, #0xd0
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r1, [r0]
_080AE844:
	mov r0, sl
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AE858
sub_080AE858: @ 0x080AE858
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	movs r0, #0
	mov sl, r0
	ldr r0, _080AE89C @ =gUnk_03006B90
	ldr r0, [r0]
	adds r6, r0, #0
	adds r6, #0x10
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r0, r1
	ldrb r1, [r0]
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #3
	adds r0, r6, r0
	movs r3, #0x84
	lsls r3, r3, #1
	adds r0, r0, r3
	ldrh r0, [r0]
	cmp r0, #0xff
	beq _080AE8AE
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08063A00
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	b _080AE8B0
	.align 2, 0
_080AE89C: .4byte gUnk_03006B90
_080AE8A0:
	adds r0, r5, #0
	adds r1, r6, #0
	bl sub_080AE3D4
	movs r0, #5
	strh r0, [r4]
	b _080AE95C
_080AE8AE:
	movs r0, #0
_080AE8B0:
	cmp r0, #4
	blo _080AE95C
	cmp r0, #5
	bls _080AE8C0
	cmp r0, #0xb
	bhi _080AE95C
	cmp r0, #0xa
	blo _080AE95C
_080AE8C0:
	adds r0, r6, #0
	bl sub_08030E38
	str r0, [sp, #8]
	movs r0, #0
	mov sb, r0
	ldr r1, _080AE96C @ =gUnk_03006B90
	mov r8, r1
	ldr r7, _080AE970 @ =0x00000BE8
	mov r3, sp
	str r3, [sp, #0xc]
_080AE8D6:
	mov r1, r8
	ldr r0, [r1]
	adds r5, r0, r7
	ldrh r0, [r5]
	ldr r3, _080AE974 @ =0x00000101
	cmp r0, r3
	bne _080AE950
	adds r0, r5, #0
	adds r0, #0x1c
	bl sub_0800A80C
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	mov r1, r8
	ldr r0, [r1]
	ldr r3, _080AE978 @ =0x00001138
	adds r0, r0, r3
	ldr r0, [r0]
	mov r1, sp
	bl sub_08001E64
	mov r0, r8
	ldr r2, [r0]
	ldr r1, _080AE978 @ =0x00001138
	adds r2, r2, r1
	ldrb r0, [r5, #0x1d]
	ldr r3, [sp, #0xc]
	ldr r1, [r3, #4]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [r2]
	adds r0, r1, r0
	lsls r4, r4, #1
	adds r4, r4, r0
	ldrh r0, [r4, #2]
	adds r3, r1, r0
	adds r0, r6, #0
	adds r0, #0xbc
	ldrh r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	bne _080AE94A
	ldr r0, [r6, #8]
	movs r1, #0xb0
	lsls r1, r1, #0x16
	ands r0, r1
	cmp r0, #0
	bne _080AE94A
	adds r0, r6, #0
	ldr r1, [sp, #8]
	adds r2, r5, #0
	bl sub_080AE97C
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
_080AE94A:
	mov r0, sl
	cmp r0, #0
	bne _080AE8A0
_080AE950:
	adds r7, #0x44
	movs r1, #1
	add sb, r1
	mov r3, sb
	cmp r3, #0x13
	bls _080AE8D6
_080AE95C:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AE96C: .4byte gUnk_03006B90
_080AE970: .4byte 0x00000BE8
_080AE974: .4byte 0x00000101
_080AE978: .4byte 0x00001138

	thumb_func_start sub_080AE97C
sub_080AE97C: @ 0x080AE97C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	str r0, [sp, #0x24]
	str r1, [sp, #0x28]
	mov r8, r2
	adds r7, r3, #0
	movs r0, #0
	mov sl, r0
	ldrh r1, [r1, #2]
	str r1, [sp, #0x2c]
	ldr r2, [sp, #0x28]
	ldrh r2, [r2, #4]
	str r2, [sp, #0x30]
	ldrh r3, [r7]
	mov sb, r3
	ldr r4, [sp, #0x24]
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r0, r4, r1
	mov r6, sp
	adds r6, #0xa
	add r1, sp, #8
	adds r2, r6, #0
	bl sub_0800A7DC
	mov r0, r8
	adds r0, #0x1c
	add r4, sp, #0xc
	mov r5, sp
	adds r5, #0xe
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_0800A7DC
	ldr r2, [sp, #0x24]
	ldr r1, [r2, #8]
	movs r0, #0x80
	lsls r0, r0, #6
	ands r1, r0
	cmp r1, #0
	bne _080AE9D8
	b _080AEC52
_080AE9D8:
	movs r3, #0
	str r3, [sp, #0x34]
	ldr r4, [sp, #0x30]
	cmp sl, r4
	blo _080AE9E4
	b _080AEB12
_080AE9E4:
	add r6, sp, #0x14
_080AE9E6:
	ldr r1, [sp, #0x28]
	movs r2, #0xc
	ldrsh r0, [r1, r2]
	adds r0, r1, r0
	ldr r3, [sp, #0x34]
	lsls r1, r3, #3
	adds r1, r0, r1
	ldr r4, [sp, #0x24]
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r4, r3
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #0x14
	bl sub_08030E84
	movs r4, #0
	cmp r4, sb
	bhs _080AEAFC
	add r5, sp, #0x1c
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r1, #0
	ble _080AEA36
	cmp r0, #0
	beq _080AEA76
_080AEA36:
	movs r2, #8
	ldrsh r0, [r7, r2]
	adds r1, r7, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEA70
	movs r0, #3
	mov sl, r0
	b _080AEC58
_080AEA70:
	movs r4, #1
	cmp r4, sb
	bhs _080AEAFC
_080AEA76:
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AEAF0
	adds r4, #1
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEAF6
_080AEAF0:
	movs r4, #3
	mov sl, r4
	b _080AEC58
_080AEAF6:
	adds r4, #1
	cmp r4, sb
	blo _080AEA76
_080AEAFC:
	mov r0, sl
	cmp r0, #0
	beq _080AEB04
	b _080AEC58
_080AEB04:
	ldr r1, [sp, #0x34]
	adds r1, #1
	str r1, [sp, #0x34]
	ldr r2, [sp, #0x30]
	cmp r1, r2
	bhs _080AEB12
	b _080AE9E6
_080AEB12:
	mov r3, sl
	cmp r3, #0
	beq _080AEB1A
	b _080AEC58
_080AEB1A:
	movs r4, #0
	str r4, [sp, #0x34]
	ldr r0, [sp, #0x2c]
	cmp sl, r0
	blo _080AEB26
	b _080AEC52
_080AEB26:
	add r6, sp, #0x14
_080AEB28:
	ldr r1, [sp, #0x28]
	movs r2, #0xa
	ldrsh r0, [r1, r2]
	adds r0, r1, r0
	ldr r3, [sp, #0x34]
	lsls r1, r3, #3
	adds r1, r0, r1
	ldr r4, [sp, #0x24]
	movs r2, #0xc4
	lsls r2, r2, #1
	adds r0, r4, r2
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r3, #0xc6
	lsls r3, r3, #1
	adds r0, r4, r3
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #0x14
	bl sub_08030E84
	movs r4, #0
	cmp r4, sb
	bhs _080AEC3E
	add r5, sp, #0x1c
	movs r0, #1
	mov r1, sb
	ands r0, r1
	cmp r1, #0
	ble _080AEB78
	cmp r0, #0
	beq _080AEBB8
_080AEB78:
	movs r2, #8
	ldrsh r0, [r7, r2]
	adds r1, r7, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEBB2
	movs r0, #1
	mov sl, r0
	b _080AEC58
_080AEBB2:
	movs r4, #1
	cmp r4, sb
	bhs _080AEC3E
_080AEBB8:
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AEC32
	adds r4, #1
	movs r1, #8
	ldrsh r0, [r7, r1]
	adds r0, r7, r0
	lsls r1, r4, #3
	adds r1, r0, r1
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r5, #0
	mov r3, ip
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r5, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEC38
_080AEC32:
	movs r4, #1
	mov sl, r4
	b _080AEC58
_080AEC38:
	adds r4, #1
	cmp r4, sb
	blo _080AEBB8
_080AEC3E:
	mov r0, sl
	cmp r0, #0
	bne _080AEC58
	ldr r1, [sp, #0x34]
	adds r1, #1
	str r1, [sp, #0x34]
	ldr r2, [sp, #0x2c]
	cmp r1, r2
	bhs _080AEC52
	b _080AEB28
_080AEC52:
	mov r3, sl
	cmp r3, #0
	beq _080AEC80
_080AEC58:
	add r0, sp, #0x14
	add r1, sp, #0x1c
	add r4, sp, #0x10
	mov r5, sp
	adds r5, #0x12
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08030F68
	ldrh r0, [r4]
	ldr r4, [sp, #0x24]
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r4, r2
	strh r0, [r1]
	ldrh r1, [r5]
	movs r3, #0xd0
	lsls r3, r3, #1
	adds r0, r4, r3
	strh r1, [r0]
_080AEC80:
	mov r0, sl
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AEC94
sub_080AEC94: @ 0x080AEC94
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x10
	movs r0, #0
	mov sl, r0
	ldr r4, _080AED68 @ =gUnk_03006B90
	ldr r0, [r4]
	adds r5, r0, #0
	adds r5, #0x10
	adds r0, r5, #0
	bl sub_08030E38
	str r0, [sp, #0xc]
	movs r1, #0
	mov sb, r1
	adds r7, r4, #0
	ldr r0, _080AED6C @ =0x00000BE8
	mov r8, r0
_080AECBE:
	ldr r0, [r7]
	mov r1, r8
	adds r6, r0, r1
	ldrh r1, [r6]
	ldr r0, _080AED70 @ =0x00000101
	cmp r1, r0
	bne _080AEDC0
	adds r0, r6, #0
	adds r0, #0x1c
	bl sub_0800A80C
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, [r7]
	ldr r1, _080AED74 @ =0x00001138
	adds r0, r0, r1
	ldr r0, [r0]
	add r1, sp, #4
	bl sub_08001E64
	ldr r2, [r7]
	ldr r0, _080AED74 @ =0x00001138
	adds r2, r2, r0
	ldrb r0, [r6, #0x1d]
	ldr r1, [sp, #8]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [r2]
	adds r0, r1, r0
	lsls r4, r4, #1
	adds r4, r4, r0
	ldrh r0, [r4, #2]
	adds r3, r1, r0
	adds r0, r5, #0
	adds r0, #0xbc
	ldrh r1, [r0]
	adds r4, r0, #0
	cmp r1, #0
	bne _080AED2C
	ldr r0, [r5, #8]
	movs r1, #0xb0
	lsls r1, r1, #0x16
	ands r0, r1
	cmp r0, #0
	bne _080AED2C
	adds r0, r5, #0
	ldr r1, [sp, #0xc]
	adds r2, r6, #0
	bl sub_080AEDE0
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sl, r0
_080AED2C:
	mov r1, sl
	cmp r1, #0
	beq _080AEDC0
	ldr r1, [r5, #8]
	movs r0, #0x80
	lsls r0, r0, #1
	ands r1, r0
	cmp r1, #0
	beq _080AED78
	adds r0, r5, #0
	movs r1, #0xf
	bl sub_080403A8
	adds r1, r5, #0
	adds r1, #0x9a
	movs r0, #0xa
	strh r0, [r1]
	ldr r1, [r5, #8]
	movs r0, #0x20
	orrs r1, r0
	movs r0, #0x40
	orrs r1, r0
	str r1, [r5, #8]
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #1
	bl sub_080AE29C
	b _080AEDB2
	.align 2, 0
_080AED68: .4byte gUnk_03006B90
_080AED6C: .4byte 0x00000BE8
_080AED70: .4byte 0x00000101
_080AED74: .4byte 0x00001138
_080AED78:
	str r1, [sp]
	adds r0, r5, #0
	ldr r1, _080AEDB8 @ =0x00007FFF
	movs r2, #4
	movs r3, #3
	bl sub_080490B0
	adds r0, r6, #0
	adds r1, r5, #0
	movs r2, #0
	bl sub_080AE29C
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0x16
	orrs r0, r1
	str r0, [r5, #8]
	adds r1, r5, #0
	adds r1, #0x9e
	movs r0, #0x1e
	strh r0, [r1]
	adds r1, #2
	ldr r0, _080AEDBC @ =0x0000270F
	strh r0, [r1]
	ldr r0, [r5, #8]
	movs r1, #0x80
	lsls r1, r1, #0xc
	orrs r0, r1
	str r0, [r5, #8]
_080AEDB2:
	movs r0, #6
	strh r0, [r4]
	b _080AEDD0
	.align 2, 0
_080AEDB8: .4byte 0x00007FFF
_080AEDBC: .4byte 0x0000270F
_080AEDC0:
	movs r0, #0x44
	add r8, r0
	movs r1, #1
	add sb, r1
	mov r0, sb
	cmp r0, #0x13
	bhi _080AEDD0
	b _080AECBE
_080AEDD0:
	add sp, #0x10
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080AEDE0
sub_080AEDE0: @ 0x080AEDE0
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x40
	mov sb, r0
	mov r8, r1
	str r2, [sp, #0x24]
	str r3, [sp, #0x28]
	movs r0, #0
	str r0, [sp, #0x3c]
	ldrh r1, [r3]
	str r1, [sp, #0x2c]
	mov r2, r8
	ldrh r2, [r2]
	str r2, [sp, #0x30]
	mov r3, r8
	ldrh r3, [r3, #6]
	str r3, [sp, #0x34]
	ldr r0, [sp, #0x24]
	adds r0, #0x1c
	mov r6, sp
	adds r6, #0xa
	add r1, sp, #8
	adds r2, r6, #0
	bl sub_0800A7DC
	movs r0, #0xc3
	lsls r0, r0, #2
	add r0, sb
	add r4, sp, #0xc
	mov r5, sp
	adds r5, #0xe
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_0800A7DC
	movs r0, #0
	str r0, [sp, #0x38]
	ldr r1, [sp, #0x3c]
	ldr r2, [sp, #0x2c]
	cmp r1, r2
	blo _080AEE3A
	b _080AF07C
_080AEE3A:
	add r3, sp, #0x14
	mov sl, r3
_080AEE3E:
	ldr r4, [sp, #0x28]
	movs r5, #8
	ldrsh r1, [r4, r5]
	adds r1, r4, r1
	ldr r2, [sp, #0x38]
	lsls r0, r2, #3
	adds r1, r1, r0
	ldr r3, [sp, #0x24]
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	add r0, sp, #0x14
	bl sub_08030E84
	movs r4, #0
	ldr r5, [sp, #0x34]
	cmp r4, r5
	bhs _080AEF66
	add r7, sp, #0x1c
	movs r0, #1
	ands r0, r5
	cmp r5, #0
	ble _080AEE82
	cmp r0, #0
	beq _080AEED0
_080AEE82:
	mov r1, r8
	movs r2, #0xe
	ldrsh r0, [r1, r2]
	adds r1, r1, r0
	movs r0, #0xc4
	lsls r0, r0, #1
	add r0, sb
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r0, #0xc6
	lsls r0, r0, #1
	add r0, sb
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEEC8
	movs r5, #2
	str r5, [sp, #0x3c]
	b _080AF082
_080AEEC8:
	movs r4, #1
	ldr r0, [sp, #0x34]
	cmp r4, r0
	bhs _080AEF66
_080AEED0:
	mov r1, r8
	movs r2, #0xe
	ldrsh r0, [r1, r2]
	add r0, r8
	lsls r1, r4, #3
	adds r1, r0, r1
	movs r6, #0xc4
	lsls r6, r6, #1
	add r6, sb
	ldr r2, [r6]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r5, #0xc6
	lsls r5, r5, #1
	add r5, sb
	ldr r3, [r5]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	mov r3, ip
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEF1E
	movs r4, #2
	str r4, [sp, #0x3c]
	b _080AF082
_080AEF1E:
	adds r4, #1
	mov r1, r8
	movs r2, #0xe
	ldrsh r0, [r1, r2]
	add r0, r8
	lsls r1, r4, #3
	adds r1, r0, r1
	ldr r2, [r6]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r5]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r5, sp
	ldrh r0, [r5, #0xe]
	str r0, [sp]
	ldrh r0, [r5, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEF5E
	movs r0, #2
	str r0, [sp, #0x3c]
	b _080AF082
_080AEF5E:
	adds r4, #1
	ldr r1, [sp, #0x34]
	cmp r4, r1
	blo _080AEED0
_080AEF66:
	ldr r2, [sp, #0x3c]
	cmp r2, #0
	beq _080AEF6E
	b _080AF082
_080AEF6E:
	movs r4, #0
	ldr r3, [sp, #0x30]
	cmp r2, r3
	bhs _080AF068
	add r7, sp, #0x1c
	movs r0, #1
	ands r0, r3
	cmp r3, #0
	ble _080AEF84
	cmp r0, #0
	beq _080AEFD2
_080AEF84:
	mov r4, r8
	movs r5, #8
	ldrsh r0, [r4, r5]
	adds r1, r4, r0
	movs r0, #0xc4
	lsls r0, r0, #1
	add r0, sb
	ldr r2, [r0]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r0, #0xc6
	lsls r0, r0, #1
	add r0, sb
	ldr r3, [r0]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r4, sp
	ldrh r0, [r4, #0xe]
	str r0, [sp]
	ldrh r0, [r4, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AEFCA
	movs r5, #1
	str r5, [sp, #0x3c]
	b _080AF082
_080AEFCA:
	movs r4, #1
	ldr r0, [sp, #0x30]
	cmp r4, r0
	bhs _080AF068
_080AEFD2:
	mov r1, r8
	movs r2, #8
	ldrsh r0, [r1, r2]
	add r0, r8
	lsls r1, r4, #3
	adds r1, r0, r1
	movs r6, #0xc4
	lsls r6, r6, #1
	add r6, sb
	ldr r2, [r6]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	movs r5, #0xc6
	lsls r5, r5, #1
	add r5, sb
	ldr r3, [r5]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov ip, r3
	mov r3, sp
	ldrh r0, [r3, #0xe]
	str r0, [sp]
	ldrh r0, [r3, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	mov r3, ip
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AF020
	movs r4, #1
	str r4, [sp, #0x3c]
	b _080AF082
_080AF020:
	adds r4, #1
	mov r1, r8
	movs r2, #8
	ldrsh r0, [r1, r2]
	add r0, r8
	lsls r1, r4, #3
	adds r1, r0, r1
	ldr r2, [r6]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r5]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r5, sp
	ldrh r0, [r5, #0xe]
	str r0, [sp]
	ldrh r0, [r5, #0xc]
	str r0, [sp, #4]
	adds r0, r7, #0
	bl sub_08030E84
	mov r0, sl
	adds r1, r7, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AF060
	movs r0, #1
	str r0, [sp, #0x3c]
	b _080AF082
_080AF060:
	adds r4, #1
	ldr r1, [sp, #0x30]
	cmp r4, r1
	blo _080AEFD2
_080AF068:
	ldr r2, [sp, #0x3c]
	cmp r2, #0
	bne _080AF082
	ldr r3, [sp, #0x38]
	adds r3, #1
	str r3, [sp, #0x38]
	ldr r4, [sp, #0x2c]
	cmp r3, r4
	bhs _080AF07C
	b _080AEE3E
_080AF07C:
	ldr r5, [sp, #0x3c]
	cmp r5, #0
	beq _080AF0A8
_080AF082:
	add r0, sp, #0x14
	add r1, sp, #0x1c
	add r4, sp, #0x10
	mov r5, sp
	adds r5, #0x12
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08030F68
	ldrh r0, [r4]
	movs r1, #0xcf
	lsls r1, r1, #1
	add r1, sb
	strh r0, [r1]
	ldrh r1, [r5]
	movs r0, #0xd0
	lsls r0, r0, #1
	add r0, sb
	strh r1, [r0]
_080AF0A8:
	ldr r0, [sp, #0x3c]
	add sp, #0x40
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AF0BC
sub_080AF0BC: @ 0x080AF0BC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r4, _080AF19C @ =gUnk_03006B90
	ldr r0, [r4]
	adds r7, r0, #0
	adds r7, #0x10
	adds r0, r7, #0
	bl sub_08030E38
	movs r2, #0
_080AF0D8:
	lsls r0, r2, #4
	adds r0, r0, r2
	lsls r0, r0, #2
	ldr r1, _080AF1A0 @ =0x00000BE8
	adds r0, r0, r1
	ldr r3, _080AF19C @ =gUnk_03006B90
	ldr r1, [r3]
	adds r5, r1, r0
	ldrh r0, [r5]
	adds r2, #1
	mov sl, r2
	cmp r0, #1
	bne _080AF1B4
	adds r0, r5, #0
	adds r0, #0x1c
	bl sub_0800A80C
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r1, _080AF19C @ =gUnk_03006B90
	ldr r0, [r1]
	ldr r2, _080AF1A4 @ =0x00001138
	adds r0, r0, r2
	ldr r0, [r0]
	mov r1, sp
	bl sub_08001E64
	ldr r3, _080AF19C @ =gUnk_03006B90
	ldr r2, [r3]
	ldr r0, _080AF1A4 @ =0x00001138
	adds r2, r2, r0
	ldrb r0, [r5, #0x1d]
	ldr r1, [sp, #4]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r0, [r0]
	ldr r1, [r2]
	adds r0, r1, r0
	lsls r4, r4, #1
	adds r4, r4, r0
	ldrh r0, [r4, #2]
	adds r1, r1, r0
	mov r8, r1
	movs r2, #0xd8
	lsls r2, r2, #2
	adds r1, r7, r2
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #0
	ble _080AF1B4
	movs r3, #0xdb
	lsls r3, r3, #2
	adds r0, r7, r3
	ldr r4, [r0]
	movs r0, #0
	mov sb, r0
	adds r6, r1, #0
_080AF14C:
	ldrb r0, [r4]
	cmp r0, #2
	bne _080AF164
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	mov r3, r8
	bl sub_080AF1CC
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AF17E
_080AF164:
	adds r4, #0x28
	ldrb r0, [r4]
	cmp r0, #2
	bne _080AF1A8
	adds r0, r7, #0
	adds r1, r4, #0
	adds r2, r5, #0
	mov r3, r8
	bl sub_080AF1CC
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080AF1A8
_080AF17E:
	ldrb r2, [r4, #5]
	cmp r2, #5
	bgt _080AF186
	movs r2, #4
_080AF186:
	adds r0, r5, #0
	adds r1, r7, #0
	bl sub_080AE0DC
	movs r0, #0
	strb r0, [r4]
	ldrb r0, [r6]
	subs r0, #1
	strb r0, [r6]
	b _080AF1B4
	.align 2, 0
_080AF19C: .4byte gUnk_03006B90
_080AF1A0: .4byte 0x00000BE8
_080AF1A4: .4byte 0x00001138
_080AF1A8:
	movs r1, #2
	add sb, r1
	adds r4, #0x28
	mov r2, sb
	cmp r2, #3
	bls _080AF14C
_080AF1B4:
	mov r2, sl
	cmp r2, #0x13
	bls _080AF0D8
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080AF1CC
sub_080AF1CC: @ 0x080AF1CC
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x28
	str r0, [sp, #0x20]
	adds r4, r1, #0
	mov r8, r2
	adds r7, r3, #0
	movs r0, #0
	str r0, [sp, #0x24]
	ldrh r1, [r7]
	mov sl, r1
	mov r0, r8
	adds r0, #0x1c
	mov r6, sp
	adds r6, #0xa
	add r1, sp, #8
	adds r2, r6, #0
	bl sub_0800A7DC
	add r5, sp, #0x10
	ldr r2, [r4, #0x10]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r4, #0x14]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	ldr r0, [sp, #0x24]
	str r0, [sp]
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08030FE0
	movs r1, #0
	mov sb, r1
	adds r6, r5, #0
	ldr r2, [sp, #0x24]
	cmp r2, sl
	bhs _080AF2F4
	add r4, sp, #0x18
	movs r0, #1
	mov r3, sl
	ands r0, r3
	cmp r3, #0
	ble _080AF22E
	cmp r0, #0
	beq _080AF26C
_080AF22E:
	movs r5, #8
	ldrsh r1, [r7, r5]
	adds r1, r7, r1
	mov r0, r8
	ldr r2, [r0, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r0, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r5, sp
	ldrh r0, [r5, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	adds r0, r4, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AF2E6
	movs r1, #1
	mov sb, r1
	cmp sb, sl
	bhs _080AF2F4
_080AF26C:
	movs r2, #8
	ldrsh r1, [r7, r2]
	adds r1, r7, r1
	mov r3, sb
	lsls r0, r3, #3
	adds r1, r1, r0
	mov r5, r8
	ldr r2, [r5, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r5, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r5, sp
	ldrh r0, [r5, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	adds r0, r4, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080AF2E6
	mov r0, sb
	adds r0, #1
	movs r2, #8
	ldrsh r1, [r7, r2]
	adds r1, r7, r1
	lsls r0, r0, #3
	adds r1, r1, r0
	mov r3, r8
	ldr r2, [r3, #0x14]
	lsls r2, r2, #8
	asrs r2, r2, #0x10
	ldr r3, [r3, #0x18]
	lsls r3, r3, #8
	asrs r3, r3, #0x10
	mov r5, sp
	ldrh r0, [r5, #0xa]
	str r0, [sp]
	add r0, sp, #8
	ldrh r0, [r0]
	str r0, [sp, #4]
	adds r0, r4, #0
	bl sub_08030E84
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08030EF4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AF2EC
_080AF2E6:
	movs r0, #1
	str r0, [sp, #0x24]
	b _080AF2FA
_080AF2EC:
	movs r1, #2
	add sb, r1
	cmp sb, sl
	blo _080AF26C
_080AF2F4:
	ldr r2, [sp, #0x24]
	cmp r2, #0
	beq _080AF322
_080AF2FA:
	add r1, sp, #0x18
	add r4, sp, #0xc
	mov r5, sp
	adds r5, #0xe
	adds r0, r6, #0
	adds r2, r4, #0
	adds r3, r5, #0
	bl sub_08030F68
	ldrh r0, [r4]
	ldr r3, [sp, #0x20]
	movs r2, #0xcf
	lsls r2, r2, #1
	adds r1, r3, r2
	strh r0, [r1]
	ldrh r1, [r5]
	movs r5, #0xd0
	lsls r5, r5, #1
	adds r0, r3, r5
	strh r1, [r0]
_080AF322:
	ldr r0, [sp, #0x24]
	add sp, #0x28
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080AF334
sub_080AF334: @ 0x080AF334
	push {lr}
	sub sp, #0x1c
	movs r0, #0
	movs r1, #0x23
	bl sub_08001D3C
	movs r1, #0x1c
	bl sub_08001D78
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x10]
	ldr r1, _080AF360 @ =0x06007000
	ldr r2, [sp, #4]
	lsls r2, r2, #9
	lsrs r2, r2, #0xb
	bl CpuFastSet
	add sp, #0x1c
	pop {r0}
	bx r0
	.align 2, 0
_080AF360: .4byte 0x06007000

	thumb_func_start sub_080AF364
sub_080AF364: @ 0x080AF364
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	cmp r5, #0
	bne _080AF386
	bl sub_0803EBDC
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r4, r1
	str r5, [r0]
	movs r0, #0x86
	lsls r0, r0, #1
	adds r1, r4, r0
	movs r0, #0x64
	str r0, [r1]
_080AF386:
	pop {r4, r5}
	pop {r0}
	bx r0

	thumb_func_start sub_080AF38C
sub_080AF38C: @ 0x080AF38C
	push {r4, lr}
	adds r4, r0, #0
	movs r1, #0xf
	bl sub_0804063C
	cmp r0, #0
	bne _080AF3C2
	ldr r0, [r4, #8]
	movs r1, #0x80
	lsls r1, r1, #1
	orrs r0, r1
	movs r1, #0x40
	orrs r0, r1
	subs r1, #0x4d
	ands r0, r1
	str r0, [r4, #8]
	movs r0, #0xd1
	lsls r0, r0, #1
	adds r2, r4, r0
	ldrh r1, [r2]
	ldr r0, _080AF3C8 @ =0x0000FFF0
	ands r0, r1
	strh r0, [r2]
	adds r0, r4, #0
	movs r1, #0xf
	bl sub_080403A8
_080AF3C2:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080AF3C8: .4byte 0x0000FFF0

	thumb_func_start sub_080AF3CC
sub_080AF3CC: @ 0x080AF3CC
	push {r4, lr}
	ldr r0, _080AF3FC @ =gUnk_03006B90
	ldr r4, [r0]
	ldr r0, _080AF400 @ =0x00000B84
	adds r4, r4, r0
	movs r0, #2
	strb r0, [r4]
	movs r0, #0x5a
	bl sub_0800180C
	adds r0, #0x5a
	strh r0, [r4, #2]
	movs r0, #0xb4
	bl sub_0800180C
	adds r0, #0x14
	lsls r0, r0, #8
	str r0, [r4, #4]
	movs r0, #0x84
	lsls r0, r0, #8
	str r0, [r4, #8]
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080AF3FC: .4byte gUnk_03006B90
_080AF400: .4byte 0x00000B84

	thumb_func_start sub_080AF404
sub_080AF404: @ 0x080AF404
	push {lr}
	ldr r0, _080AF418 @ =gUnk_03006B90
	ldr r0, [r0]
	movs r1, #0xb9
	lsls r1, r1, #4
	adds r0, r0, r1
	bl sub_08009FF8
	pop {r0}
	bx r0
	.align 2, 0
_080AF418: .4byte gUnk_03006B90

	thumb_func_start sub_080AF41C
sub_080AF41C: @ 0x080AF41C
	push {r4, lr}
	ldr r0, _080AF460 @ =gUnk_03006B90
	ldr r4, [r0]
	ldr r0, _080AF464 @ =0x00000B84
	adds r2, r4, r0
	ldr r1, [r2, #4]
	asrs r1, r1, #8
	ldr r3, _080AF468 @ =0x000007D6
	adds r0, r4, r3
	ldrh r0, [r0]
	subs r1, r1, r0
	ldr r2, [r2, #8]
	asrs r2, r2, #8
	adds r3, #4
	adds r0, r4, r3
	ldrh r0, [r0]
	subs r2, r2, r0
	movs r0, #0xb9
	lsls r0, r0, #4
	adds r4, r4, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	bl sub_0800A778
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080AF460: .4byte gUnk_03006B90
_080AF464: .4byte 0x00000B84
_080AF468: .4byte 0x000007D6

	thumb_func_start sub_080AF46C
sub_080AF46C: @ 0x080AF46C
	push {r4, r5, lr}
	adds r4, r0, #0
	lsls r1, r1, #0x10
	lsrs r2, r1, #0x10
	ldr r3, _080AF49C @ =gUnk_03006B90
	ldr r1, [r3]
	ldr r5, _080AF4A0 @ =0x00000BBB
	adds r0, r1, r5
	ldrb r0, [r0]
	cmp r2, r0
	blo _080AF496
	ldr r0, _080AF4A4 @ =0x00000BBA
	adds r1, r1, r0
	movs r0, #1
	strb r0, [r1]
	ldr r0, [r3]
	ldr r3, _080AF4A8 @ =0x00000BBC
	adds r1, r0, r3
	str r4, [r1]
	adds r0, r0, r5
	strb r2, [r0]
_080AF496:
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080AF49C: .4byte gUnk_03006B90
_080AF4A0: .4byte 0x00000BBB
_080AF4A4: .4byte 0x00000BBA
_080AF4A8: .4byte 0x00000BBC

	thumb_func_start sub_080AF4AC
sub_080AF4AC: @ 0x080AF4AC
	push {r4, lr}
	movs r2, #0
	movs r3, #0
	ldr r0, _080AF50C @ =gUnk_03006B90
	ldr r0, [r0]
	ldr r4, _080AF510 @ =0x00000BE8
	adds r1, r0, r4
_080AF4BA:
	ldrb r0, [r1]
	cmp r0, #0
	bne _080AF4C2
	adds r2, #1
_080AF4C2:
	adds r0, r1, #0
	adds r0, #0x44
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AF4CE
	adds r2, #1
_080AF4CE:
	adds r0, r1, #0
	adds r0, #0x88
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AF4DA
	adds r2, #1
_080AF4DA:
	adds r0, r1, #0
	adds r0, #0xcc
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AF4E6
	adds r2, #1
_080AF4E6:
	movs r4, #0x88
	lsls r4, r4, #1
	adds r0, r1, r4
	ldrb r0, [r0]
	cmp r0, #0
	bne _080AF4F4
	adds r2, #1
_080AF4F4:
	movs r0, #0xaa
	lsls r0, r0, #1
	adds r1, r1, r0
	adds r3, #5
	cmp r3, #0x13
	bls _080AF4BA
	lsls r0, r2, #0x10
	lsrs r0, r0, #0x10
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080AF50C: .4byte gUnk_03006B90
_080AF510: .4byte 0x00000BE8

	thumb_func_start sub_080AF514
sub_080AF514: @ 0x080AF514
	push {lr}
	bl sub_080AE464
	bl sub_080AF0BC
	bl sub_080AE858
	bl sub_080AEC94
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080AF52C
sub_080AF52C: @ 0x080AF52C
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #8
	mov r8, r0
	adds r0, #0x1c
	bl sub_0800A80C
	adds r4, r0, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r6, _080AF57C @ =gUnk_03006B90
	ldr r0, [r6]
	ldr r5, _080AF580 @ =0x00001138
	adds r0, r0, r5
	ldr r0, [r0]
	mov r1, sp
	bl sub_08001E64
	ldr r2, [r6]
	adds r2, r2, r5
	mov r1, r8
	ldrb r0, [r1, #0x1d]
	ldr r1, [sp, #4]
	lsls r0, r0, #1
	adds r0, r0, r1
	ldrh r1, [r0]
	ldr r0, [r2]
	adds r1, r0, r1
	lsls r4, r4, #1
	adds r4, r4, r1
	ldrh r1, [r4, #2]
	adds r0, r0, r1
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080AF57C: .4byte gUnk_03006B90
_080AF580: .4byte 0x00001138

	thumb_func_start sub_080AF584
sub_080AF584: @ 0x080AF584
	push {r4, r5, r6, lr}
	mov r6, r8
	push {r6}
	sub sp, #4
	adds r6, r0, #0
	lsls r6, r6, #0x10
	lsrs r6, r6, #0x10
	ldr r0, _080AF69C @ =gUnk_03006B94
	mov r8, r0
	movs r1, #0xc0
	lsls r1, r1, #0x12
	str r1, [r0]
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080AF6A0 @ =0x010001E0
	mov r0, sp
	bl CpuSet
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r5, #4
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	mov r1, r8
	ldr r0, [r1]
	strh r5, [r0]
	strh r6, [r0, #4]
	movs r0, #0x1e
	adds r1, r4, #0
	bl sub_08014544
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080AF69C: .4byte gUnk_03006B94
_080AF6A0: .4byte 0x010001E0

	thumb_func_start sub_080AF6A4
sub_080AF6A4: @ 0x080AF6A4
	push {r4, r5, lr}
	ldr r0, _080AF6C0 @ =gUnk_03006B94
	ldr r4, [r0]
	movs r5, #1
	movs r1, #8
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080AF6D0
	cmp r0, #1
	bgt _080AF6C4
	cmp r0, #0
	beq _080AF6CA
	b _080AF6F2
	.align 2, 0
_080AF6C0: .4byte gUnk_03006B94
_080AF6C4:
	cmp r0, #2
	beq _080AF6E2
	b _080AF6F2
_080AF6CA:
	bl sub_080AF6FC
	b _080AF6D4
_080AF6D0:
	bl sub_080B3340
_080AF6D4:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AF6F2
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	b _080AF6F2
_080AF6E2:
	bl sub_080AF828
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080AF6F2
	strh r0, [r4, #8]
	movs r5, #0
_080AF6F2:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AF6FC
sub_080AF6FC: @ 0x080AF6FC
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x38
	ldr r0, _080AF728 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r0, #8
	mov r8, r0
	movs r0, #1
	mov sb, r0
	mov r1, r8
	movs r0, #2
	ldrsh r7, [r1, r0]
	cmp r7, #1
	beq _080AF7CC
	cmp r7, #1
	bgt _080AF72C
	cmp r7, #0
	beq _080AF732
	b _080AF816
	.align 2, 0
_080AF728: .4byte gUnk_03006B94
_080AF72C:
	cmp r7, #2
	beq _080AF7F8
	b _080AF816
_080AF732:
	movs r0, #3
	movs r1, #0x1a
	bl sub_08001D3C
	adds r4, r0, #0
	movs r1, #0x69
	bl sub_08001D78
	ldr r5, _080AF7B8 @ =gUnk_02010800
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x68
	bl sub_08001D78
	ldr r4, _080AF7BC @ =gUnk_0200F800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080AF7C0 @ =0x06008000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	ldr r5, _080AF7C4 @ =gUnk_02017000
	ldr r6, _080AF7C8 @ =0x0600D800
	movs r0, #2
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08005CF4
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #4
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	adds r1, r6, #0
	bl sub_08006BA4
	mov r1, r8
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AF814
	.align 2, 0
_080AF7B8: .4byte gUnk_02010800
_080AF7BC: .4byte gUnk_0200F800
_080AF7C0: .4byte 0x06008000
_080AF7C4: .4byte gUnk_02017000
_080AF7C8: .4byte 0x0600D800
_080AF7CC:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	mov r1, r8
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080AF814
_080AF7F8:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AF816
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	mov sb, r0
	mov r0, sb
	mov r1, r8
_080AF814:
	strh r0, [r1, #2]
_080AF816:
	mov r0, sb
	add sp, #0x38
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080AF828
sub_080AF828: @ 0x080AF828
	push {r4, r5, lr}
	ldr r0, _080AF848 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #8
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080AF870
	cmp r0, #1
	bgt _080AF84C
	cmp r0, #0
	beq _080AF852
	b _080AF8AC
	.align 2, 0
_080AF848: .4byte gUnk_03006B94
_080AF84C:
	cmp r0, #2
	beq _080AF886
	b _080AF8AC
_080AF852:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _080AF87E
_080AF870:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AF8AC
_080AF87E:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080AF8AC
_080AF886:
	movs r0, #0
	bl sub_08011104
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	bl sub_0800E764
	movs r0, #2
	bl sub_08006210
	movs r0, #2
	bl sub_08005B5C
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080AF8AC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080AF8B4
sub_080AF8B4: @ 0x080AF8B4
	push {r4, r5, r6, r7, lr}
	sub sp, #0x28
	ldr r0, _080AFA5C @ =gUnk_03006B94
	ldr r6, [r0]
	adds r1, r6, #0
	adds r1, #0xc
	add r0, sp, #0x24
	movs r5, #0
	strh r5, [r0]
	ldr r2, _080AFA60 @ =0x010001DA
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #1
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #3
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #4
	movs r2, #0
	bl sub_0800476C
	movs r0, #1
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #2
	movs r1, #0x1b
	movs r2, #2
	bl sub_0800476C
	movs r0, #3
	movs r1, #0x1c
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0
	bl sub_0801B9BC
	ldr r0, _080AFA64 @ =0x06002800
	movs r4, #0xc0
	lsls r4, r4, #5
	adds r1, r4, #0
	bl sub_0800E690
	ldr r0, _080AFA68 @ =gUnk_02018000
	adds r1, r4, #0
	bl sub_0800E6B0
	ldr r1, _080AFA6C @ =gUnk_0200E000
	movs r0, #0
	bl sub_0800E6F0
	movs r0, #0x85
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #0x14
	str r0, [sp]
	movs r7, #0
	str r7, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r0, r4, #0
	bl sub_08004570
	movs r0, #0
	adds r1, r4, #0
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	add r1, sp, #8
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	movs r1, #0
	movs r2, #4
	bl sub_08010D40
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	adds r0, r6, #0
	adds r0, #0xd8
	strb r5, [r0]
	subs r0, #1
	strb r5, [r0]
	movs r0, #0x8a
	bl sub_08012F60
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	ble _080AFA70
	adds r0, r6, #0
	adds r0, #0x64
	strh r7, [r0]
	movs r0, #0x8a
	movs r1, #0
	bl sub_08012F0C
	b _080AFA78
	.align 2, 0
_080AFA5C: .4byte gUnk_03006B94
_080AFA60: .4byte 0x010001DA
_080AFA64: .4byte 0x06002800
_080AFA68: .4byte gUnk_02018000
_080AFA6C: .4byte gUnk_0200E000
_080AFA70:
	adds r1, r6, #0
	adds r1, #0x64
	ldr r0, _080AFA8C @ =0x0000FFFF
	strh r0, [r1]
_080AFA78:
	movs r0, #0xe5
	lsls r0, r0, #1
	movs r1, #0
	bl sub_08012F0C
	add sp, #0x28
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080AFA8C: .4byte 0x0000FFFF

	thumb_func_start sub_080AFA90
sub_080AFA90: @ 0x080AFA90
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080AFAB8 @ =gUnk_03006B94
	ldr r4, [r0]
	adds r5, r4, #0
	adds r5, #0xc
	movs r0, #1
	mov r8, r0
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080AFAC8
	cmp r0, #1
	bgt _080AFABC
	cmp r0, #0
	beq _080AFAC2
	b _080AFAEC
	.align 2, 0
_080AFAB8: .4byte gUnk_03006B94
_080AFABC:
	cmp r0, #2
	beq _080AFADA
	b _080AFAEC
_080AFAC2:
	bl sub_080AFCC4
	b _080AFACC
_080AFAC8:
	bl sub_080AFD60
_080AFACC:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080AFAEC
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _080AFAEC
_080AFADA:
	bl sub_080B097C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080AFAEC
	strh r0, [r4, #0xc]
	movs r0, #0
	mov r8, r0
_080AFAEC:
	adds r0, r5, #0
	adds r0, #0xcc
	movs r6, #0
	ldrsb r6, [r0, r6]
	mov r1, r8
	lsls r7, r1, #0x10
	cmp r6, #0
	beq _080AFAFE
	b _080AFCB2
_080AFAFE:
	movs r1, #0xe1
	lsls r1, r1, #2
	adds r0, r5, r1
	bl sub_080093C0
	adds r4, r5, #0
	adds r4, #0xdc
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0xe5
	lsls r1, r1, #2
	adds r0, r5, r1
	bl sub_080093C0
	movs r0, #0xcd
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0xd7
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r5, #0
	adds r1, #0xd9
	cmp r0, #1
	bne _080AFB4E
	strb r6, [r1]
_080AFB4E:
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #1
	bne _080AFB62
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFB62:
	adds r0, r5, #0
	adds r0, #0xcf
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFB82
	movs r0, #0x82
	lsls r0, r0, #1
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFB82:
	adds r0, r5, #0
	adds r0, #0xd0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFBBC
	movs r1, #0x96
	lsls r1, r1, #1
	adds r4, r5, r1
	ldr r2, [r5, #0x24]
	cmp r2, #0
	bge _080AFBA0
	ldr r0, _080AFCC0 @ =0x00001FFF
	adds r2, r2, r0
_080AFBA0:
	asrs r2, r2, #0xd
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #8
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFBBC:
	adds r0, r5, #0
	adds r0, #0xd3
	adds r6, r5, #0
	adds r6, #0xd2
	movs r1, #0xd1
	adds r1, r1, r5
	mov sb, r1
	mov r1, r8
	lsls r7, r1, #0x10
	movs r1, #0x87
	lsls r1, r1, #2
	adds r4, r5, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFBEA
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFBEA:
	movs r0, #0x91
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r5, #0
	adds r0, #0xd4
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFC0A
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFC0A:
	movs r1, #0x9b
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r5, #0
	adds r0, #0xd5
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFC2A
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFC2A:
	movs r0, #0xa5
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r5, #0
	adds r0, #0xd6
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFC4A
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFC4A:
	movs r1, #0xaf
	lsls r1, r1, #2
	adds r4, r5, r1
	adds r0, r5, #0
	adds r0, #0xd7
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFC6A
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFC6A:
	movs r0, #0
	ldrsb r0, [r6, r0]
	cmp r0, #1
	bne _080AFC84
	movs r0, #0xd2
	lsls r0, r0, #1
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFC84:
	mov r1, sb
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #1
	bne _080AFCB2
	movs r0, #0xe6
	lsls r0, r0, #1
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	movs r1, #0xfa
	lsls r1, r1, #1
	adds r4, r5, r1
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080AFCB2:
	asrs r0, r7, #0x10
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080AFCC0: .4byte 0x00001FFF

	thumb_func_start sub_080AFCC4
sub_080AFCC4: @ 0x080AFCC4
	push {r4, r5, lr}
	ldr r0, _080AFCE4 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #0xc
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080AFCF4
	cmp r0, #1
	bgt _080AFCE8
	cmp r0, #0
	beq _080AFCEE
	b _080AFD58
	.align 2, 0
_080AFCE4: .4byte gUnk_03006B94
_080AFCE8:
	cmp r0, #2
	beq _080AFD3E
	b _080AFD58
_080AFCEE:
	bl sub_080B153C
	b _080AFD36
_080AFCF4:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
_080AFD36:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080AFD58
_080AFD3E:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080AFD58
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080AFD58:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080AFD60
sub_080AFD60: @ 0x080AFD60
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #8
	ldr r0, _080AFDD0 @ =gUnk_03006B94
	ldr r2, [r0]
	adds r7, r2, #0
	adds r7, #0xc
	movs r0, #1
	mov r8, r0
	ldr r0, _080AFDD4 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080AFE24
	adds r0, r2, #0
	adds r0, #0xd7
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFE24
	adds r1, r2, #0
	adds r1, #0xd8
	movs r0, #0
	ldrsb r0, [r1, r0]
	cmp r0, #1
	bne _080AFDD8
	movs r0, #0
	strb r0, [r1]
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	movs r0, #0xf7
	bl sub_08014970
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0x80
	lsls r1, r1, #1
	bl sub_080138D4
	b _080AFE24
	.align 2, 0
_080AFDD0: .4byte gUnk_03006B94
_080AFDD4: .4byte gKeyNewPress
_080AFDD8:
	mov r2, r8
	strb r2, [r1]
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	ldr r1, _080AFE80 @ =0xFFFF7FFF
	movs r0, #0
	movs r2, #0
	movs r3, #2
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #0
	movs r1, #1
	bl sub_08011144
	movs r0, #0xf7
	bl sub_08014970
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #2
	bl sub_080138D4
_080AFE24:
	adds r0, r7, #0
	adds r0, #0xcc
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080AFE36
	bl _080B096C
_080AFE36:
	bl sub_080B1CE8
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bne _080AFED8
	adds r0, r7, #0
	adds r0, #0xce
	movs r3, #0
	ldrsb r3, [r0, r3]
	cmp r3, #1
	bne _080AFED8
	adds r5, r7, #0
	adds r5, #0xcd
	movs r4, #0
	ldrsb r4, [r5, r4]
	cmp r4, #0
	bne _080AFED8
	adds r0, #3
	strb r4, [r0]
	adds r2, r7, #0
	adds r2, #0xd2
	strb r4, [r2]
	strh r4, [r7, #8]
	ldrh r1, [r7, #2]
	movs r6, #2
	ldrsh r0, [r7, r6]
	cmp r0, #8
	bne _080AFE84
	strh r4, [r7, #0xe]
	movs r0, #5
	strh r0, [r7, #0x10]
	movs r0, #0xc
	strh r0, [r7, #2]
	movs r0, #0xff
	strb r0, [r5]
	strb r3, [r2]
	b _080AFE9C
	.align 2, 0
_080AFE80: .4byte 0xFFFF7FFF
_080AFE84:
	adds r0, r1, #0
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080AFEAA
	movs r0, #0xe
	strh r0, [r7, #2]
	strh r4, [r7, #0xe]
	strb r3, [r2]
	movs r0, #0xff
	strb r0, [r5]
_080AFE9C:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	b _080AFED8
_080AFEAA:
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #0x88
	lsls r0, r0, #1
	str r4, [sp]
	str r4, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r0, #0
	movs r1, #0
	bl sub_080B25A4
	movs r0, #0x20
	strh r0, [r7, #2]
	movs r0, #0xff
	strb r0, [r5]
_080AFED8:
	movs r1, #2
	ldrsh r0, [r7, r1]
	cmp r0, #0x37
	bls _080AFEE4
	bl _080B096C
_080AFEE4:
	lsls r0, r0, #2
	ldr r1, _080AFEF0 @ =_080AFEF4
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080AFEF0: .4byte _080AFEF4
_080AFEF4: @ jump table
	.4byte _080AFFD4 @ case 0
	.4byte _080AFFEA @ case 1
	.4byte _080AFFFC @ case 2
	.4byte _080B007C @ case 3
	.4byte _080B00B0 @ case 4
	.4byte _080B00DA @ case 5
	.4byte _080B015C @ case 6
	.4byte _080B0192 @ case 7
	.4byte _080B01B8 @ case 8
	.4byte _080B0254 @ case 9
	.4byte _080B029C @ case 10
	.4byte _080B03F4 @ case 11
	.4byte _080B0478 @ case 12
	.4byte _080B048A @ case 13
	.4byte _080B04AC @ case 14
	.4byte _080B0520 @ case 15
	.4byte _080B0578 @ case 16
	.4byte _080B0604 @ case 17
	.4byte _080B06B0 @ case 18
	.4byte _080B0750 @ case 19
	.4byte _080B078E @ case 20
	.4byte _080B084C @ case 21
	.4byte _080B0888 @ case 22
	.4byte _080B096C @ case 23
	.4byte _080B096C @ case 24
	.4byte _080B08C2 @ case 25
	.4byte _080B090C @ case 26
	.4byte _080B096C @ case 27
	.4byte _080B096C @ case 28
	.4byte _080B096C @ case 29
	.4byte _080B096C @ case 30
	.4byte _080B096C @ case 31
	.4byte _080B0930 @ case 32
	.4byte _080B096C @ case 33
	.4byte _080B096C @ case 34
	.4byte _080B096C @ case 35
	.4byte _080B096C @ case 36
	.4byte _080B096C @ case 37
	.4byte _080B096C @ case 38
	.4byte _080B096C @ case 39
	.4byte _080B096C @ case 40
	.4byte _080B096C @ case 41
	.4byte _080B096C @ case 42
	.4byte _080B096C @ case 43
	.4byte _080B096C @ case 44
	.4byte _080B096C @ case 45
	.4byte _080B096C @ case 46
	.4byte _080B096C @ case 47
	.4byte _080B096C @ case 48
	.4byte _080B096C @ case 49
	.4byte _080B0942 @ case 50
	.4byte _080B096C @ case 51
	.4byte _080B096C @ case 52
	.4byte _080B096C @ case 53
	.4byte _080B096C @ case 54
	.4byte _080B095A @ case 55
_080AFFD4:
	bl sub_080017D8
	bl sub_080B0FD8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080AFFE6
	bl _080B096C
_080AFFE6:
	bl _080B0904
_080AFFEA:
	bl sub_080B0A74
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080AFFF8
	bl _080B096C
_080AFFF8:
	bl _080B0904
_080AFFFC:
	bl sub_080B1E74
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B000C
	bl _080B096C
_080B000C:
	adds r0, r7, #0
	adds r0, #0x58
	ldrh r1, [r0]
	ldr r0, _080B004C @ =0x0000FFFF
	cmp r1, r0
	beq _080B001C
	bl _080B0904
_080B001C:
	adds r1, r7, #0
	adds r1, #0xcb
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0xca
	strb r4, [r0]
	movs r0, #4
	strh r0, [r7, #2]
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B0054
	ldr r0, _080B0050 @ =0x000005C9
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B0066
	.align 2, 0
_080B004C: .4byte 0x0000FFFF
_080B0050: .4byte 0x000005C9
_080B0054:
	ldr r0, _080B0074 @ =0x00000522
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080B0066:
	ldr r0, _080B0078 @ =0x00000111
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #0x6b
	bl _080B0844
	.align 2, 0
_080B0074: .4byte 0x00000522
_080B0078: .4byte 0x00000111
_080B007C:
	bl sub_080B2204
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	beq _080B008C
	bl _080B096C
_080B008C:
	adds r2, r7, #0
	adds r2, #0xcb
	movs r0, #1
	strb r0, [r2]
	adds r0, r7, #0
	adds r0, #0xca
	strb r1, [r0]
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	ldr r0, _080B00AC @ =0x00000111
	str r1, [sp]
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0x6b
	b _080B0844
	.align 2, 0
_080B00AC: .4byte 0x00000111
_080B00B0:
	movs r0, #0
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	beq _080B00C2
	bl _080B096C
_080B00C2:
	movs r0, #0xe1
	lsls r0, r0, #5
	str r0, [r7, #0x1c]
	adds r1, r7, #0
	adds r1, #0xce
	movs r0, #1
	strb r0, [r1]
	adds r0, r7, #0
	adds r0, #0xcd
	strb r2, [r0]
	bl _080B0904
_080B00DA:
	bl sub_080017D8
	bl sub_080B239C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B00EE
	bl _080B096C
_080B00EE:
	ldr r2, [r7, #0x24]
	cmp r2, #0
	bge _080B00F8
	ldr r6, _080B0150 @ =0x00000FFF
	adds r2, r2, r6
_080B00F8:
	asrs r3, r2, #0xc
	ldr r0, _080B0154 @ =0x0000307C
	muls r0, r3, r0
	cmp r0, #0
	bge _080B0106
	ldr r1, _080B0150 @ =0x00000FFF
	adds r0, r0, r1
_080B0106:
	asrs r0, r0, #0xc
	movs r1, #0x81
	subs r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r5, r1, #0x10
	ldr r0, _080B0158 @ =0x00001936
	muls r0, r3, r0
	cmp r0, #0
	bge _080B011C
	ldr r6, _080B0150 @ =0x00000FFF
	adds r0, r0, r6
_080B011C:
	asrs r0, r0, #0xc
	movs r1, #0x5f
	subs r1, r1, r0
	lsrs r0, r2, #0x1f
	adds r0, r3, r0
	asrs r0, r0, #1
	str r0, [r7, #0x2c]
	lsls r0, r5, #0x10
	asrs r0, r0, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_080B33D0
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x7c
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	b _080B0904
	.align 2, 0
_080B0150: .4byte 0x00000FFF
_080B0154: .4byte 0x0000307C
_080B0158: .4byte 0x00001936
_080B015C:
	movs r0, #1
	movs r1, #1
	bl sub_080B25A4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B0170
	bl _080B096C
_080B0170:
	movs r0, #2
	movs r1, #0
	bl sub_080B25A4
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0xe6
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	adds r1, r7, #0
	adds r1, #0xd2
	movs r0, #1
	strb r0, [r1]
	b _080B0904
_080B0192:
	movs r0, #0
	movs r1, #0
	movs r2, #1
	bl sub_080B2744
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B01A6
	b _080B096C
_080B01A6:
	movs r0, #0
	movs r1, #1
	movs r2, #0
	bl sub_080B2744
	adds r0, r7, #0
	adds r0, #0xcd
	strb r4, [r0]
	b _080B0904
_080B01B8:
	bl sub_080B2E14
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080B021C
	ldr r0, [r7, #0x20]
	cmp r0, #0
	beq _080B0208
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B01F0
	ldr r0, _080B01EC @ =0x000005D2
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	b _080B08FE
	.align 2, 0
_080B01EC: .4byte 0x000005D2
_080B01F0:
	ldr r0, _080B0204 @ =0x0000051C
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B0904
	.align 2, 0
_080B0204: .4byte 0x0000051C
_080B0208:
	strh r0, [r7, #0xe]
	movs r0, #5
	strh r0, [r7, #0x10]
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0xc
	strh r0, [r7, #2]
	b _080B096C
_080B021C:
	ldrh r0, [r7, #0x10]
	subs r0, #4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bhi _080B022A
	b _080B096C
_080B022A:
	ldr r0, _080B0250 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080B0238
	b _080B096C
_080B0238:
	movs r0, #0
	strh r0, [r7, #0xe]
	movs r0, #5
	strh r0, [r7, #0x10]
	movs r0, #0xc
	strh r0, [r7, #2]
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	b _080B096C
	.align 2, 0
_080B0250: .4byte gKeyNewPress
_080B0254:
	movs r0, #1
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B0264
	b _080B096C
_080B0264:
	movs r0, #0
	movs r1, #5
	movs r2, #0
	bl sub_080B2744
	movs r0, #4
	movs r1, #0
	bl sub_080B25A4
	str r4, [r7, #0x3c]
	adds r0, r7, #0
	adds r0, #0xcd
	strb r4, [r0]
	ldr r0, [r7, #0x68]
	lsls r0, r0, #0xc
	str r0, [r7, #0x70]
	ldr r0, [r7, #0x6c]
	lsls r0, r0, #0xc
	str r0, [r7, #0x74]
	movs r0, #0xa
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	movs r0, #0xf7
	movs r1, #0
	movs r2, #0
	movs r3, #4
	b _080B0900
_080B029C:
	bl sub_080B239C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B0374
	ldr r0, [r7, #0x24]
	cmp r0, #0
	bge _080B02B0
	ldr r1, _080B02BC @ =0x00000FFF
	adds r0, r0, r1
_080B02B0:
	asrs r1, r0, #0xc
	cmp r1, #0x1f
	ble _080B02C0
	movs r1, #0xa
	b _080B02D8
	.align 2, 0
_080B02BC: .4byte 0x00000FFF
_080B02C0:
	cmp r1, #0x1d
	ble _080B02C8
	movs r1, #8
	b _080B02D8
_080B02C8:
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #8
	cmp r0, #0
	bge _080B02D6
	ldr r2, _080B0368 @ =0x00000FFF
	adds r0, r0, r2
_080B02D6:
	asrs r1, r0, #0xc
_080B02D8:
	adds r0, r7, #0
	adds r0, #0x5c
	movs r6, #0
	ldrsh r0, [r0, r6]
	cmp r0, #2
	bne _080B02FC
	ldr r0, [r7, #0x20]
	subs r0, #0x18
	cmp r0, #1
	bls _080B02FC
	lsls r0, r1, #1
	adds r0, r0, r1
	lsls r0, r0, #0xb
	cmp r0, #0
	bge _080B02FA
	ldr r1, _080B0368 @ =0x00000FFF
	adds r0, r0, r1
_080B02FA:
	asrs r1, r0, #0xc
_080B02FC:
	ldr r0, _080B036C @ =0x0000307C
	muls r0, r1, r0
	cmp r0, #0
	bge _080B0308
	ldr r2, _080B0368 @ =0x00000FFF
	adds r0, r0, r2
_080B0308:
	asrs r0, r0, #0xc
	ldr r3, [r7, #0x68]
	adds r2, r3, r0
	str r2, [r7, #0x78]
	ldr r0, _080B0370 @ =0x00001936
	muls r0, r1, r0
	cmp r0, #0
	bge _080B031C
	ldr r6, _080B0368 @ =0x00000FFF
	adds r0, r0, r6
_080B031C:
	asrs r1, r0, #0xc
	ldr r0, [r7, #0x6c]
	adds r0, r0, r1
	str r0, [r7, #0x7c]
	adds r4, r7, #0
	adds r4, #0x80
	subs r0, r2, r3
	lsls r0, r0, #0xc
	movs r1, #0x5a
	bl __divsi3
	str r0, [r4]
	adds r4, #4
	ldr r0, [r7, #0x7c]
	ldr r1, [r7, #0x6c]
	subs r0, r0, r1
	lsls r0, r0, #0xc
	movs r1, #0x5a
	bl __divsi3
	str r0, [r4]
	ldr r0, [r7, #0x68]
	lsls r0, r0, #0xc
	str r0, [r7, #0x70]
	ldr r0, [r7, #0x6c]
	lsls r0, r0, #0xc
	str r0, [r7, #0x74]
	movs r0, #3
	movs r1, #0
	bl sub_080B25A4
	movs r0, #0
	str r0, [r7, #0x38]
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _080B03DC
	.align 2, 0
_080B0368: .4byte 0x00000FFF
_080B036C: .4byte 0x0000307C
_080B0370: .4byte 0x00001936
_080B0374:
	adds r6, r7, #0
	adds r6, #0x5c
	movs r0, #0
	ldrsh r1, [r6, r0]
	movs r5, #3
	subs r1, r5, r1
	movs r0, #0xc8
	lsls r0, r0, #1
	bl __divsi3
	ldr r4, [r7, #0x70]
	subs r4, r4, r0
	str r4, [r7, #0x70]
	movs r1, #0
	ldrsh r0, [r6, r1]
	subs r5, r5, r0
	movs r0, #0xd0
	adds r1, r5, #0
	bl __divsi3
	ldr r1, [r7, #0x74]
	subs r0, r1, r0
	str r0, [r7, #0x74]
	cmp r4, #0
	bge _080B03AA
	ldr r2, _080B03F0 @ =0x00000FFF
	adds r4, r4, r2
_080B03AA:
	asrs r4, r4, #0xc
	str r4, [r7, #0x68]
	cmp r0, #0
	bge _080B03B6
	ldr r6, _080B03F0 @ =0x00000FFF
	adds r0, r0, r6
_080B03B6:
	asrs r0, r0, #0xc
	str r0, [r7, #0x6c]
	cmp r4, #0x1c
	bgt _080B03C2
	movs r0, #0x1d
	str r0, [r7, #0x68]
_080B03C2:
	ldr r0, [r7, #0x6c]
	cmp r0, #0x2a
	bgt _080B03CC
	movs r0, #0x2b
	str r0, [r7, #0x6c]
_080B03CC:
	ldr r0, [r7, #0x68]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7, #0x6c]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_080B33D0
_080B03DC:
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
	movs r1, #0xf0
	lsls r1, r1, #2
	cmp r0, r1
	beq _080B03EC
	b _080B096C
_080B03EC:
	b _080B0484
	.align 2, 0
_080B03F0: .4byte 0x00000FFF
_080B03F4:
	adds r0, r7, #0
	adds r0, #0x80
	ldr r1, [r7, #0x70]
	ldr r0, [r0]
	adds r1, r1, r0
	str r1, [r7, #0x70]
	adds r0, r7, #0
	adds r0, #0x84
	ldr r2, [r7, #0x74]
	ldr r0, [r0]
	adds r2, r2, r0
	str r2, [r7, #0x74]
	cmp r1, #0
	bge _080B0414
	ldr r0, _080B0440 @ =0x00000FFF
	adds r1, r1, r0
_080B0414:
	asrs r1, r1, #0xc
	str r1, [r7, #0x68]
	cmp r2, #0
	bge _080B0420
	ldr r6, _080B0440 @ =0x00000FFF
	adds r2, r2, r6
_080B0420:
	asrs r2, r2, #0xc
	str r2, [r7, #0x6c]
	ldr r0, [r7, #0x38]
	adds r0, #1
	str r0, [r7, #0x38]
	ldr r0, [r7, #0x3c]
	adds r0, #1
	str r0, [r7, #0x3c]
	cmp r1, #0x80
	ble _080B0444
	cmp r2, #0x5e
	ble _080B0444
	movs r0, #0
	str r0, [r7, #0x38]
	movs r0, #0xd
	b _080B0456
	.align 2, 0
_080B0440: .4byte 0x00000FFF
_080B0444:
	ldr r0, [r7, #0x38]
	cmp r0, #0x5a
	bne _080B0458
	movs r0, #4
	movs r1, #0
	bl sub_080B25A4
	ldrh r0, [r7, #2]
	subs r0, #1
_080B0456:
	strh r0, [r7, #2]
_080B0458:
	ldr r1, [r7, #0x3c]
	movs r0, #0xf0
	lsls r0, r0, #2
	cmp r1, r0
	bne _080B0466
	movs r0, #0xe
	strh r0, [r7, #2]
_080B0466:
	ldr r0, [r7, #0x68]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	ldr r1, [r7, #0x6c]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	bl sub_080B33D0
	b _080B096C
_080B0478:
	bl sub_080B2E14
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B0484
	b _080B096C
_080B0484:
	movs r0, #0xe
	strh r0, [r7, #2]
	b _080B096C
_080B048A:
	movs r0, #0xf7
	bl sub_08014970
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08014848
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r7, #0
	adds r1, #0x40
	adds r1, r1, r0
	ldr r0, [r7, #0x20]
	str r0, [r1]
	movs r0, #0xf
	strh r0, [r7, #2]
	b _080B096C
_080B04AC:
	movs r0, #0xf7
	bl sub_08014970
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08014848
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x93
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B04F0
	ldr r0, _080B04EC @ =0x00000591
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B0502
	.align 2, 0
_080B04EC: .4byte 0x00000591
_080B04F0:
	ldr r0, _080B051C @ =0x0000052C
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080B0502:
	movs r0, #0
	movs r1, #4
	movs r2, #1
	bl sub_080B2744
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	movs r0, #0x19
	strh r0, [r7, #2]
	b _080B096C
	.align 2, 0
_080B051C: .4byte 0x0000052C
_080B0520:
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r7, #0
	adds r1, #0x40
	adds r1, r1, r0
	ldr r0, [r1]
	subs r0, #0x18
	cmp r0, #1
	bhi _080B054E
	movs r0, #7
	movs r1, #1
	bl sub_080B25A4
	movs r0, #0x87
	lsls r0, r0, #1
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #0xf
	movs r3, #0
	bl sub_080147DC
	b _080B0566
_080B054E:
	movs r0, #6
	movs r1, #1
	bl sub_080B25A4
	ldr r0, _080B0574 @ =0x0000010F
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #0xf
	movs r3, #0
	bl sub_080147DC
_080B0566:
	movs r0, #0
	str r0, [r7, #0x34]
	adds r1, r7, #0
	adds r1, #0xcd
	movs r0, #0xff
	strb r0, [r1]
	b _080B0904
	.align 2, 0
_080B0574: .4byte 0x0000010F
_080B0578:
	ldr r0, [r7, #0x34]
	adds r0, #1
	str r0, [r7, #0x34]
	cmp r0, #0x1e
	beq _080B0584
	b _080B096C
_080B0584:
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r5, r7, #0
	adds r5, #0x88
	adds r0, r5, r0
	movs r1, #0x89
	str r1, [r0]
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r4, r7, #0
	adds r4, #0x9c
	adds r0, r4, r0
	movs r1, #0x63
	str r1, [r0]
	ldr r2, [r7, #0x54]
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	lsls r2, r2, #2
	adds r1, r7, #0
	adds r1, #0x40
	adds r1, r1, r2
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_080B2804
	ldr r2, [r7, #0x54]
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	lsls r2, r2, #2
	adds r5, r5, r2
	ldr r1, [r5]
	adds r4, r4, r2
	ldr r2, [r4]
	bl sub_080B3400
	movs r0, #0
	movs r1, #3
	movs r2, #1
	bl sub_080B2744
	movs r0, #0x81
	movs r1, #0x5f
	bl sub_080B33D0
	ldr r1, [r7, #0x54]
	lsls r0, r1, #2
	adds r0, r0, r1
	lsls r0, r0, #3
	movs r1, #0x87
	lsls r1, r1, #2
	adds r0, r0, r1
	adds r0, r7, r0
	movs r1, #2
	movs r2, #1
	bl sub_0800A6C4
	adds r2, r7, #0
	adds r2, #0xd2
	movs r1, #0
	movs r0, #1
	strb r0, [r2]
	str r1, [r7, #0x34]
	b _080B0904
_080B0604:
	ldr r2, [r7, #0x34]
	adds r2, #1
	str r2, [r7, #0x34]
	ldr r1, [r7, #0x54]
	lsls r1, r1, #2
	adds r6, r7, #0
	adds r6, #0x88
	adds r1, r6, r1
	ldr r0, _080B06A0 @ =0x00000F55
	muls r0, r2, r0
	movs r2, #0x89
	lsls r2, r2, #0xc
	adds r0, r0, r2
	str r0, [r1]
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r6, r0
	ldr r0, [r1]
	cmp r0, #0
	bge _080B0630
	ldr r2, _080B06A4 @ =0x00000FFF
	adds r0, r0, r2
_080B0630:
	asrs r0, r0, #0xc
	str r0, [r1]
	ldr r0, _080B06A8 @ =0x42C60000
	ldr r1, _080B06AC @ =0x42BC0000
	movs r2, #0xc8
	lsls r2, r2, #3
	ldr r3, [r7, #0x34]
	movs r4, #0x30
	str r4, [sp]
	bl sub_08001140
	ldr r4, [r7, #0x54]
	lsls r4, r4, #2
	adds r5, r7, #0
	adds r5, #0x9c
	adds r4, r5, r4
	bl __fixsfsi
	str r0, [r4]
	ldr r2, [r7, #0x54]
	lsls r0, r2, #0x18
	asrs r0, r0, #0x18
	lsls r2, r2, #2
	adds r1, r6, r2
	ldr r1, [r1]
	adds r5, r5, r2
	ldr r2, [r5]
	bl sub_080B3400
	ldr r0, [r7, #0x34]
	cmp r0, #0x30
	beq _080B0672
	b _080B096C
_080B0672:
	adds r0, r7, #0
	adds r0, #0xd3
	ldr r1, [r7, #0x54]
	adds r0, r0, r1
	movs r1, #0
	strb r1, [r0]
	adds r0, r7, #0
	adds r0, #0xd2
	strb r1, [r0]
	strh r1, [r7, #0xc]
	ldr r1, [r7, #0x54]
	lsls r1, r1, #2
	subs r0, #0x92
	adds r0, r0, r1
	ldr r0, [r0]
	subs r0, #0x18
	cmp r0, #1
	bls _080B0698
	b _080B0904
_080B0698:
	movs r0, #0x14
	strh r0, [r7, #2]
	b _080B096C
	.align 2, 0
_080B06A0: .4byte 0x00000F55
_080B06A4: .4byte 0x00000FFF
_080B06A8: .4byte 0x42C60000
_080B06AC: .4byte 0x42BC0000
_080B06B0:
	movs r0, #6
	movs r1, #1
	bl sub_080B25A4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B06C2
	b _080B096C
_080B06C2:
	ldr r0, [r7, #0x54]
	lsls r2, r0, #2
	adds r1, r7, #0
	adds r1, #0x88
	adds r1, r1, r2
	lsls r0, r0, #4
	adds r0, #0xe
	str r0, [r1]
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r2, r7, #0
	adds r2, #0x9c
	adds r0, r2, r0
	movs r1, #0x74
	str r1, [r0]
	ldr r0, [r7, #0x54]
	lsls r1, r0, #2
	adds r3, r7, #0
	adds r3, #0x40
	adds r0, r3, r1
	ldr r0, [r0]
	cmp r0, #0xd
	bne _080B06F8
	adds r1, r2, r1
	ldr r0, [r1]
	adds r0, #7
	str r0, [r1]
_080B06F8:
	ldr r1, [r7, #0x54]
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #2
	adds r1, r3, r1
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_080B2804
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x70
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B0736
	movs r0, #0xba
	lsls r0, r0, #3
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	b _080B08FE
_080B0736:
	ldr r0, _080B074C @ =0x00000573
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B0904
	.align 2, 0
_080B074C: .4byte 0x00000573
_080B0750:
	movs r0, #2
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B0760
	b _080B096C
_080B0760:
	movs r0, #0
	movs r1, #0
	bl sub_080B25A4
	adds r1, r7, #0
	adds r1, #0xcd
	strb r4, [r1]
	strh r4, [r7, #0xc]
	movs r0, #5
	strh r0, [r7, #2]
	ldr r0, [r7, #0x54]
	adds r0, #1
	str r0, [r7, #0x54]
	cmp r0, #5
	beq _080B0780
	b _080B096C
_080B0780:
	movs r0, #0xff
	strb r0, [r1]
	strh r4, [r7, #0xc]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	b _080B093C
_080B078E:
	movs r0, #7
	movs r1, #1
	bl sub_080B25A4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B079E
	b _080B096C
_080B079E:
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r7, #0
	adds r1, #0x40
	adds r0, r1, r0
	ldr r0, [r0]
	adds r4, r1, #0
	cmp r0, #0x18
	bne _080B07DC
	movs r0, #0xe5
	lsls r0, r0, #1
	movs r1, #1
	bl sub_08012F0C
	ldr r0, [r7, #0x54]
	lsls r2, r0, #2
	adds r1, r7, #0
	adds r1, #0x88
	adds r1, r1, r2
	lsls r0, r0, #4
	adds r0, #6
	str r0, [r1]
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r7, #0
	adds r1, #0x9c
	adds r1, r1, r0
	movs r0, #0x64
	str r0, [r1]
	movs r0, #0x15
	b _080B080A
_080B07DC:
	cmp r0, #0x19
	bne _080B080C
	movs r0, #0xe5
	lsls r0, r0, #1
	movs r1, #2
	bl sub_08012F0C
	ldr r0, [r7, #0x54]
	lsls r2, r0, #2
	adds r1, r7, #0
	adds r1, #0x88
	adds r1, r1, r2
	lsls r0, r0, #4
	adds r0, #0xe
	str r0, [r1]
	ldr r0, [r7, #0x54]
	lsls r0, r0, #2
	adds r1, r7, #0
	adds r1, #0x9c
	adds r1, r1, r0
	movs r0, #0x5c
	str r0, [r1]
	movs r0, #0x16
_080B080A:
	strh r0, [r7, #2]
_080B080C:
	ldr r1, [r7, #0x54]
	lsls r0, r1, #0x18
	asrs r0, r0, #0x18
	lsls r1, r1, #2
	adds r1, r4, r1
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	bl sub_080B2804
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #0
	bne _080B0834
	ldr r0, _080B0830 @ =0x000005D4
	b _080B083A
	.align 2, 0
_080B0830: .4byte 0x000005D4
_080B0834:
	movs r0, #0xae
	lsls r0, r0, #3
	movs r1, #0
_080B083A:
	str r1, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
_080B0844:
	movs r3, #0
	bl sub_080147DC
	b _080B096C
_080B084C:
	movs r0, #5
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B085C
	b _080B096C
_080B085C:
	movs r0, #0
	movs r1, #0
	bl sub_080B25A4
	adds r1, r7, #0
	adds r1, #0xcd
	strb r4, [r1]
	strh r4, [r7, #0xc]
	movs r0, #5
	strh r0, [r7, #2]
	ldr r0, [r7, #0x54]
	adds r0, #1
	str r0, [r7, #0x54]
	cmp r0, #5
	bne _080B096C
	movs r0, #0xff
	strb r0, [r1]
	strh r4, [r7, #0xc]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	b _080B093C
_080B0888:
	movs r0, #6
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080B096C
	movs r0, #0
	movs r1, #0
	bl sub_080B25A4
	adds r1, r7, #0
	adds r1, #0xcd
	strb r4, [r1]
	strh r4, [r7, #0xc]
	movs r0, #5
	strh r0, [r7, #2]
	ldr r0, [r7, #0x54]
	adds r0, #1
	str r0, [r7, #0x54]
	cmp r0, #5
	bne _080B096C
	movs r0, #0xff
	strb r0, [r1]
	strh r4, [r7, #0xc]
	adds r1, #1
	movs r0, #0
	strb r0, [r1]
	b _080B093C
_080B08C2:
	movs r0, #5
	movs r1, #1
	bl sub_080B25A4
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080B096C
	ldr r0, [r7, #0x1c]
	cmp r0, #0
	bne _080B08DE
	adds r0, r7, #0
	adds r0, #0xcd
	strb r4, [r0]
_080B08DE:
	adds r0, r7, #0
	adds r0, #0xd2
	strb r4, [r0]
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x67
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x67
	movs r1, #0
	movs r2, #5
_080B08FE:
	movs r3, #0
_080B0900:
	bl sub_080147DC
_080B0904:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _080B096C
_080B090C:
	movs r0, #3
	bl sub_080B245C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	bne _080B096C
	movs r0, #0
	movs r1, #0
	bl sub_080B25A4
	adds r0, r7, #0
	adds r0, #0xcd
	strb r4, [r0]
	strh r4, [r7, #0xc]
	movs r0, #5
	strh r0, [r7, #2]
	b _080B096C
_080B0930:
	movs r0, #4
	bl sub_080B245C
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B096C
_080B093C:
	movs r0, #0x32
	strh r0, [r7, #2]
	b _080B096C
_080B0942:
	adds r1, r7, #0
	adds r1, #0xcb
	movs r0, #0
	strb r0, [r1]
	bl sub_080B2104
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B096C
	movs r0, #0x37
	strh r0, [r7, #2]
	b _080B096C
_080B095A:
	bl sub_080B2A50
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080B096C
	strh r0, [r7, #2]
	movs r6, #0
	mov r8, r6
_080B096C:
	mov r0, r8
	add sp, #8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B097C
sub_080B097C: @ 0x080B097C
	push {r4, r5, lr}
	ldr r0, _080B099C @ =gUnk_03006B94
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #0xc
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B09CC
	cmp r0, #1
	bgt _080B09A0
	cmp r0, #0
	beq _080B09A6
	b _080B0A6C
	.align 2, 0
_080B099C: .4byte gUnk_03006B94
_080B09A0:
	cmp r0, #2
	beq _080B09F2
	b _080B0A6C
_080B09A6:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #2
	movs r1, #0x28
	bl sub_0801457C
	b _080B09EA
_080B09CC:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B0A6C
	bl sub_08014700
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B0A6C
	bl sub_08014614
_080B09EA:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080B0A6C
_080B09F2:
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B0A6C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080B0A74
sub_080B0A74: @ 0x080B0A74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x34
	ldr r1, _080B0AA4 @ =gUnk_03006B94
	ldr r0, [r1]
	adds r7, r0, #0
	adds r7, #0xc
	movs r0, #1
	str r0, [sp, #0x28]
	movs r2, #0x12
	ldrsh r0, [r7, r2]
	adds r3, r1, #0
	cmp r0, #6
	bls _080B0A98
	b _080B0FC6
_080B0A98:
	lsls r0, r0, #2
	ldr r1, _080B0AA8 @ =_080B0AAC
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B0AA4: .4byte gUnk_03006B94
_080B0AA8: .4byte _080B0AAC
_080B0AAC: @ jump table
	.4byte _080B0AC8 @ case 0
	.4byte _080B0ADE @ case 1
	.4byte _080B0B60 @ case 2
	.4byte _080B0B86 @ case 3
	.4byte _080B0D7C @ case 4
	.4byte _080B0F08 @ case 5
	.4byte _080B0F60 @ case 6
_080B0AC8:
	adds r0, r7, #0
	adds r0, #0xb4
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	subs r0, #6
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _080B0F54
_080B0ADE:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	movs r6, #5
	strb r6, [r0, #2]
	movs r2, #4
	strb r2, [r0, #3]
	adds r1, r0, #0
	movs r0, #0x14
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r2, [r0, #5]
	movs r3, #2
	mov r8, r3
	mov r1, r8
	strb r1, [r0, #7]
	movs r5, #6
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r7, #0
	adds r0, #0xb4
	add r1, sp, #0x14
	bl sub_08019944
	add r0, sp, #0x14
	strb r4, [r0]
	strb r6, [r0, #1]
	movs r1, #9
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	adds r1, r0, #0
	movs r0, #0xc
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r5, [r0, #5]
	mov r2, r8
	strb r2, [r0, #7]
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r7, #0
	adds r0, #0xb6
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	b _080B0F54
_080B0B60:
	adds r0, r7, #0
	adds r0, #0xb4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B0B72
	b _080B0FC6
_080B0B72:
	adds r0, r7, #0
	adds r0, #0xb6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B0B84
	b _080B0FC6
_080B0B84:
	b _080B0F54
_080B0B86:
	movs r3, #0
	mov r8, r3
	adds r0, r7, #0
	adds r0, #0xb0
	str r0, [sp, #0x2c]
	adds r1, r7, #0
	adds r1, #0xb2
	str r1, [sp, #0x30]
	movs r2, #0x5a
	adds r2, r2, r7
	mov sb, r2
	movs r3, #0xa0
	lsls r3, r3, #0xc
	mov sl, r3
	ldr r4, _080B0BC8 @ =gUnk_08BDA1F4
	ldrb r0, [r4]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0BCC
	ldrb r0, [r4]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0
	movs r2, #0xa
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B0BD8
	.align 2, 0
_080B0BC8: .4byte gUnk_08BDA1F4
_080B0BCC:
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0xa
	bl sub_080B1DA4
_080B0BD8:
	movs r0, #0x80
	lsls r0, r0, #0xa
	add sl, r0
	movs r1, #1
	b _080B0C68
_080B0BE2:
	ldr r0, _080B0C0C @ =gUnk_08BDA1F4
	mov r3, r8
	adds r4, r3, r0
	ldrb r0, [r4]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0C10
	ldrb r0, [r4]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, sl
	lsrs r2, r1, #0x10
	mov r1, r8
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B0C1E
	.align 2, 0
_080B0C0C: .4byte gUnk_08BDA1F4
_080B0C10:
	mov r3, sl
	lsrs r2, r3, #0x10
	movs r0, #0
	mov r1, r8
	movs r3, #0xa
	bl sub_080B1DA4
_080B0C1E:
	movs r6, #0x80
	lsls r6, r6, #0xa
	add r6, sl
	mov r5, r8
	adds r5, #1
	ldr r0, _080B0C50 @ =gUnk_08BDA1F4
	adds r4, r5, r0
	ldrb r0, [r4]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0C54
	ldrb r0, [r4]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsrs r2, r6, #0x10
	adds r1, r5, #0
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B0C60
	.align 2, 0
_080B0C50: .4byte gUnk_08BDA1F4
_080B0C54:
	lsrs r2, r6, #0x10
	movs r0, #0
	adds r1, r5, #0
	movs r3, #0xa
	bl sub_080B1DA4
_080B0C60:
	movs r0, #0x80
	lsls r0, r0, #0xb
	add sl, r0
	movs r1, #2
_080B0C68:
	add r8, r1
	mov r2, r8
	cmp r2, #4
	bls _080B0BE2
	movs r3, #0xb9
	lsls r3, r3, #2
	adds r4, r7, r3
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x54
	movs r2, #0x4e
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	movs r0, #0xc3
	lsls r0, r0, #2
	adds r4, r7, r0
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xb
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x54
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r0, _080B0D6C @ =0x0000FFFF
	mov r1, sb
	strh r0, [r1]
	mov r4, sb
	ldr r5, _080B0D70 @ =gUnk_08BDA1F4
_080B0D0A:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, r0, r5
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0D0A
	ldr r0, _080B0D74 @ =gUnk_08BDA234
	ldr r2, [r0]
	movs r0, #5
	str r0, [sp]
	ldr r6, _080B0D78 @ =0x44444444
	str r6, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x2c]
	movs r1, #0
	movs r3, #6
	bl sub_0800B1AC
	ldr r1, _080B0D70 @ =gUnk_08BDA1F4
	mov r3, sb
	movs r2, #0
	ldrsh r0, [r3, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_0806380C
	adds r2, r0, #0
	movs r0, #0xc
	str r0, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	ldr r0, [sp, #0x30]
	movs r1, #0
	movs r3, #0xa
	bl sub_0800B1AC
	b _080B0F54
	.align 2, 0
_080B0D6C: .4byte 0x0000FFFF
_080B0D70: .4byte gUnk_08BDA1F4
_080B0D74: .4byte gUnk_08BDA234
_080B0D78: .4byte 0x44444444
_080B0D7C:
	ldr r0, _080B0DA0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B0DA4
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	ldrh r0, [r7, #0x12]
	adds r0, #1
	strh r0, [r7, #0x12]
	movs r3, #0x5a
	adds r3, r3, r7
	mov sb, r3
	b _080B0E58
	.align 2, 0
_080B0DA0: .4byte gKeyNewPress
_080B0DA4:
	movs r0, #2
	ands r0, r1
	movs r1, #0x5a
	adds r1, r1, r7
	mov sb, r1
	cmp r0, #0
	bne _080B0E58
	ldr r0, _080B0E08 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080B0E10
	mov r2, sb
	movs r3, #0
	ldrsh r5, [r2, r3]
	mov r4, sb
	movs r0, #0
	mov r8, r0
	ldr r6, _080B0E0C @ =gUnk_08BDA1F4
_080B0DCC:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	ble _080B0DE0
	mov r2, r8
	mov r1, sb
	strh r2, [r1]
_080B0DE0:
	movs r3, #0
	ldrsh r0, [r4, r3]
	adds r0, r0, r6
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0DCC
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r5, r0
	beq _080B0E58
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _080B0E58
	.align 2, 0
_080B0E08: .4byte gCurrentKeyPress
_080B0E0C: .4byte gUnk_08BDA1F4
_080B0E10:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B0E58
	mov r3, sb
	movs r0, #0
	ldrsh r5, [r3, r0]
	mov r4, sb
	ldr r6, _080B0F00 @ =gUnk_08BDA1F4
_080B0E22:
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B0E34
	movs r0, #4
	mov r1, sb
	strh r0, [r1]
_080B0E34:
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, r0, r6
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B0E22
	mov r3, sb
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp r5, r0
	beq _080B0E58
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_080B0E58:
	mov r2, sb
	movs r3, #0
	ldrsh r0, [r2, r3]
	movs r6, #1
	rsbs r6, r6, #0
	cmp r0, r6
	bne _080B0E68
	b _080B0FC6
_080B0E68:
	movs r0, #0xb9
	lsls r0, r0, #2
	adds r5, r7, r0
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r1, r1, #0x14
	movs r0, #0xa8
	lsls r0, r0, #0xf
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0x4e
	bl sub_0800A678
	movs r1, #0xc3
	lsls r1, r1, #2
	adds r4, r7, r1
	mov r2, sb
	movs r3, #0
	ldrsh r1, [r2, r3]
	lsls r1, r1, #0x14
	movs r0, #0xa8
	lsls r0, r0, #0xf
	adds r1, r1, r0
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r5, #0
	bl sub_0800A778
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	mov r1, sb
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r6
	bne _080B0EC6
	b _080B0FC6
_080B0EC6:
	adds r4, r7, #0
	adds r4, #0xb2
	adds r0, r4, #0
	bl sub_0800B4E4
	ldr r1, _080B0F00 @ =gUnk_08BDA1F4
	mov r3, sb
	movs r2, #0
	ldrsh r0, [r3, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_0806380C
	adds r2, r0, #0
	movs r0, #0xc
	str r0, [sp]
	ldr r0, _080B0F04 @ =0x44444444
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0800B1AC
	b _080B0FC6
	.align 2, 0
_080B0F00: .4byte gUnk_08BDA1F4
_080B0F04: .4byte 0x44444444
_080B0F08:
	adds r2, r7, #0
	adds r2, #0x5a
	movs r0, #0
	ldrsh r1, [r2, r0]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	beq _080B0F40
	ldr r0, [r3]
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #0
	bne _080B0F40
	ldr r1, _080B0F5C @ =gUnk_08BDA1F4
	movs r3, #0
	ldrsh r0, [r2, r3]
	adds r0, r0, r1
	ldrb r4, [r0]
	adds r0, r4, #0
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
_080B0F40:
	adds r0, r7, #0
	adds r0, #0xb4
	movs r1, #5
	bl sub_0801BA94
	adds r0, r7, #0
	adds r0, #0xb6
	movs r1, #0
	bl sub_0801BA94
_080B0F54:
	ldrh r0, [r7, #0x12]
	adds r0, #1
	strh r0, [r7, #0x12]
	b _080B0FC6
	.align 2, 0
_080B0F5C: .4byte gUnk_08BDA1F4
_080B0F60:
	adds r4, r7, #0
	adds r4, #0xb4
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r5, r4, #0
	cmp r0, #2
	bne _080B0F84
	adds r1, r7, #0
	adds r1, #0xb0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080B0F84
	adds r0, r1, #0
	bl sub_0800B4E4
_080B0F84:
	adds r4, r7, #0
	adds r4, #0xb6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080B0FA6
	adds r1, r7, #0
	adds r1, #0xb2
	ldrh r0, [r1]
	cmp r0, #0
	beq _080B0FA6
	adds r0, r1, #0
	bl sub_0800B4E4
_080B0FA6:
	adds r0, r5, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B0FC6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B0FC6
	strh r0, [r7, #0x12]
	movs r0, #0
	str r0, [sp, #0x28]
_080B0FC6:
	ldr r0, [sp, #0x28]
	add sp, #0x34
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B0FD8
sub_080B0FD8: @ 0x080B0FD8
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x64
	ldr r0, _080B1008 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r0, #0xc
	mov sb, r0
	movs r0, #1
	str r0, [sp, #0x60]
	mov r1, sb
	movs r2, #0x12
	ldrsh r0, [r1, r2]
	cmp r0, #6
	bls _080B0FFC
	b _080B152A
_080B0FFC:
	lsls r0, r0, #2
	ldr r1, _080B100C @ =_080B1010
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B1008: .4byte gUnk_03006B94
_080B100C: .4byte _080B1010
_080B1010: @ jump table
	.4byte _080B102C @ case 0
	.4byte _080B1042 @ case 1
	.4byte _080B10CC @ case 2
	.4byte _080B10FA @ case 3
	.4byte _080B12D8 @ case 4
	.4byte _080B14A4 @ case 5
	.4byte _080B14C2 @ case 6
_080B102C:
	mov r0, sb
	adds r0, #0xb4
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	subs r0, #6
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _080B14B8
_080B1042:
	add r0, sp, #0x14
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	movs r6, #5
	strb r6, [r0, #2]
	movs r2, #4
	strb r2, [r0, #3]
	adds r1, r0, #0
	movs r0, #0x14
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r2, [r0, #5]
	movs r1, #2
	mov r8, r1
	mov r2, r8
	strb r2, [r0, #7]
	movs r5, #6
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	mov r0, sb
	adds r0, #0xb4
	add r1, sp, #0x14
	bl sub_08019944
	add r0, sp, #0x14
	strb r4, [r0]
	strb r6, [r0, #1]
	movs r1, #9
	strb r1, [r0, #2]
	strb r1, [r0, #3]
	adds r1, r0, #0
	movs r0, #0xc
	strb r0, [r1, #4]
	adds r0, r1, #0
	strb r5, [r0, #5]
	mov r3, r8
	strb r3, [r0, #7]
	strb r5, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	mov r0, sb
	adds r0, #0xb6
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	mov r1, sb
	ldrh r0, [r1, #0x12]
	adds r0, #1
	strh r0, [r1, #0x12]
	b _080B152A
_080B10CC:
	mov r0, sb
	adds r0, #0xb4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B10DE
	b _080B152A
_080B10DE:
	mov r0, sb
	adds r0, #0xb6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B10F0
	b _080B152A
_080B10F0:
	mov r2, sb
	ldrh r0, [r2, #0x12]
	adds r0, #1
	strh r0, [r2, #0x12]
	b _080B152A
_080B10FA:
	mov r0, sb
	adds r0, #0xb0
	ldr r1, _080B1174 @ =gUnk_08BDA238
	ldr r2, [r1]
	movs r1, #5
	str r1, [sp]
	ldr r6, _080B1178 @ =0x44444444
	str r6, [sp, #4]
	movs r4, #0
	str r4, [sp, #8]
	movs r5, #2
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #6
	bl sub_0800B1AC
	ldr r3, _080B117C @ =gUnk_08BDA1F9
	ldrb r0, [r3]
	bl sub_0806380C
	adds r2, r0, #0
	mov r0, sb
	adds r0, #0xb2
	movs r1, #0xc
	str r1, [sp]
	str r6, [sp, #4]
	str r4, [sp, #8]
	str r5, [sp, #0xc]
	str r4, [sp, #0x10]
	movs r1, #0
	movs r3, #0xa
	bl sub_0800B1AC
	movs r7, #0
	movs r0, #0x5c
	add r0, sb
	mov r8, r0
	movs r1, #0xa0
	lsls r1, r1, #0xc
	mov sl, r1
	ldr r2, _080B117C @ =gUnk_08BDA1F9
	ldrb r0, [r2]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B1180
	ldr r3, _080B117C @ =gUnk_08BDA1F9
	ldrb r0, [r3]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0
	movs r2, #0xa
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B118C
	.align 2, 0
_080B1174: .4byte gUnk_08BDA238
_080B1178: .4byte 0x44444444
_080B117C: .4byte gUnk_08BDA1F9
_080B1180:
	movs r0, #0
	movs r1, #0
	movs r2, #0xa
	movs r3, #0xa
	bl sub_080B1DA4
_080B118C:
	movs r0, #0x80
	lsls r0, r0, #0xa
	add sl, r0
	adds r7, #1
	cmp r7, #2
	bhi _080B121C
_080B1198:
	ldr r0, _080B11C0 @ =gUnk_08BDA1F9
	adds r4, r7, r0
	ldrb r0, [r4]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B11C4
	ldrb r0, [r4]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r1, sl
	lsrs r2, r1, #0x10
	adds r1, r7, #0
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B11D2
	.align 2, 0
_080B11C0: .4byte gUnk_08BDA1F9
_080B11C4:
	mov r3, sl
	lsrs r2, r3, #0x10
	movs r0, #0
	adds r1, r7, #0
	movs r3, #0xa
	bl sub_080B1DA4
_080B11D2:
	movs r6, #0x80
	lsls r6, r6, #0xa
	add r6, sl
	adds r5, r7, #1
	ldr r0, _080B1200 @ =gUnk_08BDA1F9
	adds r4, r5, r0
	ldrb r0, [r4]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B1204
	ldrb r0, [r4]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	lsrs r2, r6, #0x10
	adds r1, r5, #0
	movs r3, #0xa
	bl sub_080B1DA4
	b _080B1210
	.align 2, 0
_080B1200: .4byte gUnk_08BDA1F9
_080B1204:
	lsrs r2, r6, #0x10
	movs r0, #0
	adds r1, r5, #0
	movs r3, #0xa
	bl sub_080B1DA4
_080B1210:
	movs r0, #0x80
	lsls r0, r0, #0xb
	add sl, r0
	adds r7, #2
	cmp r7, #2
	bls _080B1198
_080B121C:
	movs r4, #0xb9
	lsls r4, r4, #2
	add r4, sb
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xc
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x54
	movs r2, #0x4e
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	movs r4, #0xc3
	lsls r4, r4, #2
	add r4, sb
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0xb
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_0800A6C0
	adds r0, r4, #0
	movs r1, #0x54
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldr r0, _080B12D0 @ =0x0000FFFF
	mov r1, r8
	strh r0, [r1]
	mov r4, r8
	ldr r5, _080B12D4 @ =gUnk_08BDA1F9
_080B12B6:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, r0, r5
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B12B6
	b _080B14B8
	.align 2, 0
_080B12D0: .4byte 0x0000FFFF
_080B12D4: .4byte gUnk_08BDA1F9
_080B12D8:
	ldr r0, _080B12FC @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B1300
	movs r0, #0x65
	movs r1, #0
	bl sub_080147B8
	mov r1, sb
	ldrh r0, [r1, #0x12]
	adds r0, #1
	strh r0, [r1, #0x12]
	movs r2, #0x5c
	add r2, sb
	mov r8, r2
	b _080B13F4
	.align 2, 0
_080B12FC: .4byte gKeyNewPress
_080B1300:
	movs r0, #2
	ands r0, r1
	movs r3, #0x5c
	add r3, sb
	mov r8, r3
	cmp r0, #0
	bne _080B13F4
	ldr r0, _080B1380 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080B138C
	movs r1, #0
	ldrsh r0, [r3, r1]
	mov sl, r0
	add r5, sp, #0x28
	mov r4, r8
	movs r7, #0
	ldr r6, _080B1384 @ =gUnk_08BDA1F9
_080B1328:
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #2
	ble _080B133A
	mov r2, r8
	strh r7, [r2]
_080B133A:
	movs r3, #0
	ldrsh r0, [r4, r3]
	adds r0, r0, r6
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B1328
	ldr r0, _080B1388 @ =gUnk_02027000
	adds r1, r5, #0
	bl sub_08001CBC
	mov r0, r8
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r1, r1, #5
	adds r1, #0x20
	ldr r0, [r5, #0x14]
	adds r0, r0, r1
	movs r1, #0x12
	movs r2, #1
	bl sub_08010D40
	mov r3, r8
	movs r1, #0
	ldrsh r0, [r3, r1]
	cmp sl, r0
	beq _080B13F4
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
	b _080B13F4
	.align 2, 0
_080B1380: .4byte gCurrentKeyPress
_080B1384: .4byte gUnk_08BDA1F9
_080B1388: .4byte gUnk_02027000
_080B138C:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B13F4
	mov r2, r8
	movs r3, #0
	ldrsh r7, [r2, r3]
	add r5, sp, #0x44
	mov r4, r8
	ldr r6, _080B1498 @ =gUnk_08BDA1F9
_080B13A0:
	ldrh r0, [r4]
	subs r0, #1
	strh r0, [r4]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B13B2
	movs r0, #2
	mov r1, r8
	strh r0, [r1]
_080B13B2:
	movs r2, #0
	ldrsh r0, [r4, r2]
	adds r0, r0, r6
	ldrb r0, [r0]
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	beq _080B13A0
	ldr r0, _080B149C @ =gUnk_02027000
	adds r1, r5, #0
	bl sub_08001CBC
	mov r3, r8
	movs r0, #0
	ldrsh r1, [r3, r0]
	lsls r1, r1, #5
	adds r1, #0x20
	ldr r0, [r5, #0x14]
	adds r0, r0, r1
	movs r1, #0x12
	movs r2, #1
	bl sub_08010D40
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r7, r0
	beq _080B13F4
	movs r0, #0x64
	movs r1, #0
	bl sub_080147B8
_080B13F4:
	mov r3, r8
	movs r1, #0
	ldrsh r0, [r3, r1]
	movs r6, #1
	rsbs r6, r6, #0
	cmp r0, r6
	bne _080B1404
	b _080B152A
_080B1404:
	movs r5, #0xb9
	lsls r5, r5, #2
	add r5, sb
	adds r1, r0, #0
	lsls r1, r1, #0x14
	movs r3, #0xa8
	lsls r3, r3, #0xf
	adds r1, r1, r3
	asrs r1, r1, #0x10
	adds r0, r5, #0
	movs r2, #0x4e
	bl sub_0800A678
	movs r4, #0xc3
	lsls r4, r4, #2
	add r4, sb
	mov r0, r8
	movs r2, #0
	ldrsh r1, [r0, r2]
	lsls r1, r1, #0x14
	movs r3, #0xa8
	lsls r3, r3, #0xf
	adds r1, r1, r3
	asrs r1, r1, #0x10
	adds r0, r4, #0
	movs r2, #0x5a
	bl sub_0800A678
	adds r0, r5, #0
	bl sub_0800A778
	adds r0, r5, #0
	bl sub_08009FF8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	mov r1, r8
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, r6
	beq _080B152A
	mov r4, sb
	adds r4, #0xb2
	adds r0, r4, #0
	bl sub_0800B4E4
	ldr r1, _080B1498 @ =gUnk_08BDA1F9
	mov r3, r8
	movs r2, #0
	ldrsh r0, [r3, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_0806380C
	adds r2, r0, #0
	movs r0, #0xc
	str r0, [sp]
	ldr r0, _080B14A0 @ =0x44444444
	str r0, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	movs r0, #2
	str r0, [sp, #0xc]
	str r1, [sp, #0x10]
	adds r0, r4, #0
	movs r3, #0xa
	bl sub_0800B1AC
	b _080B152A
	.align 2, 0
_080B1498: .4byte gUnk_08BDA1F9
_080B149C: .4byte gUnk_02027000
_080B14A0: .4byte 0x44444444
_080B14A4:
	mov r0, sb
	adds r0, #0xb4
	movs r1, #5
	bl sub_0801BA94
	mov r0, sb
	adds r0, #0xb6
	movs r1, #0
	bl sub_0801BA94
_080B14B8:
	mov r3, sb
	ldrh r0, [r3, #0x12]
	adds r0, #1
	strh r0, [r3, #0x12]
	b _080B152A
_080B14C2:
	mov r4, sb
	adds r4, #0xb4
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	adds r5, r4, #0
	cmp r0, #2
	bne _080B14E6
	mov r1, sb
	adds r1, #0xb0
	ldrh r0, [r1]
	cmp r0, #0
	beq _080B14E6
	adds r0, r1, #0
	bl sub_0800B4E4
_080B14E6:
	mov r4, sb
	adds r4, #0xb6
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080B1508
	mov r1, sb
	adds r1, #0xb2
	ldrh r0, [r1]
	cmp r0, #0
	beq _080B1508
	adds r0, r1, #0
	bl sub_0800B4E4
_080B1508:
	adds r0, r5, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B152A
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B152A
	mov r1, sb
	strh r0, [r1, #0x12]
	movs r2, #0
	str r2, [sp, #0x60]
_080B152A:
	ldr r0, [sp, #0x60]
	add sp, #0x64
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B153C
sub_080B153C: @ 0x080B153C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x38
	ldr r0, _080B16E0 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r0, #0xc
	mov sl, r0
	movs r0, #3
	movs r1, #0x1a
	bl sub_08001D3C
	adds r6, r0, #0
	movs r1, #0
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080B16E4 @ =gUnk_02010800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B16E8 @ =0x06008000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	adds r0, r6, #0
	movs r1, #1
	bl sub_08001D78
	adds r1, r0, #0
	ldr r4, _080B16EC @ =gUnk_0200F800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r6, #0
	movs r1, #2
	bl sub_08001D78
	adds r1, r0, #0
	ldr r5, _080B16F0 @ =gUnk_02010000
	adds r1, r5, #0
	bl LZ77UnCompWram
	ldr r0, _080B16F4 @ =gUnk_02017000
	mov r8, r0
	ldr r3, _080B16F8 @ =0x0600D800
	movs r0, #2
	adds r1, r4, #0
	mov r2, r8
	bl sub_08005CF4
	ldr r1, _080B16FC @ =gUnk_02017800
	mov sb, r1
	ldr r3, _080B1700 @ =0x0600E000
	movs r0, #3
	adds r1, r5, #0
	mov r2, sb
	bl sub_08005CF4
	movs r7, #0
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #2
	adds r1, r4, #0
	mov r2, r8
	movs r3, #4
	bl sub_08005F14
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #3
	adds r1, r5, #0
	mov r2, sb
	movs r3, #4
	bl sub_08005F14
	adds r0, r6, #0
	movs r1, #3
	bl sub_08001D78
	adds r1, r0, #0
	movs r0, #2
	bl sub_08005D6C
	adds r0, r6, #0
	movs r1, #4
	bl sub_08001D78
	adds r1, r0, #0
	movs r0, #3
	bl sub_08005D6C
	ldr r0, _080B1704 @ =0x06010000
	movs r1, #0
	movs r2, #0
	movs r3, #0x10
	bl sub_0801B8E8
	adds r0, r6, #0
	movs r1, #0xf
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080B1708 @ =gUnk_02019800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B170C @ =0x06004000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	adds r0, r6, #0
	movs r1, #0x11
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080B1710 @ =gUnk_0201A800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B1714 @ =0x06001C00
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	adds r0, r6, #0
	movs r1, #0x65
	bl sub_08001D78
	adds r5, r0, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B1718 @ =0x0600E800
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0xf
	bl sub_08010D40
	adds r0, r6, #0
	movs r1, #0x64
	bl sub_08001D78
	adds r1, r0, #0
	ldr r5, _080B171C @ =gUnk_0200E800
	movs r0, #0xd0
	lsls r0, r0, #2
	str r0, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #1
	adds r2, r5, #0
	movs r3, #0xf
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldr r1, _080B1720 @ =0x0600D000
	ldrh r2, [r4, #8]
	bl sub_08006BA4
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B1724
	adds r0, r6, #0
	movs r1, #7
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #6
	b _080B1732
	.align 2, 0
_080B16E0: .4byte gUnk_03006B94
_080B16E4: .4byte gUnk_02010800
_080B16E8: .4byte 0x06008000
_080B16EC: .4byte gUnk_0200F800
_080B16F0: .4byte gUnk_02010000
_080B16F4: .4byte gUnk_02017000
_080B16F8: .4byte 0x0600D800
_080B16FC: .4byte gUnk_02017800
_080B1700: .4byte 0x0600E000
_080B1704: .4byte 0x06010000
_080B1708: .4byte gUnk_02019800
_080B170C: .4byte 0x06004000
_080B1710: .4byte gUnk_0201A800
_080B1714: .4byte 0x06001C00
_080B1718: .4byte 0x0600E800
_080B171C: .4byte gUnk_0200E800
_080B1720: .4byte 0x0600D000
_080B1724:
	adds r0, r6, #0
	movs r1, #9
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #8
_080B1732:
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B24 @ =gUnk_02027000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #3
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	movs r1, #0x11
	movs r2, #1
	bl sub_08010D40
	ldr r0, [sp, #0x20]
	adds r0, #0x20
	movs r1, #0x12
	movs r2, #1
	bl sub_08010D40
	movs r0, #3
	movs r1, #3
	adds r2, r7, #0
	bl sub_0800A630
	mov r4, sl
	adds r4, #0xdc
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1B28 @ =0x06013200
	movs r0, #0x80
	lsls r0, r0, #5
	mov sb, r0
	adds r0, r4, #0
	movs r1, #1
	mov r3, sb
	bl sub_0800A6F0
	mov r7, sl
	adds r7, #0x5e
	movs r0, #0xc0
	strh r0, [r7]
	mov r5, sl
	adds r5, #0x60
	movs r0, #0x70
	strh r0, [r5]
	movs r0, #0
	ldrsh r1, [r7, r0]
	adds r0, r4, #0
	movs r2, #0x70
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	movs r4, #0xe1
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	movs r0, #0
	ldrsh r1, [r7, r0]
	subs r1, #8
	movs r0, #0
	ldrsh r2, [r5, r0]
	subs r2, #4
	adds r0, r4, #0
	bl sub_080091C4
	adds r0, r6, #0
	movs r1, #0x13
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x12
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B2C @ =gUnk_0201B000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #7
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1a
	bl sub_08010D40
	movs r0, #7
	movs r1, #7
	adds r2, r7, #0
	bl sub_0800A630
	movs r4, #0x82
	lsls r4, r4, #1
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #7
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xa
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1B30 @ =0x06014200
	movs r1, #0x80
	lsls r1, r1, #2
	mov r8, r1
	adds r0, r4, #0
	movs r1, #1
	mov r3, r8
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #8
	movs r2, #8
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r0, sl
	adds r0, #0xcf
	movs r1, #0
	strb r1, [r0]
	subs r0, #1
	strb r1, [r0]
	adds r0, r6, #0
	movs r1, #0x15
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x14
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B34 @ =gUnk_0201C800
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #8
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1b
	bl sub_08010D40
	movs r0, #8
	movs r1, #8
	adds r2, r7, #0
	bl sub_0800A630
	movs r4, #0x96
	lsls r4, r4, #1
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #8
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1B38 @ =0x06014400
	movs r3, #0xc0
	lsls r3, r3, #4
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0xa8
	movs r2, #0x88
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r0, sl
	adds r0, #0xd0
	movs r1, #0
	strb r1, [r0]
	movs r0, #0
	mov r1, sl
	str r0, [r1, #0x24]
	mov r0, sb
	str r0, [r1, #0x28]
	adds r0, r6, #0
	movs r1, #0x17
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x16
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B3C @ =gUnk_0201D000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #9
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1c
	bl sub_08010D40
	movs r0, #9
	movs r1, #9
	adds r2, r7, #0
	bl sub_0800A630
	movs r4, #0xe6
	lsls r4, r4, #1
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #9
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1B40 @ =0x06017600
	movs r5, #0x80
	lsls r5, r5, #3
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x88
	movs r2, #0x18
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	movs r4, #0xfa
	lsls r4, r4, #1
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #9
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1B44 @ =0x06017A00
	adds r0, r4, #0
	movs r1, #1
	adds r3, r5, #0
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x88
	movs r2, #0x18
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r0, sl
	adds r0, #0xd1
	movs r1, #0
	strb r1, [r0]
	adds r0, r6, #0
	movs r1, #0x19
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x18
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B48 @ =gUnk_0201E000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #0xa
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1d
	bl sub_08010D40
	movs r0, #0xa
	movs r1, #0xa
	adds r2, r7, #0
	bl sub_0800A630
	adds r0, r6, #0
	movs r1, #0xb
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0xa
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1B4C @ =gUnk_02036600
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #0xc
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1f
	bl sub_08010D40
	movs r0, #0xc
	movs r1, #0xc
	adds r2, r7, #0
	bl sub_0800A630
	adds r0, r6, #0
	movs r1, #0x60
	bl sub_08001D78
	b _080B1B50
	.align 2, 0
_080B1B24: .4byte gUnk_02027000
_080B1B28: .4byte 0x06013200
_080B1B2C: .4byte gUnk_0201B000
_080B1B30: .4byte 0x06014200
_080B1B34: .4byte gUnk_0201C800
_080B1B38: .4byte 0x06014400
_080B1B3C: .4byte gUnk_0201D000
_080B1B40: .4byte 0x06017600
_080B1B44: .4byte 0x06017A00
_080B1B48: .4byte gUnk_0201E000
_080B1B4C: .4byte gUnk_02036600
_080B1B50:
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x5f
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1CD8 @ =gUnk_0203C400
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #5
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x18
	bl sub_08010D40
	movs r0, #5
	movs r1, #5
	adds r2, r7, #0
	bl sub_0800A630
	movs r4, #0xcd
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #5
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #8
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1CDC @ =0x06011000
	adds r0, r4, #0
	movs r1, #1
	mov r3, r8
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x78
	movs r2, #0x98
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	movs r4, #0xe5
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl CpuClear16Bytes
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009400
	adds r0, r4, #0
	movs r1, #0
	bl sub_08009448
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800944C
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_08009454
	adds r0, r4, #0
	movs r1, #0x70
	movs r2, #0x94
	bl sub_080091C4
	adds r0, r6, #0
	movs r1, #0x62
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r6, #0
	movs r1, #0x61
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B1CE0 @ =gUnk_0203EC00
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #6
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x19
	bl sub_08010D40
	movs r0, #6
	movs r1, #6
	adds r2, r7, #0
	bl sub_0800A630
	movs r4, #0xd7
	lsls r4, r4, #2
	add r4, sl
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #6
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #9
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B1CE4 @ =0x06011200
	adds r0, r4, #0
	movs r1, #1
	mov r3, r8
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0xa8
	movs r2, #0x58
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	mov r0, sl
	adds r0, #0xd9
	movs r1, #0
	strb r1, [r0]
	add sp, #0x38
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B1CD8: .4byte gUnk_0203C400
_080B1CDC: .4byte 0x06011000
_080B1CE0: .4byte gUnk_0203EC00
_080B1CE4: .4byte 0x06011200

	thumb_func_start sub_080B1CE8
sub_080B1CE8: @ 0x080B1CE8
	push {r4, lr}
	ldr r0, _080B1D18 @ =gUnk_03006B94
	ldr r2, [r0]
	adds r4, r2, #0
	adds r4, #0xc
	adds r0, r2, #0
	adds r0, #0xda
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080B1D9C
	ldr r1, [r4, #0x1c]
	movs r0, #0xe1
	lsls r0, r0, #5
	cmp r1, r0
	bne _080B1D1C
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #0
	b _080B1D72
	.align 2, 0
_080B1D18: .4byte gUnk_03006B94
_080B1D1C:
	ldr r0, _080B1D30 @ =0x000015AD
	cmp r1, r0
	bne _080B1D34
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #1
	b _080B1D72
	.align 2, 0
_080B1D30: .4byte 0x000015AD
_080B1D34:
	ldr r0, _080B1D48 @ =0x00000EA5
	cmp r1, r0
	bne _080B1D4C
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #3
	b _080B1D72
	.align 2, 0
_080B1D48: .4byte 0x00000EA5
_080B1D4C:
	ldr r0, _080B1D60 @ =0x0000079D
	cmp r1, r0
	bne _080B1D64
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #5
	b _080B1D72
	.align 2, 0
_080B1D60: .4byte 0x0000079D
_080B1D64:
	cmp r1, #0x95
	bne _080B1D7A
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #7
_080B1D72:
	movs r3, #1
	bl sub_08009F50
	b _080B1D8E
_080B1D7A:
	cmp r1, #0
	bne _080B1D8E
	movs r1, #0x88
	lsls r1, r1, #1
	adds r0, r2, r1
	movs r1, #7
	movs r2, #8
	movs r3, #1
	bl sub_08009F50
_080B1D8E:
	ldr r0, [r4, #0x1c]
	subs r0, #1
	str r0, [r4, #0x1c]
	cmp r0, #0
	bgt _080B1D9C
	movs r0, #0
	str r0, [r4, #0x1c]
_080B1D9C:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080B1DA4
sub_080B1DA4: @ 0x080B1DA4
	push {r4, r5, r6, lr}
	mov r6, sb
	mov r5, r8
	push {r5, r6}
	sub sp, #0x1c
	mov sb, r0
	adds r6, r1, #0
	adds r4, r2, #0
	adds r5, r3, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	lsls r6, r6, #7
	movs r1, #0xc0
	lsls r1, r1, #5
	adds r1, r1, r6
	lsrs r1, r1, #5
	mov r8, r1
	mov r1, sp
	bl sub_08001CBC
	mov r2, sb
	lsls r1, r2, #7
	ldr r0, [sp, #0x10]
	adds r0, r0, r1
	ldr r1, _080B1E60 @ =0x06001800
	adds r6, r6, r1
	adds r1, r6, #0
	movs r2, #0x80
	bl sub_08006BA4
	mov r2, sb
	lsls r2, r2, #0x18
	lsrs r2, r2, #0x18
	mov sb, r2
	mov r0, sb
	bl sub_08063E54
	lsls r5, r5, #6
	lsls r4, r4, #1
	adds r5, r5, r4
	ldr r2, _080B1E64 @ =gUnk_0200E000
	adds r1, r5, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	mov r2, r8
	orrs r0, r2
	strh r0, [r1]
	mov r0, sb
	bl sub_08063E54
	ldr r1, _080B1E68 @ =gUnk_0200E002
	adds r2, r5, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	mov r1, r8
	adds r1, #1
	orrs r0, r1
	strh r0, [r2]
	mov r0, sb
	bl sub_08063E54
	ldr r1, _080B1E6C @ =gUnk_0200E040
	adds r2, r5, r1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	mov r1, r8
	adds r1, #2
	orrs r0, r1
	strh r0, [r2]
	mov r0, sb
	bl sub_08063E54
	ldr r2, _080B1E70 @ =gUnk_0200E042
	adds r5, r5, r2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0xc
	movs r1, #3
	add r8, r1
	mov r2, r8
	orrs r0, r2
	strh r0, [r5]
	add sp, #0x1c
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B1E60: .4byte 0x06001800
_080B1E64: .4byte gUnk_0200E000
_080B1E68: .4byte gUnk_0200E002
_080B1E6C: .4byte gUnk_0200E040
_080B1E70: .4byte gUnk_0200E042

	thumb_func_start sub_080B1E74
sub_080B1E74: @ 0x080B1E74
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	ldr r0, _080B1EA0 @ =gUnk_03006B94
	ldr r7, [r0]
	movs r0, #0xc
	adds r0, r0, r7
	mov r8, r0
	movs r1, #1
	str r1, [sp, #0x1c]
	movs r2, #4
	ldrsh r1, [r0, r2]
	cmp r1, #1
	beq _080B1EC4
	cmp r1, #1
	bgt _080B1EA4
	cmp r1, #0
	beq _080B1EB0
	b _080B20EA
	.align 2, 0
_080B1EA0: .4byte gUnk_03006B94
_080B1EA4:
	cmp r1, #2
	beq _080B1F86
	cmp r1, #0x21
	bne _080B1EAE
	b _080B20E0
_080B1EAE:
	b _080B20EA
_080B1EB0:
	adds r0, r7, #0
	adds r0, #0xc4
	strh r1, [r0]
	adds r0, #4
	strh r1, [r0]
	subs r0, #2
	strh r1, [r0]
	adds r0, #4
	strh r1, [r0]
	b _080B20EA
_080B1EC4:
	add r0, sp, #8
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	strb r4, [r0, #2]
	strb r4, [r0, #3]
	movs r5, #5
	strb r5, [r0, #4]
	strb r5, [r0, #5]
	adds r1, r0, #0
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #6]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r7, #0
	adds r0, #0xc4
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	add r0, sp, #8
	strb r5, [r0, #1]
	strb r4, [r0, #2]
	adds r1, r0, #0
	movs r0, #0xd
	strb r0, [r1, #3]
	adds r0, r1, #0
	movs r5, #0xc
	strb r5, [r0, #4]
	movs r0, #7
	strb r0, [r1, #5]
	adds r0, r1, #0
	strb r4, [r0, #6]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r7, #0
	adds r0, #0xc6
	bl sub_08019944
	add r0, sp, #8
	movs r6, #0xa
	strb r6, [r0, #1]
	adds r1, r0, #0
	movs r0, #0x1a
	strb r0, [r1, #2]
	adds r0, r1, #0
	strb r5, [r0, #3]
	movs r5, #4
	strb r5, [r0, #4]
	strb r5, [r0, #5]
	strb r4, [r0, #6]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r7, #0
	adds r0, #0xc8
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0xa
	movs r3, #0
	bl sub_080147DC
	add r1, sp, #8
	movs r0, #0xf
	strb r0, [r1, #1]
	movs r0, #0x14
	strb r0, [r1, #2]
	movs r0, #0x10
	strb r0, [r1, #3]
	adds r0, r1, #0
	strb r6, [r0, #4]
	strb r5, [r0, #5]
	strb r4, [r0, #6]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r7, #0
	adds r0, #0xca
	bl sub_08019944
	mov r2, r8
	ldrh r0, [r2, #4]
	adds r0, #1
	strh r0, [r2, #4]
	b _080B20F2
_080B1F86:
	adds r4, r7, #0
	adds r4, #0xc4
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B1FA2
	adds r0, r7, #0
	adds r0, #0xdb
	mov r1, sp
	ldrb r1, [r1, #0x1c]
	strb r1, [r0]
_080B1FA2:
	adds r0, r7, #0
	adds r0, #0xca
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	mov sb, r4
	movs r2, #0xc8
	adds r2, r2, r7
	mov sl, r2
	cmp r0, #1
	bne _080B201A
	ldr r4, _080B20B4 @ =gUnk_0200E000
	adds r0, r7, #0
	adds r0, #0xdc
	mov r1, sp
	ldrb r1, [r1, #0x1c]
	strb r1, [r0]
	movs r2, #0
	ldr r6, _080B20B8 @ =0x0000046A
	ldr r0, _080B20BC @ =0x0000220B
	adds r3, r0, #0
	ldr r5, _080B20C0 @ =0x000004AA
_080B1FD0:
	lsls r0, r2, #1
	adds r0, r0, r4
	adds r1, r0, r6
	strh r3, [r1]
	adds r0, r0, r5
	strh r3, [r0]
	adds r0, r2, #1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #7
	bls _080B1FD0
	ldr r0, _080B20C4 @ =0x0000042A
	adds r0, r4, r0
	ldr r2, _080B20C8 @ =0x00002206
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080B20CC @ =0x0000042C
	adds r0, r4, r0
	adds r2, #1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080B20D0 @ =0x0000042E
	adds r0, r4, r0
	adds r2, #1
	adds r1, r2, #0
	strh r1, [r0]
	movs r0, #0x86
	lsls r0, r0, #3
	adds r0, r4, r0
	adds r2, #1
	adds r1, r2, #0
	strh r1, [r0]
	ldr r0, _080B20D4 @ =0x00000432
	adds r0, r4, r0
	adds r2, #1
	adds r1, r2, #0
	strh r1, [r0]
_080B201A:
	mov r0, sb
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B2048
	ldr r1, _080B20B4 @ =gUnk_0200E000
	ldr r2, _080B20D8 @ =0x00002201
	adds r0, r2, #0
	strh r0, [r1]
	adds r2, #1
	adds r0, r2, #0
	strh r0, [r1, #2]
	adds r2, #1
	adds r0, r2, #0
	strh r0, [r1, #4]
	adds r2, #1
	adds r0, r2, #0
	strh r0, [r1, #6]
	adds r2, #1
	adds r0, r2, #0
	strh r0, [r1, #8]
_080B2048:
	mov r0, sl
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B2076
	ldr r1, _080B20DC @ =gUnk_08BDA1F4
	mov r0, r8
	adds r0, #0x5a
	movs r2, #0
	ldrsh r0, [r0, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	bl sub_08063850
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #0
	movs r2, #0x1b
	movs r3, #0xd
	bl sub_080B1DA4
_080B2076:
	mov r0, sb
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B20F2
	mov r0, sl
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B20F2
	mov r0, r8
	adds r0, #0xba
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B20F2
	mov r0, r8
	adds r0, #0xbe
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B20F2
	b _080B20EA
	.align 2, 0
_080B20B4: .4byte gUnk_0200E000
_080B20B8: .4byte 0x0000046A
_080B20BC: .4byte 0x0000220B
_080B20C0: .4byte 0x000004AA
_080B20C4: .4byte 0x0000042A
_080B20C8: .4byte 0x00002206
_080B20CC: .4byte 0x0000042C
_080B20D0: .4byte 0x0000042E
_080B20D4: .4byte 0x00000432
_080B20D8: .4byte 0x00002201
_080B20DC: .4byte gUnk_08BDA1F4
_080B20E0:
	movs r0, #0
	mov r2, r8
	strh r0, [r2, #4]
	str r0, [sp, #0x1c]
	b _080B20F2
_080B20EA:
	mov r1, r8
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
_080B20F2:
	ldr r0, [sp, #0x1c]
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B2104
sub_080B2104: @ 0x080B2104
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080B2128 @ =gUnk_03006B94
	ldr r4, [r0]
	adds r5, r4, #0
	adds r5, #0xc
	movs r0, #1
	mov sb, r0
	movs r1, #4
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _080B212C
	cmp r0, #1
	beq _080B215C
	b _080B21F4
	.align 2, 0
_080B2128: .4byte gUnk_03006B94
_080B212C:
	adds r0, r4, #0
	adds r0, #0xc4
	movs r1, #0x14
	bl sub_0801BA94
	adds r0, r4, #0
	adds r0, #0xc6
	movs r1, #0xf
	bl sub_0801BA94
	adds r0, r4, #0
	adds r0, #0xc8
	movs r1, #0xa
	bl sub_0801BA94
	adds r0, r4, #0
	adds r0, #0xca
	movs r1, #5
	bl sub_0801BA94
	ldrh r0, [r5, #4]
	adds r0, #1
	strh r0, [r5, #4]
	b _080B21F4
_080B215C:
	adds r7, r4, #0
	adds r7, #0xc4
	adds r0, r7, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080B2176
	adds r1, r4, #0
	adds r1, #0xdb
	movs r0, #0
	strb r0, [r1]
_080B2176:
	movs r0, #0xca
	adds r0, r0, r4
	mov r8, r0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080B2190
	adds r1, r4, #0
	adds r1, #0xdc
	movs r0, #0
	strb r0, [r1]
_080B2190:
	adds r6, r4, #0
	adds r6, #0xc6
	adds r0, r6, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #2
	bne _080B21BA
	adds r0, r4, #0
	adds r0, #0xdf
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_080B21BA:
	adds r0, r7, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B21F4
	adds r0, r4, #0
	adds r0, #0xc8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B21F4
	adds r0, r6, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B21F4
	mov r0, r8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B21F4
	strh r0, [r5, #4]
	movs r1, #0
	mov sb, r1
_080B21F4:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B2204
sub_080B2204: @ 0x080B2204
	push {r4, r5, lr}
	sub sp, #0x1c
	ldr r0, _080B2224 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r5, r0, #0
	adds r5, #0xc
	movs r1, #0x14
	ldrsh r0, [r5, r1]
	cmp r0, #5
	bls _080B221A
	b _080B238E
_080B221A:
	lsls r0, r0, #2
	ldr r1, _080B2228 @ =_080B222C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B2224: .4byte gUnk_03006B94
_080B2228: .4byte _080B222C
_080B222C: @ jump table
	.4byte _080B2244 @ case 0
	.4byte _080B2252 @ case 1
	.4byte _080B229A @ case 2
	.4byte _080B22B0 @ case 3
	.4byte _080B2354 @ case 4
	.4byte _080B237C @ case 5
_080B2244:
	adds r1, r5, #0
	adds r1, #0xc4
	movs r0, #0
	strh r0, [r1]
	ldrh r0, [r5, #0x14]
	adds r0, #1
	b _080B238C
_080B2252:
	add r0, sp, #8
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	adds r1, r0, #0
	movs r0, #0xb
	strb r0, [r1, #2]
	movs r0, #4
	strb r0, [r1, #3]
	movs r0, #8
	strb r0, [r1, #4]
	movs r0, #9
	strb r0, [r1, #5]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r4, [r0, #6]
	str r4, [sp, #0x14]
	str r4, [sp, #0x18]
	adds r0, r5, #0
	adds r0, #0xc4
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	ldrh r0, [r5, #0x14]
	adds r0, #1
	b _080B238C
_080B229A:
	adds r0, r5, #0
	adds r0, #0xc4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B238E
	ldrh r0, [r5, #0x14]
	adds r0, #1
	b _080B238C
_080B22B0:
	movs r0, #1
	movs r1, #5
	bl sub_08001894
	ldr r3, _080B2340 @ =gUnk_08BDA17C
	adds r1, r5, #0
	adds r1, #0x5a
	movs r4, #0
	ldrsh r2, [r1, r4]
	lsls r1, r2, #3
	subs r1, r1, r2
	adds r0, r0, r1
	adds r1, r5, #0
	adds r1, #0x5c
	movs r4, #0
	ldrsh r2, [r1, r4]
	lsls r1, r2, #3
	adds r1, r1, r2
	lsls r1, r1, #2
	subs r1, r1, r2
	adds r0, r0, r1
	adds r0, r0, r3
	ldrb r1, [r0]
	adds r0, r5, #0
	adds r0, #0x58
	strh r1, [r0]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	movs r0, #0
	bl sub_080B2804
	movs r2, #0x78
	movs r3, #0x38
	ldr r0, _080B2344 @ =gUnk_03006B94
	ldr r4, [r0]
	adds r1, r4, #0
	adds r1, #0x94
	str r2, [r1]
	adds r0, r4, #0
	adds r0, #0xa8
	str r3, [r0]
	movs r2, #0x8a
	lsls r2, r2, #2
	adds r0, r4, r2
	movs r4, #0
	ldrsh r1, [r1, r4]
	movs r2, #0x38
	bl sub_0800A678
	ldr r1, _080B2348 @ =gUnk_0200E15A
	ldr r2, _080B234C @ =0x0000221A
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r4, _080B2350 @ =0x0000221B
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #2
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	adds r4, #2
	adds r0, r4, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #2
	adds r0, r2, #0
	strh r0, [r1]
	ldrh r0, [r5, #0x14]
	adds r0, #1
	b _080B238C
	.align 2, 0
_080B2340: .4byte gUnk_08BDA17C
_080B2344: .4byte gUnk_03006B94
_080B2348: .4byte gUnk_0200E15A
_080B234C: .4byte 0x0000221A
_080B2350: .4byte 0x0000221B
_080B2354:
	ldr r0, _080B2378 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B238E
	adds r1, r5, #0
	adds r1, #0xd3
	movs r0, #0
	strb r0, [r1]
	adds r0, r5, #0
	adds r0, #0xc4
	bl sub_0801BA7C
	ldrh r0, [r5, #0x14]
	adds r0, #1
	b _080B238C
	.align 2, 0
_080B2378: .4byte gKeyNewPress
_080B237C:
	adds r0, r5, #0
	adds r0, #0xc4
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B238E
_080B238C:
	strh r0, [r5, #0x14]
_080B238E:
	movs r4, #0x14
	ldrsh r0, [r5, r4]
	add sp, #0x1c
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B239C
sub_080B239C: @ 0x080B239C
	push {r4, r5, r6, r7, lr}
	ldr r0, _080B23BC @ =gUnk_03006B94
	ldr r6, [r0]
	adds r5, r6, #0
	adds r5, #0xc
	movs r7, #1
	movs r0, #6
	ldrsh r4, [r5, r0]
	cmp r4, #1
	beq _080B23E8
	cmp r4, #1
	bgt _080B23C0
	cmp r4, #0
	beq _080B23C6
	b _080B2452
	.align 2, 0
_080B23BC: .4byte gUnk_03006B94
_080B23C0:
	cmp r4, #2
	beq _080B244C
	b _080B2452
_080B23C6:
	movs r0, #1
	bl sub_08011104
	str r4, [r5, #0x24]
	ldr r1, _080B23E4 @ =gUnk_08BDA1E8
	adds r0, r6, #0
	adds r0, #0x68
	movs r2, #0
	ldrsh r0, [r0, r2]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r0, [r0]
	str r0, [r5, #0x28]
	b _080B2436
	.align 2, 0
_080B23E4: .4byte gUnk_08BDA1E8
_080B23E8:
	ldr r0, [r5, #0x24]
	ldr r1, [r5, #0x28]
	adds r1, r0, r1
	str r1, [r5, #0x24]
	ldr r0, _080B2404 @ =0x00021FFF
	cmp r1, r0
	ble _080B2408
	movs r0, #1
	bl sub_08011104
	movs r0, #0
	str r0, [r5, #0x24]
	b _080B242A
	.align 2, 0
_080B2404: .4byte 0x00021FFF
_080B2408:
	ldr r0, _080B2440 @ =0x0001FFFF
	cmp r1, r0
	ble _080B242A
	movs r0, #1
	bl sub_08011104
	movs r1, #0x80
	lsls r1, r1, #0x14
	ldr r2, _080B2444 @ =0x00007FFF
	movs r0, #1
	movs r3, #1
	bl sub_0801015C
	movs r0, #1
	movs r1, #1
	bl sub_08011174
_080B242A:
	ldr r0, _080B2448 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B2452
_080B2436:
	ldrh r0, [r5, #6]
	adds r0, #1
	strh r0, [r5, #6]
	b _080B2452
	.align 2, 0
_080B2440: .4byte 0x0001FFFF
_080B2444: .4byte 0x00007FFF
_080B2448: .4byte gKeyNewPress
_080B244C:
	movs r0, #0
	strh r0, [r5, #6]
	movs r7, #0
_080B2452:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B245C
sub_080B245C: @ 0x080B245C
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	ldr r0, _080B2488 @ =gUnk_03006B94
	ldr r7, [r0]
	movs r0, #0xc
	adds r0, r0, r7
	mov r8, r0
	movs r1, #1
	mov sl, r1
	movs r2, #8
	ldrsh r0, [r0, r2]
	cmp r0, #0
	beq _080B248C
	cmp r0, #1
	beq _080B2564
	b _080B257E
	.align 2, 0
_080B2488: .4byte gUnk_03006B94
_080B248C:
	movs r0, #3
	movs r1, #0x1a
	bl sub_08001D3C
	adds r6, r0, #0
	mov r0, sb
	lsls r4, r0, #1
	adds r1, r4, #0
	adds r1, #0x1c
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	ldr r5, _080B2554 @ =gUnk_02035000
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r4, #0x1b
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r4, r0, #0
	adds r0, r5, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #0xb
	mov r1, sp
	movs r2, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1d
	bl sub_08010D40
	movs r0, #0xb
	movs r1, #0xb
	adds r2, r4, #0
	bl sub_0800A630
	movs r1, #0xb0
	lsls r1, r1, #1
	adds r4, r7, r1
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B2558 @ =0x06015200
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	ldr r0, _080B255C @ =gUnk_08BDA1FC
	add r0, sb
	ldrb r1, [r0]
	ldr r0, _080B2560 @ =gUnk_08BDA203
	add r0, sb
	ldrb r2, [r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r2, r8
	ldrh r0, [r2, #8]
	adds r0, #1
	strh r0, [r2, #8]
	b _080B257E
	.align 2, 0
_080B2554: .4byte gUnk_02035000
_080B2558: .4byte 0x06015200
_080B255C: .4byte gUnk_08BDA1FC
_080B2560: .4byte gUnk_08BDA203
_080B2564:
	movs r1, #0xb0
	lsls r1, r1, #1
	adds r0, r7, r1
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B257E
	movs r0, #0
	mov r2, r8
	strh r0, [r2, #8]
	mov sl, r0
_080B257E:
	movs r4, #0xaa
	lsls r4, r4, #1
	add r4, r8
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	mov r0, sl
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B25A4
sub_080B25A4: @ 0x080B25A4
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	adds r7, r0, #0
	mov r8, r1
	ldr r0, _080B25CC @ =gUnk_03006B94
	ldr r5, [r0]
	adds r6, r5, #0
	adds r6, #0xc
	movs r0, #1
	mov sb, r0
	movs r1, #0xa
	ldrsh r0, [r6, r1]
	cmp r0, #0
	beq _080B25D0
	cmp r0, #1
	beq _080B2648
	b _080B265E
	.align 2, 0
_080B25CC: .4byte gUnk_03006B94
_080B25D0:
	adds r4, r5, #0
	adds r4, #0xe8
	adds r0, r4, #0
	bl sub_08009F0C
	lsls r2, r7, #0x18
	lsrs r2, r2, #0x18
	mov r0, r8
	lsls r3, r0, #0x18
	lsrs r3, r3, #0x18
	adds r0, r4, #0
	movs r1, #3
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B2644 @ =0x06013200
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r5, #0
	adds r0, #0x6a
	movs r2, #0
	ldrsh r1, [r0, r2]
	adds r0, #2
	movs r3, #0
	ldrsh r2, [r0, r3]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldrh r0, [r6, #0xa]
	adds r0, #1
	strh r0, [r6, #0xa]
	mov r0, r8
	cmp r0, #0
	bne _080B265E
	strh r0, [r6, #0xa]
	b _080B265E
	.align 2, 0
_080B2644: .4byte 0x06013200
_080B2648:
	adds r0, r5, #0
	adds r0, #0xe8
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B265E
	movs r0, #0
	strh r0, [r6, #0xa]
	mov sb, r0
_080B265E:
	mov r0, sb
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B266C
sub_080B266C: @ 0x080B266C
	push {r4, r5, r6, r7, lr}
	sub sp, #0x1c
	adds r6, r0, #0
	ldr r0, _080B268C @ =gUnk_03006B94
	ldr r4, [r0]
	adds r5, r4, #0
	adds r5, #0xc
	movs r7, #1
	movs r1, #0xe
	ldrsh r0, [r5, r1]
	cmp r0, #0
	beq _080B2690
	cmp r0, #1
	beq _080B2710
	b _080B2728
	.align 2, 0
_080B268C: .4byte gUnk_03006B94
_080B2690:
	ldr r0, _080B2708 @ =gUnk_0201E000
	mov r1, sp
	bl sub_08001CBC
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x1d
	bl sub_08010D40
	movs r0, #0xc4
	lsls r0, r0, #1
	adds r4, r4, r0
	adds r0, r4, #0
	bl sub_08009F0C
	lsls r2, r6, #0x18
	lsrs r2, r2, #0x18
	adds r0, r4, #0
	movs r1, #0xa
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xd
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B270C @ =0x06015200
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x58
	movs r2, #0x28
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	ldrh r0, [r5, #0xe]
	adds r0, #1
	strh r0, [r5, #0xe]
	b _080B2728
	.align 2, 0
_080B2708: .4byte gUnk_0201E000
_080B270C: .4byte 0x06015200
_080B2710:
	movs r1, #0xc4
	lsls r1, r1, #1
	adds r0, r4, r1
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B2728
	movs r0, #0
	strh r0, [r5, #0xe]
	movs r7, #0
_080B2728:
	movs r0, #0xbe
	lsls r0, r0, #1
	adds r4, r5, r0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r7, #0
	add sp, #0x1c
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B2744
sub_080B2744: @ 0x080B2744
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	adds r6, r1, #0
	adds r7, r2, #0
	ldr r0, _080B2768 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r5, r0, #0
	adds r5, #0xc
	movs r1, #1
	mov r8, r1
	movs r2, #0xc
	ldrsh r1, [r5, r2]
	cmp r1, #0
	beq _080B276C
	cmp r1, #1
	beq _080B27E0
	b _080B27F8
	.align 2, 0
_080B2768: .4byte gUnk_03006B94
_080B276C:
	movs r1, #0xd8
	lsls r1, r1, #1
	adds r4, r0, r1
	adds r0, r4, #0
	bl sub_08009F0C
	lsls r2, r6, #0x18
	lsrs r2, r2, #0x18
	lsls r3, r7, #0x18
	lsrs r3, r3, #0x18
	adds r0, r4, #0
	movs r1, #0xc
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #0xf
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B27DC @ =0x06017200
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	ldr r1, [r5, #0x68]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	ldr r2, [r5, #0x6c]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #3
	movs r2, #3
	bl sub_0800A6C4
	ldrh r0, [r5, #0xc]
	adds r0, #1
	strh r0, [r5, #0xc]
	cmp r7, #0
	bne _080B27F8
	strh r7, [r5, #0xc]
	b _080B27F8
	.align 2, 0
_080B27DC: .4byte 0x06017200
_080B27E0:
	movs r2, #0xd8
	lsls r2, r2, #1
	adds r0, r0, r2
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B27F8
	movs r0, #0
	strh r0, [r5, #0xc]
	mov r8, r0
_080B27F8:
	mov r0, r8
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B2804
sub_080B2804: @ 0x080B2804
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x20
	adds r4, r1, #0
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	mov r8, r0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldr r0, _080B2934 @ =gUnk_03006B94
	ldr r0, [r0]
	mov sl, r0
	adds r0, #0xc
	str r0, [sp, #0x1c]
	movs r0, #3
	movs r1, #0x1a
	bl sub_08001D3C
	adds r6, r0, #0
	lsls r4, r4, #0x18
	asrs r1, r4, #0x18
	adds r4, r1, #0
	subs r4, #0x18
	lsls r0, r4, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080B2842
	b _080B2940
_080B2842:
	subs r4, r1, #1
	lsls r4, r4, #1
	adds r1, r4, #0
	adds r1, #0x2d
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	adds r5, r0, #0
	adds r4, #0x2c
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B2938 @ =gUnk_08BDA20C
	mov r2, r8
	lsls r2, r2, #0x18
	mov sb, r2
	asrs r6, r2, #0x18
	lsls r3, r6, #2
	mov r8, r3
	add r4, r8
	ldr r1, [r4]
	adds r0, r5, #0
	bl LZ77UnCompWram
	ldr r0, [r4]
	mov r1, sp
	bl sub_08001CBC
	adds r5, r6, #0
	adds r5, #0xe
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r3, [r4]
	adds r0, r5, #0
	mov r1, sp
	movs r2, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	adds r1, r6, #0
	adds r1, #0x13
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r2, sp
	ldrh r2, [r2, #0xe]
	lsrs r2, r2, #4
	bl sub_08010D40
	adds r0, r5, #0
	adds r1, r5, #0
	adds r2, r7, #0
	bl sub_0800A630
	mov r0, r8
	adds r4, r0, r6
	lsls r4, r4, #3
	movs r2, #0x87
	lsls r2, r2, #2
	adds r4, r4, r2
	ldr r3, [sp, #0x1c]
	adds r4, r3, r4
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r6, #3
	lsls r6, r6, #0x18
	lsrs r6, r6, #0x18
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #1
	bl sub_0800A6C0
	ldr r0, _080B293C @ =gUnk_08BDA220
	add r0, r8
	ldr r2, [r0]
	movs r3, #0xc0
	lsls r3, r3, #3
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	mov r0, sl
	adds r0, #0x94
	add r0, r8
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r0, sl
	adds r0, #0xa8
	add r0, r8
	movs r3, #0
	ldrsh r2, [r0, r3]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C4
	b _080B2A26
	.align 2, 0
_080B2934: .4byte gUnk_03006B94
_080B2938: .4byte gUnk_08BDA20C
_080B293C: .4byte gUnk_08BDA220
_080B2940:
	lsls r4, r4, #1
	adds r1, r4, #0
	adds r1, #0x5b
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	adds r5, r0, #0
	adds r4, #0x5a
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r7, r0, #0
	ldr r4, _080B2A48 @ =gUnk_0203A800
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	mov r0, r8
	lsls r0, r0, #0x18
	mov sb, r0
	asrs r5, r0, #0x18
	movs r6, #0xe0
	lsls r6, r6, #0x14
	add r6, sb
	lsrs r6, r6, #0x18
	adds r0, r6, #0
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	adds r1, r5, #0
	adds r1, #0x13
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	mov r2, sp
	ldrh r2, [r2, #0xe]
	lsrs r2, r2, #4
	bl sub_08010D40
	adds r0, r6, #0
	adds r1, r6, #0
	adds r2, r7, #0
	bl sub_0800A630
	lsls r2, r5, #2
	mov r8, r2
	adds r4, r2, r5
	lsls r4, r4, #3
	movs r3, #0x87
	lsls r3, r3, #2
	adds r4, r4, r3
	ldr r0, [sp, #0x1c]
	adds r4, r0, r4
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	adds r1, r6, #0
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r5, #3
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	adds r0, r4, #0
	adds r1, r5, #0
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B2A4C @ =0x06016200
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	mov r0, sl
	adds r0, #0x94
	add r0, r8
	movs r2, #0
	ldrsh r1, [r0, r2]
	mov r0, sl
	adds r0, #0xa8
	add r0, r8
	movs r3, #0
	ldrsh r2, [r0, r3]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #0
	bl sub_0800A6C4
_080B2A26:
	mov r0, sb
	asrs r1, r0, #0x18
	ldr r0, [sp, #0x1c]
	adds r0, #0xd3
	adds r0, r0, r1
	movs r1, #1
	strb r1, [r0]
	movs r0, #0
	add sp, #0x20
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0
_080B2A48: .4byte gUnk_0203A800
_080B2A4C: .4byte 0x06016200

	thumb_func_start sub_080B2A50
sub_080B2A50: @ 0x080B2A50
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x30
	ldr r0, _080B2A7C @ =gUnk_03006B94
	ldr r0, [r0]
	adds r7, r0, #0
	adds r7, #0xc
	movs r0, #1
	str r0, [sp, #0x24]
	movs r1, #0x16
	ldrsh r0, [r7, r1]
	cmp r0, #7
	bls _080B2A72
	b _080B2E00
_080B2A72:
	lsls r0, r0, #2
	ldr r1, _080B2A80 @ =_080B2A84
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B2A7C: .4byte gUnk_03006B94
_080B2A80: .4byte _080B2A84
_080B2A84: @ jump table
	.4byte _080B2AA4 @ case 0
	.4byte _080B2AB2 @ case 1
	.4byte _080B2B2C @ case 2
	.4byte _080B2B52 @ case 3
	.4byte _080B2BA4 @ case 4
	.4byte _080B2D80 @ case 5
	.4byte _080B2DAC @ case 6
	.4byte _080B2DDC @ case 7
_080B2AA4:
	adds r0, r7, #0
	adds r0, #0xc6
	movs r1, #0
	strh r1, [r0]
	adds r0, #2
	strh r1, [r0]
	b _080B2DD4
_080B2AB2:
	add r0, sp, #0x10
	movs r4, #0
	strb r4, [r0]
	strb r4, [r0, #1]
	movs r5, #4
	strb r5, [r0, #2]
	adds r1, r0, #0
	movs r0, #1
	strb r0, [r1, #3]
	adds r0, r1, #0
	movs r2, #0x17
	mov sb, r2
	mov r3, sb
	strb r3, [r0, #4]
	movs r0, #9
	strb r0, [r1, #5]
	adds r0, r1, #0
	movs r6, #2
	mov r8, r6
	mov r1, r8
	strb r1, [r0, #7]
	movs r6, #6
	strb r6, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x1c]
	str r4, [sp, #0x20]
	adds r0, r7, #0
	adds r0, #0xc6
	add r1, sp, #0x10
	bl sub_08019944
	add r0, sp, #0x10
	strb r4, [r0]
	strb r4, [r0, #1]
	strb r5, [r0, #2]
	adds r1, r0, #0
	movs r0, #0xe
	strb r0, [r1, #3]
	adds r0, r1, #0
	mov r2, sb
	strb r2, [r0, #4]
	strb r5, [r0, #5]
	mov r3, r8
	strb r3, [r0, #7]
	strb r6, [r0, #8]
	strb r4, [r0, #6]
	str r4, [sp, #0x1c]
	str r4, [sp, #0x20]
	adds r0, r7, #0
	adds r0, #0xc8
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B2DD4
_080B2B2C:
	adds r0, r7, #0
	adds r0, #0xc6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B2B3E
	b _080B2E00
_080B2B3E:
	adds r0, r7, #0
	adds r0, #0xc8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B2B50
	b _080B2E00
_080B2B50:
	b _080B2DD4
_080B2B52:
	ldr r1, _080B2B94 @ =gUnk_0200E3E2
	ldr r6, _080B2B98 @ =0x00000215
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	ldr r2, _080B2B9C @ =0x00000216
	adds r0, r2, #0
	strh r0, [r1]
	adds r1, #2
	ldr r3, _080B2BA0 @ =0x00000217
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	adds r6, #3
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #3
	adds r0, r2, #0
	strh r0, [r1]
	subs r1, #0x1e
	adds r3, #0xd
	adds r0, r3, #0
	strh r0, [r1]
	adds r1, #2
	adds r6, #0xd
	adds r0, r6, #0
	strh r0, [r1]
	adds r1, #2
	adds r2, #0xd
	adds r0, r2, #0
	strh r0, [r1]
	b _080B2DD4
	.align 2, 0
_080B2B94: .4byte gUnk_0200E3E2
_080B2B98: .4byte 0x00000215
_080B2B9C: .4byte 0x00000216
_080B2BA0: .4byte 0x00000217
_080B2BA4:
	movs r0, #0
	str r0, [r7, #0x64]
	mov r8, r0
	ldr r3, [r7, #0x54]
	adds r6, r7, #0
	adds r6, #0x58
	str r6, [sp, #0x28]
	cmp r8, r3
	bhs _080B2BEA
	ldr r4, _080B2BD0 @ =gUnk_08BDA114
	adds r5, r4, #0
	adds r5, #0x34
	adds r2, r7, #0
	adds r2, #0x40
_080B2BC0:
	ldr r0, [r2]
	ldr r1, [sp, #0x28]
	ldrh r1, [r1]
	cmp r0, r1
	beq _080B2BD4
	lsls r0, r0, #1
	adds r0, r0, r4
	b _080B2BD8
	.align 2, 0
_080B2BD0: .4byte gUnk_08BDA114
_080B2BD4:
	lsls r0, r0, #1
	adds r0, r0, r5
_080B2BD8:
	ldrh r1, [r0]
	ldr r0, [r7, #0x64]
	adds r0, r0, r1
	str r0, [r7, #0x64]
	adds r2, #4
	movs r6, #1
	add r8, r6
	cmp r8, r3
	blo _080B2BC0
_080B2BEA:
	movs r0, #0x8b
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r1, [r7, #0x64]
	cmp r6, r1
	bge _080B2C00
	movs r0, #0x8b
	bl sub_08012F0C
_080B2C00:
	movs r0, #0x8b
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	ldr r0, [sp, #0x28]
	ldrh r1, [r0]
	ldr r0, _080B2D18 @ =0x0000FFFF
	cmp r1, r0
	bne _080B2C2E
	movs r0, #0x8a
	bl sub_08012F60
	adds r1, r0, #0
	ldr r0, [r7, #0x64]
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	movs r0, #0x8a
	bl sub_08012F0C
_080B2C2E:
	ldr r0, [r7, #0x64]
	movs r5, #0xf
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r1, #3
	movs r2, #1
	movs r3, #0x16
	bl sub_080B3044
	str r5, [sp]
	str r4, [sp, #4]
	adds r0, r6, #0
	movs r1, #3
	movs r2, #1
	movs r3, #0xb
	bl sub_080B3044
	mov r8, r4
	ldr r0, [r7, #0x54]
	cmp r8, r0
	blo _080B2C5C
	b _080B2D66
_080B2C5C:
	movs r1, #0x34
	str r1, [sp, #0x2c]
	movs r2, #0x3c
	mov sl, r2
	mov sb, r4
_080B2C66:
	mov r3, r8
	lsls r4, r3, #0x18
	asrs r4, r4, #0x18
	adds r0, r7, #0
	adds r0, #0x40
	mov r1, sb
	adds r6, r0, r1
	movs r1, #0
	ldrsb r1, [r6, r1]
	adds r0, r4, #0
	bl sub_080B2804
	ldr r2, _080B2D1C @ =gUnk_03006B94
	ldr r1, [r2]
	adds r0, r1, #0
	adds r0, #0xc
	lsls r5, r4, #2
	adds r2, r1, #0
	adds r2, #0x94
	adds r2, r2, r5
	mov r3, sl
	str r3, [r2]
	adds r1, #0xa8
	adds r1, r1, r5
	movs r3, #0x1c
	str r3, [r1]
	adds r4, r5, r4
	lsls r4, r4, #3
	movs r1, #0x87
	lsls r1, r1, #2
	adds r4, r4, r1
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r2, r3]
	movs r2, #0x1c
	bl sub_0800A678
	ldr r0, [r6]
	cmp r0, #0xd
	bne _080B2CDC
	ldr r0, _080B2D1C @ =gUnk_03006B94
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc
	adds r2, r1, #0
	adds r2, #0x94
	adds r2, r2, r5
	mov r3, sl
	str r3, [r2]
	adds r1, #0xa8
	adds r1, r1, r5
	movs r3, #0x21
	str r3, [r1]
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r2, r3]
	movs r2, #0x21
	bl sub_0800A678
_080B2CDC:
	ldr r0, [r6]
	cmp r0, #0x18
	bne _080B2D08
	ldr r0, _080B2D1C @ =gUnk_03006B94
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc
	adds r2, r1, #0
	adds r2, #0x94
	adds r2, r2, r5
	ldr r3, [sp, #0x2c]
	str r3, [r2]
	adds r1, #0xa8
	adds r1, r1, r5
	movs r3, #0x1c
	str r3, [r1]
	adds r0, r0, r4
	movs r3, #0
	ldrsh r1, [r2, r3]
	movs r2, #0x1c
	bl sub_0800A678
_080B2D08:
	ldr r0, [r6]
	ldr r6, [sp, #0x28]
	ldrh r6, [r6]
	cmp r0, r6
	beq _080B2D24
	ldr r1, _080B2D20 @ =gUnk_08BDA114
	lsls r0, r0, #1
	b _080B2D28
	.align 2, 0
_080B2D18: .4byte 0x0000FFFF
_080B2D1C: .4byte gUnk_03006B94
_080B2D20: .4byte gUnk_08BDA114
_080B2D24:
	lsls r0, r0, #1
	ldr r1, _080B2D78 @ =gUnk_08BDA148
_080B2D28:
	adds r0, r0, r1
	ldrh r1, [r0]
	mov r0, sb
	adds r0, #6
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	str r0, [sp]
	movs r0, #2
	str r0, [sp, #4]
	str r1, [sp, #8]
	movs r0, #3
	str r0, [sp, #0xc]
	ldr r0, _080B2D7C @ =gUnk_0200E000
	movs r1, #0
	movs r2, #1
	movs r3, #0
	bl sub_0806F304
	ldr r2, [sp, #0x2c]
	adds r2, #0x20
	str r2, [sp, #0x2c]
	movs r3, #0x20
	add sl, r3
	movs r6, #4
	add sb, r6
	movs r0, #1
	add r8, r0
	ldr r0, [r7, #0x54]
	cmp r8, r0
	bhs _080B2D66
	b _080B2C66
_080B2D66:
	bl sub_08018E50
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	ldr r1, [r7, #0x64]
	adds r0, r0, r1
	bl SetFishingPoint
	b _080B2DD4
	.align 2, 0
_080B2D78: .4byte gUnk_08BDA148
_080B2D7C: .4byte gUnk_0200E000
_080B2D80:
	ldr r0, _080B2DA8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080B2D94
	movs r0, #0xa
	ands r0, r1
	cmp r0, #0
	beq _080B2E00
_080B2D94:
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0x6b
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B2DD4
	.align 2, 0
_080B2DA8: .4byte gKeyNewPress
_080B2DAC:
	adds r0, r7, #0
	adds r0, #0xc6
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0xc8
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0xd3
	movs r1, #0
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
	adds r0, #1
	strb r1, [r0]
_080B2DD4:
	ldrh r0, [r7, #0x16]
	adds r0, #1
	strh r0, [r7, #0x16]
	b _080B2E00
_080B2DDC:
	adds r0, r7, #0
	adds r0, #0xc6
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B2E00
	adds r0, r7, #0
	adds r0, #0xc8
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B2E00
	strh r0, [r7, #0x16]
	movs r1, #0
	str r1, [sp, #0x24]
_080B2E00:
	ldr r0, [sp, #0x24]
	add sp, #0x30
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B2E14
sub_080B2E14: @ 0x080B2E14
	push {r4, r5, r6, r7, lr}
	ldr r0, _080B2E34 @ =gUnk_03006B94
	ldr r0, [r0]
	adds r5, r0, #0
	adds r5, #0xc
	movs r7, #1
	movs r1, #0x10
	ldrsh r0, [r5, r1]
	cmp r0, #5
	bls _080B2E2A
	b _080B303A
_080B2E2A:
	lsls r0, r0, #2
	ldr r1, _080B2E38 @ =_080B2E3C
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B2E34: .4byte gUnk_03006B94
_080B2E38: .4byte _080B2E3C
_080B2E3C: @ jump table
	.4byte _080B2E54 @ case 0
	.4byte _080B2E64 @ case 1
	.4byte _080B2E88 @ case 2
	.4byte _080B2EA6 @ case 3
	.4byte _080B2EDC @ case 4
	.4byte _080B3028 @ case 5
_080B2E54:
	movs r0, #0
	bl sub_080B266C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B2E62
	b _080B303A
_080B2E62:
	b _080B2E7C
_080B2E64:
	movs r0, #1
	bl sub_080B266C
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B2E72
	b _080B303A
_080B2E72:
	movs r0, #4
	bl sub_0800180C
	cmp r0, #0
	bne _080B2E82
_080B2E7C:
	movs r0, #1
	strh r0, [r5, #0x10]
	b _080B303A
_080B2E82:
	movs r0, #2
	strh r0, [r5, #0x10]
	b _080B303A
_080B2E88:
	movs r0, #2
	bl sub_080B266C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B2E98
	b _080B303A
_080B2E98:
	movs r0, #2
	bl sub_0800180C
	cmp r0, #0
	bne _080B2ECA
	movs r0, #3
	b _080B2ECE
_080B2EA6:
	movs r0, #3
	bl sub_080B266C
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B2EB6
	b _080B303A
_080B2EB6:
	movs r0, #4
	bl sub_0800180C
	cmp r0, #0
	bne _080B2ECA
	movs r0, #1
	strh r0, [r5, #0x10]
	movs r0, #0
	movs r1, #1
	b _080B2ED4
_080B2ECA:
	str r4, [r5, #0x30]
	movs r0, #4
_080B2ECE:
	strh r0, [r5, #0x10]
	movs r0, #0
	movs r1, #2
_080B2ED4:
	movs r2, #0
	bl sub_080B2744
	b _080B303A
_080B2EDC:
	ldr r0, [r5, #0x30]
	adds r0, #1
	str r0, [r5, #0x30]
	cmp r0, #0x3c
	bne _080B2EEE
	adds r1, r5, #0
	adds r1, #0xd1
	movs r0, #1
	strb r0, [r1]
_080B2EEE:
	movs r0, #4
	bl sub_080B266C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080B2F0C
	str r0, [r5, #0x20]
	movs r0, #0
	movs r1, #5
	strh r1, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0xd1
	strb r0, [r1]
	b _080B303A
_080B2F0C:
	ldr r0, _080B2F44 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	bne _080B2F1A
	b _080B303A
_080B2F1A:
	ldr r0, [r5, #0x30]
	cmp r0, #0x3b
	ble _080B3014
	subs r0, #0x3c
	movs r1, #1
	rsbs r1, r1, #0
	cmp r0, #5
	ble _080B2F38
	movs r1, #0
	cmp r0, #0xa
	ble _080B2F38
	movs r1, #2
	cmp r0, #0xf
	bgt _080B2F38
	movs r1, #1
_080B2F38:
	ldr r0, [r5, #0x2c]
	cmp r0, #4
	bgt _080B2F48
	movs r2, #0
	b _080B2F74
	.align 2, 0
_080B2F44: .4byte gKeyNewPress
_080B2F48:
	cmp r0, #7
	bgt _080B2F50
	movs r2, #1
	b _080B2F74
_080B2F50:
	cmp r0, #0xa
	bgt _080B2F58
	movs r2, #2
	b _080B2F74
_080B2F58:
	cmp r0, #0xd
	bgt _080B2F60
	movs r2, #3
	b _080B2F74
_080B2F60:
	ldr r0, [r5, #0x24]
	cmp r0, #0
	bge _080B2F6A
	ldr r2, _080B2F80 @ =0x00001FFF
	adds r0, r0, r2
_080B2F6A:
	asrs r0, r0, #0xd
	movs r2, #5
	cmp r0, #0xf
	bgt _080B2F74
	movs r2, #4
_080B2F74:
	subs r2, r2, r1
	cmp r2, #0
	bge _080B2F84
	movs r2, #0
	b _080B2F8A
	.align 2, 0
_080B2F80: .4byte 0x00001FFF
_080B2F84:
	cmp r2, #6
	ble _080B2F8A
	movs r2, #6
_080B2F8A:
	ldr r3, _080B3010 @ =gUnk_08BDA17C
	adds r0, r5, #0
	adds r0, #0x5a
	movs r4, #0
	ldrsh r0, [r0, r4]
	lsls r1, r0, #3
	subs r1, r1, r0
	adds r1, r2, r1
	adds r0, r5, #0
	adds r0, #0x5c
	movs r4, #0
	ldrsh r2, [r0, r4]
	lsls r0, r2, #3
	adds r0, r0, r2
	lsls r0, r0, #2
	subs r0, r0, r2
	adds r1, r1, r0
	adds r1, r1, r3
	ldrb r2, [r1]
	str r2, [r5, #0x20]
	adds r6, r5, #0
	adds r6, #0xca
	movs r1, #0
	ldrsb r1, [r6, r1]
	movs r0, #1
	rsbs r0, r0, #0
	cmp r1, r0
	bne _080B2FCE
	adds r0, r2, #0
	subs r0, #0x18
	cmp r0, #1
	bhi _080B2FFC
	movs r0, #0xd
	str r0, [r5, #0x20]
_080B2FCE:
	ldr r0, [r5, #0x20]
	subs r0, #0x18
	cmp r0, #1
	bhi _080B2FFC
	movs r0, #0xd7
	lsls r0, r0, #2
	adds r4, r5, r0
	adds r0, r4, #0
	movs r1, #6
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r1, r5, #0
	adds r1, #0xd9
	movs r0, #1
	strb r0, [r1]
	movs r0, #0xff
	strb r0, [r6]
_080B2FFC:
	movs r0, #0
	movs r2, #0
	movs r1, #5
	strh r1, [r5, #0x10]
	adds r1, r5, #0
	adds r1, #0xd1
	strb r0, [r1]
	strh r2, [r5, #0xe]
	b _080B303A
	.align 2, 0
_080B3010: .4byte gUnk_08BDA17C
_080B3014:
	movs r2, #0
	str r2, [r5, #0x20]
	movs r1, #0
	movs r0, #5
	strh r0, [r5, #0x10]
	adds r0, r5, #0
	adds r0, #0xd1
	strb r1, [r0]
	strh r2, [r5, #0xe]
	b _080B303A
_080B3028:
	movs r0, #5
	bl sub_080B266C
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080B303A
	strh r0, [r5, #0x10]
	movs r7, #0
_080B303A:
	adds r0, r7, #0
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B3044
sub_080B3044: @ 0x080B3044
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #8
	ldr r4, [sp, #0x28]
	ldr r5, [sp, #0x2c]
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	lsls r2, r2, #0x18
	lsrs r7, r2, #0x18
	lsls r3, r3, #0x10
	lsrs r2, r3, #0x10
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r5, r5, #0x10
	lsrs r5, r5, #0x10
	mov ip, r5
	adds r5, r0, #0
	movs r0, #0
	mov sl, r0
	movs r6, #0
	movs r0, #8
	subs r0, r0, r1
	lsls r0, r0, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bhi _080B3118
	lsls r0, r7, #0x18
	lsls r2, r2, #1
	lsls r1, r4, #6
	asrs r0, r0, #0x18
	str r0, [sp]
	ldr r0, _080B30E8 @ =gUnk_0200E000
	adds r1, r1, r0
	adds r2, r2, r1
	mov r8, r2
	movs r1, #0x85
	mov sb, r1
	mov r2, ip
	lsls r7, r2, #0xc
_080B3098:
	movs r4, #0
	lsls r1, r3, #2
	ldr r2, _080B30EC @ =gUnk_08BCA1D8
	adds r0, r1, r2
	ldr r0, [r0]
	lsls r2, r6, #1
	adds r6, #1
	str r6, [sp, #4]
	adds r6, r3, #1
	mov ip, r6
	cmp r5, r0
	blo _080B30C6
	ldr r0, _080B30EC @ =gUnk_08BCA1D8
	adds r0, r1, r0
	ldr r1, [r0]
_080B30B6:
	subs r5, r5, r1
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #9
	bhi _080B30C6
	cmp r5, r1
	bhs _080B30B6
_080B30C6:
	ldr r0, [sp]
	cmp r0, #1
	bne _080B30F0
	cmp r4, #0
	bne _080B30F0
	mov r1, sl
	cmp r1, #0
	bne _080B30F0
	cmp r3, #7
	beq _080B30F0
	mov r6, r8
	adds r0, r2, r6
	mov r1, sb
	strh r1, [r0]
	adds r0, #0x40
	strh r1, [r0]
	b _080B3108
	.align 2, 0
_080B30E8: .4byte gUnk_0200E000
_080B30EC: .4byte gUnk_08BCA1D8
_080B30F0:
	add r2, r8
	lsls r1, r4, #1
	adds r0, r1, #0
	adds r0, #0xe0
	orrs r0, r7
	strh r0, [r2]
	adds r2, #0x40
	adds r1, #0xe1
	orrs r1, r7
	strh r1, [r2]
	movs r2, #1
	mov sl, r2
_080B3108:
	ldr r6, [sp, #4]
	lsls r0, r6, #0x18
	lsrs r6, r0, #0x18
	mov r1, ip
	lsls r0, r1, #0x18
	lsrs r3, r0, #0x18
	cmp r3, #7
	bls _080B3098
_080B3118:
	add sp, #8
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0

	thumb_func_start sub_080B3128
sub_080B3128: @ 0x080B3128
	ldr r1, _080B3130 @ =gUnk_03006B98
	movs r0, #0
	strh r0, [r1]
	bx lr
	.align 2, 0
_080B3130: .4byte gUnk_03006B98

	thumb_func_start sub_080B3134
sub_080B3134: @ 0x080B3134
	push {lr}
	ldr r0, _080B314C @ =gUnk_03006B94
	ldr r1, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #4
	beq _080B315C
	cmp r0, #4
	bgt _080B3150
	cmp r0, #1
	beq _080B3156
	b _080B3166
	.align 2, 0
_080B314C: .4byte gUnk_03006B94
_080B3150:
	cmp r0, #8
	beq _080B3162
	b _080B3166
_080B3156:
	movs r0, #0
	strh r0, [r1]
	b _080B3166
_080B315C:
	bl sub_080B3270
	b _080B3166
_080B3162:
	bl sub_080B3384
_080B3166:
	ldr r0, _080B3174 @ =gUnk_03006B94
	ldr r0, [r0]
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r1}
	bx r1
	.align 2, 0
_080B3174: .4byte gUnk_03006B94

	thumb_func_start sub_080B3178
sub_080B3178: @ 0x080B3178
	push {r4, lr}
	ldr r4, _080B318C @ =gUnk_03006B98
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080B3190
	cmp r0, #1
	beq _080B319E
	b _080B31DE
	.align 2, 0
_080B318C: .4byte gUnk_03006B98
_080B3190:
	movs r0, #0
	bl sub_080AF584
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B31DE
_080B319E:
	ldr r0, _080B31B4 @ =gUnk_03006B94
	ldr r1, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #4
	beq _080B31C4
	cmp r0, #4
	bgt _080B31B8
	cmp r0, #1
	beq _080B31BE
	b _080B31CE
	.align 2, 0
_080B31B4: .4byte gUnk_03006B94
_080B31B8:
	cmp r0, #8
	beq _080B31CA
	b _080B31CE
_080B31BE:
	movs r0, #0
	strh r0, [r1]
	b _080B31CE
_080B31C4:
	bl sub_080B3270
	b _080B31CE
_080B31CA:
	bl sub_080B3384
_080B31CE:
	ldr r0, _080B31EC @ =gUnk_03006B94
	ldr r0, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	cmp r1, #0
	bne _080B31DE
	ldr r0, _080B31F0 @ =gUnk_03006B98
	strh r1, [r0]
_080B31DE:
	ldr r0, _080B31F0 @ =gUnk_03006B98
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B31EC: .4byte gUnk_03006B94
_080B31F0: .4byte gUnk_03006B98

	thumb_func_start sub_080B31F4
sub_080B31F4: @ 0x080B31F4
	push {r4, lr}
	ldr r4, _080B3208 @ =gUnk_03006B98
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080B320C
	cmp r0, #1
	beq _080B321A
	b _080B325A
	.align 2, 0
_080B3208: .4byte gUnk_03006B98
_080B320C:
	movs r0, #1
	bl sub_080AF584
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B325A
_080B321A:
	ldr r0, _080B3230 @ =gUnk_03006B94
	ldr r1, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #4
	beq _080B3240
	cmp r0, #4
	bgt _080B3234
	cmp r0, #1
	beq _080B323A
	b _080B324A
	.align 2, 0
_080B3230: .4byte gUnk_03006B94
_080B3234:
	cmp r0, #8
	beq _080B3246
	b _080B324A
_080B323A:
	movs r0, #0
	strh r0, [r1]
	b _080B324A
_080B3240:
	bl sub_080B3270
	b _080B324A
_080B3246:
	bl sub_080B3384
_080B324A:
	ldr r0, _080B3268 @ =gUnk_03006B94
	ldr r0, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	cmp r1, #0
	bne _080B325A
	ldr r0, _080B326C @ =gUnk_03006B98
	strh r1, [r0]
_080B325A:
	ldr r0, _080B326C @ =gUnk_03006B98
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B3268: .4byte gUnk_03006B94
_080B326C: .4byte gUnk_03006B98

	thumb_func_start sub_080B3270
sub_080B3270: @ 0x080B3270
	push {r4, lr}
	ldr r4, _080B3284 @ =gUnk_03006B94
	ldr r0, [r4]
	movs r1, #2
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _080B3288
	cmp r0, #1
	beq _080B3296
	b _080B32AA
	.align 2, 0
_080B3284: .4byte gUnk_03006B94
_080B3288:
	bl sub_080B32BC
	ldr r1, [r4]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _080B32AA
_080B3296:
	bl sub_080AF6A4
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080B32AA
	ldr r1, [r4]
	movs r0, #8
	strh r0, [r1]
	strh r2, [r1, #2]
_080B32AA:
	ldr r0, _080B32B8 @ =gUnk_03006B94
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B32B8: .4byte gUnk_03006B94

	thumb_func_start sub_080B32BC
sub_080B32BC: @ 0x080B32BC
	push {lr}
	sub sp, #4
	ldr r0, _080B3338 @ =gUnk_03006B94
	ldr r1, [r0]
	adds r1, #8
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080B333C @ =0x01000002
	mov r0, sp
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r0, #2
	movs r1, #0
	movs r2, #2
	movs r3, #0
	bl sub_08004744
	movs r0, #2
	movs r1, #0x1b
	movs r2, #2
	bl sub_0800476C
	movs r0, #2
	bl sub_08006210
	movs r0, #2
	bl sub_08005B5C
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #2
	bl sub_0800E764
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080B3338: .4byte gUnk_03006B94
_080B333C: .4byte 0x01000002

	thumb_func_start sub_080B3340
sub_080B3340: @ 0x080B3340
	push {lr}
	ldr r0, _080B337C @ =gUnk_03006B94
	ldr r0, [r0]
	adds r3, r0, #0
	adds r3, #8
	movs r2, #1
	movs r1, #2
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bne _080B3376
	ldr r0, _080B3380 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080B3370
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080B3370
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080B3376
_080B3370:
	movs r0, #0
	strh r0, [r3, #2]
	movs r2, #0
_080B3376:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_080B337C: .4byte gUnk_03006B94
_080B3380: .4byte gKeyNewPress

	thumb_func_start sub_080B3384
sub_080B3384: @ 0x080B3384
	push {r4, r5, lr}
	ldr r5, _080B3398 @ =gUnk_03006B94
	ldr r0, [r5]
	movs r1, #2
	ldrsh r4, [r0, r1]
	cmp r4, #0
	beq _080B339C
	cmp r4, #1
	beq _080B33AA
	b _080B33BC
	.align 2, 0
_080B3398: .4byte gUnk_03006B94
_080B339C:
	bl sub_080AF8B4
	ldr r1, [r5]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _080B33BC
_080B33AA:
	bl sub_080AFA90
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _080B33BC
	ldr r0, [r5]
	strh r4, [r0]
	strh r1, [r0, #2]
_080B33BC:
	ldr r0, _080B33CC @ =gUnk_03006B94
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080B33CC: .4byte gUnk_03006B94

	thumb_func_start sub_080B33D0
sub_080B33D0: @ 0x080B33D0
	push {r4, lr}
	adds r3, r0, #0
	adds r2, r1, #0
	ldr r0, _080B33FC @ =gUnk_03006B94
	ldr r1, [r0]
	adds r0, r1, #0
	adds r0, #0xc
	lsls r3, r3, #0x10
	asrs r3, r3, #0x10
	str r3, [r0, #0x68]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	str r2, [r0, #0x6c]
	movs r4, #0xd8
	lsls r4, r4, #1
	adds r0, r1, r4
	adds r1, r3, #0
	bl sub_0800A678
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080B33FC: .4byte gUnk_03006B94

	thumb_func_start sub_080B3400
sub_080B3400: @ 0x080B3400
	push {r4, r5, lr}
	adds r3, r0, #0
	ldr r0, _080B343C @ =gUnk_03006B94
	ldr r5, [r0]
	lsls r3, r3, #0x18
	asrs r3, r3, #0x18
	lsls r0, r3, #2
	adds r4, r5, #0
	adds r4, #0x94
	adds r4, r4, r0
	str r1, [r4]
	adds r1, r5, #0
	adds r1, #0xa8
	adds r1, r1, r0
	str r2, [r1]
	adds r0, r0, r3
	lsls r0, r0, #3
	adds r0, r0, r5
	movs r1, #0x8a
	lsls r1, r1, #2
	adds r0, r0, r1
	movs r3, #0
	ldrsh r1, [r4, r3]
	lsls r2, r2, #0x10
	asrs r2, r2, #0x10
	bl sub_0800A678
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B343C: .4byte gUnk_03006B94

	thumb_func_start sub_080B3440
sub_080B3440: @ 0x080B3440
	push {r4, r5, r6, lr}
	sub sp, #4
	adds r4, r0, #0
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	ldr r6, _080B3550 @ =gUnk_03006BA0
	movs r1, #0xc0
	lsls r1, r1, #0x12
	str r1, [r6]
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080B3554 @ =0x01000082
	mov r0, sp
	bl CpuSet
	ldr r0, [r6]
	strh r4, [r0, #4]
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #1
	bl sub_08014848
	movs r0, #2
	bl sub_08014848
	movs r0, #3
	bl sub_08014848
	movs r0, #4
	bl sub_08014848
	movs r4, #0x80
	lsls r4, r4, #1
	movs r0, #1
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #2
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #3
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #4
	adds r1, r4, #0
	bl sub_080138D4
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08011104
	movs r0, #1
	bl sub_08011104
	movs r0, #2
	bl sub_08011104
	movs r0, #3
	bl sub_08011104
	movs r5, #4
	movs r0, #4
	bl sub_08011104
	movs r0, #5
	bl sub_08011104
	movs r0, #6
	bl sub_08011104
	movs r0, #7
	bl sub_08011104
	movs r0, #8
	bl sub_08011104
	movs r0, #9
	bl sub_08011104
	movs r0, #0xa
	bl sub_08011104
	ldr r0, [r6]
	strh r5, [r0]
	movs r0, #0x1e
	adds r1, r4, #0
	bl sub_08014544
	add sp, #4
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B3550: .4byte gUnk_03006BA0
_080B3554: .4byte 0x01000082

	thumb_func_start sub_080B3558
sub_080B3558: @ 0x080B3558
	push {r4, r5, lr}
	ldr r0, _080B3574 @ =gUnk_03006BA0
	ldr r4, [r0]
	movs r5, #1
	movs r1, #8
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B3584
	cmp r0, #1
	bgt _080B3578
	cmp r0, #0
	beq _080B357E
	b _080B35A6
	.align 2, 0
_080B3574: .4byte gUnk_03006BA0
_080B3578:
	cmp r0, #2
	beq _080B3596
	b _080B35A6
_080B357E:
	bl sub_080B35B0
	b _080B3588
_080B3584:
	bl sub_080B4A90
_080B3588:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B35A6
	ldrh r0, [r4, #8]
	adds r0, #1
	strh r0, [r4, #8]
	b _080B35A6
_080B3596:
	bl sub_080B36DC
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080B35A6
	strh r0, [r4, #8]
	movs r5, #0
_080B35A6:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B35B0
sub_080B35B0: @ 0x080B35B0
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	sub sp, #0x38
	ldr r0, _080B35DC @ =gUnk_03006BA0
	ldr r0, [r0]
	adds r0, #8
	mov r8, r0
	movs r0, #1
	mov sb, r0
	mov r1, r8
	movs r0, #2
	ldrsh r7, [r1, r0]
	cmp r7, #1
	beq _080B3680
	cmp r7, #1
	bgt _080B35E0
	cmp r7, #0
	beq _080B35E6
	b _080B36CA
	.align 2, 0
_080B35DC: .4byte gUnk_03006BA0
_080B35E0:
	cmp r7, #2
	beq _080B36AC
	b _080B36CA
_080B35E6:
	movs r0, #3
	movs r1, #0x1b
	bl sub_08001D3C
	adds r4, r0, #0
	movs r1, #0x22
	bl sub_08001D78
	ldr r5, _080B366C @ =gUnk_02013000
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	movs r1, #0x23
	bl sub_08001D78
	ldr r4, _080B3670 @ =gUnk_0200E800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B3674 @ =0x06008000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	ldr r5, _080B3678 @ =gUnk_0200F400
	ldr r6, _080B367C @ =0x0600D000
	movs r0, #3
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08005CF4
	str r7, [sp]
	str r7, [sp, #4]
	str r7, [sp, #8]
	movs r0, #3
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #4
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	adds r1, r6, #0
	bl sub_08006BA4
	mov r1, r8
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080B36C8
	.align 2, 0
_080B366C: .4byte gUnk_02013000
_080B3670: .4byte gUnk_0200E800
_080B3674: .4byte 0x06008000
_080B3678: .4byte gUnk_0200F400
_080B367C: .4byte 0x0600D000
_080B3680:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
	mov r1, r8
	ldrh r0, [r1, #2]
	adds r0, #1
	b _080B36C8
_080B36AC:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B36CA
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	mov sb, r0
	mov r0, sb
	mov r1, r8
_080B36C8:
	strh r0, [r1, #2]
_080B36CA:
	mov r0, sb
	add sp, #0x38
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B36DC
sub_080B36DC: @ 0x080B36DC
	push {r4, r5, lr}
	ldr r0, _080B36FC @ =gUnk_03006BA0
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #8
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B3724
	cmp r0, #1
	bgt _080B3700
	cmp r0, #0
	beq _080B3706
	b _080B3760
	.align 2, 0
_080B36FC: .4byte gUnk_03006BA0
_080B3700:
	cmp r0, #2
	beq _080B373A
	b _080B3760
_080B3706:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	b _080B3732
_080B3724:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B3760
_080B3732:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080B3760
_080B373A:
	movs r0, #0
	bl sub_08011104
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	bl sub_0800E764
	movs r0, #3
	bl sub_08005B5C
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B3760:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080B3768
sub_080B3768: @ 0x080B3768
	push {r4, lr}
	sub sp, #0x28
	ldr r0, _080B3898 @ =gUnk_03006BA0
	ldr r1, [r0]
	adds r1, #0xc
	add r0, sp, #0x24
	movs r2, #0
	strh r2, [r0]
	ldr r2, _080B389C @ =0x0100007C
	bl CpuSet
	movs r0, #0
	bl sub_08004554
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_08004744
	movs r0, #3
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #0
	movs r1, #5
	movs r2, #0
	bl sub_0800476C
	movs r0, #3
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #1
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #2
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r1, #0x80
	lsls r1, r1, #5
	movs r0, #0
	bl sub_0801B9BC
	ldr r0, _080B38A0 @ =0x06003000
	movs r4, #0xa0
	lsls r4, r4, #5
	adds r1, r4, #0
	bl sub_0800E690
	ldr r0, _080B38A4 @ =gUnk_02010000
	adds r1, r4, #0
	bl sub_0800E6B0
	ldr r1, _080B38A8 @ =gUnk_02012800
	movs r0, #0
	bl sub_0800E6F0
	movs r0, #0x85
	movs r1, #0
	bl sub_0800E6D0
	movs r0, #0x14
	str r0, [sp]
	movs r0, #0
	str r0, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	movs r4, #0xc0
	lsls r4, r4, #0x13
	adds r0, r4, #0
	bl sub_080045B0
	movs r0, #0
	adds r1, r4, #0
	bl sub_080012E0
	movs r0, #0
	bl sub_080012D4
	movs r0, #3
	movs r1, #6
	bl sub_08001D3C
	add r1, sp, #8
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	movs r1, #0
	movs r2, #4
	bl sub_08010D40
	movs r0, #0
	bl sub_0800E74C
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	add sp, #0x28
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080B3898: .4byte gUnk_03006BA0
_080B389C: .4byte 0x0100007C
_080B38A0: .4byte 0x06003000
_080B38A4: .4byte gUnk_02010000
_080B38A8: .4byte gUnk_02012800

	thumb_func_start sub_080B38AC
sub_080B38AC: @ 0x080B38AC
	push {r4, r5, r6, lr}
	ldr r0, _080B38CC @ =gUnk_03006BA0
	ldr r4, [r0]
	adds r5, r4, #0
	adds r5, #0xc
	movs r6, #1
	movs r1, #0xc
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B38DC
	cmp r0, #1
	bgt _080B38D0
	cmp r0, #0
	beq _080B38D6
	b _080B38FE
	.align 2, 0
_080B38CC: .4byte gUnk_03006BA0
_080B38D0:
	cmp r0, #2
	beq _080B38EE
	b _080B38FE
_080B38D6:
	bl sub_080B3940
	b _080B38E0
_080B38DC:
	bl sub_080B39E4
_080B38E0:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B38FE
	ldrh r0, [r4, #0xc]
	adds r0, #1
	strh r0, [r4, #0xc]
	b _080B38FE
_080B38EE:
	bl sub_080B40E0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0
	bne _080B38FE
	strh r0, [r4, #0xc]
	movs r6, #0
_080B38FE:
	adds r4, r5, #0
	adds r4, #0x80
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	subs r4, #0x28
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	adds r0, r5, #0
	adds r0, #0x34
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080B3938
	adds r4, #0x50
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
_080B3938:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080B3940
sub_080B3940: @ 0x080B3940
	push {r4, r5, lr}
	ldr r0, _080B3960 @ =gUnk_03006BA0
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #0xc
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B3978
	cmp r0, #1
	bgt _080B3964
	cmp r0, #0
	beq _080B396A
	b _080B39DC
	.align 2, 0
_080B3960: .4byte gUnk_03006BA0
_080B3964:
	cmp r0, #2
	beq _080B39C2
	b _080B39DC
_080B396A:
	bl sub_080B41D8
	bl sub_080B4B20
	bl sub_080B4424
	b _080B39BA
_080B3978:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #2
	bl sub_08011174
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #1
	bl sub_0800471C
_080B39BA:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080B39DC
_080B39C2:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B39DC
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B39DC:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080B39E4
sub_080B39E4: @ 0x080B39E4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x3c
	ldr r1, _080B3A10 @ =gUnk_03006BA0
	ldr r0, [r1]
	adds r7, r0, #0
	adds r7, #0xc
	movs r0, #1
	mov r8, r0
	movs r2, #2
	ldrsh r0, [r7, r2]
	adds r2, r1, #0
	cmp r0, #0x65
	bls _080B3A04
	b _080B40D2
_080B3A04:
	lsls r0, r0, #2
	ldr r1, _080B3A14 @ =_080B3A18
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B3A10: .4byte gUnk_03006BA0
_080B3A14: .4byte _080B3A18
_080B3A18: @ jump table
	.4byte _080B3BB0 @ case 0
	.4byte _080B3BFE @ case 1
	.4byte _080B3C60 @ case 2
	.4byte _080B40A4 @ case 3
	.4byte _080B3D08 @ case 4
	.4byte _080B3D1A @ case 5
	.4byte _080B3D2A @ case 6
	.4byte _080B3D60 @ case 7
	.4byte _080B3D7C @ case 8
	.4byte _080B3DAC @ case 9
	.4byte _080B3DE0 @ case 10
	.4byte _080B3EBA @ case 11
	.4byte _080B3F30 @ case 12
	.4byte _080B3F58 @ case 13
	.4byte _080B3FB4 @ case 14
	.4byte _080B40D2 @ case 15
	.4byte _080B40D2 @ case 16
	.4byte _080B40D2 @ case 17
	.4byte _080B40D2 @ case 18
	.4byte _080B40D2 @ case 19
	.4byte _080B40D2 @ case 20
	.4byte _080B40D2 @ case 21
	.4byte _080B40D2 @ case 22
	.4byte _080B40D2 @ case 23
	.4byte _080B40D2 @ case 24
	.4byte _080B40D2 @ case 25
	.4byte _080B40D2 @ case 26
	.4byte _080B40D2 @ case 27
	.4byte _080B40D2 @ case 28
	.4byte _080B40D2 @ case 29
	.4byte _080B40D2 @ case 30
	.4byte _080B40D2 @ case 31
	.4byte _080B40D2 @ case 32
	.4byte _080B40D2 @ case 33
	.4byte _080B40D2 @ case 34
	.4byte _080B40D2 @ case 35
	.4byte _080B40D2 @ case 36
	.4byte _080B40D2 @ case 37
	.4byte _080B40D2 @ case 38
	.4byte _080B40D2 @ case 39
	.4byte _080B40D2 @ case 40
	.4byte _080B40D2 @ case 41
	.4byte _080B40D2 @ case 42
	.4byte _080B40D2 @ case 43
	.4byte _080B40D2 @ case 44
	.4byte _080B40D2 @ case 45
	.4byte _080B40D2 @ case 46
	.4byte _080B40D2 @ case 47
	.4byte _080B40D2 @ case 48
	.4byte _080B40D2 @ case 49
	.4byte _080B40D2 @ case 50
	.4byte _080B40D2 @ case 51
	.4byte _080B40D2 @ case 52
	.4byte _080B40D2 @ case 53
	.4byte _080B40D2 @ case 54
	.4byte _080B40D2 @ case 55
	.4byte _080B40D2 @ case 56
	.4byte _080B40D2 @ case 57
	.4byte _080B40D2 @ case 58
	.4byte _080B40D2 @ case 59
	.4byte _080B40D2 @ case 60
	.4byte _080B40D2 @ case 61
	.4byte _080B40D2 @ case 62
	.4byte _080B40D2 @ case 63
	.4byte _080B40D2 @ case 64
	.4byte _080B40D2 @ case 65
	.4byte _080B40D2 @ case 66
	.4byte _080B40D2 @ case 67
	.4byte _080B40D2 @ case 68
	.4byte _080B40D2 @ case 69
	.4byte _080B40D2 @ case 70
	.4byte _080B40D2 @ case 71
	.4byte _080B40D2 @ case 72
	.4byte _080B40D2 @ case 73
	.4byte _080B40D2 @ case 74
	.4byte _080B40D2 @ case 75
	.4byte _080B40D2 @ case 76
	.4byte _080B40D2 @ case 77
	.4byte _080B40D2 @ case 78
	.4byte _080B40D2 @ case 79
	.4byte _080B40D2 @ case 80
	.4byte _080B40D2 @ case 81
	.4byte _080B40D2 @ case 82
	.4byte _080B40D2 @ case 83
	.4byte _080B40D2 @ case 84
	.4byte _080B40D2 @ case 85
	.4byte _080B40D2 @ case 86
	.4byte _080B40D2 @ case 87
	.4byte _080B40D2 @ case 88
	.4byte _080B40D2 @ case 89
	.4byte _080B401C @ case 90
	.4byte _080B4050 @ case 91
	.4byte _080B408C @ case 92
	.4byte _080B40D2 @ case 93
	.4byte _080B40D2 @ case 94
	.4byte _080B40D2 @ case 95
	.4byte _080B40D2 @ case 96
	.4byte _080B40D2 @ case 97
	.4byte _080B40D2 @ case 98
	.4byte _080B40D2 @ case 99
	.4byte _080B40A4 @ case 100
	.4byte _080B40BC @ case 101
_080B3BB0:
	adds r0, r7, #0
	adds r0, #0x34
	movs r4, #0
	strb r4, [r0]
	movs r2, #0
	strh r4, [r7, #0x30]
	add r0, sp, #0x14
	strb r2, [r0]
	strb r2, [r0, #1]
	adds r1, r0, #0
	movs r0, #3
	strb r0, [r1, #2]
	movs r0, #8
	strb r0, [r1, #3]
	movs r0, #0x19
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	adds r0, r1, #0
	strb r2, [r0, #6]
	str r4, [sp, #0x20]
	str r4, [sp, #0x24]
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_08019944
	str r4, [sp]
	str r4, [sp, #4]
	movs r0, #0x6a
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B40B4
_080B3BFE:
	adds r4, r7, #0
	adds r4, #0x30
	adds r0, r4, #0
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	beq _080B3C12
	b _080B40D2
_080B3C12:
	adds r0, r4, #0
	movs r1, #1
	bl sub_080199C0
	adds r0, r7, #0
	adds r0, #0x32
	ldr r2, _080B3C58 @ =gUnk_080C0244
	movs r1, #9
	str r1, [sp]
	ldr r1, _080B3C5C @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #4
	bl sub_0800B1AC
	adds r0, r7, #0
	adds r0, #0x53
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_0800180C
	adds r1, r7, #0
	adds r1, #0x54
	strb r0, [r1]
	b _080B40B4
	.align 2, 0
_080B3C58: .4byte gUnk_080C0244
_080B3C5C: .4byte 0x44444444
_080B3C60:
	ldr r0, _080B3C84 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080B3C88
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0x66
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r0, #0x64
	b _080B3CDE
	.align 2, 0
_080B3C84: .4byte gKeyNewPress
_080B3C88:
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B3CE0
	ldr r0, [r2]
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #9
	bgt _080B3CB0
	movs r0, #0x30
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #1
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0x30
	bl SetItemQuantity
	b _080B3CC4
_080B3CB0:
	movs r0, #0x30
	bl sub_08018B50
	adds r1, r0, #0
	subs r1, #5
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	movs r0, #0x30
	bl SetItemQuantity
_080B3CC4:
	bl sub_080B4B20
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	movs r0, #0x65
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	ldrh r0, [r7, #2]
	adds r0, #1
_080B3CDE:
	strh r0, [r7, #2]
_080B3CE0:
	bl sub_080017D8
	adds r2, r7, #0
	adds r2, #0x54
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	adds r1, r7, #0
	adds r1, #0x53
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	ldrb r1, [r1]
	lsls r1, r1, #0x18
	asrs r1, r1, #0x18
	cmp r0, r1
	beq _080B3D02
	b _080B40D2
_080B3D02:
	movs r0, #0
	strb r0, [r2]
	b _080B40D2
_080B3D08:
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B3D18
	b _080B40D2
_080B3D18:
	b _080B40B4
_080B3D1A:
	movs r0, #0
	bl sub_080B4560
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B3D28
	b _080B40D2
_080B3D28:
	b _080B40B4
_080B3D2A:
	adds r0, r7, #0
	adds r0, #0x80
	movs r1, #4
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #1
	movs r3, #0
	bl sub_08009F50
	ldr r0, _080B3D5C @ =0x00000109
	movs r4, #0
	str r4, [sp]
	str r4, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	str r4, [r7, #8]
	b _080B40B4
	.align 2, 0
_080B3D5C: .4byte 0x00000109
_080B3D60:
	ldr r0, [r7, #8]
	adds r0, #1
	str r0, [r7, #8]
	cmp r0, #0x51
	beq _080B3D6C
	b _080B40D2
_080B3D6C:
	adds r0, r7, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #1
	movs r3, #1
	bl sub_08009F50
	b _080B40B4
_080B3D7C:
	adds r4, r7, #0
	adds r4, #0x58
	adds r0, r4, #0
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	beq _080B3D90
	b _080B40D2
_080B3D90:
	adds r0, r7, #0
	adds r0, #0x80
	movs r1, #4
	movs r2, #1
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	b _080B40B4
_080B3DAC:
	adds r0, r7, #0
	adds r0, #0x54
	movs r1, #0
	ldrsb r1, [r0, r1]
	subs r0, #0x1f
	adds r0, r0, r1
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl sub_080B46A4
	movs r0, #0x85
	lsls r0, r0, #1
	movs r1, #0
	str r1, [sp]
	str r1, [sp, #4]
	movs r2, #6
	movs r3, #0
	bl sub_080147DC
	adds r1, r7, #0
	adds r1, #0x34
	movs r0, #1
	strb r0, [r1]
	b _080B40B4
_080B3DE0:
	adds r6, r7, #0
	adds r6, #0x54
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r5, r7, #0
	adds r5, #0x35
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	subs r0, #1
	bl sub_080B46A4
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B3E02
	b _080B40D2
_080B3E02:
	movs r4, #0
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r5, r0
	ldrb r1, [r0]
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #1
	bne _080B3E68
	ldr r0, _080B3E48 @ =0x0000010B
	str r4, [sp]
	movs r1, #3
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B3E50
	ldr r0, _080B3E4C @ =0x000005D1
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	b _080B3E64
	.align 2, 0
_080B3E48: .4byte 0x0000010B
_080B3E4C: .4byte 0x000005D1
_080B3E50:
	movs r0, #0xae
	lsls r0, r0, #3
	str r4, [sp]
	movs r1, #2
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
_080B3E64:
	movs r4, #4
	b _080B3EAA
_080B3E68:
	subs r0, r1, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080B3E8A
	movs r0, #0x86
	lsls r0, r0, #1
	str r4, [sp]
	movs r1, #3
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r4, #3
	b _080B3EAA
_080B3E8A:
	subs r0, r1, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #1
	bhi _080B3EAA
	movs r0, #0x86
	lsls r0, r0, #1
	str r4, [sp]
	movs r1, #3
	str r1, [sp, #4]
	movs r1, #0
	movs r2, #0
	movs r3, #0
	bl sub_080147DC
	movs r4, #2
_080B3EAA:
	adds r0, r7, #0
	adds r0, #0x58
	adds r2, r4, #0
	movs r1, #3
	movs r3, #1
	bl sub_08009F50
	b _080B40B4
_080B3EBA:
	adds r6, r7, #0
	adds r6, #0x54
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r5, r7, #0
	adds r5, #0x35
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, #1
	bl sub_080B4560
	lsls r0, r0, #0x10
	cmp r0, #0
	beq _080B3EDC
	b _080B40D2
_080B3EDC:
	ldr r0, _080B3F28 @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r2, #4
	ldrsh r0, [r0, r2]
	ldr r4, _080B3F2C @ =0x000001DB
	cmp r0, #9
	bgt _080B3EEC
	subs r4, #5
_080B3EEC:
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r0, r4, r0
	subs r0, #1
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08012F60
	adds r1, r0, #0
	movs r0, #0
	ldrsb r0, [r6, r0]
	adds r0, r5, r0
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	adds r4, r4, r0
	subs r4, #1
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	subs r1, #1
	adds r0, r4, #0
	bl sub_08012F0C
	b _080B40B4
	.align 2, 0
_080B3F28: .4byte gUnk_03006BA0
_080B3F2C: .4byte 0x000001DB
_080B3F30:
	ldr r0, _080B3F54 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080B3F42
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
_080B3F42:
	adds r4, r7, #0
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	b _080B40D2
	.align 2, 0
_080B3F54: .4byte gKeyNewPress
_080B3F58:
	ldr r6, _080B3FAC @ =gUnk_08BDA23C
	adds r0, r7, #0
	adds r0, #0x54
	movs r1, #0
	ldrsb r1, [r0, r1]
	subs r0, #0x1f
	adds r0, r0, r1
	movs r4, #0
	ldrsb r4, [r0, r4]
	subs r4, #1
	lsls r4, r4, #1
	ldr r0, [r2]
	movs r1, #4
	ldrsh r5, [r0, r1]
	adds r0, r5, #0
	movs r1, #0xa
	bl __modsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0xc
	adds r4, r4, r0
	adds r0, r5, #0
	movs r1, #0xa
	bl __divsi3
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	lsls r1, r0, #2
	adds r1, r1, r0
	lsls r1, r1, #5
	adds r4, r4, r1
	adds r6, #6
	adds r4, r4, r6
	ldrh r0, [r4]
	movs r1, #1
	bl sub_0806D054
	ldr r1, _080B3FB0 @ =gUnk_03006B14
	movs r0, #8
	strh r0, [r1]
	b _080B40B4
	.align 2, 0
_080B3FAC: .4byte gUnk_08BDA23C
_080B3FB0: .4byte gUnk_03006B14
_080B3FB4:
	bl sub_0806D314
	lsls r0, r0, #0x10
	asrs r4, r0, #0x10
	cmp r4, #0
	beq _080B3FC2
	b _080B40D2
_080B3FC2:
	bl sub_080B4424
	adds r0, r7, #0
	adds r0, #0x58
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r7, #0
	adds r0, #0x53
	ldrb r0, [r0]
	lsls r0, r0, #0x18
	asrs r0, r0, #0x18
	cmp r0, #0
	bne _080B3FE8
	movs r0, #0x5a
	strh r0, [r7, #2]
	b _080B3FEA
_080B3FE8:
	strh r4, [r7, #2]
_080B3FEA:
	ldr r0, _080B4004 @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r2, #4
	ldrsh r0, [r0, r2]
	cmp r0, #9
	bgt _080B4008
	movs r0, #0x30
	bl sub_08018B50
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B40D2
	b _080B4016
	.align 2, 0
_080B4004: .4byte gUnk_03006BA0
_080B4008:
	movs r0, #0x30
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #4
	bhi _080B40D2
_080B4016:
	movs r0, #0x65
	strh r0, [r7, #2]
	b _080B40D2
_080B401C:
	movs r2, #0
	movs r3, #0
	strh r3, [r7, #0x30]
	add r1, sp, #0x28
	strb r2, [r1]
	strb r2, [r1, #1]
	movs r0, #3
	strb r0, [r1, #2]
	movs r0, #8
	strb r0, [r1, #3]
	movs r0, #0x19
	strb r0, [r1, #4]
	movs r0, #4
	strb r0, [r1, #5]
	movs r0, #2
	strb r0, [r1, #7]
	movs r0, #6
	strb r0, [r1, #8]
	strb r2, [r1, #6]
	str r3, [r1, #0xc]
	str r3, [r1, #0x10]
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_08019944
	b _080B40B4
_080B4050:
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B40D2
	adds r0, r7, #0
	adds r0, #0x32
	ldr r2, _080B4084 @ =gUnk_080C0264
	movs r1, #9
	str r1, [sp]
	ldr r1, _080B4088 @ =0x44444444
	str r1, [sp, #4]
	movs r3, #0
	str r3, [sp, #8]
	movs r1, #2
	str r1, [sp, #0xc]
	str r3, [sp, #0x10]
	movs r1, #0
	movs r3, #4
	bl sub_0800B1AC
	b _080B40B4
	.align 2, 0
_080B4084: .4byte gUnk_080C0264
_080B4088: .4byte 0x44444444
_080B408C:
	ldr r0, _080B40A0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #3
	ands r0, r1
	cmp r0, #0
	beq _080B40D2
	movs r0, #0x64
	strh r0, [r7, #2]
	b _080B40D2
	.align 2, 0
_080B40A0: .4byte gKeyNewPress
_080B40A4:
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_0801BA7C
	adds r0, r7, #0
	adds r0, #0x32
	bl sub_0800B4E4
_080B40B4:
	ldrh r0, [r7, #2]
	adds r0, #1
	strh r0, [r7, #2]
	b _080B40D2
_080B40BC:
	adds r0, r7, #0
	adds r0, #0x30
	bl sub_0801BAD8
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0
	bne _080B40D2
	strh r0, [r7, #2]
	movs r0, #0
	mov r8, r0
_080B40D2:
	mov r0, r8
	add sp, #0x3c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B40E0
sub_080B40E0: @ 0x080B40E0
	push {r4, r5, lr}
	ldr r0, _080B4100 @ =gUnk_03006BA0
	ldr r0, [r0]
	adds r4, r0, #0
	adds r4, #0xc
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B4130
	cmp r0, #1
	bgt _080B4104
	cmp r0, #0
	beq _080B410A
	b _080B41D0
	.align 2, 0
_080B4100: .4byte gUnk_03006BA0
_080B4104:
	cmp r0, #2
	beq _080B4156
	b _080B41D0
_080B410A:
	movs r0, #0
	bl sub_08011104
	movs r1, #1
	rsbs r1, r1, #0
	movs r0, #0
	movs r2, #0
	movs r3, #0xf
	bl sub_0801015C
	movs r0, #0
	movs r1, #1
	bl sub_08011174
	movs r0, #2
	movs r1, #0x28
	bl sub_0801457C
	b _080B414E
_080B4130:
	movs r0, #0
	bl sub_08011328
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B41D0
	bl sub_08014700
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #1
	bne _080B41D0
	bl sub_08014614
_080B414E:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
	b _080B41D0
_080B4156:
	movs r0, #0
	bl sub_08011104
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_0800E764
	movs r0, #1
	bl sub_0800E764
	movs r0, #2
	bl sub_0800E764
	movs r0, #3
	bl sub_0800E764
	movs r0, #0
	bl sub_08005B5C
	movs r0, #1
	bl sub_08005B5C
	movs r0, #2
	bl sub_08005B5C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #0
	bl sub_08006210
	movs r0, #1
	bl sub_08006210
	movs r0, #2
	bl sub_08006210
	movs r0, #3
	bl sub_08006210
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B41D0:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1

	thumb_func_start sub_080B41D8
sub_080B41D8: @ 0x080B41D8
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x38
	ldr r4, _080B4204 @ =gUnk_03006BA0
	ldr r0, [r4]
	adds r0, #0xc
	mov r8, r0
	movs r0, #3
	movs r1, #0x1b
	bl sub_08001D3C
	adds r7, r0, #0
	ldr r0, [r4]
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #9
	bgt _080B4208
	adds r0, r7, #0
	movs r1, #0
	b _080B420C
	.align 2, 0
_080B4204: .4byte gUnk_03006BA0
_080B4208:
	adds r0, r7, #0
	movs r1, #2
_080B420C:
	bl sub_08001D78
	adds r5, r0, #0
	ldr r4, _080B4254 @ =gUnk_02013000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	ldr r0, [sp, #0x1c]
	ldr r1, _080B4258 @ =0x06008000
	ldr r2, [sp, #0x10]
	bl sub_08006BA4
	ldr r0, [sp, #0x20]
	add r1, sp, #0xc
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #4
	bl sub_08010D40
	ldr r0, _080B425C @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #9
	bgt _080B4260
	adds r0, r7, #0
	movs r1, #1
	bl sub_08001D78
	b _080B4268
	.align 2, 0
_080B4254: .4byte gUnk_02013000
_080B4258: .4byte 0x06008000
_080B425C: .4byte gUnk_03006BA0
_080B4260:
	adds r0, r7, #0
	movs r1, #3
	bl sub_08001D78
_080B4268:
	ldr r4, _080B4360 @ =gUnk_0200E800
	adds r1, r4, #0
	bl LZ77UnCompWram
	ldr r5, _080B4364 @ =gUnk_0200F400
	ldr r6, _080B4368 @ =0x0600D000
	movs r0, #3
	adds r1, r4, #0
	adds r2, r5, #0
	adds r3, r6, #0
	bl sub_08005CF4
	movs r0, #0
	str r0, [sp]
	str r0, [sp, #4]
	str r0, [sp, #8]
	movs r0, #3
	adds r1, r4, #0
	adds r2, r5, #0
	movs r3, #4
	bl sub_08005F14
	add r4, sp, #0x28
	adds r0, r5, #0
	adds r1, r4, #0
	bl sub_08001DC4
	ldr r0, [r4, #0xc]
	ldrh r2, [r4, #8]
	adds r1, r6, #0
	bl sub_08006BA4
	adds r0, r7, #0
	movs r1, #0x1b
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r7, #0
	movs r1, #0x1a
	bl sub_08001D78
	adds r6, r0, #0
	ldr r4, _080B436C @ =gUnk_02018000
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #4
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	movs r1, #0x13
	movs r2, #1
	bl sub_08010D40
	movs r0, #4
	movs r1, #4
	adds r2, r6, #0
	bl sub_0800A630
	mov r4, r8
	adds r4, #0x80
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #4
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #3
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B4370 @ =0x06013000
	movs r3, #0x80
	lsls r3, r3, #6
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	movs r2, #6
	rsbs r2, r2, #0
	adds r0, r4, #0
	movs r1, #5
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	bl GetPlayerGender
	lsls r0, r0, #0x18
	cmp r0, #0
	bne _080B4374
	adds r0, r7, #0
	movs r1, #0x17
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r7, #0
	movs r1, #0x16
	b _080B4382
	.align 2, 0
_080B4360: .4byte gUnk_0200E800
_080B4364: .4byte gUnk_0200F400
_080B4368: .4byte 0x0600D000
_080B436C: .4byte gUnk_02018000
_080B4370: .4byte 0x06013000
_080B4374:
	adds r0, r7, #0
	movs r1, #0x19
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r7, #0
	movs r1, #0x18
_080B4382:
	bl sub_08001D78
	adds r6, r0, #0
	ldr r4, _080B441C @ =gUnk_0201C800
	adds r0, r5, #0
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r4, #0
	add r1, sp, #0xc
	bl sub_08001CBC
	movs r0, #3
	add r1, sp, #0xc
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x20]
	movs r1, #0x11
	movs r2, #2
	bl sub_08010D40
	movs r0, #3
	movs r1, #3
	adds r2, r6, #0
	bl sub_0800A630
	mov r4, r8
	adds r4, #0x58
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #3
	movs r2, #0
	movs r3, #0
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B4420 @ =0x06011000
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #0x2a
	movs r2, #0x78
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	add sp, #0x38
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B441C: .4byte gUnk_0201C800
_080B4420: .4byte 0x06011000

	thumb_func_start sub_080B4424
sub_080B4424: @ 0x080B4424
	push {r4, r5, r6, r7, lr}
	mov r7, sb
	mov r6, r8
	push {r6, r7}
	ldr r0, _080B4558 @ =gUnk_03006BA0
	ldr r4, [r0]
	movs r1, #4
	ldrsh r0, [r4, r1]
	ldr r1, _080B455C @ =0x000001DB
	cmp r0, #9
	bgt _080B443C
	subs r1, #5
_080B443C:
	movs r0, #0x41
	adds r0, r0, r4
	mov r8, r0
	adds r7, r4, #0
	adds r7, #0x5f
	movs r0, #0x60
	adds r0, r0, r4
	mov ip, r0
	lsls r1, r1, #0x10
	mov sb, r1
	mov r6, r8
	movs r5, #0
	adds r2, r4, #0
	adds r2, #0x5e
	adds r1, r4, #0
	adds r1, #0x40
	subs r3, r1, r2
	movs r0, #3
	ands r3, r0
	cmp r2, r1
	ble _080B447A
	cmp r3, #0
	beq _080B4482
	cmp r3, #3
	bge _080B447A
	cmp r3, #2
	bge _080B4476
	strb r5, [r2]
	subs r2, #1
_080B4476:
	strb r5, [r2]
	subs r2, #1
_080B447A:
	strb r5, [r2]
	subs r2, #1
	cmp r2, r6
	blt _080B4496
_080B4482:
	strb r5, [r2]
	subs r0, r2, #1
	strb r5, [r0]
	subs r0, r2, #2
	strb r5, [r0]
	subs r0, r2, #3
	strb r5, [r0]
	subs r2, #4
	cmp r2, r6
	bge _080B4482
_080B4496:
	movs r0, #0
	strb r0, [r7]
	mov r1, ip
	strb r0, [r1]
	movs r4, #0
_080B44A0:
	mov r1, sb
	asrs r0, r1, #0x10
	adds r0, r0, r4
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r6, r4, #1
	cmp r0, #0
	ble _080B4544
	adds r2, r7, #0
	mov r4, r8
	adds r5, r6, #0
	adds r3, r0, #0
	rsbs r1, r3, #0
	movs r0, #3
	ands r1, r0
	cmp r1, #0
	beq _080B4506
	cmp r1, #3
	bge _080B44F2
	cmp r1, #2
	bge _080B44E2
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r6, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	subs r3, #1
_080B44E2:
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r6, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	subs r3, #1
_080B44F2:
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	subs r3, #1
	cmp r3, #0
	beq _080B4544
_080B4506:
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	movs r0, #0
	ldrsb r0, [r2, r0]
	adds r0, r4, r0
	strb r5, [r0]
	ldrb r0, [r2]
	adds r0, #1
	strb r0, [r2]
	subs r3, #4
	cmp r3, #0
	bne _080B4506
_080B4544:
	adds r4, r6, #0
	cmp r4, #4
	ble _080B44A0
	pop {r3, r4}
	mov r8, r3
	mov sb, r4
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B4558: .4byte gUnk_03006BA0
_080B455C: .4byte 0x000001DB

	thumb_func_start sub_080B4560
sub_080B4560: @ 0x080B4560
	push {r4, r5, r6, r7, lr}
	mov r7, sl
	mov r6, sb
	mov r5, r8
	push {r5, r6, r7}
	sub sp, #0x1c
	mov sb, r0
	ldr r0, _080B458C @ =gUnk_03006BA0
	ldr r7, [r0]
	movs r0, #0xc
	adds r0, r0, r7
	mov r8, r0
	movs r1, #1
	mov sl, r1
	movs r2, #4
	ldrsh r0, [r0, r2]
	cmp r0, #0
	beq _080B4590
	cmp r0, #1
	beq _080B4668
	b _080B4680
	.align 2, 0
_080B458C: .4byte gUnk_03006BA0
_080B4590:
	movs r0, #3
	movs r1, #0x1b
	bl sub_08001D3C
	adds r6, r0, #0
	mov r0, sb
	lsls r4, r0, #1
	adds r1, r4, #0
	adds r1, #9
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r6, #0
	bl sub_08001D78
	ldr r5, _080B4658 @ =gUnk_02011400
	adds r1, r5, #0
	bl LZ77UnCompWram
	adds r4, #8
	lsls r4, r4, #0x10
	lsrs r4, r4, #0x10
	adds r0, r6, #0
	adds r1, r4, #0
	bl sub_08001D78
	adds r4, r0, #0
	adds r0, r5, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #0xb
	mov r1, sp
	movs r2, #0
	adds r3, r5, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x15
	bl sub_08010D40
	movs r0, #0xb
	movs r1, #0xb
	adds r2, r4, #0
	bl sub_0800A630
	adds r4, r7, #0
	adds r4, #0xdc
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0xb
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #5
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B465C @ =0x06012000
	movs r3, #0x80
	lsls r3, r3, #5
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	ldr r0, _080B4660 @ =gUnk_08BDA37C
	add r0, sb
	ldrb r1, [r0]
	ldr r0, _080B4664 @ =gUnk_08BDA383
	add r0, sb
	ldrb r2, [r0]
	adds r0, r4, #0
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A6C4
	mov r1, r8
	ldrh r0, [r1, #4]
	adds r0, #1
	strh r0, [r1, #4]
	b _080B4680
	.align 2, 0
_080B4658: .4byte gUnk_02011400
_080B465C: .4byte 0x06012000
_080B4660: .4byte gUnk_08BDA37C
_080B4664: .4byte gUnk_08BDA383
_080B4668:
	adds r0, r7, #0
	adds r0, #0xdc
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B4680
	movs r0, #0
	mov r2, r8
	strh r0, [r2, #4]
	mov sl, r0
_080B4680:
	mov r4, r8
	adds r4, #0xd0
	adds r0, r4, #0
	bl sub_0800A778
	adds r0, r4, #0
	bl sub_08009FF8
	mov r0, sl
	add sp, #0x1c
	pop {r3, r4, r5}
	mov r8, r3
	mov sb, r4
	mov sl, r5
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B46A4
sub_080B46A4: @ 0x080B46A4
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x1c
	adds r4, r0, #0
	ldr r0, _080B46C8 @ =gUnk_03006BA0
	ldr r6, [r0]
	adds r7, r6, #0
	adds r7, #0xc
	movs r0, #1
	mov r8, r0
	movs r1, #6
	ldrsh r0, [r7, r1]
	cmp r0, #0
	beq _080B46CC
	cmp r0, #1
	beq _080B4784
	b _080B479A
	.align 2, 0
_080B46C8: .4byte gUnk_03006BA0
_080B46CC:
	movs r0, #3
	movs r1, #0x1b
	bl sub_08001D3C
	adds r5, r0, #0
	adds r1, r4, #0
	adds r1, #0x1d
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	bl sub_08001D78
	ldr r4, _080B477C @ =gUnk_0201F800
	adds r1, r4, #0
	bl LZ77UnCompWram
	adds r0, r5, #0
	movs r1, #0x1c
	bl sub_08001D78
	adds r5, r0, #0
	adds r0, r4, #0
	mov r1, sp
	bl sub_08001CBC
	movs r0, #0xc
	mov r1, sp
	movs r2, #0
	adds r3, r4, #0
	bl sub_08009334
	ldr r0, [sp, #0x14]
	mov r1, sp
	ldrh r2, [r1, #0xe]
	lsrs r2, r2, #4
	movs r1, #0x14
	bl sub_08010D40
	movs r0, #0xc
	movs r1, #0xc
	adds r2, r5, #0
	bl sub_0800A630
	adds r4, r6, #0
	adds r4, #0xb4
	adds r0, r4, #0
	bl sub_08009F0C
	adds r0, r4, #0
	movs r1, #0xc
	movs r2, #0
	movs r3, #1
	bl sub_08009F50
	adds r0, r4, #0
	movs r1, #0
	bl sub_0800A6D0
	adds r0, r4, #0
	movs r1, #4
	movs r2, #1
	bl sub_0800A6C0
	ldr r2, _080B4780 @ =0x06015000
	movs r3, #0x80
	lsls r3, r3, #3
	adds r0, r4, #0
	movs r1, #1
	bl sub_0800A6F0
	adds r0, r4, #0
	movs r1, #5
	movs r2, #2
	bl sub_0800A678
	adds r0, r4, #0
	movs r1, #0
	movs r2, #0
	bl sub_0800A680
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_0800A6C4
	ldrh r0, [r7, #6]
	adds r0, #1
	strh r0, [r7, #6]
	b _080B479A
	.align 2, 0
_080B477C: .4byte gUnk_0201F800
_080B4780: .4byte 0x06015000
_080B4784:
	adds r0, r6, #0
	adds r0, #0xb4
	bl sub_0800A7A0
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bne _080B479A
	movs r0, #0
	strh r0, [r7, #6]
	mov r8, r0
_080B479A:
	mov r0, r8
	add sp, #0x1c
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r1}
	bx r1

	thumb_func_start sub_080B47A8
sub_080B47A8: @ 0x080B47A8
	push {r4, lr}
	ldr r4, _080B47BC @ =gUnk_03006B9C
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080B47C0
	cmp r0, #1
	beq _080B47D4
	b _080B4816
	.align 2, 0
_080B47BC: .4byte gUnk_03006B9C
_080B47C0:
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	bl sub_080B3440
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B4816
_080B47D4:
	ldr r0, _080B47EC @ =gUnk_03006BA0
	ldr r1, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #4
	beq _080B47FC
	cmp r0, #4
	bgt _080B47F0
	cmp r0, #1
	beq _080B47F6
	b _080B4806
	.align 2, 0
_080B47EC: .4byte gUnk_03006BA0
_080B47F0:
	cmp r0, #8
	beq _080B4802
	b _080B4806
_080B47F6:
	movs r0, #0
	strh r0, [r1]
	b _080B4806
_080B47FC:
	bl sub_080B49C0
	b _080B4806
_080B4802:
	bl sub_080B4AD4
_080B4806:
	ldr r0, _080B4824 @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r2, #0
	ldrsh r1, [r0, r2]
	cmp r1, #0
	bne _080B4816
	ldr r0, _080B4828 @ =gUnk_03006B9C
	strh r1, [r0]
_080B4816:
	ldr r0, _080B4828 @ =gUnk_03006B9C
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B4824: .4byte gUnk_03006BA0
_080B4828: .4byte gUnk_03006B9C

	thumb_func_start sub_080B482C
sub_080B482C: @ 0x080B482C
	push {r4, r5, r6, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #9
	bgt _080B4844
	movs r5, #0xeb
	lsls r5, r5, #1
	movs r2, #0
	b _080B484E
_080B4844:
	subs r0, #0xa
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	ldr r5, _080B48B4 @ =0x000001DB
	movs r2, #1
_080B484E:
	lsls r4, r4, #0x10
	lsls r0, r2, #2
	ldr r1, _080B48B8 @ =gUnk_08BDA23C
	asrs r4, r4, #0xc
	lsls r5, r5, #0x10
	adds r0, r0, r2
	lsls r0, r0, #5
	adds r4, r4, r0
	adds r4, r4, r1
	adds r6, r4, #0
	lsrs r0, r5, #0x10
	ldrb r1, [r4]
	bl sub_08012F0C
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldrb r1, [r4, #1]
	bl sub_08012F0C
	movs r1, #0x80
	lsls r1, r1, #0xa
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldrb r1, [r6, #2]
	bl sub_08012F0C
	movs r1, #0xc0
	lsls r1, r1, #0xa
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldrb r1, [r6, #3]
	bl sub_08012F0C
	movs r1, #0x80
	lsls r1, r1, #0xb
	adds r0, r5, r1
	lsrs r0, r0, #0x10
	ldrb r1, [r6, #4]
	bl sub_08012F0C
	ldr r0, _080B48BC @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080B48B4: .4byte 0x000001DB
_080B48B8: .4byte gUnk_08BDA23C
_080B48BC: .4byte gUnk_03006578

	thumb_func_start sub_080B48C0
sub_080B48C0: @ 0x080B48C0
	push {r4, r5, r6, lr}
	bl sub_08012578
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	bl sub_08012578
	lsls r0, r0, #0x10
	ldr r4, _080B4968 @ =0x000001DB
	cmp r0, #0
	bne _080B48D8
	subs r4, #5
_080B48D8:
	lsls r5, r5, #0x10
	lsls r4, r4, #0x10
	lsrs r0, r4, #0x10
	bl sub_08012F60
	lsls r0, r0, #0x10
	lsrs r6, r0, #0x10
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r4, r1
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #0xa
	adds r0, r4, r1
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	movs r1, #0xc0
	lsls r1, r1, #0xa
	adds r0, r4, r1
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsls r1, r1, #0x10
	lsrs r6, r1, #0x10
	movs r1, #0x80
	lsls r1, r1, #0xb
	adds r0, r4, r1
	lsrs r0, r0, #0x10
	bl sub_08012F60
	lsls r1, r6, #0x10
	asrs r1, r1, #0x10
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	adds r1, r1, r0
	lsrs r5, r5, #0x10
	lsls r1, r1, #0x10
	asrs r1, r1, #0x10
	adds r0, r5, #0
	bl sub_08012F0C
	ldr r0, _080B496C @ =gUnk_03006578
	ldr r1, [r0]
	movs r0, #1
	strb r0, [r1, #1]
	movs r0, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0
_080B4968: .4byte 0x000001DB
_080B496C: .4byte gUnk_03006578

	thumb_func_start sub_080B4970
sub_080B4970: @ 0x080B4970
	ldr r1, _080B4978 @ =gUnk_03006B9C
	movs r0, #0
	strh r0, [r1]
	bx lr
	.align 2, 0
_080B4978: .4byte gUnk_03006B9C

	thumb_func_start sub_080B497C
sub_080B497C: @ 0x080B497C
	push {lr}
	ldr r0, _080B4994 @ =gUnk_03006BA0
	ldr r1, [r0]
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #4
	beq _080B49A4
	cmp r0, #4
	bgt _080B4998
	cmp r0, #1
	beq _080B499E
	b _080B49AE
	.align 2, 0
_080B4994: .4byte gUnk_03006BA0
_080B4998:
	cmp r0, #8
	beq _080B49AA
	b _080B49AE
_080B499E:
	movs r0, #0
	strh r0, [r1]
	b _080B49AE
_080B49A4:
	bl sub_080B49C0
	b _080B49AE
_080B49AA:
	bl sub_080B4AD4
_080B49AE:
	ldr r0, _080B49BC @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r1, #0
	ldrsh r0, [r0, r1]
	pop {r1}
	bx r1
	.align 2, 0
_080B49BC: .4byte gUnk_03006BA0

	thumb_func_start sub_080B49C0
sub_080B49C0: @ 0x080B49C0
	push {r4, lr}
	ldr r4, _080B49D4 @ =gUnk_03006BA0
	ldr r0, [r4]
	movs r1, #2
	ldrsh r0, [r0, r1]
	cmp r0, #0
	beq _080B49D8
	cmp r0, #1
	beq _080B49E6
	b _080B49FA
	.align 2, 0
_080B49D4: .4byte gUnk_03006BA0
_080B49D8:
	bl sub_080B4A0C
	ldr r1, [r4]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _080B49FA
_080B49E6:
	bl sub_080B3558
	lsls r0, r0, #0x10
	asrs r2, r0, #0x10
	cmp r2, #0
	bne _080B49FA
	ldr r1, [r4]
	movs r0, #8
	strh r0, [r1]
	strh r2, [r1, #2]
_080B49FA:
	ldr r0, _080B4A08 @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0
_080B4A08: .4byte gUnk_03006BA0

	thumb_func_start sub_080B4A0C
sub_080B4A0C: @ 0x080B4A0C
	push {lr}
	sub sp, #4
	ldr r0, _080B4A88 @ =gUnk_03006BA0
	ldr r1, [r0]
	adds r1, #8
	mov r2, sp
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080B4A8C @ =0x01000002
	mov r0, sp
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r0, #0
	bl sub_08004554
	movs r0, #3
	movs r1, #0
	movs r2, #3
	movs r3, #0
	bl sub_08004744
	movs r0, #3
	movs r1, #0x1a
	movs r2, #2
	bl sub_0800476C
	movs r0, #3
	bl sub_08005B5C
	movs r0, #3
	bl sub_08006210
	movs r0, #3
	movs r1, #0
	movs r2, #0
	bl sub_08005E18
	movs r0, #3
	bl sub_0800E764
	add sp, #4
	pop {r0}
	bx r0
	.align 2, 0
_080B4A88: .4byte gUnk_03006BA0
_080B4A8C: .4byte 0x01000002

	thumb_func_start sub_080B4A90
sub_080B4A90: @ 0x080B4A90
	push {lr}
	ldr r0, _080B4ACC @ =gUnk_03006BA0
	ldr r0, [r0]
	adds r3, r0, #0
	adds r3, #8
	movs r2, #1
	movs r1, #2
	ldrsh r0, [r3, r1]
	cmp r0, #0
	bne _080B4AC6
	ldr r0, _080B4AD0 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	bne _080B4AC0
	adds r0, r2, #0
	ands r0, r1
	cmp r0, #0
	bne _080B4AC0
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080B4AC6
_080B4AC0:
	movs r0, #0
	strh r0, [r3, #2]
	movs r2, #0
_080B4AC6:
	adds r0, r2, #0
	pop {r1}
	bx r1
	.align 2, 0
_080B4ACC: .4byte gUnk_03006BA0
_080B4AD0: .4byte gKeyNewPress

	thumb_func_start sub_080B4AD4
sub_080B4AD4: @ 0x080B4AD4
	push {r4, r5, lr}
	ldr r5, _080B4AE8 @ =gUnk_03006BA0
	ldr r0, [r5]
	movs r1, #2
	ldrsh r4, [r0, r1]
	cmp r4, #0
	beq _080B4AEC
	cmp r4, #1
	beq _080B4AFA
	b _080B4B0C
	.align 2, 0
_080B4AE8: .4byte gUnk_03006BA0
_080B4AEC:
	bl sub_080B3768
	ldr r1, [r5]
	ldrh r0, [r1, #2]
	adds r0, #1
	strh r0, [r1, #2]
	b _080B4B0C
_080B4AFA:
	bl sub_080B38AC
	lsls r0, r0, #0x10
	asrs r1, r0, #0x10
	cmp r1, #0
	bne _080B4B0C
	ldr r0, [r5]
	strh r4, [r0]
	strh r1, [r0, #2]
_080B4B0C:
	ldr r0, _080B4B1C @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r1, #2
	ldrsh r0, [r0, r1]
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080B4B1C: .4byte gUnk_03006BA0

	thumb_func_start sub_080B4B20
sub_080B4B20: @ 0x080B4B20
	push {lr}
	sub sp, #0xc
	movs r0, #0x30
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r2, r0, #0x18
	ldr r0, _080B4B64 @ =gUnk_03006BA0
	ldr r0, [r0]
	movs r1, #4
	ldrsh r0, [r0, r1]
	cmp r0, #9
	ble _080B4B44
	adds r0, r2, #0
	movs r1, #5
	bl __udivsi3
	adds r2, r0, #0
_080B4B44:
	ldr r0, _080B4B68 @ =gUnk_02012800
	movs r1, #5
	str r1, [sp]
	movs r1, #1
	str r1, [sp, #4]
	movs r1, #0
	str r1, [sp, #8]
	adds r1, r2, #0
	movs r2, #2
	movs r3, #1
	bl sub_08069E74
	add sp, #0xc
	pop {r0}
	bx r0
	.align 2, 0
_080B4B64: .4byte gUnk_03006BA0
_080B4B68: .4byte gUnk_02012800

	thumb_func_start sub_080B4B6C
sub_080B4B6C: @ 0x080B4B6C
	push {r4, r5, r6, lr}
	sub sp, #0xc
	movs r0, #0x20
	bl sub_0806EFA8
	bl sub_0806F020
	adds r5, r0, #0
	add r0, sp, #8
	movs r4, #0
	strh r4, [r0]
	ldr r2, _080B4C50 @ =0x01000010
	adds r1, r5, #0
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	strb r4, [r5, #4]
	movs r0, #0
	movs r6, #0
	strb r0, [r5, #5]
	strb r6, [r5, #6]
	strb r4, [r5, #7]
	strb r4, [r5, #8]
	strb r4, [r5, #9]
	strb r4, [r5, #0xa]
	strb r4, [r5, #0xb]
	strb r4, [r5, #0xc]
	strb r4, [r5, #0xd]
	ldr r0, _080B4C54 @ =0x000001B1
	bl sub_08012F60
	strh r0, [r5, #0xe]
	movs r0, #0xd9
	lsls r0, r0, #1
	bl sub_08012F60
	strh r0, [r5, #0x10]
	ldr r0, _080B4C58 @ =0x000001B3
	bl sub_08012F60
	strh r0, [r5, #0x12]
	movs r0, #0xda
	lsls r0, r0, #1
	bl sub_08012F60
	strh r0, [r5, #0x14]
	ldr r0, _080B4C5C @ =0x000001B5
	bl sub_08012F60
	strh r0, [r5, #0x16]
	movs r4, #0xdb
	lsls r4, r4, #1
	adds r0, r4, #0
	bl sub_08012F60
	strh r0, [r5, #0x18]
	adds r0, r4, #0
	bl sub_08012F60
	strh r0, [r5, #0x1a]
	ldr r0, _080B4C60 @ =0x000001B7
	bl sub_08012F60
	strh r0, [r5, #0x1c]
	strh r6, [r5, #0x1e]
	movs r4, #0x14
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r6, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B4C50: .4byte 0x01000010
_080B4C54: .4byte 0x000001B1
_080B4C58: .4byte 0x000001B3
_080B4C5C: .4byte 0x000001B5
_080B4C60: .4byte 0x000001B7

	thumb_func_start sub_080B4C64
sub_080B4C64: @ 0x080B4C64
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B4C8C
	cmp r0, #1
	bgt _080B4C80
	cmp r0, #0
	beq _080B4C86
	b _080B4CCC
_080B4C80:
	cmp r0, #2
	beq _080B4C9E
	b _080B4CCC
_080B4C86:
	bl sub_080B4CD4
	b _080B4C90
_080B4C8C:
	bl sub_080B4D48
_080B4C90:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B4CCC
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B4CCC
_080B4C9E:
	bl sub_080B5588
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080B4CCC
	movs r0, #0x20
	bl sub_0806EFF0
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #0
	bl sub_0806F0CC
	strh r5, [r4]
	movs r6, #0
_080B4CCC:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080B4CD4
sub_080B4CD4: @ 0x080B4CD4
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B4D28
	cmp r0, #1
	bgt _080B4CEE
	cmp r0, #0
	beq _080B4CF4
	b _080B4D3C
_080B4CEE:
	cmp r0, #2
	beq _080B4D38
	b _080B4D3C
_080B4CF4:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	bl sub_080B4E08
	bl sub_080B4EF0
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B4D3A
_080B4D28:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B4D3C
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B4D3A
_080B4D38:
	movs r0, #0
_080B4D3A:
	strh r0, [r4, #2]
_080B4D3C:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B4D48
sub_080B4D48: @ 0x080B4D48
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r5, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080B4D62
	cmp r0, #1
	beq _080B4D6C
	b _080B4DF6
_080B4D62:
	ldrh r0, [r4, #2]
	adds r0, #1
	strh r0, [r4, #2]
_080B4D68:
	movs r5, #1
	b _080B4DF6
_080B4D6C:
	ldr r0, _080B4D84 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	cmp r0, #0
	beq _080B4D8E
	ldrb r0, [r4, #4]
	cmp r0, #0
	beq _080B4D88
	subs r0, #1
	b _080B4D8A
	.align 2, 0
_080B4D84: .4byte gCurrentKeyPress
_080B4D88:
	movs r0, #0xa
_080B4D8A:
	strb r0, [r4, #4]
	b _080B4D68
_080B4D8E:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080B4DA6
	ldrb r0, [r4, #4]
	cmp r0, #9
	bhi _080B4DA2
	adds r0, #1
	strb r0, [r4, #4]
	b _080B4D68
_080B4DA2:
	strb r5, [r4, #4]
	b _080B4D68
_080B4DA6:
	movs r0, #0x30
	ands r0, r1
	cmp r0, #0
	beq _080B4DB4
	bl sub_080B5340
	b _080B4D68
_080B4DB4:
	ldr r0, _080B4DCC @ =gKeyNewPress
	ldrh r1, [r0]
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080B4DEA
	ldrb r0, [r4, #4]
	cmp r0, #9
	bne _080B4DD0
	bl sub_080B54B0
	b _080B4DF2
	.align 2, 0
_080B4DCC: .4byte gKeyNewPress
_080B4DD0:
	cmp r0, #0xa
	beq _080B4DF2
	adds r0, r4, #5
	ldrb r4, [r4, #4]
	adds r1, r0, r4
	ldrb r0, [r1]
	cmp r0, #1
	bne _080B4DE4
	strb r5, [r1]
	b _080B4D68
_080B4DE4:
	movs r0, #1
	strb r0, [r1]
	b _080B4D68
_080B4DEA:
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080B4DF6
_080B4DF2:
	strh r5, [r4, #2]
	movs r6, #0
_080B4DF6:
	cmp r5, #1
	bne _080B4DFE
	bl sub_080B4EF0
_080B4DFE:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B4E08
sub_080B4E08: @ 0x080B4E08
	push {r4, r5, lr}
	ldr r0, _080B4EB4 @ =gUnk_02010000
	ldr r4, _080B4EB8 @ =gUnk_080C0284
	movs r1, #9
	movs r2, #0
	adds r3, r4, #0
	bl sub_08001284
	ldr r5, _080B4EBC @ =gUnk_0200F800
	adds r0, r5, #0
	movs r1, #9
	movs r2, #0
	adds r3, r4, #0
	bl sub_08001284
	ldr r4, _080B4EC0 @ =gUnk_08BDA38C
	ldrb r2, [r4]
	ldr r3, _080B4EC4 @ =gUnk_080C0294
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #1]
	ldr r3, _080B4EC8 @ =gUnk_080C02A4
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #2]
	ldr r3, _080B4ECC @ =gUnk_080C02B4
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #3]
	ldr r3, _080B4ED0 @ =gUnk_080C02C4
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #4]
	ldr r3, _080B4ED4 @ =gUnk_080C02D4
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #5]
	ldr r3, _080B4ED8 @ =gUnk_080C02E4
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #6]
	ldr r3, _080B4EDC @ =gUnk_080C02F8
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #7]
	ldr r3, _080B4EE0 @ =gUnk_080C0310
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #8]
	ldr r3, _080B4EE4 @ =gUnk_080C0320
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #9]
	ldr r3, _080B4EE8 @ =gUnk_080C0330
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #0xa]
	ldr r3, _080B4EEC @ =gUnk_080C0334
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B4EB4: .4byte gUnk_02010000
_080B4EB8: .4byte gUnk_080C0284
_080B4EBC: .4byte gUnk_0200F800
_080B4EC0: .4byte gUnk_08BDA38C
_080B4EC4: .4byte gUnk_080C0294
_080B4EC8: .4byte gUnk_080C02A4
_080B4ECC: .4byte gUnk_080C02B4
_080B4ED0: .4byte gUnk_080C02C4
_080B4ED4: .4byte gUnk_080C02D4
_080B4ED8: .4byte gUnk_080C02E4
_080B4EDC: .4byte gUnk_080C02F8
_080B4EE0: .4byte gUnk_080C0310
_080B4EE4: .4byte gUnk_080C0320
_080B4EE8: .4byte gUnk_080C0330
_080B4EEC: .4byte gUnk_080C0334

	thumb_func_start sub_080B4EF0
sub_080B4EF0: @ 0x080B4EF0
	push {r4, r5, r6, r7, lr}
	sub sp, #8
	bl sub_0806F020
	adds r7, r0, #0
	movs r5, #2
_080B4EFC:
	lsls r2, r5, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #1
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #2
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #3
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #4
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #5
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #6
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #7
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r2, r5, #0
	adds r2, #8
	lsls r2, r2, #0x10
	lsrs r2, r2, #0x10
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #1
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	adds r5, #9
	cmp r5, #0x13
	bls _080B4EFC
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	ldr r4, _080B4FC8 @ =gUnk_08BDA38C
	ldrb r1, [r7, #4]
	adds r1, r1, r4
	ldrb r2, [r1]
	ldr r3, _080B4FCC @ =gUnk_080C0340
	movs r1, #1
	bl sub_08001284
	movs r5, #0
	adds r6, r7, #5
_080B4FA8:
	adds r0, r6, r5
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B4FD0
	ldrb r2, [r4]
	ldr r0, _080B4FC0 @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B4FC4 @ =gUnk_080C033C
	bl sub_08001284
	b _080B4FDC
	.align 2, 0
_080B4FC0: .4byte gUnk_0200F800
_080B4FC4: .4byte gUnk_080C033C
_080B4FC8: .4byte gUnk_08BDA38C
_080B4FCC: .4byte gUnk_080C0340
_080B4FD0:
	ldrb r2, [r4]
	ldr r0, _080B4FF4 @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B4FF8 @ =gUnk_080C0344
	bl sub_08001284
_080B4FDC:
	adds r0, r5, #1
	adds r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B5000
	ldrb r2, [r4, #1]
	ldr r0, _080B4FF4 @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B4FFC @ =gUnk_080C033C
	bl sub_08001284
	b _080B500C
	.align 2, 0
_080B4FF4: .4byte gUnk_0200F800
_080B4FF8: .4byte gUnk_080C0344
_080B4FFC: .4byte gUnk_080C033C
_080B5000:
	ldrb r2, [r4, #1]
	ldr r0, _080B5024 @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B5028 @ =gUnk_080C0344
	bl sub_08001284
_080B500C:
	adds r0, r5, #2
	adds r0, r6, r0
	ldrb r0, [r0]
	cmp r0, #0
	bne _080B5030
	ldrb r2, [r4, #2]
	ldr r0, _080B5024 @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B502C @ =gUnk_080C033C
	bl sub_08001284
	b _080B503C
	.align 2, 0
_080B5024: .4byte gUnk_0200F800
_080B5028: .4byte gUnk_080C0344
_080B502C: .4byte gUnk_080C033C
_080B5030:
	ldrb r2, [r4, #2]
	ldr r0, _080B505C @ =gUnk_0200F800
	movs r1, #3
	ldr r3, _080B5060 @ =gUnk_080C0344
	bl sub_08001284
_080B503C:
	adds r4, #3
	adds r5, #3
	cmp r5, #8
	bls _080B4FA8
	ldrh r0, [r7, #0xe]
	cmp r0, #1
	bne _080B506C
	ldr r0, _080B505C @ =gUnk_0200F800
	ldr r1, _080B5064 @ =gUnk_08BDA38C
	ldrb r2, [r1]
	ldr r3, _080B5068 @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B507A
	.align 2, 0
_080B505C: .4byte gUnk_0200F800
_080B5060: .4byte gUnk_080C0344
_080B5064: .4byte gUnk_08BDA38C
_080B5068: .4byte gUnk_080C0348
_080B506C:
	ldr r0, _080B5090 @ =gUnk_0200F800
	ldr r1, _080B5094 @ =gUnk_08BDA38C
	ldrb r2, [r1]
	ldr r3, _080B5098 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B507A:
	ldrh r0, [r7, #0x10]
	cmp r0, #1
	bne _080B50A0
	ldr r0, _080B5090 @ =gUnk_0200F800
	ldr r1, _080B5094 @ =gUnk_08BDA38C
	ldrb r2, [r1, #1]
	ldr r3, _080B509C @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B50AE
	.align 2, 0
_080B5090: .4byte gUnk_0200F800
_080B5094: .4byte gUnk_08BDA38C
_080B5098: .4byte gUnk_080C034C
_080B509C: .4byte gUnk_080C0348
_080B50A0:
	ldr r0, _080B50C4 @ =gUnk_0200F800
	ldr r1, _080B50C8 @ =gUnk_08BDA38C
	ldrb r2, [r1, #1]
	ldr r3, _080B50CC @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B50AE:
	ldrh r0, [r7, #0x12]
	cmp r0, #1
	bne _080B50D4
	ldr r0, _080B50C4 @ =gUnk_0200F800
	ldr r1, _080B50C8 @ =gUnk_08BDA38C
	ldrb r2, [r1, #2]
	ldr r3, _080B50D0 @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B50E2
	.align 2, 0
_080B50C4: .4byte gUnk_0200F800
_080B50C8: .4byte gUnk_08BDA38C
_080B50CC: .4byte gUnk_080C034C
_080B50D0: .4byte gUnk_080C0348
_080B50D4:
	ldr r0, _080B510C @ =gUnk_0200F800
	ldr r1, _080B5110 @ =gUnk_08BDA38C
	ldrb r2, [r1, #2]
	ldr r3, _080B5114 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B50E2:
	ldrh r0, [r7, #0x14]
	cmp r0, #0
	beq _080B5118
	mov r1, sp
	movs r2, #3
	movs r3, #0
	bl sub_08001314
	mov r0, sp
	movs r1, #3
	bl sub_08001488
	ldr r0, _080B510C @ =gUnk_0200F800
	ldr r1, _080B5110 @ =gUnk_08BDA38C
	ldrb r2, [r1, #3]
	movs r1, #0x18
	mov r3, sp
	bl sub_08001284
	b _080B5126
	.align 2, 0
_080B510C: .4byte gUnk_0200F800
_080B5110: .4byte gUnk_08BDA38C
_080B5114: .4byte gUnk_080C034C
_080B5118:
	ldr r0, _080B513C @ =gUnk_0200F800
	ldr r1, _080B5140 @ =gUnk_08BDA38C
	ldrb r2, [r1, #3]
	ldr r3, _080B5144 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B5126:
	ldrh r0, [r7, #0x16]
	cmp r0, #1
	bne _080B514C
	ldr r0, _080B513C @ =gUnk_0200F800
	ldr r1, _080B5140 @ =gUnk_08BDA38C
	ldrb r2, [r1, #4]
	ldr r3, _080B5148 @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B515A
	.align 2, 0
_080B513C: .4byte gUnk_0200F800
_080B5140: .4byte gUnk_08BDA38C
_080B5144: .4byte gUnk_080C034C
_080B5148: .4byte gUnk_080C0348
_080B514C:
	ldr r0, _080B5170 @ =gUnk_0200F800
	ldr r1, _080B5174 @ =gUnk_08BDA38C
	ldrb r2, [r1, #4]
	ldr r3, _080B5178 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B515A:
	ldrh r0, [r7, #0x18]
	cmp r0, #1
	bne _080B5180
	ldr r0, _080B5170 @ =gUnk_0200F800
	ldr r1, _080B5174 @ =gUnk_08BDA38C
	ldrb r2, [r1, #5]
	ldr r3, _080B517C @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B518E
	.align 2, 0
_080B5170: .4byte gUnk_0200F800
_080B5174: .4byte gUnk_08BDA38C
_080B5178: .4byte gUnk_080C034C
_080B517C: .4byte gUnk_080C0348
_080B5180:
	ldr r0, _080B51A0 @ =gUnk_0200F800
	ldr r1, _080B51A4 @ =gUnk_08BDA38C
	ldrb r2, [r1, #5]
	ldr r3, _080B51A8 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B518E:
	ldrh r0, [r7, #0x1a]
	cmp r0, #9
	bhi _080B51D8
	lsls r0, r0, #2
	ldr r1, _080B51AC @ =_080B51B0
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B51A0: .4byte gUnk_0200F800
_080B51A4: .4byte gUnk_08BDA38C
_080B51A8: .4byte gUnk_080C034C
_080B51AC: .4byte _080B51B0
_080B51B0: @ jump table
	.4byte _080B51D8 @ case 0
	.4byte _080B51F0 @ case 1
	.4byte _080B5208 @ case 2
	.4byte _080B5220 @ case 3
	.4byte _080B5238 @ case 4
	.4byte _080B5250 @ case 5
	.4byte _080B5268 @ case 6
	.4byte _080B5280 @ case 7
	.4byte _080B5298 @ case 8
	.4byte _080B52B4 @ case 9
_080B51D8:
	ldr r0, _080B51E4 @ =gUnk_0200F800
	ldr r1, _080B51E8 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B51EC @ =gUnk_080C0350
	b _080B52A0
	.align 2, 0
_080B51E4: .4byte gUnk_0200F800
_080B51E8: .4byte gUnk_08BDA38C
_080B51EC: .4byte gUnk_080C0350
_080B51F0:
	ldr r0, _080B51FC @ =gUnk_0200F800
	ldr r1, _080B5200 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B5204 @ =gUnk_080C0358
	b _080B52A0
	.align 2, 0
_080B51FC: .4byte gUnk_0200F800
_080B5200: .4byte gUnk_08BDA38C
_080B5204: .4byte gUnk_080C0358
_080B5208:
	ldr r0, _080B5214 @ =gUnk_0200F800
	ldr r1, _080B5218 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B521C @ =gUnk_080C0360
	b _080B52A0
	.align 2, 0
_080B5214: .4byte gUnk_0200F800
_080B5218: .4byte gUnk_08BDA38C
_080B521C: .4byte gUnk_080C0360
_080B5220:
	ldr r0, _080B522C @ =gUnk_0200F800
	ldr r1, _080B5230 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B5234 @ =gUnk_080C0368
	b _080B52A0
	.align 2, 0
_080B522C: .4byte gUnk_0200F800
_080B5230: .4byte gUnk_08BDA38C
_080B5234: .4byte gUnk_080C0368
_080B5238:
	ldr r0, _080B5244 @ =gUnk_0200F800
	ldr r1, _080B5248 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B524C @ =gUnk_080C0370
	b _080B52A0
	.align 2, 0
_080B5244: .4byte gUnk_0200F800
_080B5248: .4byte gUnk_08BDA38C
_080B524C: .4byte gUnk_080C0370
_080B5250:
	ldr r0, _080B525C @ =gUnk_0200F800
	ldr r1, _080B5260 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B5264 @ =gUnk_080C0378
	b _080B52A0
	.align 2, 0
_080B525C: .4byte gUnk_0200F800
_080B5260: .4byte gUnk_08BDA38C
_080B5264: .4byte gUnk_080C0378
_080B5268:
	ldr r0, _080B5274 @ =gUnk_0200F800
	ldr r1, _080B5278 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B527C @ =gUnk_080C0380
	b _080B52A0
	.align 2, 0
_080B5274: .4byte gUnk_0200F800
_080B5278: .4byte gUnk_08BDA38C
_080B527C: .4byte gUnk_080C0380
_080B5280:
	ldr r0, _080B528C @ =gUnk_0200F800
	ldr r1, _080B5290 @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B5294 @ =gUnk_080C0388
	b _080B52A0
	.align 2, 0
_080B528C: .4byte gUnk_0200F800
_080B5290: .4byte gUnk_08BDA38C
_080B5294: .4byte gUnk_080C0388
_080B5298:
	ldr r0, _080B52A8 @ =gUnk_0200F800
	ldr r1, _080B52AC @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B52B0 @ =gUnk_080C0390
_080B52A0:
	movs r1, #0x18
	bl sub_08001284
	b _080B52C2
	.align 2, 0
_080B52A8: .4byte gUnk_0200F800
_080B52AC: .4byte gUnk_08BDA38C
_080B52B0: .4byte gUnk_080C0390
_080B52B4:
	ldr r0, _080B52D8 @ =gUnk_0200F800
	ldr r1, _080B52DC @ =gUnk_08BDA38C
	ldrb r2, [r1, #6]
	ldr r3, _080B52E0 @ =gUnk_080C0398
	movs r1, #0x18
	bl sub_08001284
_080B52C2:
	ldrh r0, [r7, #0x1c]
	cmp r0, #1
	bne _080B52E8
	ldr r0, _080B52D8 @ =gUnk_0200F800
	ldr r1, _080B52DC @ =gUnk_08BDA38C
	ldrb r2, [r1, #7]
	ldr r3, _080B52E4 @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B52F6
	.align 2, 0
_080B52D8: .4byte gUnk_0200F800
_080B52DC: .4byte gUnk_08BDA38C
_080B52E0: .4byte gUnk_080C0398
_080B52E4: .4byte gUnk_080C0348
_080B52E8:
	ldr r0, _080B530C @ =gUnk_0200F800
	ldr r1, _080B5310 @ =gUnk_08BDA38C
	ldrb r2, [r1, #7]
	ldr r3, _080B5314 @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B52F6:
	ldrh r0, [r7, #0x1e]
	cmp r0, #1
	bne _080B531C
	ldr r0, _080B530C @ =gUnk_0200F800
	ldr r1, _080B5310 @ =gUnk_08BDA38C
	ldrb r2, [r1, #8]
	ldr r3, _080B5318 @ =gUnk_080C0348
	movs r1, #0x18
	bl sub_08001284
	b _080B532A
	.align 2, 0
_080B530C: .4byte gUnk_0200F800
_080B5310: .4byte gUnk_08BDA38C
_080B5314: .4byte gUnk_080C034C
_080B5318: .4byte gUnk_080C0348
_080B531C:
	ldr r0, _080B5334 @ =gUnk_0200F800
	ldr r1, _080B5338 @ =gUnk_08BDA38C
	ldrb r2, [r1, #8]
	ldr r3, _080B533C @ =gUnk_080C034C
	movs r1, #0x18
	bl sub_08001284
_080B532A:
	add sp, #8
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B5334: .4byte gUnk_0200F800
_080B5338: .4byte gUnk_08BDA38C
_080B533C: .4byte gUnk_080C034C

	thumb_func_start sub_080B5340
sub_080B5340: @ 0x080B5340
	push {lr}
	bl sub_0806F020
	adds r2, r0, #0
	ldrb r0, [r2, #4]
	cmp r0, #8
	bls _080B5350
	b _080B54AC
_080B5350:
	lsls r0, r0, #2
	ldr r1, _080B535C @ =_080B5360
	adds r0, r0, r1
	ldr r0, [r0]
	mov pc, r0
	.align 2, 0
_080B535C: .4byte _080B5360
_080B5360: @ jump table
	.4byte _080B5384 @ case 0
	.4byte _080B53A2 @ case 1
	.4byte _080B53BE @ case 2
	.4byte _080B53DA @ case 3
	.4byte _080B5404 @ case 4
	.4byte _080B5422 @ case 5
	.4byte _080B543E @ case 6
	.4byte _080B5476 @ case 7
	.4byte _080B5492 @ case 8
_080B5384:
	ldr r0, _080B5398 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B539C
	movs r0, #0
	strh r0, [r2, #0xe]
	b _080B54AC
	.align 2, 0
_080B5398: .4byte gCurrentKeyPress
_080B539C:
	movs r0, #1
	strh r0, [r2, #0xe]
	b _080B54AC
_080B53A2:
	ldr r0, _080B53B4 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B53B8
	movs r0, #0
	strh r0, [r2, #0x10]
	b _080B54AC
	.align 2, 0
_080B53B4: .4byte gCurrentKeyPress
_080B53B8:
	movs r0, #1
	strh r0, [r2, #0x10]
	b _080B54AC
_080B53BE:
	ldr r0, _080B53D0 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B53D4
	movs r0, #0
	strh r0, [r2, #0x12]
	b _080B54AC
	.align 2, 0
_080B53D0: .4byte gCurrentKeyPress
_080B53D4:
	movs r0, #1
	strh r0, [r2, #0x12]
	b _080B54AC
_080B53DA:
	ldr r0, _080B53F4 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B53F8
	ldrh r0, [r2, #0x14]
	cmp r0, #0
	beq _080B54AC
	subs r0, #1
	strh r0, [r2, #0x14]
	b _080B54AC
	.align 2, 0
_080B53F4: .4byte gCurrentKeyPress
_080B53F8:
	ldrh r0, [r2, #0x14]
	cmp r0, #0x3b
	bhi _080B54AC
	adds r0, #1
	strh r0, [r2, #0x14]
	b _080B54AC
_080B5404:
	ldr r0, _080B5418 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B541C
	movs r0, #0
	strh r0, [r2, #0x16]
	b _080B54AC
	.align 2, 0
_080B5418: .4byte gCurrentKeyPress
_080B541C:
	movs r0, #1
	strh r0, [r2, #0x16]
	b _080B54AC
_080B5422:
	ldr r0, _080B5434 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B5438
	movs r0, #0
	strh r0, [r2, #0x18]
	b _080B54AC
	.align 2, 0
_080B5434: .4byte gCurrentKeyPress
_080B5438:
	movs r0, #1
	strh r0, [r2, #0x18]
	b _080B54AC
_080B543E:
	ldr r0, _080B545C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _080B5460
	ldrh r0, [r2, #0x1a]
	cmp r0, #0
	beq _080B54AC
	subs r0, #1
	strh r0, [r2, #0x1a]
	b _080B54AC
	.align 2, 0
_080B545C: .4byte gCurrentKeyPress
_080B5460:
	ldrh r0, [r2, #0x1a]
	adds r1, r0, #0
	cmp r1, #8
	bhi _080B546E
	adds r0, #1
	strh r0, [r2, #0x1a]
	b _080B54AC
_080B546E:
	cmp r1, #0xa
	bls _080B54AC
	strh r3, [r2, #0x1a]
	b _080B54AC
_080B5476:
	ldr r0, _080B5488 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B548C
	movs r0, #0
	strh r0, [r2, #0x1c]
	b _080B54AC
	.align 2, 0
_080B5488: .4byte gCurrentKeyPress
_080B548C:
	movs r0, #1
	strh r0, [r2, #0x1c]
	b _080B54AC
_080B5492:
	ldr r0, _080B54A4 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B54A8
	movs r0, #0
	b _080B54AA
	.align 2, 0
_080B54A4: .4byte gCurrentKeyPress
_080B54A8:
	movs r0, #1
_080B54AA:
	strh r0, [r2, #0x1e]
_080B54AC:
	pop {r0}
	bx r0

	thumb_func_start sub_080B54B0
sub_080B54B0: @ 0x080B54B0
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	ldrb r0, [r4, #5]
	cmp r0, #1
	bne _080B54C6
	ldr r0, _080B5578 @ =0x000001B1
	ldrh r1, [r4, #0xe]
	bl sub_08012F0C
_080B54C6:
	ldrb r0, [r4, #6]
	cmp r0, #1
	bne _080B54D6
	movs r0, #0xd9
	lsls r0, r0, #1
	ldrh r1, [r4, #0x10]
	bl sub_08012F0C
_080B54D6:
	ldrb r0, [r4, #7]
	cmp r0, #1
	bne _080B54E4
	ldr r0, _080B557C @ =0x000001B3
	ldrh r1, [r4, #0x12]
	bl sub_08012F0C
_080B54E4:
	ldrb r0, [r4, #8]
	cmp r0, #1
	bne _080B54F4
	movs r0, #0xda
	lsls r0, r0, #1
	ldrh r1, [r4, #0x14]
	bl sub_08012F0C
_080B54F4:
	ldrb r0, [r4, #9]
	cmp r0, #1
	bne _080B5502
	ldr r0, _080B5580 @ =0x000001B5
	ldrh r1, [r4, #0x16]
	bl sub_08012F0C
_080B5502:
	ldrb r0, [r4, #0xa]
	cmp r0, #1
	bne _080B5512
	movs r0, #0xdb
	lsls r0, r0, #1
	ldrh r1, [r4, #0x18]
	bl sub_08012F0C
_080B5512:
	ldrb r0, [r4, #0xb]
	cmp r0, #1
	bne _080B5522
	movs r0, #0xdb
	lsls r0, r0, #1
	ldrh r1, [r4, #0x1a]
	bl sub_08012F0C
_080B5522:
	ldrb r0, [r4, #0xc]
	cmp r0, #1
	bne _080B5530
	ldr r0, _080B5584 @ =0x000001B7
	ldrh r1, [r4, #0x1c]
	bl sub_08012F0C
_080B5530:
	ldrb r0, [r4, #0xd]
	cmp r0, #1
	bne _080B5572
	movs r0, #0
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080B554A
	movs r1, #0xff
	bl SetBagWeaponTec
_080B554A:
	movs r0, #1
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080B555E
	movs r1, #0xff
	bl SetBagWeaponTec
_080B555E:
	movs r0, #2
	bl GetEquipWeapon
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	beq _080B5572
	movs r1, #0xff
	bl SetBagWeaponTec
_080B5572:
	pop {r4}
	pop {r0}
	bx r0
	.align 2, 0
_080B5578: .4byte 0x000001B1
_080B557C: .4byte 0x000001B3
_080B5580: .4byte 0x000001B5
_080B5584: .4byte 0x000001B7

	thumb_func_start sub_080B5588
sub_080B5588: @ 0x080B5588
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B55B6
	cmp r0, #1
	bgt _080B55A2
	cmp r0, #0
	beq _080B55A8
	b _080B55CA
_080B55A2:
	cmp r0, #2
	beq _080B55C6
	b _080B55CA
_080B55A8:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B55C8
_080B55B6:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B55CA
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B55C8
_080B55C6:
	movs r0, #0
_080B55C8:
	strh r0, [r4, #2]
_080B55CA:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080B55D4
sub_080B55D4: @ 0x080B55D4
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B55FC
	cmp r0, #1
	bgt _080B55F0
	cmp r0, #0
	beq _080B55F6
	b _080B563C
_080B55F0:
	cmp r0, #2
	beq _080B560E
	b _080B563C
_080B55F6:
	bl sub_080B5644
	b _080B5600
_080B55FC:
	bl sub_080B575C
_080B5600:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B563C
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B563C
_080B560E:
	bl sub_080B6448
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080B563C
	movs r0, #0x40
	bl sub_0806EFF0
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #1
	bl sub_0806F0CC
	strh r5, [r4]
	movs r6, #0
_080B563C:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080B5644
sub_080B5644: @ 0x080B5644
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r0, #2
	ldrsh r4, [r6, r0]
	cmp r4, #1
	beq _080B573C
	cmp r4, #1
	bgt _080B565E
	cmp r4, #0
	beq _080B5664
	b _080B5750
_080B565E:
	cmp r4, #2
	beq _080B574C
	b _080B5750
_080B5664:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	strh r4, [r6, #4]
	bl GetPlayerGender
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x20]
	bl GetPlayerLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x22]
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0xff
	bne _080B56A8
	movs r0, #4
	b _080B56B0
_080B56A8:
	bl sub_08018914
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
_080B56B0:
	strh r0, [r6, #0x24]
	bl sub_08018924
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r4, #0
	strh r0, [r6, #0x26]
	strh r4, [r6, #0x34]
	strh r4, [r6, #0x36]
	strh r4, [r6, #0x38]
	strh r4, [r6, #0x3a]
	adds r5, r6, #0
	adds r5, #8
	movs r0, #0
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x28]
	movs r0, #1
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x2a]
	movs r0, #2
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x2c]
	movs r0, #3
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x2e]
	movs r0, #4
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x30]
	movs r0, #5
	bl GetForgeLevel
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	strh r0, [r6, #0x32]
	strh r4, [r6, #8]
	strh r4, [r6, #0xa]
	strh r4, [r6, #0xc]
	strh r4, [r6, #0xe]
	strh r4, [r5, #8]
	strh r4, [r6, #0x12]
	strh r4, [r6, #0x14]
	strh r4, [r6, #0x16]
	strh r4, [r6, #0x18]
	strh r4, [r6, #0x1a]
	strh r4, [r6, #0x1c]
	strh r4, [r6, #0x1e]
	bl sub_080B5B04
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080B574E
_080B573C:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B5750
	ldrh r0, [r6, #2]
	adds r0, #1
	b _080B574E
_080B574C:
	movs r0, #0
_080B574E:
	strh r0, [r6, #2]
_080B5750:
	movs r1, #2
	ldrsh r0, [r6, r1]
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B575C
sub_080B575C: @ 0x080B575C
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	beq _080B5770
	b _080B5AFA
_080B5770:
	ldr r0, _080B5798 @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _080B579C
	ldrh r0, [r4, #4]
	strh r0, [r4, #6]
	subs r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080B5790
	b _080B5A9A
_080B5790:
	movs r0, #0xd
	strh r0, [r4, #4]
	b _080B5A9A
	.align 2, 0
_080B5798: .4byte gCurrentKeyPress
_080B579C:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080B57BA
	ldrh r0, [r4, #4]
	strh r0, [r4, #6]
	adds r0, #1
	strh r0, [r4, #4]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xd
	bgt _080B57B6
	b _080B5A9A
_080B57B6:
	strh r2, [r4, #4]
	b _080B5A9A
_080B57BA:
	movs r0, #0x10
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	bne _080B57C8
	b _080B58D2
_080B57C8:
	ldr r1, _080B57EC @ =gUnk_08BDA398
	movs r2, #4
	ldrsh r0, [r4, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080B57F0
	ldrh r0, [r4, #0x20]
	adds r0, #1
	strh r0, [r4, #0x20]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #1
	bgt _080B57E6
	b _080B5A9A
_080B57E6:
	strh r6, [r4, #0x20]
	b _080B5A9A
	.align 2, 0
_080B57EC: .4byte gUnk_08BDA398
_080B57F0:
	cmp r0, #3
	bne _080B580A
	ldrh r0, [r4, #0x22]
	adds r0, #1
	strh r0, [r4, #0x22]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080B5804
	b _080B5A9A
_080B5804:
	movs r0, #0x63
	strh r0, [r4, #0x22]
	b _080B5A9A
_080B580A:
	cmp r0, #4
	bne _080B5838
	movs r0, #0x34
	ldrsh r1, [r4, r0]
	lsls r1, r1, #1
	adds r2, r4, #0
	adds r2, #0x28
	adds r1, r2, r1
	ldrh r0, [r1]
	adds r0, #1
	strh r0, [r1]
	movs r1, #0x34
	ldrsh r0, [r4, r1]
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #9
	bgt _080B5832
	b _080B5A9A
_080B5832:
	movs r0, #9
	strh r0, [r1]
	b _080B5A9A
_080B5838:
	cmp r0, #5
	bne _080B5852
	ldrh r0, [r4, #0x24]
	adds r0, #1
	strh r0, [r4, #0x24]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #4
	bgt _080B584C
	b _080B5A9A
_080B584C:
	movs r0, #4
	strh r0, [r4, #0x24]
	b _080B5A9A
_080B5852:
	cmp r0, #6
	bne _080B586C
	ldrh r0, [r4, #0x26]
	adds r0, #1
	strh r0, [r4, #0x26]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080B5866
	b _080B5A9A
_080B5866:
	movs r0, #0x63
	strh r0, [r4, #0x26]
	b _080B5A9A
_080B586C:
	cmp r0, #0xb
	bne _080B5886
	ldrh r0, [r4, #0x36]
	adds r0, #1
	strh r0, [r4, #0x36]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080B5880
	b _080B5A9A
_080B5880:
	movs r0, #0x63
	strh r0, [r4, #0x36]
	b _080B5A9A
_080B5886:
	cmp r0, #0xc
	bne _080B58B6
	ldr r0, _080B58AC @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080B58B0
	ldrh r0, [r4, #0x3a]
	adds r0, #1
_080B589A:
	strh r0, [r4, #0x3a]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0x63
	bgt _080B58A6
	b _080B5A9A
_080B58A6:
	movs r0, #0x63
	strh r0, [r4, #0x3a]
	b _080B5A9A
	.align 2, 0
_080B58AC: .4byte gKeyHeld
_080B58B0:
	ldrh r0, [r4, #0x38]
	adds r0, #1
	b _080B5A10
_080B58B6:
	cmp r0, #0xd
	beq _080B58BC
	b _080B5A9A
_080B58BC:
	ldrh r0, [r4, #0x3c]
	adds r0, #1
_080B58C0:
	strh r0, [r4, #0x3c]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xf5
	bgt _080B58CC
	b _080B5A9A
_080B58CC:
	movs r0, #0xf5
	strh r0, [r4, #0x3c]
	b _080B5A9A
_080B58D2:
	movs r0, #0x20
	ands r0, r1
	cmp r0, #0
	beq _080B59B4
	ldr r1, _080B58FC @ =gUnk_08BDA398
	movs r2, #4
	ldrsh r0, [r4, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #2
	bne _080B5900
	ldrh r0, [r4, #0x20]
	subs r0, #1
	strh r0, [r4, #0x20]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080B58F6
	b _080B5A9A
_080B58F6:
	strh r3, [r4, #0x20]
	b _080B5A9A
	.align 2, 0
_080B58FC: .4byte gUnk_08BDA398
_080B5900:
	cmp r0, #3
	bne _080B5916
	ldrh r0, [r4, #0x22]
	subs r0, #1
	strh r0, [r4, #0x22]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080B5912
	b _080B5A9A
_080B5912:
	strh r6, [r4, #0x22]
	b _080B5A9A
_080B5916:
	cmp r0, #4
	bne _080B5942
	movs r0, #0x34
	ldrsh r1, [r4, r0]
	lsls r1, r1, #1
	adds r2, r4, #0
	adds r2, #0x28
	adds r1, r2, r1
	ldrh r0, [r1]
	subs r0, #1
	strh r0, [r1]
	movs r1, #0x34
	ldrsh r0, [r4, r1]
	lsls r0, r0, #1
	adds r1, r2, r0
	movs r2, #0
	ldrsh r0, [r1, r2]
	cmp r0, #0
	blt _080B593E
	b _080B5A9A
_080B593E:
	strh r3, [r1]
	b _080B5A9A
_080B5942:
	cmp r0, #5
	bne _080B5958
	ldrh r0, [r4, #0x24]
	subs r0, #1
	strh r0, [r4, #0x24]
	lsls r0, r0, #0x10
	cmp r0, #0
	blt _080B5954
	b _080B5A9A
_080B5954:
	strh r3, [r4, #0x24]
	b _080B5A9A
_080B5958:
	cmp r0, #6
	bne _080B596E
	ldrh r0, [r4, #0x26]
	subs r0, #1
	strh r0, [r4, #0x26]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080B596A
	b _080B5A9A
_080B596A:
	strh r6, [r4, #0x26]
	b _080B5A9A
_080B596E:
	cmp r0, #0xb
	bne _080B5984
	ldrh r0, [r4, #0x36]
	subs r0, #1
	strh r0, [r4, #0x36]
	lsls r0, r0, #0x10
	cmp r0, #0
	ble _080B5980
	b _080B5A9A
_080B5980:
	strh r6, [r4, #0x36]
	b _080B5A9A
_080B5984:
	cmp r0, #0xc
	bne _080B59AA
	ldr r0, _080B59A0 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _080B59A4
	ldrh r0, [r4, #0x3a]
	subs r0, #1
	b _080B5A7C
	.align 2, 0
_080B59A0: .4byte gKeyHeld
_080B59A4:
	ldrh r0, [r4, #0x38]
	subs r0, #1
	b _080B5A90
_080B59AA:
	cmp r0, #0xd
	bne _080B5A9A
	ldrh r0, [r4, #0x3c]
	subs r0, #1
	b _080B5A58
_080B59B4:
	movs r0, #0x80
	lsls r0, r0, #1
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _080B5A20
	ldr r1, _080B59E4 @ =gUnk_08BDA398
	movs r2, #4
	ldrsh r0, [r4, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #4
	bne _080B59E8
	ldrh r0, [r4, #0x34]
	adds r0, #1
	strh r0, [r4, #0x34]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #5
	ble _080B5A9A
	movs r0, #5
	strh r0, [r4, #0x34]
	b _080B5A9A
	.align 2, 0
_080B59E4: .4byte gUnk_08BDA398
_080B59E8:
	cmp r0, #0xd
	bne _080B59F2
	ldrh r0, [r4, #0x3c]
	adds r0, #0xa
	b _080B58C0
_080B59F2:
	cmp r0, #0xc
	bne _080B5A9A
	ldr r0, _080B5A08 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	cmp r0, #0
	beq _080B5A0C
	ldrh r0, [r4, #0x3a]
	adds r0, #0xa
	b _080B589A
	.align 2, 0
_080B5A08: .4byte gKeyHeld
_080B5A0C:
	ldrh r0, [r4, #0x38]
	adds r0, #0xa
_080B5A10:
	strh r0, [r4, #0x38]
	lsls r0, r0, #0x10
	asrs r0, r0, #0x10
	cmp r0, #0xfa
	ble _080B5A9A
	movs r0, #0xfa
	strh r0, [r4, #0x38]
	b _080B5A9A
_080B5A20:
	movs r0, #0x80
	lsls r0, r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _080B5AA0
	ldr r1, _080B5A4C @ =gUnk_08BDA398
	movs r2, #4
	ldrsh r0, [r4, r2]
	adds r0, r0, r1
	ldrb r0, [r0]
	cmp r0, #4
	bne _080B5A50
	ldrh r0, [r4, #0x34]
	subs r0, #1
	strh r0, [r4, #0x34]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B5A9A
	strh r3, [r4, #0x34]
	b _080B5A9A
	.align 2, 0
_080B5A4C: .4byte gUnk_08BDA398
_080B5A50:
	cmp r0, #0xd
	bne _080B5A64
	ldrh r0, [r4, #0x3c]
	subs r0, #0xa
_080B5A58:
	strh r0, [r4, #0x3c]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B5A9A
	strh r3, [r4, #0x3c]
	b _080B5A9A
_080B5A64:
	cmp r0, #0xc
	bne _080B5A9A
	ldr r0, _080B5A88 @ =gKeyHeld
	ldrh r1, [r0]
	movs r0, #8
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r1, r0, #0x10
	cmp r1, #0
	beq _080B5A8C
	ldrh r0, [r4, #0x3a]
	subs r0, #0xa
_080B5A7C:
	strh r0, [r4, #0x3a]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B5A9A
	strh r3, [r4, #0x3a]
	b _080B5A9A
	.align 2, 0
_080B5A88: .4byte gKeyHeld
_080B5A8C:
	ldrh r0, [r4, #0x38]
	subs r0, #0xa
_080B5A90:
	strh r0, [r4, #0x38]
	lsls r0, r0, #0x10
	cmp r0, #0
	bge _080B5A9A
	strh r1, [r4, #0x38]
_080B5A9A:
	bl sub_080B5B04
	b _080B5AFA
_080B5AA0:
	ldr r0, _080B5AB8 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r5, r0, #0x10
	cmp r5, #0
	beq _080B5ABC
	strh r2, [r4, #2]
	movs r6, #0
	b _080B5AFA
	.align 2, 0
_080B5AB8: .4byte gKeyNewPress
_080B5ABC:
	adds r0, r6, #0
	ands r0, r1
	cmp r0, #0
	beq _080B5AFA
	ldr r0, _080B5AD8 @ =gUnk_08BDA398
	movs r2, #4
	ldrsh r1, [r4, r2]
	adds r0, r1, r0
	ldrb r0, [r0]
	cmp r0, #0x12
	bne _080B5ADC
	bl sub_080B5E1C
	b _080B5AE0
	.align 2, 0
_080B5AD8: .4byte gUnk_08BDA398
_080B5ADC:
	cmp r0, #0x13
	bne _080B5AE6
_080B5AE0:
	strh r5, [r4, #2]
	movs r6, #0
	b _080B5AFA
_080B5AE6:
	lsls r0, r1, #1
	adds r1, r4, #0
	adds r1, #8
	adds r1, r1, r0
	ldrh r2, [r1]
	movs r0, #1
	subs r0, r0, r2
	strh r0, [r1]
	bl sub_080B5B04
_080B5AFA:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B5B04
sub_080B5B04: @ 0x080B5B04
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #0x24
	bl sub_0806F020
	adds r7, r0, #0
	add r1, sp, #0xc
	ldr r0, _080B5D18 @ =gUnk_080C0404
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldm r0!, {r2, r3, r4}
	stm r1!, {r2, r3, r4}
	ldr r5, _080B5D1C @ =gUnk_02010000
	ldr r3, _080B5D20 @ =gUnk_080C041C
	adds r0, r5, #0
	movs r1, #9
	movs r2, #0
	bl sub_08001284
	ldr r4, _080B5D24 @ =gUnk_08BDA398
	ldrb r2, [r4]
	ldr r3, _080B5D28 @ =gUnk_080C042C
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #1]
	ldr r3, _080B5D2C @ =gUnk_080C0438
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #2]
	ldr r3, _080B5D30 @ =gUnk_080C0454
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #3]
	ldr r3, _080B5D34 @ =gUnk_080C0470
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #4]
	ldr r3, _080B5D38 @ =gUnk_080C047C
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #5]
	ldr r3, _080B5D3C @ =gUnk_080C0498
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #6]
	ldr r3, _080B5D40 @ =gUnk_080C04AC
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #7]
	ldr r3, _080B5D44 @ =gUnk_080C04C0
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #8]
	ldr r3, _080B5D48 @ =gUnk_080C04DC
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #9]
	ldr r3, _080B5D4C @ =gUnk_080C04F8
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #0xa]
	ldr r3, _080B5D50 @ =gUnk_080C0514
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #0xb]
	ldr r3, _080B5D54 @ =gUnk_080C0524
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #0xc]
	ldr r3, _080B5D58 @ =gUnk_080C0538
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4, #0xd]
	ldr r3, _080B5D5C @ =gUnk_080C053C
	adds r0, r5, #0
	movs r1, #2
	bl sub_08001284
	ldrb r2, [r4]
	ldr r1, _080B5D60 @ =gUnk_08BDA3A8
	movs r3, #0x20
	ldrsh r0, [r7, r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r5, #0
	movs r1, #0x16
	bl sub_08001284
	ldrb r0, [r4, #1]
	str r0, [sp]
	movs r1, #0x22
	ldrsh r0, [r7, r1]
	str r0, [sp, #4]
	movs r6, #2
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	ldrb r2, [r4, #2]
	movs r3, #0x34
	ldrsh r0, [r7, r3]
	lsls r0, r0, #2
	add r0, sp
	adds r0, #0xc
	ldr r3, [r0]
	adds r0, r5, #0
	movs r1, #0x18
	bl sub_08001284
	ldrb r0, [r4, #2]
	str r0, [sp]
	movs r0, #0x34
	ldrsh r1, [r7, r0]
	lsls r1, r1, #1
	adds r0, r7, #0
	adds r0, #0x28
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x1a
	bl sub_0806F2D0
	ldrb r2, [r4, #3]
	ldr r1, _080B5D64 @ =gUnk_08BDA3B0
	movs r3, #0x24
	ldrsh r0, [r7, r3]
	lsls r0, r0, #2
	adds r0, r0, r1
	ldr r3, [r0]
	adds r0, r5, #0
	movs r1, #0x16
	bl sub_08001284
	ldrb r0, [r4, #4]
	str r0, [sp]
	movs r1, #0x26
	ldrsh r0, [r7, r1]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	ldrb r0, [r4, #7]
	str r0, [sp]
	movs r2, #0x36
	ldrsh r0, [r7, r2]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	ldrb r0, [r4, #8]
	str r0, [sp]
	movs r3, #0x38
	ldrsh r0, [r7, r3]
	str r0, [sp, #4]
	movs r0, #3
	mov r8, r0
	str r0, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x14
	bl sub_0806F2D0
	ldrb r0, [r4, #8]
	str r0, [sp]
	movs r1, #0x3a
	ldrsh r0, [r7, r1]
	str r0, [sp, #4]
	str r6, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x19
	bl sub_0806F2D0
	ldrb r0, [r4, #9]
	str r0, [sp]
	movs r2, #0x3c
	ldrsh r0, [r7, r2]
	str r0, [sp, #4]
	mov r3, r8
	str r3, [sp, #8]
	adds r0, r5, #0
	movs r1, #0
	movs r2, #1
	movs r3, #0x18
	bl sub_0806F2D0
	movs r1, #6
	ldrsh r0, [r7, r1]
	adds r0, r0, r4
	ldrb r2, [r0]
	ldr r3, _080B5D68 @ =gUnk_080C0544
	adds r0, r5, #0
	movs r1, #1
	bl sub_08001284
	movs r2, #4
	ldrsh r0, [r7, r2]
	adds r0, r0, r4
	ldrb r2, [r0]
	ldr r3, _080B5D6C @ =gUnk_080C0548
	adds r0, r5, #0
	movs r1, #1
	bl sub_08001284
	movs r5, #0
_080B5CFA:
	lsls r1, r5, #1
	adds r0, r7, #0
	adds r0, #8
	adds r0, r0, r1
	movs r3, #0
	ldrsh r0, [r0, r3]
	cmp r0, #1
	bne _080B5D74
	ldrb r2, [r4]
	ldr r0, _080B5D1C @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5D70 @ =gUnk_080C054C
	bl sub_08001284
	b _080B5D84
	.align 2, 0
_080B5D18: .4byte gUnk_080C0404
_080B5D1C: .4byte gUnk_02010000
_080B5D20: .4byte gUnk_080C041C
_080B5D24: .4byte gUnk_08BDA398
_080B5D28: .4byte gUnk_080C042C
_080B5D2C: .4byte gUnk_080C0438
_080B5D30: .4byte gUnk_080C0454
_080B5D34: .4byte gUnk_080C0470
_080B5D38: .4byte gUnk_080C047C
_080B5D3C: .4byte gUnk_080C0498
_080B5D40: .4byte gUnk_080C04AC
_080B5D44: .4byte gUnk_080C04C0
_080B5D48: .4byte gUnk_080C04DC
_080B5D4C: .4byte gUnk_080C04F8
_080B5D50: .4byte gUnk_080C0514
_080B5D54: .4byte gUnk_080C0524
_080B5D58: .4byte gUnk_080C0538
_080B5D5C: .4byte gUnk_080C053C
_080B5D60: .4byte gUnk_08BDA3A8
_080B5D64: .4byte gUnk_08BDA3B0
_080B5D68: .4byte gUnk_080C0544
_080B5D6C: .4byte gUnk_080C0548
_080B5D70: .4byte gUnk_080C054C
_080B5D74:
	cmp r0, #0
	bne _080B5D84
	ldrb r2, [r4]
	ldr r0, _080B5DA4 @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5DA8 @ =gUnk_080C0544
	bl sub_08001284
_080B5D84:
	adds r1, r5, #1
	lsls r1, r1, #1
	adds r0, r7, #0
	adds r0, #8
	adds r0, r0, r1
	movs r1, #0
	ldrsh r0, [r0, r1]
	cmp r0, #1
	bne _080B5DB0
	ldrb r2, [r4, #1]
	ldr r0, _080B5DA4 @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5DAC @ =gUnk_080C054C
	bl sub_08001284
	b _080B5DC0
	.align 2, 0
_080B5DA4: .4byte gUnk_02010000
_080B5DA8: .4byte gUnk_080C0544
_080B5DAC: .4byte gUnk_080C054C
_080B5DB0:
	cmp r0, #0
	bne _080B5DC0
	ldrb r2, [r4, #1]
	ldr r0, _080B5DE0 @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5DE4 @ =gUnk_080C0544
	bl sub_08001284
_080B5DC0:
	adds r1, r5, #2
	lsls r1, r1, #1
	adds r0, r7, #0
	adds r0, #8
	adds r0, r0, r1
	movs r2, #0
	ldrsh r0, [r0, r2]
	cmp r0, #1
	bne _080B5DEC
	ldrb r2, [r4, #2]
	ldr r0, _080B5DE0 @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5DE8 @ =gUnk_080C054C
	bl sub_08001284
	b _080B5DFC
	.align 2, 0
_080B5DE0: .4byte gUnk_02010000
_080B5DE4: .4byte gUnk_080C0544
_080B5DE8: .4byte gUnk_080C054C
_080B5DEC:
	cmp r0, #0
	bne _080B5DFC
	ldrb r2, [r4, #2]
	ldr r0, _080B5E14 @ =gUnk_02010000
	movs r1, #3
	ldr r3, _080B5E18 @ =gUnk_080C0544
	bl sub_08001284
_080B5DFC:
	adds r4, #3
	adds r5, #3
	cmp r5, #0xb
	bhi _080B5E06
	b _080B5CFA
_080B5E06:
	add sp, #0x24
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B5E14: .4byte gUnk_02010000
_080B5E18: .4byte gUnk_080C0544

	thumb_func_start sub_080B5E1C
sub_080B5E1C: @ 0x080B5E1C
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	movs r1, #8
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B5E36
	ldrh r0, [r6, #0x20]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl SetPlayerGender
_080B5E36:
	movs r2, #0xa
	ldrsh r0, [r6, r2]
	cmp r0, #1
	bne _080B5E52
	ldrh r0, [r6, #0x22]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl SetPlayerLevel
	ldrh r0, [r6, #0x22]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_080165E0
_080B5E52:
	movs r1, #0xc
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B5EC6
	movs r7, #0
	adds r5, r6, #0
	adds r5, #0x28
_080B5E60:
	lsls r4, r7, #0x18
	lsrs r4, r4, #0x18
	ldrb r1, [r5]
	adds r0, r4, #0
	bl SetForgeLevel
	ldrb r0, [r5]
	bl sub_08018EE8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08017D84
	adds r4, r7, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldrb r1, [r5, #2]
	adds r0, r4, #0
	bl SetForgeLevel
	ldrb r0, [r5, #2]
	bl sub_08018EE8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08017D84
	adds r4, r7, #2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	ldrb r1, [r5, #4]
	adds r0, r4, #0
	bl SetForgeLevel
	ldrb r0, [r5, #4]
	bl sub_08018EE8
	adds r1, r0, #0
	lsls r1, r1, #0x10
	lsrs r1, r1, #0x10
	adds r0, r4, #0
	bl sub_08017D84
	adds r5, #6
	adds r7, #3
	cmp r7, #5
	bls _080B5E60
_080B5EC6:
	movs r2, #0xe
	ldrsh r0, [r6, r2]
	cmp r0, #1
	bne _080B5EF4
	ldrh r1, [r6, #0x24]
	movs r2, #0x24
	ldrsh r0, [r6, r2]
	cmp r0, #4
	bne _080B5EE0
	movs r0, #0xff
	bl SetGuardimalType
	b _080B5EF4
_080B5EE0:
	lsls r0, r1, #0x18
	lsrs r0, r0, #0x18
	bl SetGuardimalType
	bl sub_08018924
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08016724
_080B5EF4:
	movs r1, #0x10
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B5F10
	ldrh r0, [r6, #0x26]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl SetGuardimalLevel
	ldrh r0, [r6, #0x26]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08016724
_080B5F10:
	movs r2, #0x12
	ldrsh r0, [r6, r2]
	cmp r0, #1
	bne _080B5F1C
	bl sub_08018118
_080B5F1C:
	movs r1, #0x14
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B5F28
	bl sub_08016070
_080B5F28:
	movs r2, #0x16
	ldrsh r0, [r6, r2]
	cmp r0, #1
	beq _080B5F32
	b _080B6160
_080B5F32:
	movs r5, #0
	movs r4, #0
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B5F4C
	movs r0, #0x63
_080B5F4C:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r5, #1
	cmp r5, #0x30
	bhi _080B5FF8
_080B5F5C:
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B5F76
	movs r0, #0x63
_080B5F76:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B5F9C
	movs r0, #0x63
_080B5F9C:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B5FC2
	movs r0, #0x63
_080B5FC2:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B5FE8
	movs r0, #0x63
_080B5FE8:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r5, #4
	cmp r5, #0x30
	bls _080B5F5C
_080B5FF8:
	movs r5, #0x32
_080B5FFA:
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B6014
	movs r0, #0x63
_080B6014:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B603A
	movs r0, #0x63
_080B603A:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B6060
	movs r0, #0x63
_080B6060:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #3
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B6086
	movs r0, #0x63
_080B6086:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r5, #4
	cmp r5, #0x59
	bls _080B5FFA
	movs r5, #0x64
_080B6098:
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B60B2
	movs r0, #0x63
_080B60B2:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B60D8
	movs r0, #0x63
_080B60D8:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #2
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B60FE
	movs r0, #0x63
_080B60FE:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r5, #3
	cmp r5, #0x93
	bls _080B6098
	movs r5, #0x96
_080B6110:
	lsls r0, r5, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B612A
	movs r0, #0x63
_080B612A:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r0, r5, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	adds r0, r4, #0
	bl sub_08018B50
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r2, #0x36
	ldrsh r1, [r6, r2]
	adds r0, r0, r1
	cmp r0, #0x63
	bls _080B6150
	movs r0, #0x63
_080B6150:
	lsls r1, r0, #0x18
	lsrs r1, r1, #0x18
	adds r0, r4, #0
	bl SetItemQuantity
	adds r5, #2
	cmp r5, #0xc7
	bls _080B6110
_080B6160:
	movs r1, #0x18
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B6174
	ldrh r0, [r6, #0x38]
	ldrh r1, [r6, #0x3a]
	lsls r1, r1, #0x18
	lsrs r1, r1, #0x18
	bl SetItemQuantity
_080B6174:
	movs r2, #0x1a
	ldrsh r0, [r6, r2]
	cmp r0, #1
	bne _080B6196
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B6196
	ldrh r0, [r6, #0x3c]
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	bl sub_08015854
	bl sub_08015A28
_080B6196:
	movs r1, #0x1c
	ldrsh r0, [r6, r1]
	cmp r0, #1
	bne _080B620E
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B61B0
	movs r0, #0xf0
	bl sub_08015854
_080B61B0:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B61C2
	movs r0, #0xf1
	bl sub_08015854
_080B61C2:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B61D4
	movs r0, #0xf2
	bl sub_08015854
_080B61D4:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B61E6
	movs r0, #0xf3
	bl sub_08015854
_080B61E6:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B61F8
	movs r0, #0xf4
	bl sub_08015854
_080B61F8:
	bl GetPlayerWeaponQuantity
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	cmp r0, #0x1d
	bhi _080B620A
	movs r0, #0xf5
	bl sub_08015854
_080B620A:
	bl sub_08015A28
_080B620E:
	movs r2, #0x1e
	ldrsh r0, [r6, r2]
	cmp r0, #1
	beq _080B6218
	b _080B63B8
_080B6218:
	movs r5, #0
_080B621A:
	lsls r0, r5, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #1
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #2
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #3
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #4
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #5
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #6
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #7
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #0
	adds r0, #8
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r0, r5, #0
	adds r0, #9
	lsls r0, r0, #0x18
	lsrs r0, r0, #0x18
	movs r1, #1
	bl sub_08016264
	adds r5, #0xa
	cmp r5, #0xef
	bls _080B621A
	movs r5, #0
_080B629C:
	lsls r4, r5, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_080162BC
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_080162BC
	adds r4, r5, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_080162BC
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_080162BC
	adds r4, r5, #2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_080162BC
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_080162BC
	adds r4, r5, #3
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_080162BC
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_080162BC
	adds r5, #4
	cmp r5, #0x2b
	bls _080B629C
	movs r5, #0
_080B630A:
	lsls r4, r5, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08016328
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_08016328
	adds r4, r5, #1
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08016328
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_08016328
	adds r4, r5, #2
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08016328
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_08016328
	adds r4, r5, #3
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08016328
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_08016328
	adds r4, r5, #4
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	adds r0, r4, #0
	movs r1, #0
	movs r2, #1
	bl sub_08016328
	adds r0, r4, #0
	movs r1, #1
	movs r2, #1
	bl sub_08016328
	adds r5, #5
	cmp r5, #0x27
	bls _080B630A
	movs r5, #0
	movs r4, #0xc8
	lsls r4, r4, #0xf
_080B6396:
	lsrs r0, r4, #0x10
	movs r1, #1
	bl sub_080163EC
	movs r1, #0x80
	lsls r1, r1, #9
	adds r0, r4, r1
	lsrs r0, r0, #0x10
	movs r1, #1
	bl sub_080163EC
	movs r2, #0x80
	lsls r2, r2, #0xa
	adds r4, r4, r2
	adds r5, #2
	cmp r5, #0x85
	bls _080B6396
_080B63B8:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080B63C0
sub_080B63C0: @ 0x080B63C0
	push {r4, r5, lr}
	sub sp, #0xc
	movs r0, #0x40
	bl sub_0806EFA8
	bl sub_0806F020
	adds r1, r0, #0
	add r2, sp, #8
	movs r0, #0
	strh r0, [r2]
	ldr r2, _080B6444 @ =0x01000020
	add r0, sp, #8
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	movs r4, #0x14
	str r4, [sp]
	movs r5, #0
	str r5, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	str r5, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r4, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	add sp, #0xc
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B6444: .4byte 0x01000020

	thumb_func_start sub_080B6448
sub_080B6448: @ 0x080B6448
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B6476
	cmp r0, #1
	bgt _080B6462
	cmp r0, #0
	beq _080B6468
	b _080B648A
_080B6462:
	cmp r0, #2
	beq _080B6486
	b _080B648A
_080B6468:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B6488
_080B6476:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B648A
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B6488
_080B6486:
	movs r0, #0
_080B6488:
	strh r0, [r4, #2]
_080B648A:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080B6494
sub_080B6494: @ 0x080B6494
	push {r4, r5, r6, lr}
	sub sp, #0xc
	movs r5, #0x14
	movs r0, #0x14
	bl sub_0806EFA8
	bl sub_0806F020
	adds r6, r0, #0
	add r1, sp, #8
	movs r0, #0
	strh r0, [r1]
	ldr r2, _080B655C @ =0x0100000A
	adds r0, r1, #0
	adds r1, r6, #0
	bl CpuSet
	movs r0, #0
	bl sub_0800480C
	movs r0, #0
	movs r1, #0
	bl sub_0800471C
	movs r0, #1
	movs r1, #0
	bl sub_0800471C
	movs r0, #2
	movs r1, #0
	bl sub_0800471C
	movs r0, #3
	movs r1, #0
	bl sub_0800471C
	str r5, [sp]
	movs r4, #0
	str r4, [sp, #4]
	movs r0, #0
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	str r4, [sp, #4]
	movs r0, #1
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	str r5, [sp]
	movs r0, #5
	str r0, [sp, #4]
	movs r0, #2
	movs r1, #0
	movs r2, #0
	movs r3, #0x1e
	bl sub_0801BBB8
	strh r4, [r6, #4]
	movs r1, #0
	adds r2, r6, #6
	movs r3, #0
_080B6518:
	adds r0, r2, r1
	strb r3, [r0]
	adds r0, r1, #1
	lsls r0, r0, #0x18
	lsrs r1, r0, #0x18
	cmp r1, #6
	bls _080B6518
	ldr r0, _080B6560 @ =0x000001FB
	bl sub_08012F60
	strb r0, [r6, #0xd]
	movs r0, #0xfd
	lsls r0, r0, #1
	bl sub_08012F60
	strb r0, [r6, #0xe]
	movs r0, #0xfc
	lsls r0, r0, #1
	bl sub_08012F60
	strb r0, [r6, #0xf]
	ldr r0, _080B6564 @ =0x000001F9
	bl sub_08012F60
	strb r0, [r6, #0x10]
	movs r0, #0xfe
	lsls r0, r0, #1
	bl sub_08012F60
	strb r0, [r6, #0x11]
	add sp, #0xc
	pop {r4, r5, r6}
	pop {r0}
	bx r0
	.align 2, 0
_080B655C: .4byte 0x0100000A
_080B6560: .4byte 0x000001FB
_080B6564: .4byte 0x000001F9

	thumb_func_start sub_080B6568
sub_080B6568: @ 0x080B6568
	push {r4, r5, r6, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r6, #1
	movs r1, #0
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B6590
	cmp r0, #1
	bgt _080B6584
	cmp r0, #0
	beq _080B658A
	b _080B65D0
_080B6584:
	cmp r0, #2
	beq _080B65A2
	b _080B65D0
_080B658A:
	bl sub_080B65D8
	b _080B6594
_080B6590:
	bl sub_080B6648
_080B6594:
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B65D0
	ldrh r0, [r4]
	adds r0, #1
	strh r0, [r4]
	b _080B65D0
_080B65A2:
	bl sub_080B6A6C
	lsls r0, r0, #0x10
	asrs r5, r0, #0x10
	cmp r5, #0
	bne _080B65D0
	movs r0, #0x14
	bl sub_0806EFF0
	movs r0, #0
	movs r1, #0
	bl sub_0806F0CC
	movs r0, #1
	movs r1, #3
	bl sub_0806F0CC
	movs r0, #2
	movs r1, #2
	bl sub_0806F0CC
	strh r5, [r4]
	movs r6, #0
_080B65D0:
	adds r0, r6, #0
	pop {r4, r5, r6}
	pop {r1}
	bx r1

	thumb_func_start sub_080B65D8
sub_080B65D8: @ 0x080B65D8
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B6628
	cmp r0, #1
	bgt _080B65F2
	cmp r0, #0
	beq _080B65F8
	b _080B663C
_080B65F2:
	cmp r0, #2
	beq _080B6638
	b _080B663C
_080B65F8:
	movs r0, #1
	bl sub_0800480C
	movs r0, #0
	movs r1, #1
	bl sub_0800471C
	movs r0, #1
	movs r1, #1
	bl sub_0800471C
	movs r0, #2
	movs r1, #1
	bl sub_0800471C
	bl sub_080B6748
	movs r0, #0xff
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B663A
_080B6628:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B663C
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B663A
_080B6638:
	movs r0, #0
_080B663A:
	strh r0, [r4, #2]
_080B663C:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1
	.align 2, 0

	thumb_func_start sub_080B6648
sub_080B6648: @ 0x080B6648
	push {r4, r5, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r5, #1
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #0
	bne _080B673C
	bl sub_080B6748
	ldr r0, _080B667C @ =gCurrentKeyPress
	ldrh r1, [r0]
	movs r0, #0x40
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r2, r0, #0x10
	cmp r2, #0
	beq _080B6686
	ldrh r0, [r4, #4]
	cmp r0, #0
	beq _080B6680
	subs r0, #1
	strh r0, [r4, #4]
	b _080B66F6
	.align 2, 0
_080B667C: .4byte gCurrentKeyPress
_080B6680:
	movs r0, #8
	strh r0, [r4, #4]
	b _080B66F6
_080B6686:
	movs r0, #0x80
	ands r0, r1
	cmp r0, #0
	beq _080B669E
	ldrh r0, [r4, #4]
	cmp r0, #7
	bhi _080B669A
	adds r0, #1
	strh r0, [r4, #4]
	b _080B66F6
_080B669A:
	strh r2, [r4, #4]
	b _080B66F6
_080B669E:
	movs r0, #0x20
	ands r0, r1
	lsls r0, r0, #0x10
	lsrs r3, r0, #0x10
	cmp r3, #0
	beq _080B66CC
	ldrh r2, [r4, #4]
	adds r0, r4, #0
	adds r0, #0xd
	adds r1, r0, r2
	ldrb r0, [r1]
	cmp r0, #0
	beq _080B66BE
	subs r0, #1
	strb r0, [r1]
	b _080B66F6
_080B66BE:
	ldr r0, _080B66C8 @ =gUnk_08BDA404
	adds r0, r2, r0
	ldrb r0, [r0]
	strb r0, [r1]
	b _080B66F6
	.align 2, 0
_080B66C8: .4byte gUnk_08BDA404
_080B66CC:
	movs r0, #0x10
	ands r0, r1
	cmp r0, #0
	beq _080B66F6
	ldrh r0, [r4, #4]
	adds r1, r4, #0
	adds r1, #0xd
	adds r2, r1, r0
	ldr r1, _080B66F0 @ =gUnk_08BDA404
	adds r0, r0, r1
	ldrb r1, [r2]
	ldrb r0, [r0]
	cmp r1, r0
	bhs _080B66F4
	adds r0, r1, #1
	strb r0, [r2]
	b _080B66F6
	.align 2, 0
_080B66F0: .4byte gUnk_08BDA404
_080B66F4:
	strb r3, [r2]
_080B66F6:
	ldr r0, _080B6718 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #1
	ands r0, r1
	cmp r0, #0
	beq _080B672A
	ldrh r0, [r4, #4]
	cmp r0, #6
	bhi _080B671C
	adds r0, r4, #6
	ldrh r1, [r4, #4]
	adds r0, r0, r1
	ldrb r1, [r0]
	movs r2, #1
	eors r1, r2
	strb r1, [r0]
	b _080B672A
	.align 2, 0
_080B6718: .4byte gKeyNewPress
_080B671C:
	cmp r0, #7
	bne _080B6724
	bl sub_080B68EC
_080B6724:
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B672A:
	ldr r0, _080B6744 @ =gKeyNewPress
	ldrh r1, [r0]
	movs r0, #2
	ands r0, r1
	cmp r0, #0
	beq _080B673C
	movs r0, #0
	strh r0, [r4, #2]
	movs r5, #0
_080B673C:
	adds r0, r5, #0
	pop {r4, r5}
	pop {r1}
	bx r1
	.align 2, 0
_080B6744: .4byte gKeyNewPress

	thumb_func_start sub_080B6748
sub_080B6748: @ 0x080B6748
	push {r4, r5, r6, r7, lr}
	mov r7, r8
	push {r7}
	sub sp, #4
	bl sub_0806F020
	adds r6, r0, #0
	ldr r0, _080B680C @ =gUnk_02010000
	ldr r3, _080B6810 @ =gUnk_080C0578
	movs r1, #9
	movs r2, #0
	bl sub_08001284
	ldr r5, _080B6814 @ =gUnk_08BDA3C4
	ldrb r1, [r5]
	ldr r2, _080B6818 @ =gUnk_080C0588
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #1]
	ldr r2, _080B681C @ =gUnk_080C0590
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #2]
	ldr r2, _080B6820 @ =gUnk_080C059C
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #3]
	ldr r2, _080B6824 @ =gUnk_080C05A8
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #4]
	ldr r2, _080B6828 @ =gUnk_080C05B4
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #5]
	ldr r2, _080B682C @ =gUnk_080C05C4
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5, #6]
	ldr r2, _080B6830 @ =gUnk_080C05D4
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r5]
	ldr r4, _080B6834 @ =gUnk_08BDA3D8
	ldrb r0, [r6, #0xd]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #0x18
	bl sub_080B6AB8
	ldrb r1, [r5, #1]
	ldrb r0, [r6, #0xe]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #0x18
	bl sub_080B6AB8
	ldrb r1, [r5, #2]
	ldr r4, _080B6838 @ =gUnk_08BDA3E0
	ldrb r0, [r6, #0xf]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #0x18
	bl sub_080B6AB8
	ldrb r1, [r5, #3]
	ldrb r0, [r6, #0x10]
	lsls r0, r0, #2
	adds r0, r0, r4
	ldr r2, [r0]
	movs r0, #0x18
	bl sub_080B6AB8
	ldrb r0, [r6, #0x11]
	cmp r0, #0
	beq _080B683C
	subs r0, #1
	mov r1, sp
	movs r2, #1
	movs r3, #0
	bl sub_08001314
	ldrb r1, [r5, #4]
	movs r0, #0x18
	mov r2, sp
	bl sub_080B6AB8
	b _080B6846
	.align 2, 0
_080B680C: .4byte gUnk_02010000
_080B6810: .4byte gUnk_080C0578
_080B6814: .4byte gUnk_08BDA3C4
_080B6818: .4byte gUnk_080C0588
_080B681C: .4byte gUnk_080C0590
_080B6820: .4byte gUnk_080C059C
_080B6824: .4byte gUnk_080C05A8
_080B6828: .4byte gUnk_080C05B4
_080B682C: .4byte gUnk_080C05C4
_080B6830: .4byte gUnk_080C05D4
_080B6834: .4byte gUnk_08BDA3D8
_080B6838: .4byte gUnk_08BDA3E0
_080B683C:
	ldrb r1, [r5, #4]
	ldr r2, _080B68CC @ =gUnk_080C05E0
	movs r0, #0x18
	bl sub_080B6AB8
_080B6846:
	ldr r0, _080B68D0 @ =gUnk_08BDA3C4
	ldrb r1, [r0, #5]
	ldr r2, _080B68D4 @ =gUnk_08BDA3F4
	ldrb r0, [r6, #0x12]
	lsls r0, r0, #2
	adds r0, r0, r2
	ldr r2, [r0]
	movs r0, #0x18
	bl sub_080B6AB8
	movs r4, #0
	adds r7, r6, #6
	ldr r0, _080B68D8 @ =gUnk_08BDA3FC
	mov r8, r0
_080B6862:
	ldr r5, _080B68D0 @ =gUnk_08BDA3C4
	adds r0, r4, r5
	ldrb r1, [r0]
	adds r0, r7, r4
	ldrb r0, [r0]
	lsls r0, r0, #2
	add r0, r8
	ldr r2, [r0]
	movs r0, #3
	bl sub_080B6AB8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #6
	bls _080B6862
	movs r4, #0
_080B6884:
	adds r0, r4, r5
	ldrb r1, [r0]
	movs r0, #1
	ldr r2, _080B68DC @ =gUnk_080C0574
	bl sub_080B6AB8
	adds r0, r4, #1
	lsls r0, r0, #0x18
	lsrs r4, r0, #0x18
	cmp r4, #8
	bls _080B6884
	ldr r4, _080B68D0 @ =gUnk_08BDA3C4
	ldrh r0, [r6, #4]
	adds r0, r0, r4
	ldrb r1, [r0]
	ldr r2, _080B68E0 @ =gUnk_080C05E4
	movs r0, #1
	bl sub_080B6AB8
	ldrb r1, [r4, #7]
	ldr r2, _080B68E4 @ =gUnk_080C05E8
	movs r0, #2
	bl sub_080B6AB8
	ldrb r1, [r4, #8]
	ldr r2, _080B68E8 @ =gUnk_080C05EC
	movs r0, #2
	bl sub_080B6AB8
	add sp, #4
	pop {r3}
	mov r8, r3
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0
_080B68CC: .4byte gUnk_080C05E0
_080B68D0: .4byte gUnk_08BDA3C4
_080B68D4: .4byte gUnk_08BDA3F4
_080B68D8: .4byte gUnk_08BDA3FC
_080B68DC: .4byte gUnk_080C0574
_080B68E0: .4byte gUnk_080C05E4
_080B68E4: .4byte gUnk_080C05E8
_080B68E8: .4byte gUnk_080C05EC

	thumb_func_start sub_080B68EC
sub_080B68EC: @ 0x080B68EC
	push {r4, r5, r6, r7, lr}
	bl sub_0806F020
	adds r6, r0, #0
	ldrb r0, [r6, #6]
	cmp r0, #0
	beq _080B6902
	ldr r0, _080B6A10 @ =0x000001FB
	ldrb r1, [r6, #0xd]
	bl sub_08012F0C
_080B6902:
	ldrb r0, [r6, #7]
	cmp r0, #0
	beq _080B6912
	movs r0, #0xfd
	lsls r0, r0, #1
	ldrb r1, [r6, #0xe]
	bl sub_08012F0C
_080B6912:
	ldrb r0, [r6, #8]
	cmp r0, #0
	beq _080B6922
	movs r0, #0xfc
	lsls r0, r0, #1
	ldrb r1, [r6, #0xf]
	bl sub_08012F0C
_080B6922:
	ldrb r0, [r6, #9]
	cmp r0, #0
	beq _080B6930
	ldr r0, _080B6A14 @ =0x000001F9
	ldrb r1, [r6, #0x10]
	bl sub_08012F0C
_080B6930:
	ldrb r0, [r6, #0xa]
	cmp r0, #0
	beq _080B6940
	movs r0, #0xfe
	lsls r0, r0, #1
	ldrb r1, [r6, #0x11]
	bl sub_08012F0C
_080B6940:
	ldrb r0, [r6, #0xb]
	cmp r0, #0
	beq _080B6A36
	ldr r0, _080B6A18 @ =0x0000017F
	bl sub_08012F60
	lsls r0, r0, #0x10
	movs r5, #0
	lsrs r1, r0, #0x10
	ldr r2, _080B6A1C @ =0xFFCE0000
	adds r0, r0, r2
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080B695E
	movs r5, #0x36
_080B695E:
	adds r0, r1, #0
	subs r0, #0x3c
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B696C
	movs r5, #0x2b
_080B696C:
	adds r0, r1, #0
	subs r0, #0x46
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B697A
	movs r5, #0x55
_080B697A:
	adds r0, r1, #0
	subs r0, #0x50
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #3
	bhi _080B6988
	movs r5, #0x2e
_080B6988:
	adds r0, r1, #0
	subs r0, #0x5a
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B6996
	movs r5, #0x2e
_080B6996:
	adds r0, r1, #0
	subs r0, #0x64
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B69A4
	movs r5, #0x3b
_080B69A4:
	adds r0, r1, #0
	subs r0, #0x6e
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B69B2
	movs r5, #0x2e
_080B69B2:
	adds r0, r1, #0
	subs r0, #0x78
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #4
	bhi _080B69C0
	movs r5, #0x22
_080B69C0:
	adds r0, r1, #0
	subs r0, #0xaa
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xa
	bhi _080B69CE
	movs r5, #0x3a
_080B69CE:
	adds r0, r1, #0
	subs r0, #0xbe
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #9
	bhi _080B69DC
	movs r5, #0x49
_080B69DC:
	adds r0, r1, #0
	subs r0, #0xd2
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	cmp r0, #0xb
	bhi _080B69EA
	movs r5, #0x3f
_080B69EA:
	cmp r5, #0
	beq _080B6A36
	movs r4, #0
	cmp r4, r5
	bhs _080B6A36
	movs r0, #0x88
	lsls r0, r0, #2
	adds r7, r0, #0
_080B69FA:
	ldrb r0, [r6, #0x12]
	cmp r0, #0
	beq _080B6A20
	adds r0, r4, r7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #1
	bl sub_08012FB8
	b _080B6A2C
	.align 2, 0
_080B6A10: .4byte 0x000001FB
_080B6A14: .4byte 0x000001F9
_080B6A18: .4byte 0x0000017F
_080B6A1C: .4byte 0xFFCE0000
_080B6A20:
	adds r0, r4, r7
	lsls r0, r0, #0x10
	lsrs r0, r0, #0x10
	movs r1, #0
	bl sub_08012FB8
_080B6A2C:
	adds r0, r4, #1
	lsls r0, r0, #0x10
	lsrs r4, r0, #0x10
	cmp r4, r5
	blo _080B69FA
_080B6A36:
	ldrb r0, [r6, #0xc]
	cmp r0, #0
	beq _080B6A64
	movs r0, #0
	bl sub_08015854
	movs r0, #0x28
	bl sub_08015854
	movs r0, #0x50
	bl sub_08015854
	movs r0, #0x78
	bl sub_08015854
	movs r0, #0xa0
	bl sub_08015854
	movs r0, #0xc8
	bl sub_08015854
	bl sub_08015A28
_080B6A64:
	pop {r4, r5, r6, r7}
	pop {r0}
	bx r0
	.align 2, 0

	thumb_func_start sub_080B6A6C
sub_080B6A6C: @ 0x080B6A6C
	push {r4, lr}
	bl sub_0806F020
	adds r4, r0, #0
	movs r1, #2
	ldrsh r0, [r4, r1]
	cmp r0, #1
	beq _080B6A9A
	cmp r0, #1
	bgt _080B6A86
	cmp r0, #0
	beq _080B6A8C
	b _080B6AAE
_080B6A86:
	cmp r0, #2
	beq _080B6AAA
	b _080B6AAE
_080B6A8C:
	movs r0, #1
	movs r1, #8
	bl sub_0806AC78
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B6AAC
_080B6A9A:
	bl sub_0806AFC8
	lsls r0, r0, #0x10
	cmp r0, #0
	bne _080B6AAE
	ldrh r0, [r4, #2]
	adds r0, #1
	b _080B6AAC
_080B6AAA:
	movs r0, #0
_080B6AAC:
	strh r0, [r4, #2]
_080B6AAE:
	movs r1, #2
	ldrsh r0, [r4, r1]
	pop {r4}
	pop {r1}
	bx r1

	thumb_func_start sub_080B6AB8
sub_080B6AB8: @ 0x080B6AB8
	push {r4, r5, lr}
	adds r4, r0, #0
	adds r5, r1, #0
	adds r3, r2, #0
	lsls r4, r4, #0x18
	lsrs r4, r4, #0x18
	lsls r5, r5, #0x18
	lsrs r5, r5, #0x18
	ldr r0, _080B6AD8 @ =gUnk_0200F800
	adds r1, r4, #0
	adds r2, r5, #0
	bl sub_08001284
	pop {r4, r5}
	pop {r0}
	bx r0
	.align 2, 0
_080B6AD8: .4byte gUnk_0200F800
